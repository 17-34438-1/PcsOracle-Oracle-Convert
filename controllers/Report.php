<?php
class Report extends CI_Controller {
	function __construct()
	{
	    parent::__construct();	
            $this->load->library(array('session', 'form_validation'));
            $this->load->model(array('CI_auth', 'CI_menu'));
            $this->load->helper(array('html','form', 'url'));
			//$this->load->driver('cache');
			$this->load->helper('file');
			$this->load->model('ci_auth', 'bm', TRUE);
			$this->load->library("pagination");
			
			header("cache-Control: no-store, no-cache, must-revalidate");
			header("cache-Control: post-check=0, pre-check=0", false);
			header("Pragma: no-cache");
			header("Expires: Sat, 26 Jul 1997 05:00:00 GMT");
	}
        
        function index(){
		 $this->report();
        }
		
		
		function logout()
		{
		
			$query="SELECT sparcsn4.vsl_vessel_visit_details.vvd_gkey,sparcsn4.vsl_vessels.name,sparcsn4.vsl_vessel_visit_details.ib_vyg,sparcsn4.vsl_vessel_visit_details.ob_vyg,
			LEFT(sparcsn4.argo_carrier_visit.phase,2) AS phase_num,SUBSTR(sparcsn4.argo_carrier_visit.phase,3) AS phase_str,sparcsn4.argo_visit_details.eta,
			sparcsn4.argo_visit_details.etd,sparcsn4.argo_carrier_visit.ata,
			sparcsn4.argo_carrier_visit.atd,sparcsn4.ref_bizunit_scoped.id AS agent,sparcsn4.argo_quay.id AS berth,
			IFNULL(sparcsn4.vsl_vessel_visit_details.flex_string02,sparcsn4.vsl_vessel_visit_details.flex_string03) AS berthop
			FROM sparcsn4.argo_carrier_visit
			INNER JOIN sparcsn4.argo_visit_details ON sparcsn4.argo_visit_details.gkey=sparcsn4.argo_carrier_visit.cvcvd_gkey
			INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessel_visit_details.vvd_gkey=sparcsn4.argo_visit_details.gkey
			INNER JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
			INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.vsl_vessel_visit_details.bizu_gkey
			LEFT JOIN sparcsn4.vsl_vessel_berthings ON sparcsn4.vsl_vessel_berthings.vvd_gkey=sparcsn4.vsl_vessel_visit_details.vvd_gkey
			LEFT JOIN sparcsn4.argo_quay ON sparcsn4.argo_quay.gkey=sparcsn4.vsl_vessel_berthings.quay
			WHERE sparcsn4.argo_carrier_visit.phase IN ('20INBOUND','30ARRIVED','40WORKING','50COMPLETE','60DEPARTED')
			ORDER BY sparcsn4.argo_carrier_visit.phase";
			//echo $data['voysNo'];
			$rtnVesselList = $this->bm->dataSelect($query);
			$data['rtnVesselList']=$rtnVesselList;
			
			$data['body']="<font color='blue' size=2>LogOut Successfully....</font>";

			$this->session->sess_destroy();
			$this->cache->clean();
		

			$this->load->view('cssVesselList');
			$this->load->view('jsVesselList');
			$this->load->view('FrontEnd/header');
			$this->load->view('FrontEnd/slider');
			$this->load->view('FrontEnd/index',$data);
			$this->load->view('FrontEnd/footer');

			$this->db->cache_delete_all();
        }
		
		function report(){
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="FEEDER DISCHARGE SUMMARY LIST...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myFeederDischargeHTML',$data);
				$this->load->view('jsAssets');
			}	
        }
		
		
		
		
		
		
		function reportView(){
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$is_offdock=$this->input->post('is_offdock');
			$billQuery="select mlo_code,draft_id,pdf_draft_view_name,pdf_detail_view_name 
						from ctmsmis.mis_billing 
						where imp_rot='$ddl_imp_rot_no'";
			
			
			$rtnBillData=$this->bm->dataSelectDb2($billQuery);
			

			$countBillRow=count($rtnBillData);
			$data['countBillRow']=$countBillRow;
			$data['rtnBillData']=$rtnBillData;
			
			$this->load->view('cssAssets');
			if($is_offdock=="yes")
				$this->load->view('myReportDischargeSummeryListOffDock',$data);
			else	
				$this->load->view('myReportDischargeSummeryList',$data);
			$this->load->view('myclosebar');
			$this->load->view('jsAssets');
		}


		function offdocdepotLadenContForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$data['title']="DEPOT LADEN CONTAINER AT CHITTAGONG PORT";
				$this->load->view('header2');
				$this->load->view('offdocdepotLadenContForm',$data);
				$this->load->view('footer');
			}
		}
		
		function offdocdepotLadenCont()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$sValue=$this->input->post('sValue');
				$data['sValue']=$sValue;
				$login_id = $this->session->userdata('login_id');	
				$data['login_id']=$login_id;
				$data['title']="DEPOT LADEN CONTAINER AT CHITTAGONG PORT UP TO";
				//$this->load->view('header2');
				$this->load->view('offdocdepotLadenContHTML',$data);
				//$this->load->view('footer');
			}
		}
		
		function myViewBreakBulkList()
		{		
			$this->load->view('cssAssetsList');
			$this->load->view('myViewBreakBulkListView',@$data);
			$this->load->view('myclosebar');
			$this->load->view('jsAssetsList');
		}
		
		//BILL SUMMARY START
		function myRountingPointCodeList()
		{	
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myRountingPointCodeListView',@$data);
			$this->load->view('jsAssetsList');
			
			// $this->load->view('myRountingPointCodeListView',$data);
			// $this->load->view('myclosebar');
			
		}
		
		function myBillSummaryForm()		// 2020-06-03
		{		
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="Bill Summary Form";		
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myBillSummaryFormView',$data);
				$this->load->view('jsAssets');
			}	
        }
		
		function myBillSummaryviews()
		{
			$fromdate=$this->input->post('fromdate');
			$todate=$this->input->post('todate');
			$data['fromdate']=$fromdate;
			$data['todate']=$todate;
			
			$this->load->view('myVesselBillSummaryviews',$data);
			$this->load->view('myclosebar');
		}
		
		function dateWiseEqipAssignForm()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="DATE WISE EQUIPMENT ASSINGMENT LIST...";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('dateWiseEqipAssignFormView',$data);
				$this->load->view('jsAssetsList');
			}	
        }
		
		function dateWiseEqipAssignReport()
		{
			//echo date('Y-m-d');
			if($this->input->post())
			{
				$fromdate=$this->input->post('fromdate');
			}
			else
			{
				$fromdate = date('Y-m-d');
			}
			$type=$this->input->post('options1');
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;	
			$data['fromdate']=$fromdate;
			//$data['todate']=$todate;
			$data['type']=$type;
			//echo $data['voysNo'];
			$this->load->view('dateWiseEqipAssignReportReport',$data);
			//$this->load->view('myclosebar');
		}
		//SC SELECT
		function myEquipmentLoginLogout(){
			
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="EQUIPMENT HANDLING PERFORMANCE LOGIN";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myEquipmentLoginLogoutForm',$data);
				$this->load->view('jsAssets');
			}	
		}
		
		function myEquipmentLoginLogoutView(){
			
			$fromdate=$this->input->post('fromdate');
			$equip=$this->input->post('equip');
			$shift=$this->input->post('shift');
			$euser=$this->input->post('euser');
			$serch_by=$this->input->post('serch_by');
			$serch_value=$this->input->post('serch_value');
			$serch_combo=$this->input->post('serch_combo');
			$data['serch_by']=$serch_by;
			$data['serch_value']=$serch_value;
			$data['serch_combo']=$serch_combo;
			$data['fromdate']=$fromdate;
			$data['equip']=$equip;
			$data['shift']=$shift;
			$data['euser']=$euser;
			$this->load->view('myEquipmentLoginLogoutViewList',$data);
			$this->load->view('myclosebar');
		
	}
	
		//SC END

		
		//SaifPowerTech start
		function myEquipmentHandlingHistory()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="EQUIPMENT HANDLING PERFORMANCE HISTORY...";
	
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myEquipmentHandlingHistoryForm',$data);
				$this->load->view('jsAssets');
			}	
		}
		
		function myEquipmentHandlingHistoryView()
		{
			$type=$this->input->post('options');
					
			$data['type']=$type;
			$fromdate=$this->input->post('fromdate');
			$shift=$this->input->post('shift');
			$todate=$this->input->post('todate');
			$data['fromdate']=$fromdate;
			$data['shift']=$shift;
			$data['todate']=$todate;
			
			if($shift=="timewise")
			{
				$fromtime=$this->input->post('fromtime');
				$data['fromtime']=$fromtime.":00";
				$totime=$this->input->post('totime');
				$data['totime']=$totime.":00";
			}
			
			$this->load->view('myEquipmentHandlingHistoryViewList',$data);
			$this->load->view('myclosebar');
		}
	
	
	//Sumon Roy --- TimeWise RTG Performance___________________________________________________________
		
	function myEquipmentHandlingHistoryTimewise(){
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="EQUIPMENT HANDLING PERFORMANCE HISTORY...";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myEquipmentHandlingHistoryFormTimewise',$data);
			$this->load->view('jsAssets');
		}	
	}

	function myEquipmentHandlingHistoryTimeWiseView(){
			$type=$this->input->post('option');
			
			$data['type']=$type;
			$fromdate=$this->input->post('fromdate');
			$shift=$this->input->post('shift');
			$todate=$this->input->post('todate');
			$data['fromdate']=$fromdate;
			$data['shift']=$shift;
			$data['todate']=$todate;
			
			//echo $data['toTime'];
			//return;
			$this->load->view('myEquipmentHandlingHistoryViewListTimewise',$data);
			$this->load->view('myclosebar');
		
	}
		//Bill Summery END
		
		function dateWiseoffDockContListForm(){
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="DATE WISE PRE ADVICE CONTAINER LIST...";

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('dateWiseoffDockContListFormView',$data);
				$this->load->view('jsAssets');
			}	
        }

		function dateAndRoationWisePreAdviseCont()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="LOADED CONTAINER SUMMARY LIST...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('dateWisePreAdviseContForm',$data);
				$this->load->view('jsAssets');
			}	
        }
		function dateAndRoatinWisePreAdviseContView()
			{		
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$fromdate=$this->input->post('fromdate');
				//$todate=$this->input->post('todate');
				$data['fromdate']=$fromdate;
				//$data['todate']=$todate;
				$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
				$this->load->view('dateWisePreAdviseContViewList',$data);
				//$this->load->view('myclosebar');		
			}
			
		function dateWiseoffDockContListReport()
		{
			$fromdate=$this->input->post('fromdate');
			$todate=$this->input->post('todate');
			$type=$this->input->post('options');
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;	
			$data['fromdate']=$fromdate;
			$data['todate']=$todate;
			$data['type']=$type;
			//echo $data['voysNo'];
			$this->load->view('dateWiseoffDockContListReport',$data);
			$this->load->view('myclosebar');
		}
		//

		function offDockContListForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="POSITION WISE OFFDOCK CONTAINER";

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('offDockContListForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function offDockContListViews()
		{
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
			$positon=$this->input->post('positon');
			$options=$this->input->post('options');
			$data['positon']=$positon;
			$data['options']=$options;
			$data['title']="OFFDOCK CONTAINER AT CHITTAGONG PORT";
			$this->load->view('offDockContListViews',$data);
			
		}

		//containe Search

		function offDockContSearchForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="POSITION WISE OFFDOCK CONTAINER";

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('offDockContSearchFormHTML',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function offDockContSearchViews()
		{
			
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
			$container_no=$this->input->post('container_no');
			$data['container_no']=$container_no;
			$data['title']="OFFDOCK CONTAINER AT CHITTAGONG PORT";
			$this->load->view('offDockContSearchViews',$data);
			
		}
		//Container Searcch
		//PreAdvice Panel
		
		function myoffDocWiseContStatus(){
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;	
			$UserName = $this->session->userdata('User_Name');
			$data['UserName']=$UserName;
			$this->load->view('myoffDocWiseContStatusView',$data);
			$this->load->view('myclosebar');
		}


		function myAgentWiseVesselInfo()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
	
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="AGENT WISE PREADVICE CONTAINER REPORT...";
			
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myAgentWiseVesselInfoForm',$data);
				$this->load->view('jsAssets');
			}	
		}


		function myReportHHTReCord()
			{
				$this->load->library('M_pdf');
				$pdf->use_kwt = true;
				$this->data['title']="Assigned Equipment Report";
				$pdfFilePath ="AssignedEquipmentList-".time()."-download.pdf";
				$pdf = $this->m_pdf->load();
				//$pdf->SetWatermarkText('CPA CTMS');
				$pdf->showWatermarkText = true;	
				//$this->data['fromdate']=$fromdate;
				$html=$this->load->view('myReportHHTReCordView',$this->data, true);
				$stylesheet = file_get_contents('resources/styles/test.css'); // external css
				//$scriptSheet = file_get_contents('resources/scripts/JsBarcode.all.min.js'); // external css
				$pdf->useSubstitutions = true; // optional - just as an example
				//$pdf->SetHeader($url . "\n\n" . 'Date {DATE j-m-Y}');  // optional - just as an example
				//echo "SheetAdd : ".$stylesheet;
				//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
				
				$pdf->WriteHTML($stylesheet,1);
				$pdf->WriteHTML($html,2);
				//$pdf->WriteHTML($scriptSheet,3);
				$pdf->Output($pdfFilePath, "I"); // For Show Pdf
				
				//$this->load->view('myReportHHTReCordView',$data);
				//$this->load->view('myclosebar');
		}


		function myAgentWiseVesselInfoReport()
		{
			
			$rot=$this->input->post('ddl_imp_rot_no');
			$data['rot']=$rot;
			
			$this->load->view('cssAssetsList');
			$this->load->view('mymyAgentWiseVesselInfoView',$data);
			$this->load->view('jsAssetsList');
					
			//$this->load->view('mymyAgentWiseVesselInfoView',$data);
			//$this->load->view('myclosebar');
			
		}


		function myoffDociew()
		{	
			$UserName = $this->session->userdata('User_Name');
			$data['UserName']=$UserName;
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myoffDociew',$data);
			$this->load->view('jsAssetsList');
			
		}
		
		function commodityInfoView(){
			
			$UserName = $this->session->userdata('User_Name');
			$data['UserName']=$UserName;
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('commodityInfoView',$data);
			$this->load->view('jsAssetsList');
		}
		
		function myPortCodeList()
		{
			$UserName = $this->session->userdata('User_Name');
			$data['UserName']=$UserName;
			
			$this->load->view('cssAssetsList');
			$this->load->view('myPortCodeListView',$data);
			$this->load->view('jsAssetsList');
		}
		
		function myAgentWiseVessel()
		{
			$login_id = $this->session->userdata('login_id');	
			$UserName = $this->session->userdata('User_Name');
			$data['login_id']=$login_id;
			$data['UserName']=$UserName;
			
			$this->load->view('cssAssetsList');
			$this->load->view('myAgentWiseVesselView',$data);
			$this->load->view('jsAssetsList');
			
		}
		
		function myPreAdviceContainerDetail($year,$serial)
		{
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$rot=$year."/".$serial;
			$data['rot']=$rot;
			
			$vvdGkey=$this->input->post('vvdGkey');
			$data['vvdGkey']=$vvdGkey;
			
			$this->load->view('cssAssetsList');
			$this->load->view('myPreAdviceContainerDetailView',$data);
			$this->load->view('jsAssetsList');
		}
		
		function myAgentWiseContainerStatus()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="AGENT WISE PREADVICE CONTAINER REPORT...";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myAgentWiseContainerStatusForm',$data);
				$this->load->view('jsAssets');
			}	
        }
		
		function myAgentWiseContainerStatusReport()
		{
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
			$agentCode = $this->session->userdata('agentCode'); 
			$data['agentCode']=$agentCode;
			// $login_id = $this->session->userdata('login_id');	
			// $data['login_id']=$login_id;
			$serch_by=$this->input->post('serch_by');
			$data['serch_by']=$serch_by;
			$serch_value=$this->input->post('serch_value');
			$data['serch_value']=$serch_value;
			$serch_combo=$this->input->post('serch_combo');
			$data['serch_combo']=$serch_combo;
			
			$this->load->view('cssAssetsList');
			$this->load->view('myAgentWiseContainerStatusReportView',$data);
			$this->load->view('jsAssetsList');
		}


		function myOffdocWiseContainerStatus()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="AGENT WISE PREADVICE CONTAINER REPORT...";
				//echo $data['title'];
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myOffdocWiseContainerStatusForm',$data);
				$this->load->view('jsAssets');
				
				//$this->load->view('header2');
				//$this->load->view('myOffdocWiseContainerStatusForm',$data);
				//$this->load->view('footer');
			}	
        }
		
		function myOffdocWiseContainerStatusReport()
		{
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
			$rot=$this->input->post('ddl_imp_rot_no');
			$data['rot']=$rot;
			$agentCode = $this->session->userdata('agentCode'); 
			$data['agentCode']=$agentCode;

			//echo $data['cont'];
			
			$this->load->view('cssAssetsList');
			$this->load->view('myOffdocWiseContainerStatusReportView',$data);
			$this->load->view('jsAssetsList');
			
			//$this->load->view('myOffdocWiseContainerStatusReportView',$data);
			//$this->load->view('myclosebar');
				
		}
		function loadedContainerList()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="LOADED CONTAINER SUMMARY LIST...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myloadedContainerListHTML',$data);
				$this->load->view('jsAssets');
			}	
        }
		
		function loadedContainerListView($rot)
		{
			if($this->input->post())
			{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			}
			else
			{
				$ddl_imp_rot_no=$rot;
			}
			//$this->load->model('ci_auth', 'bm', TRUE);
			//$getVvdGkey = $this->bm->loadedContainerListView($ddl_imp_rot_no);
			//$data['vvdGkey']=$getVvdGkey;
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$this->load->view('myReportLoadedContainerList',$data);
			//$this->load->view('myclosebar');
		
		}
		//ROTATIN WISE CONTAINER INFORMATION START
		
		function myRotationWiseContInfoForm()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="ROTATIN WISE CONTAINER INFORMATION...";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myRotationWiseContInfoFormView',$data);
				$this->load->view('jsAssets');
			}	
		}
		

		function myRotationWiseContInfo()
		{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$this->load->view('myRotationWiseContInfoView',$data);
		}
		
		
		//ROTATIN WISE CONTAINER INFORMATION END
		//VESSEL WISE REFFER CONTAINER START
		function vesslWiseRefeerContainerList(){
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="LOADED CONTAINER SUMMARY LIST...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('vesslWiseRefeerContainerForm',$data);
				$this->load->view('jsAssets');
			}	
		}
		
		function vesslWiseRefeerContainerListView(){		
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$fromdate=$this->input->post('fromdate');
			$todate=$this->input->post('todate');
			$data['fromdate']=$fromdate;
			$data['todate']=$todate;
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;

			$this->load->view('cssAssets');
			$this->load->view('vesslWiseRefeerContainerViewList',$data);
			$this->load->view('jsAssets');
			$this->load->view('myclosebar');
		}
		
		function vesslWiseRefeerContainer($year,$serial)
		{
			
			$rot=$year."/".$serial;
			$data['rot']=$rot;
			$this->load->view('cssAssets');
			$this->load->view('vesslWiseRefeerContainerListDetails',$data);
			$this->load->view('myclosebar');
		}

		//VESSEL WISE REFFER CONTAINER END
		
		//DESTI START
		function destinationloadedContainerList()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
	
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="LOADED CONTAINER SUMMARY LIST...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('mydestinationloadedContainerListHTML',$data);
				$this->load->view('jsAssets');
			}	
		}


		function destinationloadedContainerListView($rot)
		{
			if($this->input->post())
			{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			}
			else
			{
				$ddl_imp_rot_no=$rot;
			}
			//$this->load->model('ci_auth', 'bm', TRUE);
			//$getVvdGkey = $this->bm->loadedContainerListView($ddl_imp_rot_no);
			//$data['vvdGkey']=$getVvdGkey;
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$this->load->view('myReportDestinationWiseLoadedContainerList',$data);
			//$this->load->view('myclosebar');		
		}
		//DESTI END

		//mlo wise preadvice start
		function mloWisePreadviceloadedContainerList()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
	
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="LOADED CONTAINER SUMMARY LIST...";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('mloWisePreadviceForm',$data);
				$this->load->view('jsAssets');
			
				//$this->load->view('header2');
				//$this->load->view('mloWisePreadviceForm',$data);
				//$this->load->view('footer');
			}	
		}
		
		function mloWisePreadviceListView()
		{		
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			
			$this->load->view('cssAssetsList');
			$this->load->view('mloWisePreadviceViewList',$data);
			$this->load->view('jsAssetsList');
			
			//$this->load->view('mloWisePreadviceViewList',$data);
			//$this->load->view('myclosebar');
		}
		//new............
		
		function mloWisePreadviceDetailsListView()
		{
		
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$this->load->view('mloWisePreadviceViewListDetails',$data);
			$this->load->view('myclosebar');
		
		}
		//........

		function myPreAdviceAllView($year,$serial,$mlo)
		{
			
			$rot=$year."/".$serial;
			$data['rot']=$rot;
			$data['mlo']=$mlo;
			$this->load->view('mloWisePreadviceViewListDetails',$data);
		}

		function mlowiseviewsummary($year,$serial,$mlo)
		{
			
			$rot=$year."/".$serial;
			$data['rot']=$rot;
			$data['mlo']=$mlo;
			$this->load->view('mloWiseSummeryList',$data);
		}
		
		//mlo wise preadvice end

		//Mlo wise import export summery for Export loading apps
		function myExportImExSummery()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="LOADED CONTAINER SUMMARY LIST...";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportImExSummeryExportLoading',$data);
				$this->load->view('jsAssets');
			}	
        }
		//ss
		
		function loadedFreightKindContainerList()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="LOADED CONTAINER FREIGHT KIND SUMMARY LIST...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myloadedContainerFreightKindListHTML',$data);
				$this->load->view('jsAssets');
			}	
        }
		

		function loadedContainerFreightKindListView()
		{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			//$this->load->model('ci_auth', 'bm', TRUE);
			//$getVvdGkey = $this->bm->loadedContainerListView($ddl_imp_rot_no);
			//$data['vvdGkey']=$getVvdGkey;
			//echo $data['vvdGkey'];
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$this->load->view('myReportLoadedContainerFreightKindList',$data);
			//$this->load->view('myclosebar');
		}
		//ss
		/* function myExportImExSummeryView($rot)
		{
			if($this->input->post())
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			}
			else if($this->uri->segment(3))
			{
				$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(3));
			}
			else
			{
				$ddl_imp_rot_no=$rot;
			}
			//echo "==".$ddl_imp_rot_no;
			$this->load->model('ci_auth', 'bm', TRUE);
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;		
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;		
			//echo $data['voysNo'];
			
			//$this->load->view('cssAssetsList');
			$this->load->view('myReportImExSummeryExportLoadingList',$data);
			//$this->load->view('jsAssetsList');
			
			//$this->load->view('myclosebar');
		
		} */
		//function myExportImExSummeryView($rot){  //6-2-2020



		function myExportImExSummeryView(){
			if($this->input->post())
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			}
			else if($this->uri->segment(3))
			{
				$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(3));
			}
			else
			{
				$ddl_imp_rot_no=$rot;
			}
			//echo "==".$ddl_imp_rot_no;
			$this->load->model('ci_auth', 'bm', TRUE);
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;		
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;		
			//echo $data['voysNo'];
			$this->load->view('cssAssets');
			$this->load->view('myReportImExSummeryExportLoadingList',$data);
			$this->load->view('jsAssets');
			$this->load->view('myclosebar');
		
		}




		//End Mlo wise import export summery for Export loading apps
		
		
		// export container Loading Report for Export loading apps

		function myExportContainerLoadingReport()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="EXPORT CONTAINER LOADING REPORT...";
				//echo $data['title'];
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportExportContainerLoading',$data);
				$this->load->view('jsAssets');
				
				//$this->load->view('header2');
				//$this->load->view('myReportExportContainerLoading',$data);
				//$this->load->view('footer');
			}	
		}
		
		function myExportContainerLoadingReportView()
		{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$this->load->model('ci_auth', 'bm', TRUE);
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;
			$fromdate=$this->input->post('fromdate');
			$fromTime=$this->input->post('fromTime');
			$todate=$this->input->post('todate');
			$toTime=$this->input->post('toTime');
			$button_show=0;
			if($_POST['options']=='html')
				$button_show=1;
			$data['fromdate']=$fromdate;
			$data['fromTime']=$fromTime;
			$data['todate']=$todate;
			$data['toTime']=$toTime;
			$data['button_show']=$button_show;
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			//echo $data['toTime'];
			//return;
			$this->load->view('myReportExportContainerLoadingList',$data);
			$this->load->view('myclosebar');
		
		}
		//Export container ToBe Loading start
		function ExportContainerTobeLoadingReport()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="EXPORT CONTAINER TO BE LOADED...";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('ReportExportContainerTobeLoaded',$data);
				$this->load->view('jsAssets');
			}	
		}
		

		function ExportContainerToBeLodedView()
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$this->load->model('ci_auth', 'bm', TRUE);
				$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
				$data['voysNo']=$getVoyNo;
				//echo $data['voysNo'];
				$this->load->view('ExportContainerToBeLodedList',$data);
				//$this->load->view('myclosebar');		
			}
		//Export container ToBe Loading end

		//PRE ADVICE START
		function RequestForPreAdviceReport(){
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="REQUEST FOR PREADVICE CONTAINER LIST...";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('ReportForPreAdviceContaineList',$data);
				$this->load->view('jsAssets');
			}	
        }
		
		function garmentsContInfoForm()				// 2020-06-09
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="Container Information (Garments Item) Form...";			
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('garmentsContInfo',$data);
				$this->load->view('jsAssets');
			}	
		}
	
		function garmentContInfoList($rot=null)		// 2020-06-09
		{
			$fileType=$this->input->post('fileOptions');
			if($this->input->post())
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			}
			else
			{
				$ddl_imp_rot_no=$rot;
			}
			
			if($fileType!="pdf" )
			{  
				$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
				$this->load->view('garmentContInfoList',$data);
				$this->load->view('myclosebar');
			} 				   
			else if($fileType=="pdf")
			{  				   
				$this->load->library('m_pdf');
				$mpdf->use_kwt = true;
				$this->data['ddl_imp_rot_no']=$ddl_imp_rot_no;

				$html=$this->load->view('garmentContInfoList',$this->data, true); 
				$pdfFilePath ="garmentContInfoList".time().".pdf";

				$pdf = $this->m_pdf->load();
				//$pdf->SetWatermarkText('CPA CTMS');
				$pdf->showWatermarkText = true;					

				$pdf->setFooter('Developed By : DataSoft|Page {PAGENO}|Date {DATE j-m-Y}');
				$pdf->WriteHTML($html,2);
				$pdf->Output($pdfFilePath, "I"); // For Show Pdf					
			}	
		}
	
		/// SOURAV SEARCH ITEM BY ROTATION START 
		function searchGarmentsItemByRotationForm()				// 2020-06-09
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="Container Information Form...";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('searchGarmentsItemByRotationForm',$data);
				$this->load->view('jsAssets');
			}	
		}
	
		function searchGarmentsItemByRotationList()				// 2020-06-09
		{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$ddl_imp_item=$this->input->post('ddl_imp_item');

			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$data['ddl_imp_item']=$ddl_imp_item;
			$this->load->view('searchGarmentsItemByRotationList',$data);
			$this->load->view('myclosebar');		
		}
	
		/// SOURAV SEARCH ITEM BY ROTATION END
		
		function RequestForPreAdviceReportView(){
			$this->load->model('ci_auth', 'bm', TRUE);
			$fromdate=$this->input->post('fromdate');
			$todate=$this->input->post('todate');
			$data['fromdate']=$fromdate;
			$data['todate']=$todate;
			if($_POST['options'] == 'xl'){
				$this->load->view('RequestForPreAdviceReportList',$data);
				$this->load->view('myclosebar');
			}else if($_POST['options'] == 'html'){
				$this->load->view('cssAssets');
				$this->load->view('RequestForPreAdviceReportList',$data);
				$this->load->view('myclosebar');
				$this->load->view('jsAssets');
			}
		}

		//PRE ADVICE CONTAINER LIST END
		function myContainerDelete(){
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$fromdate=$this->input->post('fromdate');
				$todate=$this->input->post('todate');
				$gkey=$this->input->post('gkey');
				//$this->load->model('ci_auth', 'bm', TRUE);
				$strTrans = "select sparcsn4.inv_unit_fcy_visit.transit_state as rtnValue 
				from sparcsn4.inv_unit_fcy_visit where sparcsn4.inv_unit_fcy_visit.unit_gkey='$gkey'";
				$transStat = $this->bm->dataReturn($strTrans);
				
				if($strTrans=='S60_LOADED' or $strTrans=='S70_DEPARTED')
				{
					$strUpdateDelFlg = "UPDATE ctmsmis.mis_exp_unit SET delete_flag='1' where gkey='$gkey'";
					$this->bm->dataUpdate($strUpdateDelFlg);
				}
				else{
					$strDel = "DELETE FROM ctmsmis.mis_exp_unit WHERE gkey='$gkey'";
					$this->bm->dataDelete($strDel);
				}
				
				$this->load->model('ci_auth', 'bm', TRUE);
				$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
				$data['voysNo']=$getVoyNo;
				$fromTime="";
				$toTime="";
				$button_show=1;
				$data['button_show']=$button_show;
				$data['fromdate']=$fromdate;
				$data['fromTime']=$fromTime;
				$data['todate']=$todate;
				$data['toTime']=$toTime;
				$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
				
				
				$ipAddress= $_SERVER['REMOTE_ADDR'];
				$s2=date("Y-m-d H:i:s");
				$username=$this->session->userdata('login_id');
				$data_wr="\r\n$ddl_imp_rot_no|$gkey|$s2 |$username |$ipAddress";
				write_file("loaded_cont_del_log.txt", $data_wr, 'a');
				
				
				/*
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$this->load->model('ci_auth', 'bm', TRUE);
				$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
				$data['voysNo']=$getVoyNo;
				$fromdate=$this->input->post('fromdate');
				$fromTime=$this->input->post('fromTime');
				$todate=$this->input->post('todate');
				$toTime=$this->input->post('toTime');
				$button_show=0;
				if($_POST['options']=='html')
					$button_show=1;
				$data['fromdate']=$fromdate;
				$data['fromTime']=$fromTime;
				$data['todate']=$todate;
				$data['toTime']=$toTime;
				$data['button_show']=$button_show;
				
				*/
				
				
				
				
				
				
				//$getVoyNo = $this->bm->myContDelete($gkey);
				//$data['voysNo']=$this->input->post('voysNumber');
				$this->load->view('myReportExportContainerLoadingList',$data);
				//$this->load->view('myclosebar');
			}
		}
		
		
		function myExportContainerNotFoundReport(){
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="EXPORT CONTAINER NOT FOUND REPORT...";

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myNotFounContForm',$data);
				$this->load->view('jsAssets');
			}	
        }
		
		function myExportContainerNotFoundReportView()
		{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$this->load->model('ci_auth', 'bm', TRUE);
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;
			$fromdate=$this->input->post('fromdate');
			$todate=$this->input->post('todate');
			$data['fromdate']=$fromdate;
			$data['todate']=$todate;
		
			if($_POST['options'] == 'xl'){
				$this->load->view('myReportExportContainerNotFoundList',$data);
				$this->load->view('myclosebar');
			}else if($_POST['options'] == 'html'){
				$this->load->view('cssAssets');
				$this->load->view('myReportExportContainerNotFoundList',$data);
				$this->load->view('myclosebar');
				$this->load->view('jsAssets');
			}
			
		}

		
		//Blocked start
		function myBlockedContainerView()
		{
		    $UserName = $this->session->userdata('User_Name');	
			$data['UserName']=$UserName;
			$this->load->view('myBlockedContainerList',$data);
			//$this->load->view('myclosebar');
		}

		function myBlockedContainerAllView()
		{
			
			 $UserName = $this->session->userdata('User_Name');
			
			$data['UserName']=$UserName;
			$this->load->view('myBlockedContainerAllList',$data);
			$this->load->view('myclosebar');
		}
		//BLOCKE END

		//Export container list start
		function myExportContainerLoadingReportForm()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="EXPORT CONTAINER LOADING REPORT...";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportExportContainerLoadedForm',$data);
				$this->load->view('jsAssets');
			}	
		}
		
		function myExportContainerLoadedReportView()
		{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			
			
			$fromdate=$this->input->post('fromdate');
			$fromTime=$this->input->post('fromTime');
			$todate=$this->input->post('todate');
			$toTime=$this->input->post('toTime');
			$data['fromdate']=$fromdate;
			$data['fromTime']=$fromTime;
			$data['todate']=$todate;
			$data['toTime']=$toTime;
			
			
			$this->load->view('myReportExportContainerLoadingListViewForCPA',$data);
			$this->load->view('myclosebar');
		
		}
		//Export container list end

		//IMport container list start
		function myImportContainerLoadingReportForm()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="IMPORT CONTAINER DISCHARGE LIST REPORT...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportImportContainerLoadedForm',$data);
				$this->load->view('jsAssets');
			}	
		}
		
		function myImportContainerLoadedReportView()
		{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$this->load->model('ci_auth', 'bm', TRUE);
			
			$fromdate=$this->input->post('fromdate');
			$fromTime=$this->input->post('fromTime');
			$todate=$this->input->post('todate');
			$toTime=$this->input->post('toTime');
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$data['fromdate']=$fromdate;
			$data['fromTime']=$fromTime;
			$data['todate']=$todate;
			$data['toTime']=$toTime;
			
			
			//echo $data['toTime'];
			//return;
			$this->load->view('myReportImportContainerLoadingListView',$data);
			$this->load->view('myclosebar');
		
		}
		//IMport container list end

		//shahadat
		function myImportContainerDischargeReport()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="IMPORT CONTAINER DISCHARGE REPORT...";
				//echo $data['title'];
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportImportContainerDischarging',$data);
				$this->load->view('jsAssets');				
			}	
		}
		
		function myImportContainerDischargeReportView($rot=null)
		{
			if($this->input->post())
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			}
			else
			{
				$ddl_imp_rot_no=$rot;
			}
			$this->load->model('ci_auth', 'bm', TRUE);
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			//echo $data['voysNo'];
			
			$this->load->view('cssAssetsList');
			$this->load->view('myReportImportContainerDischargeList',$data);
			$this->load->view('jsAssetsList');
		}

		
		//REFFER CONTAINER

		function myRefferImportContainerDischargeReport()			// 2020-06-11
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="YARD WISE REFFER IMPORT CONTAINER...";
				$data['msg']="";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('berthOperatorImportContainerDischarging',$data);
				$this->load->view('jsAssets');
			}	
		}
	
		function myRefferImportContainerDischargeReportView()		// 2020-06-11
		{
			$rptType=$this->input->post('options');
			$type=$this->input->post('options1');
			
			if (isset($_POST['submit_login'])) 
			{
				if($rptType=="pdf")
				{
					
					$this->load->library('m_pdf');
					//$pdf->use_kwt = true;
					$this->data['title']="Reffer Delivery Report";

					if($type=="deli")
					{
						
						$fromdate=$this->input->post('fromdate');
						$todate=$this->input->post('todate');
						$yard_no=$this->input->post('yard_no'); 
						$rfrConStat=$this->input->post('optionsC');
						
						$this->data['fromdate']=$fromdate;
						$this->data['todate']=$todate;
						$this->data['yard_no']=$yard_no;
						$this->data['rfrConStat']=$rfrConStat;
						$html=$this->load->view('myRefferImportDeliveryReportList',$this->data, true);
					}
					else
					{
						//echo "html";
						//return;
						$fromdate=$this->input->post('fromdate');
						$todate=$this->input->post('todate');
						$type=$this->input->post('options1');
						$yard_no=$this->input->post('yard_no'); 
						
						$this->data['fromdate']=$fromdate;
						$this->data['todate']=$todate;
						$this->data['yard_no']=$yard_no;
						$this->data['type']=$type;
						
						$this->load->view('cssAssets');
						$html=$this->load->view('myRefferImportContainerDischargeReportList',$this->data, true);
						$this->load->view('jsAssets');
						
					}				
				
					//this the the PDF filename that user will get to download
					$pdfFilePath ="Reefer_Container_List-".time()."-download.pdf";
					$pdf = $this->m_pdf->load();
					//$pdf->SetWatermarkText('CPA CTMS');
					$pdf->showWatermarkText = true;	
					$stylesheet = file_get_contents('resources/styles/test.css'); // external css
					//$scriptSheet = file_get_contents('resources/scripts/JsBarcode.all.min.js'); // external css
					$pdf->useSubstitutions = true; // optional - just as an example
					//$pdf->SetHeader($url . "\n\n" . 'Date {DATE j-m-Y}');  // optional - just as an example
					//echo "SheetAdd : ".$stylesheet;
					//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
					
					$pdf->AddPage('P', // L - landscape, P - portrait
							'', '', '', '',
							2, // margin_left
							2, // margin right
							2, // margin top
							2, // margin bottom
							5, // margin header
							2); // margin footer
					
					$pdf->WriteHTML($stylesheet,1);
					$pdf->WriteHTML($html,2);
					//$pdf->WriteHTML($scriptSheet,3);
					$pdf->Output($pdfFilePath, "I"); // For Show Pdf
				}
				else
				{
					if($type=="deli")
					{
						// echo "deli";
						// return;
						$fromdate=$this->input->post('fromdate');
						
					    $todate=$this->input->post('todate');
					
						$rfrConStat=$this->input->post('optionsC');
						$yard_no=$this->input->post('yard_no'); 
						$data['yard_no']=$yard_no;
						$data['fromdate']=$fromdate;
						$data['todate']=$todate;
						$data['type']=$type;
						$data['rfrConStat']=$rfrConStat;
						//echo $yard_no;
						if($_POST['options'] == 'xl'){
							$this->load->view('myRefferImportDeliveryReportList',$data);
						} else if($_POST['options'] == 'html'){
							$this->load->view('cssAssets');
							$this->load->view('myRefferImportDeliveryReportList',$data);
							$this->load->view('jsAssets');
						}
					}
					else
					{
						$fromdate=$this->input->post('fromdate');
						$todate=$this->input->post('todate');
						$type=$this->input->post('options1');
						$yard_no=$this->input->post('yard_no'); 
						$data['yard_no']=$yard_no;
						//return;
						$data['fromdate']=$fromdate;
						$data['todate']=$todate;
						$data['type']=$type;


						//echo $data['voysNo'];
							
						$this->load->view('cssAssets');
						$this->load->view('myRefferImportContainerDischargeReportList',$data);
						$this->load->view('jsAssets');
					}
					$this->load->view('myclosebar');
				}
			}
			else if(isset($_POST['submit_forwarding']))
			{
				$rptType=$this->input->post('options');
				$type=$this->input->post('options1');
			
				if($type=="deli")
				{
					$fromdate=$this->input->post('fromdate');
					$todate=$this->input->post('todate');
					
					$yard_no=$this->input->post('yard_no'); 
					$data['yard_no']=$yard_no;
						//return;
					$data['fromdate']=$fromdate;
					$data['todate']=$todate;
					$data['type']=$type;
						//echo $data['voysNo'];
					$this->load->view('myRefferImportDeliveryReportForwading',$data);
				}
			}
		}
		
		function myRefferImportContainerSync()
		{
				$sqlQuery="SELECT inv.gkey,inv.id,sparcsn4.vsl_vessel_visit_details.ib_vyg AS vsl_visit_dtls_ib_vyg,
				inv_unit_fcy_visit.time_in, inv.power_rqst_time,
				
				inv_unit_fcy_visit.flex_date03 AS rfr_connect, 
				inv_unit_fcy_visit.flex_date04 AS rfr_disconnect,
				inv_unit_fcy_visit.flex_date05 AS rfr_connect2, 
				inv_unit_fcy_visit.flex_date06 AS rfr_disconnect2,
				inv_unit_fcy_visit.flex_date07 AS rfr_connect3, 
				inv_unit_fcy_visit.flex_date08 AS rfr_disconnect3,

				(SELECT sparcsn4.srv_event.created FROM sparcsn4.srv_event WHERE sparcsn4.srv_event.event_type_gkey=30 
				AND sparcsn4.srv_event.applied_to_gkey=inv.gkey ORDER BY sparcsn4.srv_event.gkey DESC LIMIT 1) AS time_out,

				IF(sparcsn4.inv_unit_fcy_visit.last_pos_slot='', (SELECT SUBSTRING(sparcsn4.srv_event_field_changes.new_value,7)
				FROM sparcsn4.srv_event INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
				WHERE sparcsn4.srv_event.applied_to_gkey=inv.gkey AND sparcsn4.srv_event.event_type_gkey IN(18) AND sparcsn4.srv_event_field_changes.new_value IS NOT NULL 
				AND sparcsn4.srv_event_field_changes.new_value !='' AND sparcsn4.srv_event_field_changes.new_value !='Y-CGP-.'
				AND sparcsn4.srv_event.gkey<(SELECT sparcsn4.srv_event.gkey FROM sparcsn4.srv_event
				INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
				WHERE sparcsn4.srv_event.event_type_gkey IN(25,29,30) AND sparcsn4.srv_event.applied_to_gkey=inv.gkey 
				ORDER BY sparcsn4.srv_event_field_changes.gkey DESC LIMIT 1) ORDER BY sparcsn4.srv_event.gkey DESC LIMIT 1) ,
				sparcsn4.inv_unit_fcy_visit.last_pos_slot) AS last_pos_slot,
				(SELECT CASE
				WHEN SUBSTR(UCASE(creator),1,3) = 'CCT' THEN 'CCT'
				WHEN SUBSTR(UCASE(creator),1,3) = 'OFY' THEN 'OFY'
				WHEN SUBSTR(UCASE(creator),1,3) = 'GCB' THEN 'GCB'
				WHEN SUBSTR(UCASE(creator),1,3) = 'NCT' THEN 'NCT'
				ELSE SUBSTR(UCASE(inv.flex_string03),1,3)
				END ) AS yard ,

				(SELECT ctmsmis.cont_block(IF(sparcsn4.inv_unit_fcy_visit.last_pos_slot='', 
				(SELECT SUBSTRING(sparcsn4.srv_event_field_changes.new_value,7) FROM sparcsn4.srv_event 
				INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey 
				WHERE sparcsn4.srv_event.applied_to_gkey=inv.gkey AND sparcsn4.srv_event.event_type_gkey IN(18)
				AND sparcsn4.srv_event_field_changes.new_value IS NOT NULL AND sparcsn4.srv_event_field_changes.new_value !='' 
				AND sparcsn4.srv_event_field_changes.new_value !='Y-CGP-.' AND sparcsn4.srv_event.gkey<(SELECT sparcsn4.srv_event.gkey FROM sparcsn4.srv_event 
				INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey 
				WHERE sparcsn4.srv_event.event_type_gkey IN(25,29,30) AND sparcsn4.srv_event.applied_to_gkey=inv.gkey
				ORDER BY sparcsn4.srv_event_field_changes.gkey DESC LIMIT 1) ORDER BY sparcsn4.srv_event.gkey DESC LIMIT 1) ,
				sparcsn4.inv_unit_fcy_visit.last_pos_slot),yard)) AS block, 

				inv.flex_string01,
				sparcsn4.inv_unit_fcy_visit.flex_date01,
				(SELECT RIGHT(sparcsn4.ref_equip_type.nominal_length,2) FROM sparcsn4.ref_equip_type 
				INNER JOIN sparcsn4.ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
				INNER JOIN sparcsn4.inv_unit_equip ON inv_unit_equip.eq_gkey=ref_equipment.gkey
				WHERE sparcsn4.inv_unit_equip.unit_gkey=inv.gkey
				) AS size,
				CAST((SELECT (RIGHT(sparcsn4.ref_equip_type.nominal_height,2)/10) FROM sparcsn4.ref_equip_type
				INNER JOIN sparcsn4.ref_equipment ON sparcsn4.ref_equipment.eqtyp_gkey = sparcsn4.ref_equip_type.gkey
				INNER JOIN sparcsn4.inv_unit_equip ON sparcsn4.inv_unit_equip.eq_gkey = sparcsn4.ref_equipment.gkey
				WHERE sparcsn4.inv_unit_equip.unit_gkey = inv.gkey) AS DECIMAL(10,1))  AS height,
				sparcsn4.ref_bizunit_scoped.id AS mlo,
				(SELECT sparcsn4.srv_event.creator
				FROM sparcsn4.srv_event
				INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
				WHERE sparcsn4.srv_event.applied_to_gkey=inv.gkey AND sparcsn4.srv_event_field_changes.new_value IS NOT NULL AND 
				sparcsn4.srv_event_field_changes.new_value LIKE'%BDT' AND sparcsn4.srv_event.event_type_gkey IN ('4','33')
				ORDER BY sparcsn4.srv_event.gkey DESC LIMIT 1)AS creator,
				(SELECT vsl_vessels.name FROM sparcsn4.inv_unit
				INNER JOIN sparcsn4.inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				INNER JOIN sparcsn4.argo_carrier_visit ON sparcsn4.argo_carrier_visit.gkey= sparcsn4.inv_unit_fcy_visit.actual_ib_cv
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.argo_carrier_visit.cvcvd_gkey=sparcsn4.vsl_vessel_visit_details.vvd_gkey
				INNER JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				WHERE sparcsn4.inv_unit.gkey=inv.gkey) AS vsl_name
                FROM sparcsn4.inv_unit inv
                INNER JOIN sparcsn4.inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv.gkey
                INNER JOIN sparcsn4.argo_carrier_visit ON sparcsn4.argo_carrier_visit.gkey= sparcsn4.inv_unit_fcy_visit.actual_ib_cv
                INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.argo_carrier_visit.cvcvd_gkey=sparcsn4.vsl_vessel_visit_details.vvd_gkey
                INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=inv.line_op

                WHERE ((DATE(inv_unit_fcy_visit.flex_date03) BETWEEN (NOW() - interval 5 day) AND NOW()) OR (DATE(inv_unit_fcy_visit.flex_date04) BETWEEN (NOW() - interval 5 day) AND NOW()) OR (DATE(inv_unit_fcy_visit.flex_date05) BETWEEN (NOW() - interval 5 day) AND NOW())OR (DATE(inv_unit_fcy_visit.flex_date06) BETWEEN (NOW() - interval 5 day) AND NOW())OR (DATE(inv_unit_fcy_visit.flex_date07) BETWEEN (NOW() - interval 5 day) AND NOW())OR (DATE(inv_unit_fcy_visit.flex_date08) BETWEEN (NOW() - interval 5 day) AND NOW())) AND inv.category='IMPRT'";

				$getDischargeList = $this->bm->dataSelect($sqlQuery);
           // $result=mysqli_query($conn2,$sqlQuery);
				for($i=0; $i<count($getDischargeList); $i++)
						//if(mysqli_num_rows($result)>0)
				{	   
					$gkey=$getDischargeList[$i]['gkey'];
					$id=$getDischargeList[$i]['id'];
					$vsl_visit_dtls_ib_vyg=$getDischargeList[$i]['vsl_visit_dtls_ib_vyg'];
					$rfr_connect=$getDischargeList[$i]['rfr_connect'];
					$rfr_disconnect=$getDischargeList[$i]['rfr_disconnect'];
					$rfr_connect2=$getDischargeList[$i]['rfr_connect2'];
					$rfr_disconnect2=$getDischargeList[$i]['rfr_disconnect2'];
					$rfr_connect3=$getDischargeList[$i]['rfr_connect3'];
					$rfr_disconnect3=$getDischargeList[$i]['rfr_disconnect3'];
					
					$power_rqst_time=$getDischargeList[$i]['power_rqst_time'];
					$discharge_time=$getDischargeList[$i]['time_in'];
					$deli_date=$getDischargeList[$i]['time_out'];
					$pos_slot=$getDischargeList[$i]['last_pos_slot'];
					$block=$getDischargeList[$i]['block'];
					$height=$getDischargeList[$i]['height'];
					$deli_type=$getDischargeList[$i]['flex_string01'];
					$assign_date=$getDischargeList[$i]['flex_date01'];
					
					
					$size=strtoupper($getDischargeList[$i]['size']);
					$mlo=strtoupper($getDischargeList[$i]['mlo']);
					$creator=strtoupper($getDischargeList[$i]['creator']);
					$vsl_name=strtoupper($getDischargeList[$i]['vsl_name']);
					$yard=strtoupper($getDischargeList[$i]['yard']);


					$rfr_connect = !empty($rfr_connect) ? "'$rfr_connect'" : "NULL";
					$rfr_disconnect = !empty($rfr_disconnect) ? "'$rfr_disconnect'" : "NULL";
					$rfr_connect2 = !empty($rfr_connect2) ? "'$rfr_connect2'" : "NULL";
					$rfr_disconnect2 = !empty($rfr_disconnect2) ? "'$rfr_disconnect2'" : "NULL";
					$rfr_connect3 = !empty($rfr_connect3) ? "'$rfr_connect3'" : "NULL";
					$rfr_disconnect3 = !empty($rfr_disconnect3) ? "'$rfr_disconnect3'" : "NULL";

				    $sql = "Replace into ctmsmis.reeferdata (unit_gkey,cont_id,vessel_visit, power_rqst_time, rfr_conn,rfr_disconn,rfr_conn2,rfr_disconn2,rfr_conn3,rfr_disconn3,size,mlo,creator, vsl_name,yard, height, block, last_pos, assign_dt, deli_dt, discharge_time, deli_type ) values('$gkey','$id','$vsl_visit_dtls_ib_vyg','$power_rqst_time', $rfr_connect,$rfr_disconnect,$rfr_connect2,$rfr_disconnect2,$rfr_connect3,$rfr_disconnect3,'$size','$mlo','$creator','$vsl_name','$yard', '$height',
					'$block', '$pos_slot', '$assign_date', '$deli_date', '$discharge_time', '$deli_type' )";

					$insertStat = $this->bm->dataInsert($sql);
						//echo $insertStat.'---';	
				}
				//return;
				
				$data['title']="YARD WISE REFFER IMPORT CONTAINER...";
				$data['msg']="Data Sync Succesfully.";

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('berthOperatorImportContainerDischarging',$data);
				$this->load->view('jsAssets');
			
			}


		//EXPORT COMMODITY IN VESSES START
		
		function myExportCommodityForm(){
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="Export Commodity...";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myExportCommodityFormView',$data);
				$this->load->view('jsAssets');
			}	
		}
		
		function myExportCommodityConversion()
		{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$this->load->view('myExportCommodityConvers',$data);
			$this->load->view('myclosebar');
		}
		
		//EXPORT COMMODITY IN VESSES END

		//WATER SUPPLY IN VESSES START
		//REFFER CONTAINER
		function myWaterSupplyInVesselsReportForm()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="WATER SUPPLY IN VESSES...";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myWaterSupplyInVesselsReportView',$data);
				$this->load->view('jsAssets');
			}	
		}
		
		function myWaterSupplyInVesselsReport()
		{
			$fromdate=$this->input->post('fromdate');
			$todate=$this->input->post('todate');
			$type=$this->input->post('options');
			//return;
			$data['fromdate']=$fromdate;
			$data['todate']=$todate;
			$data['type']=$type;
			
			if($type == 'xl'){
				$this->load->view('myWaterSupplyInVesselsReportList',$data);
				$this->load->view('myclosebar');
			}else if($type == 'html'){
				$this->load->view('cssAssets');
				$this->load->view('myWaterSupplyInVesselsReportList',$data);
				$this->load->view('myclosebar');
				$this->load->view('jsAssets');
			}
		}
		
		//WATER SUPPLY IN VESSES END

		function berthOperatorExportContainerHandlingReport()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="BERTH OPERATOR WISE EXPORT CONTAINER...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('berthOperatorWiseExportContainer',$data);
				$this->load->view('jsAssets');
			}	
		}
		
		function berthOperatorWiseExportContainerListView()
		{
			$fromdate=$this->input->post('fromdate');
			$todate=$this->input->post('todate');
			$data['fromdate']=$fromdate;
			$data['todate']=$todate;
			//echo $data['voysNo'];
			$this->load->view('berthOperatorWiseExportContainerReportList',$data);
		}
		
		function myAllReportView($year,$serial,$reportNo,$type)
		{
			//echo $year."/".$serial."-".$reportCat."-".$reportNo;
			$rot=$year."/".$serial;
			if($reportNo==1)
			{
				if($type=="detail")
					$this->loadedContainerListView($rot);
				else
					$this->myExportImExSummeryView($rot);
			}
			
			if($reportNo==2)
			{
				if($type=="detail")
					$this->myImportContainerDischargeReportView($rot);
				else
					$this->myImportSummeryView($rot);
			}
		}
		
				
		function dischargeListForMLO()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="Date Wise Discharge List For MLO..";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('dischargeListForMLOForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function dischargeListForMLOreport()
		{
			$session_id = $this->session->userdata('value');
			$login_id = $this->session->userdata('login_id');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$type=$this->input->post('options');
				$fromDate=$this->input->post('fromDate');
				$toDate=$this->input->post('toDate');
				
				$str= "select inv_unit.id,
					(select substr(ref_equip_type.nominal_length,-2) from ref_equip_type 
					INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
					INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
					where inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
					) as siz,
					(select substr(ref_equip_type.nominal_height,-2)/10 from ref_equip_type 
					INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
					INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
					where inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
					) as height ,
					inv_unit.freight_kind,
					to_char(inv_unit_fcy_visit.time_in, 'yyyy-mm-dd') as time_in,
					to_char(inv_unit_fcy_visit.time_out,'yyyy-mm-dd') as time_out
					from inv_unit
					inner join inv_unit_fcy_visit on inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
					inner join ref_bizunit_scoped on ref_bizunit_scoped.gkey= inv_unit.line_op
					where to_char( time_out, 'yyyy-mm-dd' ) BETWEEN '$fromDate' and '$toDate' 
					and ref_bizunit_scoped.id='$login_id'";				
				$getDischargeList = $this->bm->dataSelect($str);
				
				if($this->input->post('options')=='xl')
				{
					
					//echo $getDischargeList;
					$data['type']=$type;
					$data['fromDate']=$fromDate;
					$data['toDate']=$toDate;
					$data['getList']=$getDischargeList;
					$this->load->view('dischargeListForMLOFormView',$data);
				}
				else if($this->input->post('options')=='html')
				{
					$data['type']=$type;
					$data['fromDate']=$fromDate;
					$data['toDate']=$toDate;
					$data['getList']=$getDischargeList;
					
					$this->load->view('cssAssetsList');
					$this->load->view('dischargeListForMLOListView',$data);
					$this->load->view('jsAssetsList');
				}
				else
				{
					
					$this->load->library('m_pdf');
					//$mpdf->use_kwt = true;
					$fromDate=$this->input->post('fromDate');
					$toDate=$this->input->post('toDate');

					$this->data['fromDate']=$fromDate;
					$this->data['toDate']=$toDate;
					
					$str = "select inv_unit.id,
						(select substr(ref_equip_type.nominal_length,-2) from ref_equip_type 
						INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
						INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
						where inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
						) as siz,
						(select substr(ref_equip_type.nominal_height,-2)/10 from ref_equip_type 
						INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
						INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
						where inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
						) as height ,
						inv_unit.freight_kind,
						to_char(inv_unit_fcy_visit.time_in, 'yyyy-mm-dd') as time_in,
						to_char(inv_unit_fcy_visit.time_out,'yyyy-mm-dd') as time_out
						from inv_unit
						inner join inv_unit_fcy_visit on inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
						inner join ref_bizunit_scoped on ref_bizunit_scoped.gkey= inv_unit.line_op 
						where to_char( time_out, 'yyyy-mm-dd' ) BETWEEN '$fromDate' and '$toDate'
						and ref_bizunit_scoped.id='$login_id'";
					
					//echo $str;
					//return;
					$getDischargeList = $this->bm->dataSelect($str);
					$this->data['getList']=$getDischargeList;
					$html=$this->load->view('dischargeListForMLOFormViewPDF',$this->data, true); 
					$pdfFilePath ="EmtyContainerFoundListPDF-".time()."-download.pdf";

					   //actually, you can pass mPDF parameter on this load() function
					$pdf = $this->m_pdf->load();
					//$pdf->SetWatermarkText('CPA CTMS');
					$pdf->showWatermarkText = true;	
					//$stylesheet = file_get_contents('resources/styles/test.css'); // external css
					//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO}|Date {DATE j-m-Y}');
					//$pdf->WriteHTML($stylesheet,1);
					$pdf->WriteHTML($html,2);
					$pdf->Output($pdfFilePath, "I"); // For Show Pdf	
				}
		    }
		}


		function dischargeListForMLOReportPrint()
		{
			$session_id = $this->session->userdata('value');
			$login_id = $this->session->userdata('login_id');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
				{
					$this->logout();
				}
			else
				{
					$fromDate=$this->input->post('fromDate');
					$toDate=$this->input->post('toDate');
					$type = $this->input->post('type');
					
					$str= "select sparcsn4.inv_unit.id,
					(select right(sparcsn4.ref_equip_type.nominal_length,2) from ref_equip_type 
					INNER JOIN sparcsn4.ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
					INNER JOIN sparcsn4.inv_unit_equip ON inv_unit_equip.eq_gkey=ref_equipment.gkey
					where sparcsn4.inv_unit_equip.unit_gkey=inv_unit.gkey
					) as size,
					(select right(sparcsn4.ref_equip_type.nominal_height,2)/10 from ref_equip_type 
					INNER JOIN sparcsn4.ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
					INNER JOIN sparcsn4.inv_unit_equip ON inv_unit_equip.eq_gkey=ref_equipment.gkey
					where sparcsn4.inv_unit_equip.unit_gkey=inv_unit.gkey
					) as height ,
					sparcsn4.inv_unit.freight_kind,sparcsn4.inv_unit_fcy_visit.time_in,sparcsn4.inv_unit_fcy_visit.time_out
					from sparcsn4.inv_unit
					inner join sparcsn4.inv_unit_fcy_visit on sparcsn4.inv_unit_fcy_visit.unit_gkey=sparcsn4.inv_unit.gkey
					inner join sparcsn4.ref_bizunit_scoped on sparcsn4.ref_bizunit_scoped.gkey= sparcsn4.inv_unit.line_op
					where DATE(time_out) BETWEEN '$fromDate' and '$toDate' and sparcsn4.ref_bizunit_scoped.id='$login_id'";
					
					$getDischargeList = $this->bm->dataSelect($str);
					
					$data['type']=$type;
					$data['fromDate']=$fromDate;
					$data['toDate']=$toDate;
					$data['getList']=$getDischargeList;
					
					//$this->load->view('exportContainerGateInList',$data);
					
					$this->load->view('cssAssetsList');
					$this->load->view('dischargeListForMLOReportPrintView',$data);
					$this->load->view('jsAssetsList');
				}
		}
	//Three form start	
			
		function assignmentAllReportForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="YARD WISE PROPOSED EMPTY AND EMPTY CONTAINER REPORT...";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('assignmentAllReportForm',$data);
				$this->load->view('jsAssets');
			} 
		}
		
		
		function assignmentAllReportFormView()
		{
			$session_id = $this->session->userdata('value');
		    $LoginStat = $this->session->userdata('LoginStat');
						
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$login_id = $this->session->userdata('login_id');
				$type=$this->input->post('options1');
				
				if($this->input->post('submit')=="2")
				{
					
					$fileType=$this->input->post('fileOptions');
					
					if($type=="assign1" && $fileType!="pdf" )
					{  
						
						$fromdate = $this->input->post('fromdate1');
						
						if($fromdate == "")
						{
							$data['title']="YARD WISE PROPOSED EMPTY AND EMPTY CONTAINER REPORT...";
							$data['msg1'] = "<font color='red' size='3'>Please Provide Date</font>";
							//echo $data['title'];
							$this->load->view('cssAssets');
							$this->load->view('headerTop');
							$this->load->view('sidebar');
							$this->load->view('assignmentAllReportForm',$data);
							$this->load->view('jsAssets');
						}
						else
						{							
							$yard_no=$this->input->post('yard_no1'); 
							
							$data['fromdate']=$fromdate;
							$data['yard_no']=$yard_no;
							$data['type']=$type;						
							//$this->load->view('myReportEmtyContainerFoundListAssignment',$data);
							
							if($login_id=="pass")
								$this->load->view('myReportEmtyContainerFoundListAssignment_forSecurityPass',$data);
							else							
							   $this->load->view('myReportEmtyContainerFoundListAssignment',$data);
						}
						return;
						
					} 
					else if($type=="assign1" && $fileType=="pdf")
					{  
						$fromdate = $this->input->post('fromdate1');
						
						if($fromdate == "")
						{
							$data['title']="YARD WISE PROPOSED EMPTY AND EMPTY CONTAINER REPORT...";
							$data['msg1'] = "<font color='red' size='3'>Please Provide Date</font>";
							//echo $data['title'];
							$this->load->view('cssAssets');
							$this->load->view('headerTop');
							$this->load->view('sidebar');
							$this->load->view('assignmentAllReportForm',$data);
							$this->load->view('jsAssets');
						}
						else
						{							
							$this->data['type']=$type;
							$this->load->library('m_pdf');
							$this->data['fromdate'] = $fromdate;
							$this->data['yard_no']=$this->input->post('yard_no1'); 

							$html=$this->load->view('myReportEmtyContainerFoundListPDF',$this->data, true); 
							$pdfFilePath ="EmtyContainerFoundListPDF-".time()."-download.pdf";

							//actually, you can pass mPDF parameter on this load() function
							$pdf = $this->m_pdf->load();
							$pdf->SetWatermarkText('CPA TOS');
							$pdf->showWatermarkText = true;		
							$stylesheet = file_get_contents('resources/styles/test.css'); // external css
							$pdf->WriteHTML($stylesheet,1);
							$pdf->WriteHTML($html,2);
							$pdf->Output($pdfFilePath, "I"); // For Show Pdf
						}					
					}
					
					else if($type=="cont1")
					{
						$container=$this->input->post('container1');
						$data['container']=$container;
						$data['type']=$type;
						
						$this->load->view('myReportEmtyOneContainerFound',$data);
					}
					else if($type=="deli1") //&& $fileType=="pdf"
					{
						$fromdate = $this->input->post('fromdate1');
						$todate = $this->input->post('todate1');
						
						if($fromdate == "" || $todate == "" )
						{
							$data['title']="YARD WISE PROPOSED EMPTY AND EMPTY CONTAINER REPORT...";
							$data['msg1'] = "<font color='red' size='3'>Please Provide Date</font>";
							//echo $data['title'];
							$this->load->view('cssAssets');
							$this->load->view('headerTop');
							$this->load->view('sidebar');
							$this->load->view('assignmentAllReportForm',$data);
							$this->load->view('jsAssets');
						}
						else
						{
							$this->load->library('m_pdf');
							$this->data['fromdate']=$fromdate;
							$this->data['todate']=$todate;
							$this->data['yard_no']=$this->input->post('yard_no1');
							$this->data['type']=$type;
							
							$html=$this->load->view('myReportDeliverContainerFoundListPDF',$this->data, true); 
							$pdfFilePath ="EmtyContainerFoundListPDF-".time()."-download.pdf";

							//actually, you can pass mPDF parameter on this load() function
							$pdf = $this->m_pdf->load();
							$pdf->SetWatermarkText('CPA CTMS');
							$pdf->showWatermarkText = true;		
							$stylesheet = file_get_contents('resources/styles/test.css'); // external css
							$pdf->WriteHTML($html,1);
							$pdf->WriteHTML($html,2);
							$pdf->Output($pdfFilePath, "I"); // For Show Pdf
						}	
					}
					else
					{
						$fromdate=$this->input->post('fromdate1');
						$todate=$this->input->post('todate1');
						
						if($fromdate == "" || $todate == "" )
						{
							$data['title']="YARD WISE PROPOSED EMPTY AND EMPTY CONTAINER REPORT...";
							$data['msg1'] = "<font color='red' size='3'>Please Provide Date</font>";
							//echo $data['title'];
							$this->load->view('cssAssets');
							$this->load->view('headerTop');
							$this->load->view('sidebar');
							$this->load->view('assignmentAllReportForm',$data);
							$this->load->view('jsAssets');
						}
						else
						{
							$yard_no=$this->input->post('yard_no1'); 
							
							$data['yard_no']=$yard_no;
							$data['fromdate']=$fromdate;
							$data['todate']=$todate;
							$data['type']=$type;
							
							$this->load->view('myReportEmtyContainerFoundList',$data);
						}
					}
				}
				else if($this->input->post('submit')=="1")
				{
					// echo "ok...";return;
					$type=$this->input->post('options1');
					//return;
					//$data['voysNo']=$getVoyNo;
					if($type=="assign")
					{  
						
						$fromdate=$this->input->post('fromdate');
						if($fromdate == "" )
						{
							$data['title']="YARD WISE PROPOSED EMPTY AND EMPTY CONTAINER REPORT...";
							$data['msg2'] = "<font color='red' size='3'>Please Provide Date</font>";
							//echo $data['title'];
							$this->load->view('cssAssets');
							$this->load->view('headerTop');
							$this->load->view('sidebar');
							$this->load->view('assignmentAllReportForm',$data);
							$this->load->view('jsAssets');
						}
						else
						{
							
							$yard_no=$this->input->post('yard_no'); 
							$block=$this->input->post('block'); 
							
							$data['fromdate']=$fromdate;
							$data['yard_no']=$yard_no;
							$data['block']=$block;
							
							$data['type']=$type;
							$this->load->view('cssAssets');
							$this->load->view('yardWiseEmtyContainerReportView',$data);
							$this->load->view('jsAssets');
						}
					}
					elseif($type=="cont")
					{
						$container=$this->input->post('container');
						$data['container']=$container;
						$data['type']=$type;
						$this->load->view('cssAssets');
						$this->load->view('myReportEmtyOneContainerFound',$data);
						$this->load->view('jsAssets');
					}
					else
					{
						$fromdate=$this->input->post('fromdate');
						$todate=$this->input->post('todate');
						if($fromdate == "" || $todate == "" )
						{
							$data['title']="YARD WISE PROPOSED EMPTY AND EMPTY CONTAINER REPORT...";
							$data['msg2'] = "<font color='red' size='3'>Please Provide Date</font>";
							//echo $data['title'];
							$this->load->view('cssAssets');
							$this->load->view('headerTop');
							$this->load->view('sidebar');
							$this->load->view('assignmentAllReportForm',$data);
							$this->load->view('jsAssets');
						}
						else
						{
							$yard_no=$this->input->post('yard_no'); 
							$block=$this->input->post('block'); 
							
							$data['yard_no']=$yard_no;
							$data['block']=$block;			
							$data['fromdate']=$fromdate;
							$data['todate']=$todate;
							$data['type']=$type;
							$this->load->view('cssAssets');
							$this->load->view('yardWiseEmtyContainerFoundListView',$data);
							$this->load->view('jsAssets');
						}
					}
				}
				else
				{
					$type=$this->input->post('options3');					
					$fromdate=$this->input->post('fromdate3');
					if($fromdate == "")
					{
						$data['title']="YARD WISE PROPOSED EMPTY AND EMPTY CONTAINER REPORT...";
						$data['msg3'] = "<font color='red' size='3'>Please Provide Date</font>";
						//echo $data['title'];
						$this->load->view('cssAssets');
						$this->load->view('headerTop');
						$this->load->view('sidebar');
						$this->load->view('assignmentAllReportForm',$data);
						$this->load->view('jsAssets');
					}
					else
					{
						$yard=$this->input->post('yard3');
						
						$data['fromdate']=$fromdate;
						$data['yard_no']=$yard;
						$data['type']=$type;
						$this->load->view('cssAssets');
						$this->load->view('myReportAssingmentAndEmtyContainerReport',$data);
						$this->load->view('myclosebar');
						$this->load->view('jsAssets');
					}
				} 
			}
		}
	
		public function appraiseReSlotLocList()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
			
				$fromDt = $this->input->post('fromdate3');
				$contList = $this->input->post('contList');
				
				$search_format = $this->input->post('options');

				if($fromDt == "")
				{
					$data['title']="YARD WISE PROPOSED EMPTY AND EMPTY CONTAINER REPORT...";
					$data['msg7'] = "<font color='red' size='3'>Please Provide Date</font>";
					//echo $data['title'];
					$this->load->view('cssAssets');
					$this->load->view('headerTop');
					$this->load->view('sidebar');
					$this->load->view('assignmentAllReportForm',$data);
					$this->load->view('jsAssets');
				}
				else
				{		
					if($search_format=="xl" or $search_format=="html")
					{
						$search_value=$this->input->post('search_by');
						$data['fromDt']=$fromDt;
						$data['contList']=$contList;
						$this->load->view('appraiseReSlotLocList',$data);
						$this->load->view('myclosebar');
					}
					else
					{
						//load mPDF library
						$this->load->library('m_pdf');
						$this->data['fromDt']=$fromDt;
						$this->data['contList']=$contList;
						$html=$this->load->view('appraiseReSlotLocList',$this->data, true);
						//this the the PDF filename that user will get to download
						$pdfFilePath ="appraiseReSlotLocList-".time()."-download.pdf";
						$pdf = $this->m_pdf->load();
						$pdf->showWatermarkText = true;	
						$stylesheet = file_get_contents('assets/stylesheets/test.css'); // external css
						$pdf->useSubstitutions = true; // optional - just as an example
						$pdf->WriteHTML($stylesheet,1);
						$pdf->WriteHTML($html,2);
						$pdf->Output($pdfFilePath, "I"); // For Show Pdf
						
					}
				}
			}
		}

		 
		//three form end
		//Shift wise container report
  
		function shiftWiseContainerReport()
		{
			if($this->uri->segment(3)=="A")
				{
	
					$yard_no=$this->uri->segment(4);
					$fromdate=$this->uri->segment(5);
					
					$data['fromdate']=$fromdate;
					$data['yard_no']=$yard_no;
					$data['shift']="Shift A";
					//$data['type']=$type;
					$this->load->view('cssAssets');
					$this->load->view('shiftWiseContainerReportView',$data);
					$this->load->view('jsAssets');					
				}
			else if($this->uri->segment(3)=="B")
				{
					$yard_no=$this->uri->segment(4);
					$fromdate=$this->uri->segment(5);
					
					$data['fromdate']=$fromdate;
					$data['yard_no']=$yard_no;
					$data['shift']="Shift B";
					//$data['type']=$type;
					$this->load->view('cssAssets');
					$this->load->view('shiftWiseContainerReportView',$data);
					$this->load->view('jsAssets');					
				}
			else if($this->uri->segment(3)=="C")
				{
					$yard_no=$this->uri->segment(4);
					$fromdate=$this->uri->segment(5);
					
					$data['fromdate']=$fromdate;
					$data['yard_no']=$yard_no;
					$data['shift']="Shift C";
					//$data['type']=$type;
					$this->load->view('cssAssets');
					$this->load->view('shiftWiseContainerReportView',$data);
					$this->load->view('jsAssets');					
				}
			else if($this->uri->segment(3)=="Stay")
				{
					$yard_no=$this->uri->segment(4);
					$fromdate=$this->uri->segment(5);
					
					$data['fromdate']=$fromdate;
					$data['yard_no']=$yard_no;
					//$data['shift']="Shift C";
					//$data['type']=$type;
					$this->load->view('cssAssets');
					$this->load->view('stayContainerReportView',$data);
					$this->load->view('jsAssets');					
				}	
			else 
				{
					$yard_no=$this->uri->segment(4);
					$fromdate=$this->uri->segment(5);
					
					$data['fromdate']=$fromdate;
					$data['yard_no']=$yard_no;
					$data['shift']="N";
					//$data['type']=$type;
					$this->load->view('cssAssets');
					$this->load->view('shiftWiseContainerReportView',$data);
					$this->load->view('jsAssets');					
				}
					
		}
	
		function shiftYardAndBlockWiseContainerReport()
		{
			if($this->uri->segment(3)=="A")
				{
					$yard_no=$this->uri->segment(4);
					$fromdate=$this->uri->segment(5);
					$block=$this->uri->segment(6);
					
					$data['fromdate']=$fromdate;
					$data['yard_no']=$yard_no;
					$data['block']=$block;
					$data['shift']="Shift A";
					//$data['type']=$type;
					$this->load->view('cssAssets');
					$this->load->view('shiftYardAndBlockWiseContainerReport',$data);
					$this->load->view('jsAssets');					
				}
			else if($this->uri->segment(3)=="B")
				{
					$yard_no=$this->uri->segment(4);
					$fromdate=$this->uri->segment(5);
					$block=$this->uri->segment(6);
					$data['fromdate']=$fromdate;
					$data['yard_no']=$yard_no;
					$data['block']=$block;
					$data['shift']="Shift B";
					//$data['type']=$type;
					$this->load->view('cssAssets');
					$this->load->view('shiftYardAndBlockWiseContainerReport',$data);
					$this->load->view('jsAssets');					
				}
			else if($this->uri->segment(3)=="C")
				{
					$yard_no=$this->uri->segment(4);
					$fromdate=$this->uri->segment(5);
					$block=$this->uri->segment(6);
					
					$data['fromdate']=$fromdate;
					$data['yard_no']=$yard_no;
					$data['block']=$block;
					$data['shift']="Shift C";
					//$data['type']=$type;
					$this->load->view('cssAssets');
					$this->load->view('shiftYardAndBlockWiseContainerReport',$data);
					$this->load->view('jsAssets');					
				}
			else if($this->uri->segment(3)=="Stay")
				{
					$yard_no=$this->uri->segment(4);
					$fromdate=$this->uri->segment(5);
					$block=$this->uri->segment(6);
					
					$data['fromdate']=$fromdate;
					$data['yard_no']=$yard_no;
					$data['block']=$block;
					//$data['shift']="Shift C";
					//$data['type']=$type;
					$this->load->view('cssAssets');
					$this->load->view('stayYardWiseContainerReportView',$data);
					$this->load->view('jsAssets');					
				}
			else 
				{
					$yard_no=$this->uri->segment(4);
					$fromdate=$this->uri->segment(5);
					$block=$this->uri->segment(6);
					
					$data['fromdate']=$fromdate;
					$data['yard_no']=$yard_no;
					$data['block']=$block;
					$data['shift']="N";
					//$data['type']=$type;
					$this->load->view('cssAssets');
					$this->load->view('shiftYardAndBlockWiseContainerReport',$data);
					$this->load->view('jsAssets');					
				}
		}
	
	
		/* Commented by Sumon
		function myRequstEmtyContainerReport(){
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			if($session_id!=$this->session->userdata('session_id'))
			{
				$this->logout();
			}
			else
			{
				$data['title']="PROPOSED EMPTY AND EMPTY  CONTAINER REPORT...";
				//echo $data['title'];
				$this->load->view('header2');
				$this->load->view('myRequestNotEmtyContForm',$data);
				$this->load->view('footer');
			}	
        }
		
		function myRequstforEmtyContainerReportView(){
		    //$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
		   //$this->load->model('ci_auth', 'bm', TRUE);
		   //$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
		   $type=$this->input->post('options1');
		   $fileType=$this->input->post('options');
		   //return;
		   //$data['voysNo']=$getVoyNo;
    	   if($type=="assign" && $fileType!="pdf" )
		   {  
				$fromdate=$this->input->post('fromdate');
				$yard_no=$this->input->post('yard_no'); 
				$data['fromdate']=$fromdate;
				$data['yard_no']=$yard_no;
				$data['type']=$type;
				$this->load->view('myReportEmtyContainerFoundListAssignment',$data);
		   } 
		   
		   else if($type=="assign" && $fileType=="pdf")
		   {  
	       
				$this->load->library('m_pdf');
				$mpdf->use_kwt = true;
				
				$mpdf->cacheTables = true;
				$mpdf->simpleTables=true;
				$mpdf->packTableData=true;
				$this->data['fromdate']=$this->input->post('fromdate');
				$this->data['yard_no']=$this->input->post('yard_no'); 

				$html=$this->load->view('myReportEmtyContainerFoundListPDF',$this->data, true); 
				$pdfFilePath ="EmtyContainerFoundListPDF-".time()."-download.pdf";

				   //actually, you can pass mPDF parameter on this load() function
				$pdf = $this->m_pdf->load();
					
				//$stylesheet = file_get_contents('resources/styles/test.css'); // external css
				$pdf->setFooter('Developed By : DataSoft|Page {PAGENO}|Date {DATE j-m-Y}');
				$pdf->WriteHTML($html,2);
				$pdf->Output($pdfFilePath, "I"); // For Show Pdf					
		   }
		   
		   elseif($type=="cont")
		   {
				$container=$this->input->post('container');
				$data['container']=$container;
				$data['type']=$type;
				$this->load->view('myReportEmtyOneContainerFound',$data);
		   }
		   elseif($type=="deli" && $fileType=="pdf" )
		   {
			   	$this->data['fromdate']=$this->input->post('fromdate');
				$this->data['todate']=$this->input->post('todate');
				$this->data['yard_no']=$this->input->post('yard_no'); 
				$this->data['type']=$type;
				
				$this->load->library('m_pdf');
				$mpdf->use_kwt = true;

				$mpdf->cacheTables = true;
				$mpdf->simpleTables=true;
				$mpdf->packTableData=true;
				$html=$this->load->view('myReportDeliverContainerFoundListPDF',$this->data, true); 
				$pdfFilePath ="EmtyContainerFoundListPDF-".time()."-download.pdf";

				   //actually, you can pass mPDF parameter on this load() function
				$pdf = $this->m_pdf->load();
					
				//$stylesheet = file_get_contents('resources/styles/test.css'); // external css
				$pdf->setFooter('Developed By : DataSoft|Page {PAGENO}|Date {DATE j-m-Y}');
				$pdf->WriteHTML($html,2);
				$pdf->Output($pdfFilePath, "I"); // For Show Pdf	
		   }
		   else
		   {
			
				$fromdate=$this->input->post('fromdate');
				$todate=$this->input->post('todate');
				$yard_no=$this->input->post('yard_no'); 
				$data['yard_no']=$yard_no;
				$data['fromdate']=$fromdate;
				$data['todate']=$todate;
				$data['type']=$type;
				$this->load->view('myReportEmtyContainerFoundList',$data);
		   }
		   
				$this->load->view('myclosebar');
        }
  
  */
		function blockWiseRotation()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="IMPORT DISCHARGE REPORT";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('blockWiseRotation',$data);
				$this->load->view('jsAssets');
			}
		}

		
       	function blockWiseRotationView()
		{
			$session_id = $this->session->userdata('value');
			$login_id = $this->session->userdata('login_id');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$rotNo=$this->input->post('rotNo');
				$block=$this->input->post('block');
				$search_format = $this->input->post('options');
				// N4 Total Container By Rotation..
				$strN4="SELECT count(inv_unit.id) as rtnValue  
				FROM inv_unit 
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
				INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
				WHERE vsl_vessel_visit_details.ib_vyg='$rotNo'";
				$getTotal = $this->bm->dataReturn($strN4);		
				
				
				//ctmsmis discharge total...
				
				//$str1="select count(cont_id) as rtnValue from ctmsmis.mis_exp_unit where rotation='$rotNo' and snx_type='2' order by last_update asc";
				$getVvdQry="select vvd_gkey as rtnValue from vsl_vessel_visit_details where ib_vyg='$rotNo'";
				$vvdGkey = $this->bm->dataReturn($getVvdQry);	
				//$vvdGkey=$row->vvd_gkey;
				
				$str1="SELECT count(ctmsmis.mis_inv_unit.id) as rtnValue					
					FROM  ctmsmis.mis_inv_unit 
					WHERE mis_inv_unit.vvd_gkey='$vvdGkey' AND category='IMPRT' AND fcy_time_in IS NOT NULL
					order by id asc";
				$dischargeTotal = $this->bm->dataReturnDb2($str1);
				
                if($block=="" or $block==null)
				{
				    $str= "select cont_id, cont_status, cont_size, cont_height, last_update, current_position, user_id
                          from ctmsmis.mis_exp_unit where rotation='$rotNo' and snx_type='2' order by current_position,last_update asc";
				    $data['flag']=0;  
				    $this->data['flag']=0;  
				}
				
				else
				{
					$str= "select id,size,height,freight_kind,mlo,mlo_name,current_position,pod,seal_no,mis_exp_unit.goods_and_ctr_wt_kg as goods_and_ctr_wt_kg,
							truck_no,craine_id,ctmsmis.mis_exp_unit.user_id,mis_exp_unit.last_update 
							from ctmsmis.mis_exp_unit 
							inner join ctmsmis.mis_inv_unit on mis_inv_unit.gkey=mis_exp_unit.gkey 
							where ctmsmis.mis_exp_unit.rotation='$rotNo' and ctmsmis.mis_exp_unit.snx_type='2' and ctmsmis.mis_exp_unit.current_position='$block' 
							order by mlo,ctmsmis.mis_exp_unit.last_update asc";
					//echo $str;
					$data['flag']=1;	 					
					$this->data['flag']=1;	 					
				}
				
				$getList = $this->bm->dataReturnDb2($str);
				
				if($search_format=="xl" or $search_format=="html")
				{
					$data['dischargeTotal']=$dischargeTotal;
					$data['getTotal']=$getTotal;
					$data['rotNo']=$rotNo;
					$data['block']=$block;				
					$data['getList']=$getList;
					$data['rotation']=$rotNo;
					$this->load->view('blockWiseRotationView',$data);
				}
				else
				{
						//load mPDF library
					$this->load->library('m_pdf');
					$pdf->use_kwt = true;
					$this->data['dischargeTotal']=$dischargeTotal;
					$this->data['getTotal']=$getTotal;
					$this->data['rotNo']=$rotNo;
					$this->data['block']=$block;				
					$this->data['getList']=$getList;
					$this->data['rotation']=$rotNo;
					//$this->data['title']="Container Operation Report";
					$html=$this->load->view('blockWiseRotationView',$this->data, true);
					//this the the PDF filename that user will get to download
					$pdfFilePath ="ImportDischargeReport-".time()."-download.pdf";
					$pdf = $this->m_pdf->load();
					//$pdf->SetWatermarkText('CPA CTMS');
					$pdf->showWatermarkText = true;	
					$stylesheet = file_get_contents('assets/stylesheets/test.css'); // external css
					$pdf->useSubstitutions = true; // optional - just as an example
					//$pdf->SetHeader($url . "\n\n" . 'Date {DATE j-m-Y}');  // optional - just as an example
					//echo "SheetAdd : ".$stylesheet;
					//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
					//$footerHtml='<pagefooter name="MyFooter1" content-left="{DATE j-m-Y}" content-center="{PAGENO}/{nbpg}" content-right="My document" footer-style="font-family: serif; font-size: 8pt; font-weight: bold; font-style: italic; color: #000000;" />';
					$pdf->WriteHTML($stylesheet,1);
					$pdf->WriteHTML($html,2);
					$pdf->Output($pdfFilePath, "I"); // For Show Pdf
				}
			}


			/*$session_id = $this->session->userdata('value');
			$login_id = $this->session->userdata('login_id');
			if($session_id!=$this->session->userdata('session_id'))
			{
				$this->logout();
			}
			else
			{
				$rotNo=$this->input->post('rotNo');
				$block=$this->input->post('block');
				
				// N4 Total Container By Rotation..
				$strN4="SELECT count(inv_unit.id) as rtnValue  
						FROM sparcsn4.inv_unit INNER JOIN sparcsn4.inv_unit_fcy_visit ON sparcsn4.inv_unit_fcy_visit.unit_gkey=sparcsn4.inv_unit.gkey
						INNER JOIN sparcsn4.argo_carrier_visit ON sparcsn4.argo_carrier_visit.gkey=sparcsn4.inv_unit_fcy_visit.actual_ib_cv
						INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessel_visit_details.vvd_gkey=sparcsn4.argo_carrier_visit.cvcvd_gkey
						WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg='$rotNo'";
				$getTotal = $this->bm->dataReturn($strN4);		
				
				
				//ctmsmis discharge total...
				
				$str1="select count(cont_id) as rtnValue from ctmsmis.mis_exp_unit where rotation='$rotNo' and snx_type='2' order by last_update asc";
				$dischargeTotal = $this->bm->dataReturn($str1);
				
                if($block=="" or $block==null)
				{
				    $str= "select cont_id, cont_status, cont_size, cont_height, last_update, current_position, user_id
                          from ctmsmis.mis_exp_unit where rotation='$rotNo' and snx_type='2' order by current_position,last_update asc";
				    $data['flag']=0;  
				}
				
				else
				{
					$str= "select cont_id, cont_status, cont_size, cont_height, last_update, current_position, user_id,mlo,mlo_name
                           from ctmsmis.mis_exp_unit where rotation='$rotNo' and snx_type='2' and current_position='$block' order by last_update asc";
					$data['flag']=1;	 					
				}
				
				$getList = $this->bm->dataSelect($str);
				
				$data['dischargeTotal']=$dischargeTotal;
				$data['getTotal']=$getTotal;
				$data['rotNo']=$rotNo;
				$data['block']=$block;				
				$data['getList']=$getList;
				$data['rotation']=$rotNo;
				$this->load->view('blockWiseRotationView',$data);
			}
		*/

		
		}	
	
			
    	function pendingEmptyContinerReport()
		{
			$fromdate=$this->input->post('fromdate');
			$yard_no=$this->input->post('yard_no'); 
			$data['fromdate']=$fromdate;
			$data['yard_no']="ALL";
			//$data['type']=$type;
			$this->load->view('pendingEmptyContinerReportView',$data);
			
		}
		
		
		function monthlyYardWiseContainerHandling()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="Yard Wise Total Container Handling..";
				//$this->load->view('header2');
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('monthlyYardWiseContainerHandling',$data);
				$this->load->view('jsAssets');
				//$this->load->view('footer');
			}
		}
		
		
		
		function monthlyYardWiseContainerHandlingView()
		{
			$session_id = $this->session->userdata('value');
			$login_id = $this->session->userdata('login_id');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$fromDate=$this->input->post('fromDate');
				$toDate=$this->input->post('toDate');

				$str= "SELECT berth,SUM(imp20) AS imp20,SUM(imp40) AS imp40,(SUM(imp20)+SUM(imp40)*2) AS impteus,SUM(exp20) AS exp20,SUM(exp40) AS exp40,(SUM(exp20)+SUM(exp40)*2) AS expteus
				FROM (
				SELECT inv_unit.id,vsl_vessel_visit_details.ib_vyg,SUBSTR(argo_quay.id,1,3) AS berth,
				(CASE WHEN substr(ref_equip_type.nominal_length,-2)=20 THEN 1 ELSE 0 END)  AS imp20,
				(CASE WHEN substr(ref_equip_type.nominal_length,-2)!=20 THEN 1 ELSE 0 END)  AS imp40,
				0 AS exp20,0 AS exp40
				FROM inv_unit
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
				INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
				INNER JOIN vsl_vessel_berthings ON vsl_vessel_berthings.vvd_gkey=vsl_vessel_visit_details.vvd_gkey
				INNER JOIN argo_quay ON argo_quay.gkey=vsl_vessel_berthings.quay
				INNER JOIN ref_equipment ON ref_equipment.gkey=inv_unit.eq_gkey
				INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey
				WHERE cast(argo_carrier_visit.ata as date) BETWEEN to_date('$fromDate','yyyy-mm-dd') AND to_date('$toDate','yyyy-mm-dd')
				
				
				UNION ALL
				
				SELECT inv_unit.id,vsl_vessel_visit_details.ib_vyg,SUBSTR(argo_quay.id,1,3) AS berth,
				0 AS imp20, 0 AS imp40,
				(CASE WHEN substr(ref_equip_type.nominal_length,-2)=20 THEN 1 ELSE 0 END)  AS exp20,
				(CASE WHEN substr(ref_equip_type.nominal_length,-2)!=20 THEN 1 ELSE 0 END)  AS exp40
				FROM inv_unit
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ob_cv
				INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
				INNER JOIN vsl_vessel_berthings ON vsl_vessel_berthings.vvd_gkey=vsl_vessel_visit_details.vvd_gkey
				INNER JOIN argo_quay ON argo_quay.gkey=vsl_vessel_berthings.quay
				INNER JOIN ref_equipment ON ref_equipment.gkey=inv_unit.eq_gkey
				INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey
				WHERE (cast(argo_carrier_visit.ata as Date) BETWEEN to_date('$fromDate','yyyy-mm-dd') AND to_date('$toDate','yyyy-mm-dd') )
				AND inv_unit_fcy_visit.transit_state !='S20_INBOUND'
				
				)  imptbl GROUP BY berth";

				$getDetails = $this->bm->dataSelect($str);
				$data['fromDate']=$fromDate;
				$data['toDate']=$toDate;
				$data['login']=$login_id;				
				$data['getDetails']=$getDetails;
				$this->load->view('monthlyYardWiseContainerHandlingView',$data);
			}

		}
	
  
	/*Commented by Sumon Roy	//Yard wise assignment / delivery empty details 
		 function yardWiseEmtyContainerReport()
		{
		    $session_id = $this->session->userdata('value');
			if($session_id!=$this->session->userdata('session_id'))
			{
				$this->logout();
			}
			else
			{
				$data['title']="YARD WISE PROPOSED EMPTY AND EMPTY  CONTAINER REPORT...";
				//echo $data['title'];
				$this->load->view('header2');
				$this->load->view('yardWiseEmtyContainerReportForm',$data);
				$this->load->view('footer');
			}	
        }
		
			
		
	 function yardWiseEmtyContainerReportView()
		{
		   //$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
		   //$this->load->model('ci_auth', 'bm', TRUE);
		   //$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
		   $type=$this->input->post('options1');
		   //return;
		   //$data['voysNo']=$getVoyNo;
		   if($type=="assign")
		   {  
			$fromdate=$this->input->post('fromdate');
			$yard_no=$this->input->post('yard_no'); 
			$block=$this->input->post('block'); 
			
			$data['fromdate']=$fromdate;
			$data['yard_no']=$yard_no;
			$data['block']=$block;
			
			$data['type']=$type;
			$this->load->view('yardWiseEmtyContainerReportView',$data);
		   }
		   elseif($type=="cont")
		   {
			$container=$this->input->post('container');
			$data['container']=$container;
			$data['type']=$type;
			$this->load->view('myReportEmtyOneContainerFound',$data);
		   }
		   else
		   {
			$fromdate=$this->input->post('fromdate');
			$todate=$this->input->post('todate');
			$yard_no=$this->input->post('yard_no'); 
			$block=$this->input->post('block'); 
			
			$data['yard_no']=$yard_no;
			$data['block']=$block;			
			$data['fromdate']=$fromdate;
			$data['todate']=$todate;
			$data['type']=$type;
			$this->load->view('yardWiseEmtyContainerFoundListView',$data);
		   }
		   
		   $this->load->view('myclosebar');
  
		}
		
  */
  
    	function stripping()
		{
			$fromdate=$this->input->post('fromdate');
			$data['fromdate']=$fromdate;
			$this->load->view('myStripped',$data);
			
		}

		function strippingPreparation()
		{
			$fromdate=$this->input->post('fromdate');
			//echo $fromdate;
			//return;
			$data['fromdate']=$fromdate;
			
			$this->load->view('myStrippedPreparation',$data);
		}
		
  //start
  /* Commented by Sumon Roy
  function myRequstAssignmentEmtyContainerReport(){
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			if($session_id!=$this->session->userdata('session_id'))
			{
				$this->logout();
			}
			else
			{
				$data['title']="ASSAIGNMENT/DELIVERY EMPTY SUMMARY REPORT...";
				//echo $data['title'];
				$this->load->view('header2');
				$this->load->view('myAssignmentAndNotEmtyContForm',$data);
				$this->load->view('footer');
			}	
        }
		
		function myReportAssignmentAndEmtyContainerReportView(){
		   $type=$this->input->post('options1');
			$fromdate=$this->input->post('fromdate');
			$yard=$this->input->post('yard'); 
			$data['fromdate']=$fromdate;
			$data['yard']=$yard;
			$data['type']=$type;
			$this->load->view('myReportAssingmentAndEmtyContainerReport',$data);
		   $this->load->view('myclosebar');
  
        }
  */

		//end
		//End Export Container Loading report for Export loading apps
		//cont history
		function myContainerHistoryReportForm()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="CONTAINER HISTORY REPORT...";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myContainerHistoryReportViewForm',$data);
				$this->load->view('jsAssets');
			}	
		}

		function myContainerHistoryReport()
		{
			$container_no=$this->input->post('container_no');
			$data['container_no']=$container_no;

			if($_POST['options'] == 'xl'){
				$this->load->view('myContainerHistoryReportList',$data);
				$this->load->view('myclosebar');
			}else if($_POST['options'] == 'html'){
				$this->load->view('cssAssets');
				$this->load->view('myContainerHistoryReportList',$data);
				$this->load->view('jsAssets');
			}
		}
		//cont history
		
		
		//Igm Report GM HTML
		function myIGMReport()
		{
			//print_r($this->session->all_userdata());
			
			$session_id = $this->session->userdata('value');
			if($session_id!=$this->session->userdata('session_id'))
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="IGM REPORTS...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportIGMHTML',$data);
				$this->load->view('jsAssets');
			}	
        }
		
		//Igm Report GM HTML
		function excelFormatForEdiConverter()
		{
			//print_r($this->session->all_userdata());
			
			$session_id = $this->session->userdata('value');
			if($session_id!=$this->session->userdata('session_id'))
			{
				$this->logout();
				
			}
			else
			{
				//$data['title']="IGM REPORTS...";
				//$this->load->view('header2');
				$this->load->view('excelFormatForEdiConverter',$data);
				//$this->load->view('myviewEDIDetailsList2',$data);
				//$this->load->view('footer');
			}	
        }
		
		
		
		//Igm Report GM view
		function myIGMReportView()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$this->load->view('myReportIGMtList');
				$this->load->view('myclosebar');
			}
		}
		
		//Igm Report BB HTML
		function myIGMBBReport(){
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();

			}
			else
			{
				$data['title']="IGM BREAK BULKS REPORTS...";

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportIGMBBHTML',$data);
				$this->load->view('jsAssets');
			}		
		}
		
		//Igm Report BB view
		function myIGMBBReportView()
		{
		
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$this->load->view('myReportIGMtList');
				$this->load->view('myclosebar');
			}
		}
		
		//Supplementary Igm Report  HTML
		function myIGMFFReport()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				//$this->load->view('header');
				//$this->load->view('welcomeview_1', $data);
				//$this->load->view('footer');
			}
			else
			{
				$data['title']="IGM SUPLEMENTARY REPORTS...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportIgmSupplementaryHTML',$data);
				$this->load->view('jsAssets');
			}	
		}
		
		//Supplementary Igm Report  view
		function myIGMFFReportView(){
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$this->load->view('myReportIGMSuplementarytList');
				$this->load->view('myclosebar');
			}
		}
		
		
		//COntainer Summery View HTML
		function ImportContainerSummery(){
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				//$this->load->view('header');
				//$this->load->view('welcomeview_1', $data);
				//$this->load->view('footer');
			}
			else
			{
				$data['title']="SUMMARY OF IMPORT CONTAINER...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportFeederDischargeHTML22',$data);
				$this->load->view('jsAssets');
			}
		}

		//Container Summery Report
		function ImportContainerSummeryView()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				if($this->input->post())
					{
						$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
					}
					else if($this->uri->segment(3))
					{
						$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(3));
					}
					$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
				//$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$this->load->view('cssAssets');
				$this->load->view('myReportDischargeSummeryList22',$data);
				$this->load->view('myclosebar');
				$this->load->view('jsAssets');
			}
		}

		// Mlo Discharge Summery List HMLT
		function mloDischargeSummery()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				//$this->load->view('header');
				//$this->load->view('welcomeview_1', $data);
				//$this->load->view('footer');
			}
			else
			{
				$data['title']="MLO DISCHARGE SUMMARY LIST...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportMloDischargeHTML',$data);
				$this->load->view('jsAssets');
			}
		}

		// Mlo Discharge Summery List report
		function mloDischargeSummeryView()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				if($_POST['options'] == 'html'){
					$this->load->view('cssAssets');
					$this->load->view('myReportMloDischargeList');
					$this->load->view('myclosebar');
					$this->load->view('jsAssets');
				}else if($_POST['options'] == 'xl'){
					$this->load->view('myReportMloDischargeList');
					$this->load->view('myclosebar');
				}
			}
        }	
		//Discharge Summery List HMLT

		function myDischargeList()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				//$this->load->view('header');
				//$this->load->view('welcomeview_1', $data);
				//$this->load->view('footer');
			}
			else
			{
				$data['title']="DISCHARGE LIST...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportDischargeHTML',$data);
				$this->load->view('jsAssets');
			}
		}
		
		// Mlo Discharge Summery List report
		function myDischargeListView()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$this->load->view('myReportDischargeList');
				$this->load->view('myclosebar');
			}
        }	
		
		// FCL Manifest HMLT
		function myFCLManifest()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				//$this->load->view('header');
				//$this->load->view('welcomeview_1', $data);
				//$this->load->view('footer');
			}
			else
			{
				$data['title']="FCL MANIFEST...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportFCLMenifestHTML',$data);
				$this->load->view('jsAssets');
			}
		}
		
		// FCL Manifet report
		function myFCLManifestView()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$this->load->view('myReportFCLMenifestList');
				$this->load->view('myclosebar');
			}
        }	
		
		// LCL Manifest HMLT
		function myLCLManifest()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			
			}
			else
			{
				$data['title']="LCL MANIFEST...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportLCLMenifestHTML',$data);
				$this->load->view('jsAssets');
			}
		}
		
		// LCL Manifet report
		function myLCLManifestView()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$this->load->view('myReportLCLMenifestList');
				$this->load->view('myclosebar');
			}
        }	
		
		// DG Manifest HTML
		function myDGManifest()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				//$this->load->view('header');
				//$this->load->view('welcomeview_1', $data);
				//$this->load->view('footer');
			}
			else
			{
				$data['title']="DG MANIFEST...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportDGMenifestHTML',$data);
				$this->load->view('jsAssets');
			}
		}
		
		// DG Manifet report
		function myDGManifestView()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$txt_submitted_by_who_org="";
				$txt_controlpanel="";
				$ddl_imp_rot_no="";
				
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$options=$this->input->post('options');
				$data['options']=$options;
				$data['rotation']=$ddl_imp_rot_no;
				$this->load->view('myReportDGMenifestList', $data);
				$this->load->view('myclosebar');
			}
        }	
		
		// ICD Manifest HTML
		function myICDManifest()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				//$this->load->view('header');
				//$this->load->view('welcomeview_1', $data);
				//$this->load->view('footer');
			}
			else
			{
				$data['title']="ICD MANIFEST...";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportICDMenifestHTML',$data);
				$this->load->view('jsAssets');
			}
		}
		
		// ICD Manifet report
		function myICDManifestView()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$this->load->view('myReportICDMenifestList');
				$this->load->view('myclosebar');
			}
        }	
		
		// Bearth Operator report HMLT
		function myBirthIGMList()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				//$this->load->view('header');
				//$this->load->view('welcomeview_1', $data);
				//$this->load->view('footer');
			}
			else
			{
				$data['title']="BERTH OPERATOR REPORT...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myBirthIGMListHTML',$data);
				$this->load->view('jsAssets');
			}
		}

		// Bearth Operator Report List 
		function myBirthIGMListView()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$mlocode=$this->input->post('mlocode');
				$CStatus=$this->input->post('CStatus');
				$options=$this->input->post('options');
				$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
				$data['mlocode']=$mlocode;
				$data['CStatus']=$CStatus;
				$data['options']=$options;
				$this->load->view('myReportBerthOperator', $data);
				$this->load->view('myclosebar');
			}
        }
		
		
		function mySearchContainerLocationForm()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{  
				$data['title']="Container Location Search Form";

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('mySearchContainerLocationForm',$data);
				//$this->load->view('ShippingAgentPanel/updateShedFrm',$data);
				$this->load->view('jsAssets');
			}	
        }
		
		// Bearth Operator Report List

			function welcomePageQuery()
			{
					$qry="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name,vsl_vessel_visit_details.ib_vyg,vsl_vessel_visit_details.ob_vyg,
				substr(argo_carrier_visit.phase,1,2) AS phase_num,SUBSTR(argo_carrier_visit.phase,3) AS phase_str,argo_visit_details.eta,
				argo_visit_details.etd,argo_carrier_visit.ata,
				argo_carrier_visit.atd,ref_bizunit_scoped.id AS agent,
				(SELECT argo_quay.id
				FROM argo_quay
				INNER JOIN vsl_vessel_berthings brt ON brt.quay=argo_quay.gkey
				WHERE brt.vvd_gkey=vsl_vessel_visit_details.vvd_gkey ORDER BY brt.ata DESC FETCH FIRST 1 ROWS ONLY ) AS berth,
				NVL(vsl_vessel_visit_details.flex_string02,vsl_vessel_visit_details.flex_string03) AS berthop
				FROM argo_carrier_visit
				INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
				INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
				INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
				INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessel_visit_details.bizu_gkey			
				WHERE argo_carrier_visit.phase IN ('20INBOUND','30ARRIVED','40WORKING','50COMPLETE','60DEPARTED')
				ORDER BY argo_carrier_visit.phase";
						
				return $qry;
			}
			
			function mySearchContainerLocation()
			{	

				$login_id = $this->session->userdata('login_id');
				
				$offdockCode = $this->Offdock($login_id);
				$cont_id = strtoupper($this->input->post('containerLocation'));
				$captcha = $this->input->post('captcha');
				$captcha_rand = $this->input->post('captcha_rand');
				if($captcha!=$captcha_rand)
				{
					$query=$this->welcomePageQuery();
					$rtnVesselList = $this->bm->dataSelect($query);
					$data['rtnVesselList']=$rtnVesselList;
					$data['captchaMsg']="Wrong Captcha. Please, try again.";

					$body = "";
					//$data['body']=$body;

					$this->load->view('cssVesselList');
					$this->load->view('jsVesselList');
					$this->load->view('FrontEnd/header');
					$this->load->view('FrontEnd/slider');
					$this->load->view('FrontEnd/index',$data);
					$this->load->view('FrontEnd/footer');
				}
				else
				{	

				$data['offdockCode']=$offdockCode;
				$data['cont_id']=$cont_id;
			
				$prevPage = $_SERVER['HTTP_REFERER'];
							
				$pageArr = explode("/",$prevPage);
				
				$prevURL = $pageArr[2]."/".$pageArr[3];
				

				$query = "SELECT COUNT(*) AS rtnValue FROM inv_unit WHERE id='$cont_id'";
				$result = $this->bm->datareturn($query);
				
				
				if($result>0)
				{
					
					
					if($prevURL=="cpatos.gov.bd/pcs" || $prevURL=="122.152.54.185/PcsOracle")
					{
						if($login_id == "cpaops")
						{
							$this->load->view('FrontEnd/mySearchContainerLocationHTMl_cpaops',$data);
							
						}
						else
						{
							$this->load->view('FrontEnd/mySearchContainerLocationHTMl',$data);
						}
					}
					else
					{
						echo "Access denied";
					}
				}
				else
				{
					if($prevURL=="cpatos.gov.bd/pcs" || $prevURL=="122.152.54.185/PcsOracle")
					{
						if($login_id == "cpaops")
						{
							$this->load->view('FrontEnd/mySearchContainerLocationHTMl_cpaops_old',$data);
						}
						else
						{
							$this->load->view('FrontEnd/mySearchContainerLocationHTMl_old',$data);
						}
					}
					else
					{
						echo "Access denied";
					}
				}
								
			}
		}		
	
		// Auction Handover  -- Start
		
		
		
		//2/26/2023
			
		function pendingRLGenerationList()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="Pending Auction RL Generation List";
				$data['msg'] = "";
				
				 $query="SELECT * FROM(
					SELECT inv_unit.gkey,inv_unit.id,inv_unit.freight_kind,inv_unit.goods_and_ctr_wt_kg AS weight,
					ref_bizunit_scoped.id AS agent,
					EXTRACT(DAY FROM CURRENT_DATE - inv_unit_fcy_visit.time_in)AS lying_days,
					vsl_vessel_visit_details.ib_vyg AS rot_no,vsl_vessels.name AS v_name,
					SUBSTR(ref_equip_type.nominal_length,-2) AS siz,
					SUBSTR(ref_equip_type.nominal_height,-2)/10 AS height,
					ref_equip_type.id AS TYPE,
					to_char(argo_carrier_visit.ata,'YYYY-MM-DD')AS ata,
					(SELECT to_char(time_discharge_complete,'YYYY-MM-DD')
					FROM vsl_vessel_visit_details
					INNER JOIN argo_visit_details ON argo_visit_details.gkey = vsl_vessel_visit_details.vvd_gkey
					WHERE ib_vyg=inv_unit_fcy_visit.flex_string10 fetch first 1 rows only)AS cl_dt,
					inv_unit_fcy_visit.last_pos_slot,
					inv_unit_fcy_visit.flex_string04 AS rl_no,inv_unit_fcy_visit.flex_string05 AS rl_date,
					inv_unit_fcy_visit.flex_string07 AS obpc_number,inv_unit_fcy_visit.flex_string08 AS obpc_date,
					inv_unit_fcy_visit.time_in, inv_unit_fcy_visit.time_out,'' AS remarks
					
					FROM inv_unit
					INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
					INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
					INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
					INNER JOIN argo_visit_details ON argo_visit_details.gkey = vsl_vessel_visit_details.vvd_gkey
					INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
					INNER JOIN ref_equipment ON ref_equipment.gkey=inv_unit.eq_gkey 
					INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey 
					INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessel_visit_details.bizu_gkey
					WHERE transit_state='S40_YARD' AND inv_unit.category='IMPRT' 
		            AND cast(argo_visit_details.time_discharge_complete as date) BETWEEN  cast(CURRENT_DATE as date)-40 AND cast(CURRENT_DATE as date)
                    ORDER BY argo_visit_details.time_discharge_complete DESC
					) tbl WHERE lying_days>=30
				";
				
				$result = $this->bm->dataSelect($query);
				
				$resultList;
				$all_ib_vyg;
				$j=0;
				for($i=0;$i<count($result);$i++){
								
					$resultList[$j]['ROT_NO']=$result[$i]['ROT_NO'];
					$resultList[$j]['V_NAME']=$result[$i]['V_NAME'];
					$resultList[$j]['ATA']=$result[$i]['ATA'];
					$resultList[$j]['CL_DT']=$result[$i]['CL_DT'];

					if($resultList[$j]['ROT_NO']!='' and $resultList[$j]['ROT_NO']!=null ){
						
						$all_ib_vyg[$j]=$resultList[$j]['ROT_NO'];
					}
					$j++;

				}
				
				
				

		
				$unique_Ib_Vyg=array_unique($all_ib_vyg);
				
				$mainResultList;
				$k=0;
				foreach($unique_Ib_Vyg as $key=> $singleIbVyg){
					  
					 $status=0;
                     for($r=0;$r<count($resultList);$r++){
                        $tempIbVyg="";
						$tempIbVyg=	$resultList[$r]['ROT_NO'];
					
						if($singleIbVyg==$tempIbVyg){
						
							if($status==0){

								$mainResultList[$k]['ROT_NO']=$resultList[$r]['ROT_NO'];
								$mainResultList[$k]['V_NAME']=$resultList[$r]['V_NAME'];
								$mainResultList[$k]['ATA']=$resultList[$r]['ATA'];
								$mainResultList[$k]['CL_DT']=$resultList[$r]['CL_DT'];
								$status=1;
								$k++;

							}
                          
						}
						
					 }
									
					 
				}

			
				$data['result']=$mainResultList;
				
				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('PendingRLGenerationList',$data);
				$this->load->view('jsAssetsList');
			}
		}
				
		

		function AuctionHandOverReportForm()
		{
			//echo "Hello";
			//return;
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{ 
				$data['title']="Auction Handover";
				$data['msg'] = "";
				$data['flag'] = 0;
				$data['save_flag'] = 0;
				$data['result'] = null;

				//for print
				$this->data['title']="Auction Handover";
				$this->data['msg'] = "";
				$this->data['flag'] = 0;
				$this->data['save_flag'] = 0;
				$this->data['result'] = null;
				//echo "act:";
				//print_r($_POST);
				$action = $this->input->post('action');
				//$save_action = $this->input->post('action');
				//return;
				$dt = new DateTime('now', new DateTimezone('Asia/Dhaka'));
				$year_format = $dt->format('Y');
				
				$containerArray=array();
				
				if($action == "save"){
					//If save button is clicked...
					$data['save_flag'] = 1;
					$unit=$this->input->post('unit');
					$rotation_no=$this->input->post('rotation');
					$cntResult=$this->input->post('cntResult');
					$arrival_date=$this->input->post('arrival_date');
					$cl_date=$this->input->post('cl_date');
					$vessel_name=$this->input->post('vessel_name');
					
					$year = substr($rotation_no,2,2);
					
					$rl_beginning = $unit.$year;
					$rl_no = "";
					
					$totRl=0;
					$totRlwithBL=0;
					
					$login_id = $this->session->userdata('login_id');
					$ipaddr = $_SERVER['REMOTE_ADDR'];					
									
					for($i=1;$i<=$cntResult;$i++)
					{
						$cntContainers = $this->input->post("cntContainers".$i);
						$bl_no = $this->input->post("blNo".$i);
						$house_bl = $this->input->post("house_bl".$i);
						$pack_Marks_Number="";
						$description_of_Goods="";
						$notify_name="";
						$Pack_Number="";
						 $strH="SELECT SUBSTRING(igm_supplimentary_detail.Pack_Marks_Number, 1, 50) AS Pack_Marks_Number, SUBSTRING(igm_supplimentary_detail.Description_of_Goods, 1, 50) AS Description_of_Goods,  igm_details.BL_No AS master_bl, igm_supplimentary_detail.BL_No AS house_bl,
							igm_sup_detail_container.cont_status,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_height,igm_supplimentary_detail.Notify_name,
							igm_supplimentary_detail.Notify_address, igm_sup_detail_container.cont_imo,igm_sup_detail_container.cont_un, igm_supplimentary_detail.Pack_Number, igm_supplimentary_detail.Pack_Description, igm_sup_detail_container.cont_gross_weight
							FROM cchaportdb.igm_supplimentary_detail 
							INNER JOIN cchaportdb.igm_sup_detail_container ON cchaportdb.igm_sup_detail_container.igm_sup_detail_id=cchaportdb.igm_supplimentary_detail.id
							LEFT JOIN cchaportdb.igm_details ON cchaportdb.igm_supplimentary_detail.igm_detail_id=cchaportdb.igm_details.id 
							WHERE igm_supplimentary_detail.Import_Rotation_No='$rotation_no' AND igm_supplimentary_detail.BL_No='$house_bl' limit 1";
						
						$resultHbl = $this->bm->dataSelectDb1($strH);
						if(count($resultHbl)>0)
						{
							for($x=0; $x<count($resultHbl); $x++)
							{
								$pack_Marks_Number=$resultHbl[$x]['Pack_Marks_Number'];	
								 $description_of_Goods=$resultHbl[$x]['Description_of_Goods'];	
								$notify_name=$resultHbl[$x]['Notify_name'];
								$Pack_Number=$resultHbl[$x]['Pack_Number'];
							}							
						}
						else
						{
							 $strM=" SELECT SUBSTRING(igm_details.Pack_Marks_Number, 1, 50) AS Pack_Marks_Number, SUBSTRING(igm_details.Description_of_Goods, 1, 50) AS Description_of_Goods, igm_details.BL_No AS master_bl, igm_supplimentary_detail.BL_No AS house_bl,
							igm_detail_container.cont_status,igm_detail_container.cont_size,igm_detail_container.cont_height,igm_details.Notify_name, igm_details.Notify_address, 
							igm_detail_container.cont_imo,igm_detail_container.cont_un, igm_details.Pack_Number, igm_details.Pack_Description,igm_detail_container.cont_gross_weight  
							FROM cchaportdb.igm_details 
							INNER JOIN cchaportdb.igm_detail_container ON cchaportdb.igm_detail_container.igm_detail_id=cchaportdb.igm_details.id 
							LEFT JOIN cchaportdb.igm_supplimentary_detail ON cchaportdb.igm_details.id=cchaportdb.igm_supplimentary_detail.igm_sup_detail_id
							WHERE igm_details.Import_Rotation_No='$rotation_no' AND  igm_details.BL_No='$bl_no' limit 1";
							$resultMbl = $this->bm->dataSelectDb1($strM);
							for($x=0; $x<count($resultMbl); $x++)
							{
								$pack_Marks_Number=$resultMbl[$x]['Pack_Marks_Number'];	
								$description_of_Goods=$resultMbl[$x]['Description_of_Goods'];	
								$notify_name=$resultMbl[$x]['Notify_name'];
								$Pack_Number=$resultMbl[$x]['Pack_Number'];
							}	
						}
						
						//$pack_Marks_Number = $this->input->post("pack_Marks_Number".$i);
						//$description_of_Goods = $this->input->post("description_of_Goods".$i);
						//$notify_name = $this->input->post("notify_name".$i);
						//$Pack_Number = $this->input->post("Pack_Number".$i);
						$agent = $this->input->post("agent".$i);
						$remarks = $this->input->post("remarks".$i);
						for($c=0;$c<$cntContainers;$c++){
						$inv_unit_gkey = $this->input->post("inv_unit_gkey".$i.$c);
							
						 $strN4="SELECT inv_unit.gkey,inv_unit.id,inv_unit_fcy_visit.last_pos_slot,
							inv_unit_fcy_visit.flex_string07 AS obpc_number,inv_unit_fcy_visit.flex_string08 AS obpc_date,
							inv_unit.FREIGHT_KIND,
							inv_unit.goods_and_ctr_wt_kg AS weight,ref_equip_type.id AS TYPE
							FROM inv_unit
							INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
							INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
							INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
							INNER JOIN ref_equipment ON ref_equipment.gkey=inv_unit.eq_gkey 
							INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey 
							WHERE inv_unit.gkey='$inv_unit_gkey' AND vsl_vessel_visit_details.ib_vyg='$rotation_no'";
					
							$rsltN4 = $this->bm->dataSelect($strN4);
							
							$last_pos_slot="";
							$obpc_number="";
							$obpc_date="";
							$weight="";
							$type="";
							$cont_status="";
							for($x=0; $x<count($rsltN4); $x++)
							{
								$last_pos_slot=$rsltN4[$x]['LAST_POS_SLOT'];	
								$obpc_number=$rsltN4[$x]['OBPC_NUMBER'];	
								$obpc_date=$rsltN4[$x]['OBPC_DATE'];
								$weight=$rsltN4[$x]['WEIGHT'];
								$type=$rsltN4[$x]['TYPE'];
								$cont_status=$rsltN4[$x]['FREIGHT_KIND'];
							}							
						
							$cont = $this->input->post("cont".$i.$c);
							$size = $this->input->post("size".$i.$c);
							$height = $this->input->post("height".$i.$c);
							//$cont_status = $this->input->post("cont_status".$i.$c);
							//$last_pos_slot = $this->input->post("last_pos_slot".$i.$c);
							//$obpc_number = $this->input->post("obpc_number".$i.$c);
							//$obpc_date = $this->input->post("obpc_date".$i.$c);
							//$weight = $this->input->post("weight".$i.$c);
							//$type = $this->input->post("type".$i.$c);
							$removal_status = $this->input->post("removal_status".$i.$c);
							if($removal_status=="0")
							{
								$strCntRl = "SELECT COUNT(*) AS rtnValue FROM auction_handover WHERE rl_no LIKE '%$rl_beginning%'";						
								$totRl=$this->bm->dataReturnDb1($strCntRl);
								if($totRl==0)
								{
									// No RL for the combination of 'year of rotation' and 'unit', so this will be the first RL for this unit-year combination...
									$rl_no = $rl_beginning."000001";
								}
								else
								{
									$strCntRlwithBL = "SELECT COUNT(*) AS rtnValue FROM auction_handover WHERE rl_no LIKE '%$rl_beginning%' AND bl_no='$bl_no' AND house_bl='$house_bl'";
									$totRlwithBL=$this->bm->dataReturnDb1($strCntRlwithBL);	
									if($totRlwithBL==0)
									{
										//No RL for the given BL...
										$str_new_rl = "SELECT MAX(RIGHT(rl_no,6))+1 AS rtnValue FROM auction_handover 
												WHERE rl_no LIKE '%$rl_beginning%' ORDER BY id DESC LIMIT 1";
										$new_rl=$this->bm->dataReturnDb1($str_new_rl);
										$rl_no = $rl_beginning.str_pad((string)$new_rl, "6", "0", STR_PAD_LEFT); 
									}
									else
									{
										//There is already some/one RL for the given BL...
										$str_new_rl = "SELECT rl_no AS rtnValue FROM auction_handover 
												WHERE rl_no LIKE '%$rl_beginning%' AND house_bl='$house_bl' ORDER BY id DESC LIMIT 1";
										$new_rl=$this->bm->dataReturnDb1($str_new_rl);
										$rl_no = $new_rl; 
									}
								}
													
							    	$str = "insert into auction_handover(rotation_no,vessel_name,arrival_date,cl_date,bl_no, house_bl, pack_Marks_Number,description_of_Goods,
									notify_name,cont,agent,weight,quantity,
									size,height,type,cont_status,unit,rl_no,rl_date,obpc_number,obpc_date,last_pos_slot,
									remarks,inv_unit_gkey,entered_by,entry_ip,entry_time)
									values('$rotation_no','$vessel_name','$arrival_date','$cl_date','$bl_no', '$house_bl', '$pack_Marks_Number','$description_of_Goods','$notify_name',
									'$cont','$agent','$weight','$Pack_Number',
									'$size','$height','$type','$cont_status','$unit','$rl_no',now(),
									'$obpc_number','$obpc_date','$last_pos_slot','$remarks','$inv_unit_gkey','$login_id',
									'$ipaddr',now())";			
								     $stat = $this->bm->dataInsertDB1($str);
								    $data['msg'] = "<font color='blue'><strong>Data Saved Succesfully.</strong></font>";							
							}
						}
					}
				}

				if($action == "Search"  or $action == "print" )
				{
				  //echo $action;
				  //return;
					//Resend with list...
					$data['flag'] = 1;
					$rotation = $this->input->post('rotation');
					$data['rotation'] = $rotation; //...2021/3202....2021/844

					// for print
					$this->data['flag'] = 1;
					$this->data['rotation'] = $rotation;
					
					$strSearch = "SELECT COUNT(*) AS rtnValue FROM auction_handover WHERE rotation_no='$rotation'";
					$rtnValue=$this->bm->dataReturnDb1($strSearch);
					//return;
					
					if($rtnValue=="0")
					{
						// for print
						$this->data['save_flag'] = 0;
						$data['save_flag'] = 0;
						$arrival_date = "";
						$cl_date = "";
						$v_name = "";
						$agent = "";
					    $query = "SELECT * FROM (
							SELECT inv_unit.gkey,inv_unit.id,inv_unit.freight_kind,
							inv_unit.goods_and_ctr_wt_kg AS weight,
							ref_bizunit_scoped.id AS agent,
							EXTRACT(DAY FROM CURRENT_DATE  - inv_unit_fcy_visit.time_in )AS lying_days,
							vsl_vessel_visit_details.ib_vyg AS rot_no,vsl_vessels.name AS v_name,
							SUBSTR(ref_equip_type.nominal_length,-2) AS siz,
							SUBSTR(ref_equip_type.nominal_height,-2)/10 AS height,
							ref_equip_type.id AS TYPE,
							to_char(argo_carrier_visit.ata,'YYYY-MM-DD')AS ata,
							
							(SELECT  to_char(time_discharge_complete,'YYYY-MM-DD')
							FROM vsl_vessel_visit_details
							INNER JOIN argo_visit_details ON argo_visit_details.gkey = vsl_vessel_visit_details.vvd_gkey
							WHERE ib_vyg=inv_unit_fcy_visit.flex_string10 fetch first 1 rows only) AS cl_dt,
							
							inv_unit_fcy_visit.last_pos_slot,
							inv_unit_fcy_visit.flex_string04 AS rl_no,inv_unit_fcy_visit.flex_string05 AS rl_date,
							inv_unit_fcy_visit.flex_string07 AS obpc_number,inv_unit_fcy_visit.flex_string08 AS obpc_date,
							inv_unit_fcy_visit.time_in, inv_unit_fcy_visit.time_out,'' AS remarks
							FROM inv_unit
							INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
							INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
							INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
							INNER JOIN argo_visit_details ON argo_visit_details.gkey = vsl_vessel_visit_details.vvd_gkey
							INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
							INNER JOIN ref_equipment ON ref_equipment.gkey=inv_unit.eq_gkey 
							INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey 
							INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessel_visit_details.bizu_gkey
							WHERE inv_unit_fcy_visit.transit_state='S40_YARD' AND inv_unit.category='IMPRT' and inv_unit.FREIGHT_KIND LIKE 'FCL%' 
							AND vsl_vessel_visit_details.ib_vyg='$rotation'
							)  tbl WHERE lying_days>=30";
							//return;
							/*$query = "SELECT * FROM (
							SELECT inv_unit.gkey,inv_unit.id,inv_unit.freight_kind, inv_unit.goods_and_ctr_wt_kg AS weight,
							ref_bizunit_scoped.id AS agent, EXTRACT(DAY FROM CURRENT_DATE - inv_unit_fcy_visit.time_in )AS lying_days, 
							vsl_vessel_visit_details.ib_vyg AS rot_no,vsl_vessels.name AS v_name, SUBSTR(ref_equip_type.nominal_length,-2) AS siz,
							SUBSTR(ref_equip_type.nominal_height,-2)/10 AS height, ref_equip_type.id AS TYPE, to_char(argo_carrier_visit.ata,'YYYY-MM-DD')AS ata, (SELECT to_char(time_discharge_complete,'YYYY-MM-DD') FROM vsl_vessel_visit_details 
							INNER JOIN argo_visit_details ON argo_visit_details.gkey = vsl_vessel_visit_details.vvd_gkey 
							WHERE ib_vyg=inv_unit_fcy_visit.flex_string10 fetch first 1 rows only) AS cl_dt, 
							inv_unit_fcy_visit.last_pos_slot, inv_unit_fcy_visit.flex_string04 AS rl_no,
							inv_unit_fcy_visit.flex_string05 AS rl_date, inv_unit_fcy_visit.flex_string07 AS obpc_number,
							inv_unit_fcy_visit.flex_string08 AS obpc_date, inv_unit_fcy_visit.time_in, inv_unit_fcy_visit.time_out,'' AS remarks
							FROM inv_unit INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey 
							INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv 
							INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey 
							INNER JOIN argo_visit_details ON argo_visit_details.gkey = vsl_vessel_visit_details.vvd_gkey 
							INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey 
							INNER JOIN ref_equipment ON ref_equipment.gkey=inv_unit.eq_gkey 
							INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey 
							INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessel_visit_details.bizu_gkey
							WHERE inv_unit_fcy_visit.transit_state='S40_YARD' AND inv_unit.category='IMPRT' AND FREIGHT_KIND!='LCL' AND FREIGHT_KIND!='MTY' AND  vsl_vessel_visit_details.ib_vyg='2023/1926'
							) tbl WHERE lying_days>=30";*/
								
								

						$result = $this->bm->dataSelect($query);
						$conts='';
						$arrival_date='';
						$cl_date='';
						$v_name='';
						$agent='';
						$containers='';
						//$containerArray='';
						// $msg="";
						if(count($result)<1)
						{ 
							$msg="Sorry, No container in yard / wrong rotation.";
							return;
						} 
						for($x=0;$x<count($result);$x++)
						{
							$arrival_date=$result[$x]['ATA'];	
							$cl_date=$result[$x]['CL_DT'];	
							$v_name=$result[$x]['V_NAME'];
							$agent=$result[$x]['AGENT'];
							$containers = "'".$result[$x]['ID']."'";
							array_push($containerArray,$containers);							
						}
						//print_r($containerArray);
							$allCont = implode(",",$containerArray);
							

						//echo $conts;
						//return;
						$data['arrival_date'] = $arrival_date;
						$data['cl_date'] = $cl_date;
						$data['v_name'] = $v_name;
						$data['agent'] = $agent;
						$data['conts'] = $conts;
						$data['allCont'] = $allCont;
						$data['msg'] = $msg;

						// for print
						$this->data['arrival_date'] = $arrival_date;
						$this->data['cl_date'] = $cl_date;
						$this->data['v_name'] = $v_name;
						$this->data['agent'] = $agent;
						$this->data['conts'] = $conts;
						$this->data['allCont'] = $allCont;
						$this->data['msg'] = $msg;
					}
					else
					{
						// for print
						$this->data['save_flag'] = 1;
						
						$data['save_flag'] = 1;
						$unit = "";
						$arrival_date = "";
						$cl_date = "";
						$v_name = "";
						$agent = "";
						// $query = "SELECT distinct bl_no, rotation_no,vessel_name,arrival_date,cl_date,pack_Marks_Number,
								// description_of_Goods,notify_name,cont as id,agent,weight,quantity,size,
								// height,type,cont_status,unit,rl_no,rl_date,obpc_number,obpc_date,last_pos_slot,remarks,
								// inv_unit_gkey as gkey,entered_by,entry_ip,entry_time
								// FROM auction_handover 
								// WHERE rotation_no='$rotation' GROUP BY bl_no";
						
								/* 	$query = "SELECT distinct bl_no, rotation_no,vessel_name,arrival_date,cl_date,pack_Marks_Number,
								description_of_Goods,notify_name,cont as id,agent,weight,quantity,size,
								height,type,cont_status,unit,rl_no,rl_date,obpc_number,obpc_date,last_pos_slot,remarks,
								inv_unit_gkey as gkey,entered_by,entry_ip,entry_time
								FROM auction_handover 
								WHERE rotation_no='$rotation' 
								GROUP BY bl_no ORDER BY rl_no"; */
						       $query = "SELECT * ,
								( CASE
								 WHEN house_bl IS NULL THEN igm_notify
								 WHEN house_bl IS NOT NULL THEN igm_sup_notify	
								 END) AS Notify_name_,
								 ( CASE
								 WHEN house_bl IS NULL THEN igm_notify_addr
								 WHEN house_bl IS NOT NULL THEN igm_sup_notify_addr	
								 END) AS Notify_sup_name_

								 FROM ( SELECT DISTINCT IF(house_bl IS NULL OR house_bl = '', auction_handover.bl_no, house_bl) AS bl_no, auction_handover.house_bl as houseBL,
								 auction_handover.bl_no as masterBL, rotation_no,vessel_name,arrival_date,cl_date, auction_handover.pack_Marks_Number, 
								auction_handover.description_of_Goods, igm_details.notify_name,cont AS id,agent, auction_handover.weight,quantity,size,
								height,TYPE,cont_status,unit,rl_no,rl_date,obpc_number,obpc_date,last_pos_slot,auction_handover.remarks,
								inv_unit_gkey AS gkey,entered_by,entry_ip,entry_time,
								igm_details.Notify_name AS igm_notify, 
								igm_details.Notify_address AS igm_notify_addr, 
								igm_supplimentary_detail.Notify_name AS igm_sup_notify, 
								igm_supplimentary_detail.Notify_address AS igm_sup_notify_addr, 

								IFNULL(igm_details.mlocode, '') AS  mlocode,

								(SELECT organization_profiles.Organization_Name FROM  organization_profiles
								WHERE organization_profiles.id = igm_supplimentary_detail.Submitee_Org_Id LIMIT 1) AS ff_name,
								(SELECT organization_profiles.Address_1 FROM  organization_profiles
								WHERE organization_profiles.id = igm_supplimentary_detail.Submitee_Org_Id LIMIT 1) AS ff_addr,
								igm_supplimentary_detail.BL_No AS house_bl
								FROM auction_handover 
								LEFT JOIN igm_details ON igm_details.BL_No=auction_handover.bl_no AND igm_details.Import_Rotation_No=auction_handover.rotation_no
								LEFT JOIN igm_supplimentary_detail ON  igm_supplimentary_detail.master_BL_No=auction_handover.bl_no AND igm_supplimentary_detail.Import_Rotation_No=auction_handover.rotation_no
								WHERE rotation_no='$rotation' GROUP BY bl_no ORDER BY rl_no ASC
								) AS tmp  ";	
							
								 
						$result = $this->bm->dataSelectDb1($query);
						$conts='';
						$arrival_date='';
						$cl_date='';
						$v_name='';
						$agent='';
						$containers='';
						//$containerArray='';
						$msg="";
						if(count($result)<1)
						{ 
							$msg="Sorry, No container in yard / wrong rotation.";
							return;
						} 
						
						for($x=0;$x<count($result);$x++)
							{
								$unit=$result[$x]['unit'];	
								$arrival_date=$result[$x]['arrival_date'];	
								$cl_date=$result[$x]['cl_date'];	
								$v_name=$result[$x]['vessel_name'];	
								$agent=$result[$x]['agent'];
							}
						//print_r($containerArray);
						$queryCont = "SELECT cont FROM auction_handover WHERE rotation_no='$rotation'";
						$resultCont = $this->bm->dataSelectDb1($queryCont);
						for($y=0;$y<count($resultCont);$y++)
						{	
							$containers = "'".$resultCont[$y]['cont']."'";
							array_push($containerArray,$containers);
						}						
						$allCont = implode(",",$containerArray);
						
						$data['unit'] = $unit;
						$data['arrival_date'] = $arrival_date;
						$data['cl_date'] = $cl_date;
						$data['v_name'] = $v_name;
						$data['agent'] = $agent;
						$data['allCont'] = $allCont;
						$data['msg'] = $msg;
						
						// for print
						$this->data['unit'] = $unit;
						$this->data['arrival_date'] = $arrival_date;
						$this->data['cl_date'] = $cl_date;
						$this->data['v_name'] = $v_name;
						$this->data['agent'] = $agent;
						$this->data['allCont'] = $allCont;
						$this->data['msg'] = $msg;

					}
					/* 	echo	$queryBL = "SELECT DISTINCT igm_details.BL_No
						FROM cchaportdb.igm_details
						INNER JOIN cchaportdb.igm_detail_container ON cchaportdb.igm_detail_container.igm_detail_id=cchaportdb.igm_details.id
						WHERE cchaportdb.igm_details.Import_Rotation_No='$rotation' AND 
						cchaportdb.igm_detail_container.cont_number IN ($allCont)";		
					*/
					$queryBL = "SELECT DISTINCT igm_supplimentary_detail.BL_No FROM cchaportdb.igm_supplimentary_detail 
						INNER JOIN cchaportdb.igm_sup_detail_container ON cchaportdb.igm_sup_detail_container.igm_sup_detail_id=cchaportdb.igm_supplimentary_detail.id 
						WHERE cchaportdb.igm_supplimentary_detail.Import_Rotation_No='$rotation' AND cchaportdb.igm_sup_detail_container.cont_number IN ($allCont)
						UNION 

						SELECT DISTINCT igm_details.BL_No FROM cchaportdb.igm_details 
						INNER JOIN cchaportdb.igm_detail_container ON cchaportdb.igm_detail_container.igm_detail_id=cchaportdb.igm_details.id
						WHERE cchaportdb.igm_details.Import_Rotation_No='$rotation' AND cchaportdb.igm_detail_container.cont_number IN ($allCont) AND igm_details.BL_No
						NOT IN (SELECT DISTINCT igm_supplimentary_detail.master_BL_No FROM cchaportdb.igm_supplimentary_detail 
						INNER JOIN cchaportdb.igm_sup_detail_container ON cchaportdb.igm_sup_detail_container.igm_sup_detail_id=cchaportdb.igm_supplimentary_detail.id 
						WHERE cchaportdb.igm_supplimentary_detail.Import_Rotation_No='$rotation' AND cchaportdb.igm_sup_detail_container.cont_number IN ($allCont)) ";
					
				//	return;
					$resultBL = $this->bm->dataSelectDb1($queryBL);
					
					$cntResult = count($resultBL);
					$data['result']=$result;
					$data['cntResult']=$cntResult;
					$data['resultBL']=$resultBL;
					$data['rtnValue']=$rtnValue;

					// for print
					$this->data['result']=$result;
					$this->data['cntResult']=$cntResult;
					$this->data['resultBL']=$resultBL;
				}
				
				if($action == "print")
				{				
					$this->load->library('m_pdf');	
					$html=$this->load->view('AuctionHandOverReportPrint',$this->data, true); 
					$pdfFilePath ="Auction Handover Report-".time()."-download.pdf";
					$pdf = $this->m_pdf->load();
					$pdf = new mPDF('c', 'A4-L');
					$pdf->useSubstitutions = true; 
					$html = mb_convert_encoding($html, 'UTF-8', 'UTF-8');
					$pdf->WriteHTML($html,2);
					$pdf->Output($pdfFilePath, "I");

					//$this->load->view('AuctionHandOverReportPrint',$data);
				}
				else
				{
					$this->load->view('cssAssets');
					$this->load->view('headerTop');
					$this->load->view('sidebar');				
					$this->load->view('AuctionHandOverReportForm',$data);
					$this->load->view('jsAssets');
				}				
			}
		}
		
		
		
		function AuctionHandOverReportList()
		{
			
			$session_id = $this->session->userdata('value');			
			$LoginStat = $this->session->userdata('LoginStat');		
			if($LoginStat!="yes")
			{
				$this->logout();				
			}
			else
			{		
									
				$data['title']="AUCTION HANDOVER LIST";
				if($this->input->post("search")=="0")
				{
					// echo "helloo";
					// return;
					$unit = $this->input->post("unit");
					$from_date = $this->input->post("from_date");
					$to_date = $this->input->post("to_date");
					$search = $this->input->post("search");
					$data['unit']=$unit;
					$data['from_date']=$from_date;
					$data['to_date']=$to_date;
					$data['search']=1;
					$sql = "SELECT DISTINCT(rotation_no),arrival_date,cl_date,unit 
							FROM auction_handover 
							WHERE unit='$unit' AND (DATE(entry_time) BETWEEN '$from_date' AND '$to_date')
							ORDER BY id DESC";	
				}
				else
				{
					$data['search']=0;							
					$sql = "SELECT DISTINCT(rotation_no),arrival_date,cl_date,unit FROM auction_handover ORDER BY id DESC";
				}
				$auction_handover_List = $this->bm->dataSelectDb1($sql);
				$data['msgUpdt']=$msgUpdt;
				$data['auction_handover_List']=$auction_handover_List;
				
				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('AuctionHandoverList',$data);
				$this->load->view('jsAssetsList');
				
			}
		}
		
				
		function AuctionHandOverListForYardUnit()
		{
			
			$session_id = $this->session->userdata('value');			
			$LoginStat = $this->session->userdata('LoginStat');		
			if($LoginStat!="yes")
			{
				$this->logout();				
			}
			else
			{		
									
				$data['title']="AUCTION HANDOVER (SECURITY)";			
				
				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('AuctionHandOverListForYardUnit',$data);
				$this->load->view('jsAssetsList');
				
			}
		}
		
		function AuctionHandOverListForYardUnitView()
		{			
			$session_id = $this->session->userdata('value');			
			$LoginStat = $this->session->userdata('LoginStat');		
			if($LoginStat!="yes")
			{
				$this->logout();				
			}
			else
			{				
				$from_date = $this->input->post("from_date");
				$to_date = $this->input->post("to_date");
				 $section = $this->session->userdata("section");
				 $query = "SELECT * ,
						( CASE
						 WHEN house_bl IS NULL THEN igm_notify
						 WHEN house_bl IS NOT NULL THEN igm_sup_notify	
						 END) AS Notify_name_,
						 ( CASE
						 WHEN house_bl IS NULL THEN igm_notify_addr
						 WHEN house_bl IS NOT NULL THEN igm_sup_notify_addr	
						 END) AS Notify_sup_name_

						 FROM ( SELECT DISTINCT IF(house_bl IS NULL OR house_bl = '', auction_handover.bl_no, house_bl) AS bl_no, auction_handover.house_bl as houseBL,
						 auction_handover.bl_no as masterBL, rotation_no,vessel_name,arrival_date,cl_date, auction_handover.pack_Marks_Number, 
						auction_handover.description_of_Goods, igm_details.notify_name,cont,agent, auction_handover.weight,quantity,size,
						height,TYPE,cont_status,unit,rl_no,rl_date,obpc_number,obpc_date,last_pos_slot,auction_handover.remarks,
						inv_unit_gkey AS gkey,entered_by,entry_ip,entry_time,
						igm_details.Notify_name AS igm_notify, 
						igm_details.Notify_address AS igm_notify_addr, 
						igm_supplimentary_detail.Notify_name AS igm_sup_notify, 
						igm_supplimentary_detail.Notify_address AS igm_sup_notify_addr, 
						yard_lying_info.terminal, yard_lying_info.block,

						IFNULL(igm_details.mlocode, '') AS  mlocode,
						(SELECT organization_profiles.Organization_Name FROM  organization_profiles
						WHERE organization_profiles.id = igm_supplimentary_detail.Submitee_Org_Id LIMIT 1) AS ff_name,
						(SELECT organization_profiles.Address_1 FROM  organization_profiles
						WHERE organization_profiles.id = igm_supplimentary_detail.Submitee_Org_Id LIMIT 1) AS ff_addr,
						igm_supplimentary_detail.BL_No AS house_bl
						FROM auction_handover 
						LEFT JOIN igm_details ON igm_details.BL_No=auction_handover.bl_no AND igm_details.Import_Rotation_No=auction_handover.rotation_no
						LEFT JOIN igm_supplimentary_detail ON  igm_supplimentary_detail.master_BL_No=auction_handover.bl_no AND igm_supplimentary_detail.Import_Rotation_No=auction_handover.rotation_no
						INNER JOIN yard_lying_info ON auction_handover.rotation_no=yard_lying_info.rotation AND yard_lying_info.id=auction_handover.cont
						INNER JOIN yard_block ON yard_block.block_cpa=yard_lying_info.block 
						WHERE yard_block.block_unit='$section' AND DATE(auction_handover.entry_time) BETWEEN '$from_date' AND '$to_date' ORDER BY rl_no ASC
						) AS tmp";												 
					$result = $this->bm->dataSelectDb1($query);	
					

					$summary_query = "SELECT * FROM ( SELECT  block_cpa, 
					SUM((CASE WHEN size=20 THEN '1' ELSE '0' END) ) AS fcl_20,
					SUM((CASE WHEN size >20 THEN '1' ELSE '0' END) ) AS fcl_40

					FROM ( SELECT DISTINCT IF(house_bl IS NULL OR house_bl = '', auction_handover.bl_no, house_bl) AS bl_no, auction_handover.house_bl AS houseBL,
					auction_handover.bl_no AS masterBL, entry_time,
					yard_lying_info.block, auction_handover.size, auction_handover.height, yard_block.block_unit, yard_block.block_cpa
					FROM auction_handover 
					LEFT JOIN igm_details ON igm_details.BL_No=auction_handover.bl_no AND igm_details.Import_Rotation_No=auction_handover.rotation_no
					LEFT JOIN igm_supplimentary_detail ON  igm_supplimentary_detail.master_BL_No=auction_handover.bl_no AND igm_supplimentary_detail.Import_Rotation_No=auction_handover.rotation_no
					INNER JOIN yard_lying_info ON auction_handover.rotation_no=yard_lying_info.rotation AND yard_lying_info.id=auction_handover.cont
					INNER JOIN yard_block ON yard_block.block_cpa=yard_lying_info.block 
					WHERE yard_block.block_unit='$section' AND DATE(auction_handover.entry_time) BETWEEN '$from_date' AND '$to_date' ORDER BY rl_no ASC
					) AS tmp  GROUP BY block_cpa ) AS tmp2";	
											 
					$summary_result = $this->bm->dataSelectDb1($summary_query);
				//print_r($summary_result);
				$data['result']=$result;
				$data['summary_result']=$summary_result;
				$data['section']=$section;
				$this->load->view('AuctionHandOverListForYardUnitView',$data);
				
			}
		}
		
		// Auction Handover  -- End
		// Auction Notice  -- Start	
		
		
		
		//2/27/2023
		function AuctionHandNoticeGeneration()
		{
			$session_id = $this->session->userdata('value');			
			$LoginStat = $this->session->userdata('LoginStat');		
			if($LoginStat!="yes")
			{
				$this->logout();				
			}
			else
			{	
				$this->load->library('m_pdf');

				$rotation = $this->input->post("rotation");
				$arrival_dt = $this->input->post("arrival_dt");
				$cl_date = $this->input->post("cl_dt");
				
				
						$query="SELECT * FROM(
							SELECT inv_unit.gkey,inv_unit.id,inv_unit.freight_kind,
							inv_unit.goods_and_ctr_wt_kg AS weight,
							ref_bizunit_scoped.id AS agent,
							EXTRACT(DAY FROM CURRENT_DATE - inv_unit_fcy_visit.time_in)AS lying_days,
							vsl_vessel_visit_details.ib_vyg AS rot_no,vsl_vessels.name AS v_name,
							SUBSTR(ref_equip_type.nominal_length,-2) AS siz,
							SUBSTR(ref_equip_type.nominal_height,-2)/10 AS height,
							ref_equip_type.id as type,
							to_char(argo_carrier_visit.ata,'YYYY-MM-DD')AS ata,
							to_char(vsl_vessel_visit_details.flex_date08,'YYYY-MM-DD')AS cl_dt,
							inv_unit_fcy_visit.last_pos_slot,
							inv_unit_fcy_visit.flex_string04 AS rl_no,inv_unit_fcy_visit.flex_string05 AS rl_date,
							inv_unit_fcy_visit.flex_string07 AS obpc_number,inv_unit_fcy_visit.flex_string08 AS obpc_date,
							inv_unit_fcy_visit.time_in, inv_unit_fcy_visit.time_out,'' as remarks
							FROM inv_unit
							INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
							INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
							INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
							INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
							INNER JOIN ref_equipment ON ref_equipment.gkey=inv_unit.eq_gkey 
							INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey 
							INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessel_visit_details.bizu_gkey
							WHERE transit_state='S40_YARD' AND inv_unit.category='IMPRT'
							AND vsl_vessel_visit_details.ib_vyg='$rotation')  tbl WHERE lying_days>=30";
						   $result = $this->bm->dataSelect($query);
						   
						$conts='';
						$containerArray=array();
						for($x=0;$x<count($result);$x++)
						{
							$v_name = $result[$x]['V_NAME'];
							//$conts = "'".implode("','", $result[$x]['id'])."'";
							$containers = "'".$result[$x]['ID']."'";
							array_push($containerArray,$containers);
						}
						$allCont = implode(",",$containerArray);
						
						$igm_sql ="SELECT DISTINCT igm_details.BL_No, igm_details.Notify_name, igm_details.Notify_address  
									FROM cchaportdb.igm_details
									INNER JOIN cchaportdb.igm_detail_container ON cchaportdb.igm_detail_container.igm_detail_id=cchaportdb.igm_details.id
									WHERE cchaportdb.igm_details.Import_Rotation_No='$rotation' AND 
									cchaportdb.igm_detail_container.cont_number IN ($allCont)";
						$notice_List = $this->bm->dataSelectDb1($igm_sql);

						
				
				/* $sql = "SELECT  auction_handover_copy.bl_no, auction_handover_copy.notify_name, auction_handover_copy.vessel_name, igm_details.Notify_address
				FROM auction_handover_copy 
				LEFT JOIN igm_details ON auction_handover_copy.bl_no=igm_details.BL_No AND auction_handover_copy.rotation_no=igm_details.Import_Rotation_No
				WHERE auction_handover_copy.rotation_no='$rotation' ORDER BY rl_no ASC";	
			
				$notice_List = $this->bm->dataSelectDb1($sql); */
				
				$this->data['v_name']=$v_name;
				$this->data['notice_List']=$notice_List;
				$this->data['rotation']=$rotation;
				$this->data['arrival_dt']=$arrival_dt;
				$this->data['cl_date']=$cl_date;
				
				
				$html=$this->load->view('AuctionHandNotice',$this->data,true); 			 
				$pdfFilePath ="AuctionHandNotice-".time()."-download.pdf";



				$pdf = $this->m_pdf->load();
				$stylesheet = file_get_contents('resources/styles/lcl.css'); 
				
				
				$pdf->useSubstitutions = true; 
				$pdf->WriteHTML($stylesheet,1);
				$pdf->WriteHTML($html,2);

				$pdf->Output($pdfFilePath, "I");   
				
			}
		}
		
		
		function auctionOpbcDataSave()
		{
			$session_id = $this->session->userdata('value');			
			$LoginStat = $this->session->userdata('LoginStat');		
			if($LoginStat!="yes")
			{
				$this->logout();				
			}
			else
			{	
				$this->load->library('m_pdf');

				$imp_rot = $this->input->post("imp_rot");
				$bL = $this->input->post("bL");
				$opdc_no = trim($this->input->post("opdc_no"));
				$opdc_dt = $this->input->post("opdc_dt");
				$handover_id = $this->input->post("handover_id");
			 	$bl_typ = $this->input->post("bl_typ");
				$update_hbl="";
				$update_mbl="";

				if($bl_typ=='hbl')
				{
					 $update_str="UPDATE auction_handover SET auction_handover.obpc_number='$opdc_no', auction_handover.obpc_date='$opdc_dt' WHERE auction_handover.rotation_no='$imp_rot' AND auction_handover.house_bl='$bL'";
				}
				else
				{
					  $update_str="UPDATE auction_handover SET auction_handover.obpc_number='$opdc_no', auction_handover.obpc_date='$opdc_dt' WHERE auction_handover.rotation_no='$imp_rot' AND auction_handover.bl_no='$bL'";
				}	
				$update_st=$this->bm->dataUpdateDB1($update_str);

				//echo $update_hbl->affected_rows();
				if($update_st>0)
				{
					$msgUpdt = "<font color='blue'><b>Successfully OPBC information updated for import rotation : ".$imp_rot." and bl: ".$bL.";</b></font>";
				}
				
				
				$data['title']="AUCTION HANDOVER LIST";
				if($this->input->post("search")=="0")
				{
					// echo "helloo";
					// return;
					$unit = $this->input->post("unit");
					$from_date = $this->input->post("from_date");
					$to_date = $this->input->post("to_date");
					$search = $this->input->post("search");
					$data['unit']=$unit;
					$data['from_date']=$from_date;
					$data['to_date']=$to_date;
					$data['search']=1;
					$sql = "SELECT DISTINCT(rotation_no),arrival_date,cl_date,unit 
							FROM auction_handover 
							WHERE unit='$unit' AND (DATE(entry_time) BETWEEN '$from_date' AND '$to_date')
							ORDER BY id DESC";	
				}
				else
				{
					$data['search']=0;							
					$sql = "SELECT DISTINCT(rotation_no),arrival_date,cl_date,unit FROM auction_handover ORDER BY id DESC";
				}
				$auction_handover_List = $this->bm->dataSelectDb1($sql);
				$data['msgUpdt']=$msgUpdt;
				$data['auction_handover_List']=$auction_handover_List;
				
				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('AuctionHandoverList',$data);
				$this->load->view('jsAssetsList');
				
				
			}		
		}
		
		
		// Auction Handover  -- End

		
		//Delivery Order Report
		function viewDeliveryOrder($bl,$rot)
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				if($rot==""){
					$bl = $this->uri->segment(3);
					$rot = $this->uri->segment(4);
				}
				
				//echo $rot."=".$bl;
				$data['rotation']=str_replace("_","/",$rot);
				$data['bl']=$bl;
				$this->load->model('ci_auth', 'bm', TRUE);
				$DeliveryList = $this->bm->viewDeliveryOrder($rot,$bl);
				$data['DeliveryList']=$DeliveryList;
				$this->load->view('DeliveryOrderReport',$data);
			}
		}

		//Delivery Order Report
		function releaseDeliveryOrder()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$rot=$this->input->post('rotation');
				$bl=$this->input->post('bl');
				$igm_detail_id=$this->input->post('igm_detail_id');
				
				
				$this->load->model('ci_auth', 'bm', TRUE);
				$DeliveryList = $this->bm->releaseDeliveryOrder($rot,$bl,$igm_detail_id);
				$data['DeliveryList']=$DeliveryList;
				
				
				$this->viewDeliveryOrder($bl,$rot);
			}
		}

		//Delivery Order Report
		function DeliveryOrderPortComment()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$rot=$this->input->post('rotation');
				$bl=$this->input->post('bl');
				$igm_detail_id=$this->input->post('igm_detail_id');
				$port_comment=$this->input->post('port_comment');
				$port_comment=str_replace("'","",$port_comment);
				$port_comment=str_replace('"','',$port_comment);
				
				
				$this->load->model('ci_auth', 'bm', TRUE);
				$DeliveryList = $this->bm->DeliveryOrderPortComment($rot,$bl,$igm_detail_id,$port_comment);
				$data['DeliveryList']=$DeliveryList;
				
				
				$this->viewDeliveryOrder($bl,$rot);
			}
		}

		//last 24 hours
		function myImportContainerDischargeReportlast24hours()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="IMPORT CONTAINER DISCHARGE REPORT...";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportImportContainerDischargingLast24Hours',$data);
				$this->load->view('jsAssets');
			}	
		}
		
		function myImportContainerDischargeReportViewLast24Hours()
		{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$fromdate=$this->input->post('fromdate');
			$this->load->model('ci_auth', 'bm', TRUE);
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;
			$data['fromdate']=$fromdate;
			//echo $data['voysNo'];
			$this->load->view('myReportImportContainerDischargeListLast24hours',$data);
			$this->load->view('myclosebar');
		
		}
		//last 24 hours

		//MLO WISE IMPORT SUMMARY
		
		function myImportSummery()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="IMPORT LOADED CONTAINER SUMMARY LIST...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportImExSummeryImportLoading',$data);
				$this->load->view('jsAssets');
			}	
		}

		
		function myImportSummeryView($rot)
		{
			if($this->input->post())
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			}
			else
			{
				$ddl_imp_rot_no=$rot;
			}
			$this->load->model('ci_auth', 'bm', TRUE);
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			//echo $data['voysNo'];
			$this->load->view('myReportImportSummerytLoadingList',$data);
			$this->load->view('myclosebar');
		
		}
		//MLO WISE IMPORT SUMMARY END

		//COntainer Summery View HTML
		function IgmReportbyDescription()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				//$this->load->view('header');
				//$this->load->view('welcomeview_1', $data);
				//$this->load->view('footer');
			}
			else
			{
				$data['title']="REPORT BY DESCRIPTION OF GOODS...";
				$data['msg'] = "";

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportbyDescriptionHTML',$data);
				$this->load->view('jsAssets');
			}
		}	
		
		//Container Summery Report
		function IgmReportbyDescriptionView()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$description=$this->input->post('description');
				$from=$this->input->post('from');
				$to=$this->input->post('to');
				$this->load->view('myReportbyDescriptionHTMLlist');
				$this->load->view('myclosebar');
			}
        }
		
		function IgmReportbyImporter()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="SUMMARY OF IMPORTER NAME...";
				$data['msg'] = "";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportbyImporterHTML',$data);
				$this->load->view('jsAssets');
			}
        }	
		
		
		//Container Summery Report
		function IgmReportbyImporterView()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				// $description=$this->input->post('description');
				// $from=$this->input->post('from');
				// $to=$this->input->post('to');
				$this->load->view('myReportbyImporterHTMLlist');
				$this->load->view('myclosebar');
			}
        }
		function IgmReportImporterListSearch()
		{
			
			$Notify_name = $this->input->post('Notify_name');
		$notify_name = "SELECT DISTINCT Notify_code,Notify_name,NotifyDesc,Notify_address FROM igm_supplimentary_detail WHERE Notify_name LIKE '%$Notify_name%'";
			$rtnVesselList = $this->bm->dataSelectDB1($notify_name);
			

			$data['rtnVesselList']=$rtnVesselList;
			 $this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myReportbyImporterListHTML',$data);
        }	


		function IgmReportImporterList()
		{
			
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			$Notify_name = $this->input->post('Notify_name');

			$type = $this->uri->segment(3);
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{

			/*********** Pagination**************/
			
			$config = array();
			$config["base_url"] = site_url("report/IgmReportImporterList/$type");
			$config["total_rows"] = $this->bm->record_count_igm();
			$config["per_page"] = 100;
			$config["uri_segment"] = 4;
		
			$this->pagination->initialize($config);
			echo $page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;
			
			$limit=$config["per_page"];
			$start=$page;
		
			/***********Pagination***************/
		

				
			$query="SELECT DISTINCT Notify_code,Notify_name,NotifyDesc,Notify_address FROM igm_supplimentary_detail limit $start,$limit";
			$rtnVesselList = $this->bm->dataSelectDb1($query);

			

			$data['rtnVesselList']=$rtnVesselList;
			$data["links"] = $this->pagination->create_links();
			 $this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myReportbyImporterListHTML',$data);
			//$this->load->view('jsAssetsList');	

			
			}
        }	

		function IgmReportbyContainer()
		{
			
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="SUMMARY OF IMPORT CONTAINER...";
				$data['msg'] = "";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportbyContainerHTML',$data);
				$this->load->view('jsAssets');
			}
        }	
		
		function IgmReportbyContainerView()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$description=$this->input->post('description');
				$this->load->view('myReportbyContainerHTMLlist');
				$this->load->view('myclosebar');
			}
        }

		function importerWiseIGMreportForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="Importer Wise Goods report";
				$data['msg'] = "";
				$strrcvAllQry = "SELECT DISTINCT  igm_details.Notify_name FROM igm_details 
							WHERE Notify_name!='' AND Notify_name IS NOT NULL ORDER BY Notify_name ASC ";	
				$rsltAllQry  = $this->bm->dataSelectDb1($strrcvAllQry);	
				$data['rsltAllQry']=$rsltAllQry;
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('importerWiseIGMreport',$data);
				$this->load->view('jsAssets');
			}
        }	
		
		
		function importerWiseIGMreportView()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$importer_name=$this->input->post('importer_name');
				$from=$this->input->post('from');
				$to=$this->input->post('to');
				
					 $goodsStr="SELECT *, SUM(tonage) AS tonnage FROM( SELECT * FROM (SELECT igm_details.Import_Rotation_No, igm_masters.Vessel_Name,
					 igm_detail_container.cont_number, igm_detail_container.cont_size, igm_detail_container.cont_height,
					commudity_detail.commudity_desc, Organization_Name AS org_name,
					igm_detail_container.cont_gross_weight/1000 AS tonage, 
					igm_details.Notify_name,igm_details.Notify_address,igm_details.Description_of_Goods
					FROM igm_detail_container 
					INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id
					INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
					LEFT JOIN organization_profiles ON organization_profiles.id = igm_masters.Submitee_Org_Id
					INNER JOIN commudity_detail  ON commudity_detail.commudity_code = igm_detail_container.commudity_code
					WHERE DATE(igm_details.file_clearence_date) BETWEEN '$from' AND '$to'

					UNION 

					SELECT igm_supplimentary_detail.Import_Rotation_No,igm_masters.Vessel_Name,
					igm_sup_detail_container.cont_number, igm_sup_detail_container.cont_size, igm_sup_detail_container.cont_height,
					commudity_detail.commudity_desc,
					igm_sup_detail_container.cont_gross_weight/1000 AS tonage, Organization_Name AS org_name,
					igm_supplimentary_detail.Notify_name,igm_supplimentary_detail.Notify_address,igm_supplimentary_detail.Description_of_Goods
					FROM igm_sup_detail_container 
					INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id
					INNER JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
					LEFT JOIN organization_profiles ON organization_profiles.id = igm_masters.Submitee_Org_Id
					INNER JOIN commudity_detail  ON commudity_detail.commudity_code = igm_sup_detail_container.commudity_code
					WHERE DATE(igm_supplimentary_detail.file_clearence_date) BETWEEN '$from' AND '$to') AS tbl 

					WHERE   UPPER(Notify_name) LIKE UPPER('%$importer_name%'))  AS tbl2 
					GROUP BY Import_Rotation_No ORDER BY commudity_desc ASC";
				//return;
			$goodsRslt = $this->bm->dataSelectDB1($goodsStr);
			$data['goodsRslt']=$goodsRslt;
			$data['frmDt']=$from;
			$data['toDt']=$to;
			$data['importer_name']=$importer_name;
			$data['fileOptions']=$fileOptions;		
				
			$this->load->view('importerWiseIGMreportView',$data);
			}
        }
		
		
		//Igm search by BL start
		
		function IgmReportbyBL()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="SUMMARY OF BL...";
				$data['msg'] = "";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportbyBLHTML',$data);
				$this->load->view('jsAssets');
			}
        }	
		
		
		//Container Summery Report
		function IgmReportbyBLView()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$description=$this->input->post('description');
				$from=$this->input->post('from');
				$to=$this->input->post('to');
				$this->load->view('myReportbyBLHTMLlist');
				$this->load->view('myclosebar');
			}
        }
		
		// igm search by L end
		
		
		
		//shahadat
		function OffDockContainerList()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="OFFDOCK DESTINATION WISE CONTAINER LIST...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myOffDockContainerListHTML',$data);
				$this->load->view('jsAssets');
			} 
		}

		function OffDockContainerListView()
		{
		  	$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			if($_POST['options'] == 'xl'){
				$this->load->view('myReportOffDockContainerList',@$data);
				$this->load->view('myclosebar');
			}else if($_POST['options'] == 'html'){
				$this->load->view('cssAssets');
				$this->load->view('myReportOffDockContainerList',@$data);
				$this->load->view('myclosebar');
				$this->load->view('jsAssets');
			}
		}
		  //shahadat									
		
		function depotLadenContListView()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$depo = $this->uri->segment(3);
				$size = $this->uri->segment(4);
				$data['depo']=$depo;
				$data['size']=$size;
				//$this->load->view('header2');
				$this->load->view('depotLadenContListHTML',$data);
				//$this->load->view('footer');
			}
		}
		
		function depotLadenContForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$data['title']="DEPOT LADEN CONTAINER AT CHITTAGONG PORT";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('depotLadenContForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function depotLadenCont()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				if($_POST['options'] == 'xl'){
					$sValue=$this->input->post('sValue');
					$data['sValue']=$sValue;
					$data['title']="DEPOT LADEN CONTAINER AT CHITTAGONG PORT UP TO";
					$this->load->view('depotLadenContHTML',$data);

				}else if($_POST['options'] == 'html'){
					$sValue=$this->input->post('sValue');
					$data['sValue']=$sValue;
					$data['title']="DEPOT LADEN CONTAINER AT CHITTAGONG PORT UP TO";
					$this->load->view('cssAssets');
					$this->load->view('depotLadenContHTML',$data);
					$this->load->view('myclosebar');
					$this->load->view('jsAssets');
				}
			}
		}
		
		
		
		function depotLadenContFormTooffdock()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$data['title']="DEPOT LADEN CONTAINER AT CHITTAGONG PORT ORIGIANL";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('depotLadenContFormTooffdock',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function depotLadenTooffdock()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				if($_POST['options'] == 'xl'){
					$sValue=$this->input->post('sValue');
					$data['sValue']=$sValue;
					$data['title']="DEPOT LADEN CONTAINER AT CHITTAGONG PORT UP TO";
					$this->load->view('depotLadenTooffdockHTML',$data);

				}else if($_POST['options'] == 'html'){
					$sValue=$this->input->post('sValue');
					$data['sValue']=$sValue;
					$data['title']="DEPOT LADEN CONTAINER AT CHITTAGONG PORT UP TO";
					$this->load->view('cssAssets');
					$this->load->view('depotLadenTooffdockHTML',$data);
					$this->load->view('myclosebar');
					$this->load->view('jsAssets');
				}
			}
		}
		
		
		
		function vesselEventHistory()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="VESSEL EVENTS HISTORY...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('eventHistoryForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function eventHistoryReport()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$data['title']="VESSEL EVENTS HISTORY";
				$data['rotation']=$ddl_imp_rot_no;
				//$this->load->view('header2');
				$this->load->view('eventHistoryHTML',$data);
				//$this->load->view('footer');
			}
		}
		
		
		function containerEventHistory()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');			
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();				
			}
			else
			{							
				$data['tableFlag']=0;
				$data['title']="CONTAINER EVENTS HISTORY...";
				//$data['expST']=$expST;
				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('containerEventHistoryForm',$data);
				$this->load->view('jsAssetsList');
			}
		}
		
		function containerEventHistoryReport()
		{
		    $session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$contNo=$this->input->post('contNo');
				$data['title']="CONTAINER EVENTS HISTORY";
				$data['tableFlag']=1;
				$data['tableTitle']="Event History of Container No: ".$contNo;
				
				$contHistorySql="SELECT INV_UNIT.gkey,inv_unit_fcy_visit.time_move,
				inv_unit_fcy_visit.time_in,inv_unit_fcy_visit.time_out,
				inv_unit.category,inv_unit.freight_kind,inv_unit_fcy_visit.transit_state,
				inv_unit_fcy_visit.last_pos_name,ref_bizunit_scoped.id AS mlo
				FROM inv_unit
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=inv_unit.line_op
				WHERE inv_unit.id='$contNo' ORDER BY 2 DESC";
				$contHistory = $this->bm->dataSelect($contHistorySql);
				
				/*$oracle_db=$this->load->database('fourth',true);
				$q = $oracle_db->query($contHistorySql);
				$contHistory = $q->result_array();*/
			
				$data['contHistory']=$contHistory;
				$data['contNo']=$contNo;
				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('containerEventHistoryForm',$data);
				$this->load->view('jsAssetsList');
			}
		}
		
		
		function usrCreationForm()				// 2020-06-02
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$this->load->model('CI_auth', 'bm', TRUE);
				$sql = "select id,Org_Type from tbl_org_types where id in(1,2,3,5,6,30,57,59,4,64,66,67,70,28,72,73,74,75,76,80,91,93,95,101,103,105)";
				$orgList = $this->bm->dataSelectDb1($sql);
				$data['orgList']=$orgList;
				$msg = "";
				$data['msg']=$msg;
				$data['creation']=1;
				$org_Type_id = $this->session->userdata('org_Type_id');
				$data['org_Type_id']=$org_Type_id;
				$data['title']="User Creation Form...";
				
				$rslt_user_data="";
				$data['rslt_user_data']=$rslt_user_data;				
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('userCreationForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function userCreation()				// 2020-06-02
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();				
			}
			else
			{
				$this->load->model('CI_auth', 'bm', TRUE);
				$orgType=$this->input->post('orgType');
				$license_no=$this->input->post('license_no');
				$orgId_edit=$this->input->post('orgId_edit');
				//$orgName=$this->input->post('orgName');
				$orgNameWithOrgType=$this->input->post('orgName');
			    $splitorgName = explode(":-",$orgNameWithOrgType);
				$orgName =  $splitorgName[0];
				$userType=$this->input->post('userType');
				$u_name=$this->input->post('u_name');
				$login_id = $this->session->userdata('login_id');
				$ipaddr = $_SERVER['REMOTE_ADDR'];
				
				// $orgName =  str_replace("'","\'","$orgName");
				//insert
				
				$sql_org_name_validity="SELECT id FROM organization_profiles WHERE Organization_Name='$orgName'";		
				// echo $sql_org_name_validity;return;
				$res_org_name_validity=$this->bm->dataSelectDb1($sql_org_name_validity);
				
				if(count($res_org_name_validity) > 0){
					
					if($orgType == 2){
						$sql_cnt_org="SELECT COUNT(*) AS rtnValue 
							FROM organization_profiles 
							WHERE organization_profiles.Org_Type_id LIKE '$orgType' AND organization_profiles.License_No='$license_no'";				
						$res_cnt_org=$this->bm->dataReturnDb1($sql_cnt_org);
					}else{
						$res_cnt_org = 1;
					}

					if($res_cnt_org > 0)
					{
						$org_id = 0;
						if($orgType == 2){
							$sql_org_id="SELECT id 
							FROM organization_profiles 
							WHERE License_No='$license_no' AND Org_Type_id='$orgType'";
							
							$res_org_id=$this->bm->dataSelectDb1($sql_org_id);
							for($i=0;$i<count($res_org_id);$i++){
								$org_id = $res_org_id[$i]['id'];
							}
						} else if($orgType == 5 || $orgType == 58 || $orgType == 59 || $orgType == 61 ||$orgType == 62 || $orgType == 63 || 
						$orgType == 64 || $orgType == 65 || $orgType == 67 || $orgType == 69 || $orgType == 70 || $orgType == 72 || $orgType == 74
						|| $orgType == 75 || $orgType == 78 || $orgType == 80 || $orgType == 91 || $orgType == 93 || $orgType == 95 || $orgType == 101 || $orgType == 105)
						{						
							
							 $sql_org_id="SELECT id FROM organization_profiles WHERE Organization_Name LIKE '%$orgName%'";
							//return;
							
							$res_org_id=$this->bm->dataSelectDb1($sql_org_id);
							for($i=0;$i<count($res_org_id);$i++){
								$org_id = $res_org_id[$i]['id'];
							}
						}
						else{						
							
							 $sql_org_id="SELECT id FROM organization_profiles WHERE Organization_Name = '$orgName' AND Org_Type_id= '$orgType'";
							
							
							$res_org_id=$this->bm->dataSelectDb1($sql_org_id);
							for($i=0;$i<count($res_org_id);$i++){
								$org_id = $res_org_id[$i]['id'];
							}
						}
						
						$uId=trim($this->input->post('uId'));
						$uPass=$this->input->post('uPass');
						$cPass=$this->input->post('cPass');
						$pass = sha1($cPass);
						$address1=$this->input->post('address1');
						$address2=$this->input->post('address2');
						$lPhone=$this->input->post('lPhone');
						$cPhone=$this->input->post('cPhone');
						$email=$this->input->post('email');
						$userType=$this->input->post('userType');
						$section=$this->input->post('section');
						$create=$this->input->post('create');
						@$imageName=$_FILES["image"]["name"];
						
						$msg = "";

						@move_uploaded_file($_FILES["image"]["tmp_name"],$_SERVER['DOCUMENT_ROOT']."/resources/images/".$_FILES["image"]["name"]);			
						@rename($_SERVER['DOCUMENT_ROOT']."/resources/images/".$_FILES["image"]["name"],$_SERVER['DOCUMENT_ROOT']."/resources/images/".$imageName);
						
						$sql_chk_license="SELECT COUNT(gkey) AS rtnValue FROM ref_bizunit_scoped WHERE id='$license_no'";
			
						$chk_license=$this->bm->dataReturn($sql_chk_license);
					
						if($orgType=="" or $orgType==" ")
						{
							$msg = "<font color='red'><b>You should select Organization type.</b></font>";
						}
						else if($chk_license==0 and $orgType==2 and $uId!='devcf')
						{
							$msg = "<font color='red'><b>License No. is not valid</b></font>";
						}
						else if($orgName=="" or $orgName==" ")
						{
							$msg = "<font color='red'><b>Organization name should not be blank.</b></font>";
						}
						else if($uId=="" or $uId==" ")
						{
							$msg = "<font color='red'><b>User Id should not be blank.</b></font>";
						}
						else if($create!=null and $uPass==null)
						{
							$msg = "<font color='red'><b>Password should not be blank.</b></font>";
						}
						else if($create!=null and $cPass==null)
						{
							$msg = "<font color='red'><b>Confirm Password should not be blank.</b></font>";
						}
						else if($cPhone=="" or $cPhone==" ")
						{
							$msg = "<font color='red'><b>Cell Phone should not be blank.</b></font>";
						}
						else if($email=="" or $email==" ")
						{
							$msg = "<font color='red'><b>Email should not be blank.</b></font>";
						}
						else if($orgType=="5" and $section==null)
						{
							$msg = "<font color='red'><b>Section should not be blank for Port.</b></font>";
						}
						else if($userType=="organization" and $userType=="cnf" and $imageName==null)		
						{
							$msg = "<font color='red'><b>Provide a image</b></font>";
						}
						else
						{
							$sqlUser = "select count(id) as rtnValue from users where login_id='$uId'";
							$rtnValue = $this->bm->dataReturnDb1($sqlUser);
							
							if($rtnValue>0)					
							{
								if($create!=null)
								{
									$msg = "<font color='red'><b>User id $uId already exist. Try with another..</b></font>";
								}
								else
								{
									// $sqlUpdate="update users set u_name='$orgName',login_id='$uId',is_admin_user=1,org_Type_id='$orgType',Address_1='$address1',Address_2='$address2',Telephone_No_Land='$lPhone',Cell_No_1='$cPhone',email='$email',image_path='$imageName',org_id='$org_id',section='$section',account_update_date=now(),update_by='$login_id',user_ip='$ipaddr' where login_id='$uId'";
									if($userType=='single')
									{
										$sqlUpdate="update users set u_name='$u_name', u_type='$userType', login_id='$uId',is_admin_user=1,org_Type_id='$orgType',Address_1='$address1',Address_2='$address2',Telephone_No_Land='$lPhone',Cell_No_1='$cPhone',email='$email',image_path='$imageName',
										section='$section',account_update_date=now(),update_by='$login_id',user_ip='$ipaddr' where login_id='$uId'";

										$logQuery = "INSERT INTO users_change_log(u_name,u_type,login_id,is_admin_user,org_Type_id,Address_1,Address_2,Telephone_No_Land,Cell_No_1,email,image_path,section,account_update_date,update_by,user_ip) VALUES('$u_name','$userType','$uId',1,'$orgType','$address1','$address2','$lPhone','$cPhone','$email','$imageName','$section',NOW(),'$login_id','$ipaddr')";
									}
									else
									{
										$sqlUpdate="update users set u_name='$orgName', login_id='$uId', is_admin_user=1,org_Type_id='$orgType',Address_1='$address1',Address_2='$address2',Telephone_No_Land='$lPhone',Cell_No_1='$cPhone',email='$email',image_path='$imageName',
										section='$section',account_update_date=now(),update_by='$login_id',user_ip='$ipaddr' where login_id='$uId'";

										$logQuery = "INSERT INTO users_change_log(u_name,login_id,is_admin_user,org_Type_id,Address_1,Address_2,Telephone_No_Land,Cell_No_1,email,image_path,section,account_update_date,update_by,user_ip) VALUES('$u_name','$uId',1,'$orgType','$address1','$address2','$lPhone','$cPhone','$email','$imageName','$section',NOW(),'$login_id','$ipaddr')";
									}
							
									$update = $this->bm->dataUpdateDB1($sqlUpdate);
								
									if($update==1)
									{							
										$this->bm->dataInsertDB1($logQuery);		
										$dt=date("Y-m-d H:i:s");
										$status="edit";								
										$dataWrite="\r\n$login_id | $uId | $status | $dt | $ipaddr ";
										write_file("userCreateEditPassChangeLog.txt", $dataWrite, 'a');
										
										$msg = "<font color='blue'><b>Successfully updated for login ID ".$uId."</b></font>";
									}
									else
									{
										$msg = "<font color='red'><b>Update failed</b></font>";
									}
								}
								
								/** uncomment the update portion in case of error in user info update **/
								//$msg = "<font color='red'><b>User id $uId already exist. Try with another..</b></font>";
								// $sqlUpdate="update users set u_name='$orgName',login_id='$uId',is_admin_user=1,org_Type_id='$orgType',Address_1='$address1',Address_2='$address2',Telephone_No_Land='$lPhone',Cell_No_1='$cPhone',email='$email',image_path='$imageName',section='$section',account_update_date=now() where login_id='$uId'";
							
								// $update = $this->bm->dataUpdateDB1($sqlUpdate);
							
								// if($update==1)
								// {	
									// $msg = "<font color='blue'><b>Successfully updated for login ID ".$uId."</b></font>";
								// }
								// else
								// {
									// $msg = "<font color='red'><b>Update failed</b></font>";
								// }
							}
							else
							{	
								if($orgType==2)
								{
									$sql_license_gkey="SELECT gkey AS rtnValue FROM ref_bizunit_scoped WHERE id='$license_no'";
									
									$license_gkey=$this->bm->dataReturn($sql_license_gkey);
									
									$sqlInsert = "insert into users(u_name, u_type, login_id,login_password,ptext,is_admin_user,org_Type_id,Address_1,Address_2,Telephone_No_Land,Cell_No_1,email,image_path,org_id,entrydate,section,account_update_date,new_pass,n4_bizu_gkey,update_by,user_ip) 
									values('$orgName','$userType','$uId','$pass','$cPass',1,'$orgType','$address1','$address2','$lPhone','$cPhone','$email','$imageName','$org_id',now(),'$section',now(),'$pass','$license_gkey','$login_id','$ipaddr')";
								}
								else
								{
									if($userType=='single')
									{
										$sqlInsert = "insert into users(u_name, u_type, login_id,login_password,ptext,is_admin_user,org_Type_id,Address_1,Address_2,Telephone_No_Land,Cell_No_1,email,image_path,org_id,entrydate,section,account_update_date,new_pass,update_by,user_ip) 
										values('$u_name','$userType', '$uId','$pass','$cPass',1,'$orgType','$address1','$address2','$lPhone','$cPhone','$email','$imageName',
										'$org_id',now(),'$section',now(),'$pass','$login_id','$ipaddr')";
									}
									else
									{
										$sqlInsert = "insert into users(u_name, u_type, login_id,login_password,ptext,is_admin_user,org_Type_id,Address_1,Address_2,Telephone_No_Land,Cell_No_1,email,image_path,org_id,entrydate,section,account_update_date,new_pass,update_by,user_ip) 
										values('$orgName','$userType','$uId','$pass','$cPass',1,'$orgType','$address1','$address2','$lPhone','$cPhone','$email','$imageName','$org_id',now(),'$section',now(),'$pass','$login_id','$ipaddr')";
									}									
									
								}	
								
								$insertStat = $this->bm->dataInsertDB1($sqlInsert);
							
								if($insertStat)
								{								
									$dt=date("Y-m-d H:i:s");
									$status="create";							
									$dataWrite="\r\n$login_id | $uId | $status | $dt | $ipaddr ";
									write_file("userCreateEditPassChangeLog.txt", $dataWrite, 'a');
									
									$msg = "<font color='blue'><b>User created successfully</b></font>";
								}
								else
								{
									$msg = "<font color='red'><b>User not created</b></font>";
								}
								
							}
						}
					}
					else
					{
						$msg = "<font color='red'><b>Sorry! This organization doesn't exist !</b></font>";
					}
				}
				else
				{
					$msg = "<font color='red'><b>Sorry! Invalid Organization !</b></font>";
				}
							
								
				$sql = "select id,Org_Type from tbl_org_types where id in(1,2,3,5,6,30,57,59,4,64,66,67,70,28,72,73,74,75,76,80,91,93,95,101,103,105)";
				$orgList = $this->bm->dataSelectDb1($sql);
				$data['orgList']=$orgList;
				$data['org_Type_id']=$orgType;
				$data['msg']=$msg;
				$data['creation']=1;
				$data['title']="User Creation Form...";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('userCreationForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function replicationStatusForm()		
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="Replication Status...";				
				$data['formType']="form";				
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('replicationStatusForm',$data);
				$this->load->view('jsAssets');
			}
        }
		
		function replicationStatusReport()		
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="Replication Status...";	
				$data['formType']="action";				
				$sip = $_POST['sip'];
				$tip1 = $_POST['tip1'];
				$tip2 = $_POST['tip2'];
				
				$data['sip']= $sip;
				$data['tip1']= $tip1;
				$data['tip2']= $tip2;
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('replicationStatusForm',$data);
				$this->load->view('jsAssets');
			}
        }
		
		//vessel layout
		function vslLayout()		
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="New Vessel Layout...";				
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('bayViewForm',$data);
				$this->load->view('jsAssets');
			}
        }
		
		
		
		function blankBayView()
		{
			$this->load->view('blankBayView');
		}
		
		
		function getVslLayout()
		{
			$this->load->view('cssAssets');
			$this->load->view('getVslInfo');			
			$this->load->view('jsAssets');
       	}
	   
	   	function blankBayForm()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="Blank Vessel Layout...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('blankBayForm',$data);
				$this->load->view('jsAssets');
			}
        }
		
		function deleteWrongBay()	
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="DELETE WRONG BAY...";
				$data['msg']="";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('deleteBayForm',$data);
				$this->load->view('jsAssets');
			}
        }
		
		function deleteBayPerformed()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$login_id = $this->session->userdata('login_id');
				$this->load->model('ci_auth', 'bm', TRUE);
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$sValue=$this->input->post('sValue');
				$sqlrot="select vsl_vessels.id as rtnValue from vsl_vessel_visit_details
				inner join vsl_vessels on vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
				where vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
				//echo $sqlrot."<hr>";
				$vslId=$this->bm->dataReturn($sqlrot);
				$rtn1 = $this->bm->dataDeleteDb2("delete from ctmsmis.misBayView where vslId='$vslId' and bay='$sValue'");
				$rtn2 = $this->bm->dataDeleteDb2("delete from ctmsmis.misBayViewBelow where vslId='$vslId' and bay='$sValue'");
				$rtn3 = $this->bm->dataDeleteDb2("delete from ctmsmis.misBayDetail where vslId='$vslId' and bay='$sValue'");
				if($rtn1==1 and $rtn2==1 and $rtn3==1)
				{
					$data['msg']="<font color='blue'>Rotation ".$ddl_imp_rot_no." Bay ".$sValue." deleted successfully.</font>";
					$this->bm->dataInsertDb2("insert into ctmsmis.misBayDelLog(rotation,bay,delete_by,delete_time) values ('$ddl_imp_rot_no','$sValue','$login_id',now())");
				}
				else
				{
					$data['msg']="<font color='blue'>Rotation ".$ddl_imp_rot_no." Bay ".$sValue." not deleted.</font>";
					$this->bm->dataInsertDb2("insert into ctmsmis.misBayDelLog(rotation,bay,delete_by,delete_time) values ('$ddl_imp_rot_no','$sValue','$login_id',now())");
				}
				//$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
				//$data['sValue']=$sValue;
				$data['title']="DELETE WRONG BAY...";				
				// $this->load->view('header2');
				// $this->load->view('deleteBayForm',$data);
				// $this->load->view('footer');
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('deleteBayForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function deleteIGMInfo()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="DELETE IGM INFORMATION FORM...";
				$data['msg']="";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('deleteIGMInfoForm',$data);
				$this->load->view('jsAssets');
			}
        }
		
		function deleteIGMInfoPerform()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();				
			}
			else
			{
				$login_id = $this->session->userdata('login_id');
				$this->load->model('ci_auth', 'bm', TRUE);
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				
				$strDelCont="DELETE FROM igm_detail_container where igm_detail_id in (select id from igm_details where Import_Rotation_No='$ddl_imp_rot_no')";
				$strDelDtl="DELETE FROM igm_details where Import_Rotation_No='$ddl_imp_rot_no'";
				
				//$str1 = "DELETE igm_details.*,igm_detail_container.* FROM igm_details 
				//INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				//WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				
				$strSupDelCont="DELETE FROM igm_sup_detail_container where igm_sup_detail_id in (select id from igm_supplimentary_detail where Import_Rotation_No='$ddl_imp_rot_no')";
				$strSupDelDtl="DELETE FROM igm_supplimentary_detail where Import_Rotation_No='$ddl_imp_rot_no'";
				
				//$str2 = "DELETE igm_supplimentary_detail.*,igm_sup_detail_container.* FROM igm_supplimentary_detail 
				//INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				//WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				
				$str3 = "DELETE FROM igm_for_ctms WHERE Rotation_no='$ddl_imp_rot_no'";
				
				$str4 = "DELETE FROM igm_masters WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				//$rtn1==1; $rtn2==1; $rtn3==1; $rtn4==1;
				
				//$rtn1 = $this->bm->dataDeleteDB1($str1);
				//$rtn2 = $this->bm->dataDeleteDB1($str2);
				
				$rtn1 = $this->bm->dataDeleteDB1($strDelCont);
				$rtn2 = $this->bm->dataDeleteDB1($strDelDtl);
				$rtn3 = $this->bm->dataDeleteDB1($strSupDelCont);
				$rtn4 = $this->bm->dataDeleteDB1($strSupDelDtl);
				$rtn5 = $this->bm->dataDeleteDB1($str3);
				$rtn6 = $this->bm->dataDeleteDB1($str4);
				
				$ipaddr = $_SERVER['REMOTE_ADDR'];
				if($rtn1==1 and $rtn2==1 and $rtn3==1 and $rtn4==1 and $rtn5==1 and $rtn6==1)
				{
					$data['msg']="<font color='blue'>Rotation ".$ddl_imp_rot_no." deleted successfully.</font>";
					$this->bm->dataInsertDB1("insert into cchaportdb.igm_delete_info(rotation,delete_by,delete_time,delete_ip) values ('$ddl_imp_rot_no','$login_id',now(),'$ipaddr')");
				}
				else
				{
					$data['msg']="<font color='blue'>Rotation ".$ddl_imp_rot_no." not deleted.</font>";
					$this->bm->dataInsertDB1("insert into cchaportdb.igm_delete_info(rotation,delete_by,delete_time,delete_ip) values ('$ddl_imp_rot_no','$login_id',now(),'$ipaddr')");
				}
				//$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
				//$data['sValue']=$sValue;
				$data['title']="DELETE IGM INFORMATION FORM...";				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('deleteIGMInfoForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function updateVslForExpCont()		
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="UPDATE VESSEL FOR EXPORT CONTAINERS...";
				$data['msg']="";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('changeVesselForm',$data);
				$this->load->view('jsAssets');
			}
        }
		
		function updateVslForExContPerformed()			
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$this->load->model('ci_auth', 'bm', TRUE);
				$pre_rot=trim($this->input->post('pre_rot'));
				$new_rot=trim($this->input->post('new_rot'));
				$contsstr=trim($this->input->post('conts'));
				//echo $pre_rot." ".$new_rot." ".$contsstr;
				$contPart = explode(",",$contsstr);
				//echo $contsstr."<br>";
				$conts = "";
				for($i=0;$i<count($contPart);$i++)
				{
					//echo $i.",";
					$container = trim($contPart[$i]);
					if($i==count($contPart)-1)
						$conts .= "'".$container."'";
					else
						$conts .= "'".$container."',";
				}
				//echo $conts."<br>";
				$sqlprerot="select vvd_gkey as rtnValue from vsl_vessel_visit_details where ib_vyg='$pre_rot'";
				$sqlnewrot="select vvd_gkey as rtnValue from vsl_vessel_visit_details where ib_vyg='$new_rot'";
				$preVvdGky=$this->bm->dataReturn($sqlprerot);
				$newVvdGky=$this->bm->dataReturn($sqlnewrot);
				//echo $preVvdGky."-".$newVvdGky;
				$strUpdate = "update ctmsmis.mis_exp_unit set vvd_gkey=$newVvdGky,snx_type=1,last_update=NOW() where vvd_gkey=$preVvdGky and cont_id in($conts)";
				//return;
				$stat = $this->bm->dataUpdatedb2($strUpdate);
				if($stat==1)
					$data['msg']="Container(s) ".$contsstr." Successfully transfered from ".$pre_rot." to ".$new_rot.".";
				else
					$data['msg']="Container(s) ".$contsstr." not transfered from ".$pre_rot." to ".$new_rot.".";
				$data['title']="UPDATE VESSEL FOR EXPORT CONTAINERS...";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('changeVesselForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function updateVisitForPctCont()		
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="UPDATE VISIT FOR PANGOAN CONTAINERS...";
				$data['msg']="";				
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('updateVisitForPctContForm',$data);
				$this->load->view('jsAssets');
			}
        }
		
	    function updateVisitForPctContPerformed()			
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				//$this->load->model('ci_auth', 'bm', TRUE);
				$rot=trim($this->input->post('rot'));
				$cont=trim($this->input->post('cont'));
				$cate=trim($this->input->post('cate'));
				
				$sqlarcargkey="SELECT argo_carrier_visit.gkey  AS rtnValue FROM argo_carrier_visit
				INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
				WHERE ib_vyg='$rot'";				
				$sqlunitgkey="SELECT gkey  AS rtnValue FROM inv_unit WHERE id='$cont' AND category='$cate' ORDER BY gkey DESC LIMIT 1";
				$arcargkey=$this->bm->dataReturn($sqlarcargkey);
				$unitgkey=$this->bm->dataReturn($sqlunitgkey);
				//echo $preVvdGky."-".$newVvdGky;
				$strUpdate = "UPDATE inv_unit_fcy_visit SET actual_ib_cv='$arcargkey' WHERE unit_gkey='$unitgkey'";
				//return;
				$stat = $this->bm->dataUpdate($strUpdate);
				if($stat==1)
					$data['msg']="Successfully updated";
				else
					$data['msg']="Not updated";
				$data['title']="UPDATE VISIT FOR PANGOAN CONTAINERS...";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('updateVisitForPctContForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function myExportContainerBlockReport()
		{
		   //print_r($this->session->all_userdata());
		   $session_id = $this->session->userdata('value');
		   $LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		   {
			$this->logout();
		   }
		   else
		   {
			$data['title']="EXPORT CONTAINER BLOCK REPORT...";
			//echo $data['title'];
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myBlockContForm',$data);
			$this->load->view('jsAssets');
		   } 
		}

		function myExportContainerBlockReportView()
		{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$this->load->model('ci_auth', 'bm', TRUE);
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;
			//echo $data['voysNo'];
			$this->load->view('myReportExportContainerBlockList',$data);
		}
		
		// vessel layout end
		
		// Vessel List for Canada
		
		function myVesselList()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="VESSEL LIST...";
				$fromdate=$this->input->post('fromdate');
				$todate=$this->input->post('todate');
				if($fromdate!=""){
					$date="file_clearence_date between '$fromdate' and '$todate 23:59:59' ";
				}else{
					$date="year(file_clearence_date)= year(now()) ";
				}
				if($fromdate!=""){
				$str="select Import_Rotation_No,Vessel_Name,file_clearence_date as Submission_Date from igm_masters where vsl_dec_type='GM' and $date order by id desc";
				//echo $str;
				$rtnVesselList = $this->bm->dataSelectDb1($str);
				$data['rtnVesselList']=$rtnVesselList;
				}
				else
				$data['rtnVesselList']="";
				$this->load->view('header2');
				$this->load->view('myVesselList',$data);
				$this->load->view('footer');
			}	
        }
		
		function myIGMDownload()
		{
			$rot=$this->uri->segment(3);
			$year=$this->uri->segment(4);
			
			$data['rot']=$rot."/".$year;
			$this->load->view('myIGMDownloadTxt',$data);
		}
		
		
		// convert igm to certify section
		function convertIgmCertifySection()
		{		
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['msg']="";
				$data['title']="CONVERT IGM...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myConvertIgmCertifySection',$data);
				$this->load->view('jsAssets');
			}	
			
		}
		
		function convertIgmCertify()	
		{	
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
	
			$str="SELECT  inv_unit.gkey AS unit_gkey,inv_unit.id AS containerId,argo_carrier_visit.id AS vesslID,r.id AS mlo 
			FROM inv_unit  
			INNER JOIN argo_carrier_visit ON (argo_carrier_visit.gkey=inv_unit.cv_gkey OR argo_carrier_visit.gkey=inv_unit.declrd_ib_cv)  
			INNER JOIN ref_bizunit_scoped r ON r.gkey=inv_unit.line_op 
			LEFT JOIN ref_agent_representation x on r.gkey=x.bzu_gkey 
			LEFT JOIN ref_bizunit_scoped y ON x.agent_gkey=y.gkey 
			INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey  
			WHERE vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no' AND inv_unit.category='IMPRT'";
			
			$rtnContainerList = $this->bm->dataSelect($str);
			$i=0;
			
			foreach($rtnContainerList as $n4ContainerList)
			{
				$unit_gkey=$n4ContainerList['unit_gkey'];
				$container_id=$n4ContainerList['containerId'];
				$vesslID=$n4ContainerList['vesslID'];
				$mlo_code=$n4ContainerList['mlo'];
				 
				//$strUpdate="REPLACE INTO continfo_pervessel (unit_gkey,rotation,container_id,vessel_id,mlo) values('$unit_gkey','$ddl_imp_rot_no','$container_id','$vesslID','$mlo_code')";
				//$rtnContainerPreVessel = $this->bm->dataUpdate($strUpdate);
				
				$igmContainer="select distinct igm_detail_container.off_dock_id as desti_code,igm_detail_container.cont_vat as vat_novat,igm_details.BL_No as mbl,ifnull(igm_supplimentary_detail.BL_No,'') as sbl from igm_detail_container 
				inner join igm_details on igm_details.id=igm_detail_container.igm_detail_id left join igm_supplimentary_detail on igm_supplimentary_detail.igm_detail_id=igm_details.id  
				where igm_details.Import_Rotation_No='$ddl_imp_rot_no' and igm_detail_container.cont_number='$container_id' limit 1";
			

				$rtnContainerList = $this->bm->dataSelectDb1($igmContainer);
				
				$desti_code=$rtnContainerList[0]['desti_code'];
				$vat_novat=$rtnContainerList[0]['vat_novat'];
				$masterBL=$rtnContainerList[0]['mbl'];
				$subBL=$rtnContainerList[0]['sbl'];
				$vatperc = 0;
				
				$vat="";
				if($vat_novat=="VAT")
				{
					$vatperc = 15;
					$vat="VAT";
				}
				else
				{
				   $vat="NON VAT"; 
				   $vatperc = 0;
				}
				$billed = 0;
				if($subBL=="")
				{
					$strBillingNew="REPLACE INTO ctmsmis.billingvatinfo_new(unit_gkey,equipmentid,last_update,vatperc,billed,master_BL_No,sub_BL_No) VALUES('$unit_gkey','$container_id',NOW(),'$vatperc','$billed','$masterBL',null)";
				}
				else
				{
					$strBillingNew="REPLACE INTO ctmsmis.billingvatinfo_new(unit_gkey,equipmentid,last_update,vatperc,billed,master_BL_No,sub_BL_No) VALUES('$unit_gkey','$container_id',NOW(),'$vatperc','$billed','$masterBL','$subBL')";
				}
				
				$rtnBillingInfo = $this->bm->dataUpdatedb2($strBillingNew);
				if($rtnBillingInfo>0)
					$i++;		
			}
			
			if($i>0)
				$msg="Successfully Inserted";
			else
				$msg="Not Inserted. Please Try Again...";
			
			//REPLACE INTO continfo_pervessel (unit_gkey,rotation,container_id,vessel_id,mlo) values('$unit_gkey','$ddl_imp_rot_no','$container_id','$vesslID','$mlo_code')
			$data['title']="CONVERT IGM...";
			$data['msg']=$msg;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myConvertIgmCertifySection',$data);
			$this->load->view('jsAssets');
		
		}
		
		// convert igm to certify section
		
		// One Stop Certify Section000
		function onestopCertifySection()
		{		
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['msg']="";
				$data['title']="Location \ Certify";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myOneStopCertifySection',$data);
				$this->load->view('jsAssets');
			}	
		
		}
		
		Function oneStopIgmCertifyList()		
		{		
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{	
				$ddl_imp_cont_no=$this->input->post('ddl_imp_cont_no');
				$ddl_imp_bl_no=$this->input->post('ddl_imp_bl_no');
				
				$rtnBlNo = "";
				$rtnRotation = "";
				$searchType = "";

				if($ddl_imp_cont_no!="")
				{
					$sqlBl="select BL_No,igm_details.Import_Rotation_No from igm_details 
						inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id 
						where cont_number='$ddl_imp_cont_no' order by igm_detail_container.id desc limit 1";
					$rtnBlList = $this->bm->dataSelectDb1($sqlBl);
					
					for($i=0;$i<count($rtnBlList);$i++){
						$rtnBlNo= $rtnBlList[$i]['BL_No'];
						$rtnRotation= $rtnBlList[$i]['Import_Rotation_No'];
					}
					$searchType = "container";
				}
				else
				{
					$sqlBl="select BL_No,igm_details.Import_Rotation_No from igm_details 
							inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id 
							where BL_No='$ddl_imp_bl_no' order by igm_detail_container.id desc limit 1";
					$rtnBlList = $this->bm->dataSelectDb1($sqlBl);
					for($i=0;$i<count($rtnBlList);$i++){
						$rtnBlNo= $rtnBlList[0]['BL_No'];
						$rtnRotation= $rtnBlList[0]['Import_Rotation_No'];
					}
					//$rtnBlNo=$ddl_imp_bl_no;
					$searchType = "bl";
				}
						
				$sqlContainer="select igm_details.id,cont_number,igm_details.Import_Rotation_No,(select Vessel_Name from igm_masters 
				where igm_masters.id=igm_details.IGM_id) as vsl_name,igm_details.BL_No,
				cont_size,cont_height,off_dock_id,
				(select Organization_Name from organization_profiles where organization_profiles.id=igm_detail_container.off_dock_id) as offdock_name,
				cont_status,cont_seal_number,cont_iso_type from igm_detail_container 
				inner join igm_details on igm_details.id=igm_detail_container.igm_detail_id 
				where igm_details.BL_No='$rtnBlNo' and igm_details.Import_Rotation_No='$rtnRotation'
				union
				select igm_details.id,cont_number,igm_details.Import_Rotation_No,(select Vessel_Name from igm_masters 
				where igm_masters.id=igm_supplimentary_detail.igm_master_id) as vsl_name,igm_details.BL_No,
				cont_size,cont_height,off_dock_id,
				(select Organization_Name from organization_profiles where organization_profiles.id=igm_sup_detail_container.off_dock_id) as offdock_name,
				cont_status,cont_seal_number,cont_iso_type from igm_sup_detail_container 
				inner join igm_supplimentary_detail on igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id 
				inner join igm_details on igm_details.id=igm_supplimentary_detail.igm_detail_id
				where igm_supplimentary_detail.BL_No='$rtnBlNo' and igm_details.Import_Rotation_No='$rtnRotation'";
				
				//echo $sqlContainer;return;
				$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
				$data['rtnContainerList']=$rtnContainerList;
			
				$data['containerNo']=$ddl_imp_cont_no;
				$data['blNo']=$ddl_imp_bl_no;
				$data['searchType']=$searchType;
				$data['title']="Container List";
				// $this->load->view('header5');
				// $this->load->view('myoneStopIgmCertifyListHtml1',$data);
				// $this->load->view('footer_1');
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myoneStopIgmCertifyListHtml1',$data);
				$this->load->view('jsAssets');
			}
		}
		// One Stop Certify Section
		
		
		// End vessel List for canada
		//Get Shipping Agent From AJAX
		function getAgent()
		{
			//print_r($this->session->all_userdata());
			//$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			//print_r("shemul test report");
			$this->load->view('getAgent');

		}	
		
		
		
		//Get MLO CODE From AJAX
		function getmlocode()
		{
			//print_r($this->session->all_userdata());
			//$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			//print_r("shemul test report");
			$this->load->view('getmlocode');

		}	
		
		//Get Mlo code for LCL Manifest from Ajax
		function getmlocodeigm()
		{
			
			$this->load->view('getmlocodeigm');

        }	
			
		//Get Shiiping agent for IGM Report from Ajax
		function getShippingAgents()
		{
			
			$this->load->view('getShippingAgents');

		}	
		
		function getmlo(){
			
			$this->load->view('getmlo');
        }	
		
		function getSupShippingAgents(){
			
			$this->load->view('getSupShippingAgents');
        }	
		
		function preAdvisedOffDockContByRotForm()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="ROTATION WISE PREADVICE CONTAINER REPORT...";
				//echo $data['title'];

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('preAdvisedOffDockContByRotForm',$data);
				$this->load->view('jsAssets');
			}	
        }	
		
		function preAdvisedOffDockContByRotReport()
		{	
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$login_id = $this->session->userdata('login_id');	
				$data['login_id']=$login_id;
				$ofdock = $this->Offdock($login_id);
				$rotation=$this->input->post('rotation');
				$data['rotation']=$rotation;
				$serch_by=$this->input->post('serch_by');
				$data['serch_by']=$serch_by;
				$data['ofdock']=$ofdock;
				$this->load->view('preAdvisedOffDockContByRotReport',$data);
				$this->load->view('myclosebar');
			}
		}

		/*function dateWiseEqipAssignForm(){
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			if($session_id!=$this->session->userdata('session_id'))
			{
				$this->logout();
			}
			else
			{
				$data['title']="DATE WISE EQUIPMENT ASSINGMENT LIST...";
				//echo $data['title'];
				$this->load->view('header2');
				$this->load->view('dateWiseEqipAssignFormView',$data);
				$this->load->view('footer');
			}	
		}*/
		
		// Sourav Attached .............. 
		function containerHandlingRptForm()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{  
				$data['title']="CONTAINER HANDLING REPORT...";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myReportContainerHandling',$data);
				$this->load->view('jsAssets');
			}	
        }
		

		function showProcessList()
		{
			$session_id = $this->session->userdata('value');
			$login_id = $this->session->userdata('login_id');
			
			$this->load->model('ci_auth', 'bm', TRUE);
			
				
				$sql_data="SELECT * FROM information_schema.processlist where User ='sparcsn4' and DB is not null order by Time asc;";
			
				$processList = $this->bm->dataSelectDb2($sql_data);
				
				$data['processList']=$processList;    
				$data['title']="Running Process List...";
				
				$data['login_id']=$login_id;
				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('showProcessForm',$data);
				$this->load->view('jsAssetsList');
			//}
		}
		
		function slaveProcess()
		{
			$session_id = $this->session->userdata('value');
			$login_id = $this->session->userdata('login_id');			
			$this->load->model('ci_auth', 'bm', TRUE);
			
				$sql_data="show slave STATUS";
			
				$processList = $this->bm->dataSelectDb2($sql_data);
				
				$data['processList']=$processList; 

				$sql_data22="show slave STATUS";
			
				$processList22 = $this->bm->dataSelectDb2($sql_data22);
				
				$data['processList22']=$processList22;    
				
				$data['title']="Slave Process";

				$data['login_id']=$login_id;

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('slaveProcess',$data);
				$this->load->view('jsAssets');
		}	
		
		function plannedRptForm()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{  
				$data['title']="Container Job Done Report Vesselwise...";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myPlannedRptFrm',$data);
				$this->load->view('jsAssetsList');
			}	
		}
		
		function plannedRptFormView()
		{
					
					$srcFor=$this->input->post('srcFor');
					$srcRot=$this->input->post('srcRot');
					$fromdate=$this->input->post('fromdate');
					$todate=$this->input->post('todate');
					
					
					//return;
					$data['fromdate']=$fromdate;
					$data['todate']=$todate;
					$data['srcFor']=$srcFor;
					$data['srcRot']=$srcRot;
					
					//echo $data['voysNo'];
					$this->load->view('plannedRptFormViewList',$data);
		}

		function officeCodeUpdaterForm()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{  
				$data['title']="Update Form....";
				//echo $data['title'];
				//$this->load->view('header2');
				//$this->load->view('updateShedFrm',$data);
				//$this->load->view('footer');
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('ShippingAgentPanel/updateShedFrm',$data);
				$this->load->view('jsAssets');
			}	
		}
		
		function shedUpdateFormView()
		{
			$rotation=$this->input->post('rotation');
			$container=$this->input->post('container');
			$tblName="";
			$chkSupTbl="select COUNT(igm_supplimentary_detail.id) 
						from igm_supplimentary_detail 
						inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
						where Import_Rotation_No='$rotation' and cont_number='$container'";
			$chkSupTbl = $this->bm->dataSelectDb1($chkSupTbl);
			if($chkSupTbl==0)
			{
				$sqlUpdateShed="select igm_details.id,igm_details.Line_No,Import_Rotation_No,BL_No,cont_number,Pack_Number 
								from igm_details 
								inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
								where Import_Rotation_No='$rotation' and cont_number='$container'
								order by 2";
				$tblName="Detail";
			}
			else{
				$sqlUpdateShed="select igm_supplimentary_detail.id,igm_supplimentary_detail.Line_No,Import_Rotation_No,BL_No,cont_number,Pack_Number 
							from igm_supplimentary_detail 
							inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
							where Import_Rotation_No='$rotation' and cont_number='$container'
							order by 2";
				$tblName="SupDetail";
			}
			//echo $sqlContainer;
			$rtnSqlUpdateShedList = $this->bm->dataSelectDb1($sqlUpdateShed);
			$data['rtnSqlUpdateShedList']=$rtnSqlUpdateShedList;
			$data['container']=$container;
			$data['rotation']=$rotation;
			$data['tblName']=$tblName;
			$data['msg']="";
			//echo $data['voysNo'];
			$this->load->view('ShippingAgentPanel/shedUpdateFormView',$data);
		}
		
		function updateActionPerform()
		{
					
				$rotation=$this->input->post('rotation');
				$container=$this->input->post('container');
				$tblName=$this->input->post('tblName');
				
				$dtlID=$this->input->post('dtlID');
				$lineNo=$this->input->post('lineNo');
				$packNo=$this->input->post('packNo');
				$blNo=$this->input->post('blNo');
				$beNo=$this->input->post('beNo');
				$beDate=$this->input->post('beDate');
				$offCode=$this->input->post('offCode');
				
				//echo "Detail ID : ".$dtlID." Line : ".$lineNo." BE No : ".$beNo." Table Name : ".$tblName;
				
				if($tblName=="Detail")
				{
					$strupdate = "update igm_details 
									set Bill_of_Entry_No='$beNo', Bill_of_Entry_Date='$beDate', office_code='$offCode'
									where id=$dtlID";
									echo "Detail";
				}
				else{
					$strupdate = "update igm_supplimentary_detail 
								  set Bill_of_Entry_No='$beNo', Bill_of_Entry_Date='$beDate', office_code='$offCode'
								  where id=$dtlID";
								  echo $strupdate;
				}
			
			$stat = $this->bm->dataInsertDB1($strupdate);
			//$stat=1;
			//echo "Stat : ".$stat;
			
			$data['msg']="";
			if($stat==1)
				$data['msg']="Data successfully updated ";
			else
				$data['msg']="Data not updated";
			
				$tblName="";
				
				$chkSupTbl="select COUNT(igm_supplimentary_detail.id) 
							from igm_supplimentary_detail 
							inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
							where Import_Rotation_No='$rotation' and cont_number='$container'";
				$chkSupTbl = $this->bm->dataSelectDb1($chkSupTbl);
				if($chkSupTbl==0)
				{
					$sqlUpdateShed="
									select igm_details.id,igm_details.Line_No,Import_Rotation_No,BL_No,cont_number,Pack_Number 
									from igm_details 
									inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
									where Import_Rotation_No='$rotation' and cont_number='$container'
									order by 2";
					$tblName="Detail";
				}
				else{
					$sqlUpdateShed="select igm_supplimentary_detail.id,igm_supplimentary_detail.Line_No,Import_Rotation_No,BL_No,cont_number,Pack_Number 
								from igm_supplimentary_detail 
								inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
								where Import_Rotation_No='$rotation' and cont_number='$container'
								order by 2";
					$tblName="SupDetail";
				}
			
			//echo $sqlContainer;
				$rtnSqlUpdateShedList = $this->bm->dataSelectDb1($sqlUpdateShed);
				$data['rtnSqlUpdateShedList']=$rtnSqlUpdateShedList;
				$data['container']=$container;
				$data['rotation']=$rotation;
				$data['tblName']=$tblName;
				//$data['container']=$container;
				//$data['rotation']=$rotation;
				//echo $data['voysNo'];
				//$this->load->view('shedUpdateFormView',$data);
			$this->load->view('shedUpdateFormView',$data);
		}

		function doReportForm()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{  
				$data['title']="Delivery Order Report...";
				//echo $data['title'];
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('doRptFrm',$data);
				$this->load->view('jsAssets');
				
				//$this->load->view('header2');
				//$this->load->view('doRptFrm',$data);
				//$this->load->view('footer');
			}	
		}

		function doReportView()
		{

			$be_no=$this->input->post('be_no');
			
			$data['be_no']=$be_no;				
			//echo $data['voysNo'];
			$this->load->view('doRptFormViewList',$data);
		}
		
		function tallyEntryWithIgmInfoForm()
		{	
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="TALLY ENTRY FORM WITH IGM INFORMATION...";
				$data['msg'] = "";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('tallyEntryForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function tallyEntryFormWithIgmContInfo()
		{	
			$session_id = $this->session->userdata('value');			
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$rotation = "";
				$cont = "";				
				if($this->input->post('rotation') && $this->input->post('cont'))
				{
					$rotation=strtoupper(trim($this->input->post('rotation')));
					$cont=trim($this->input->post('cont'));
					
					$cntquery="SELECT COUNT(lcl_assignment_detail.igm_cont_detail_id) AS rtnValue
					FROM lcl_assignment_detail
					INNER JOIN igm_details ON igm_details.id=lcl_assignment_detail.igm_detail_id
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'";
					
					$cntrslt=$this->bm->dataReturnDb1($cntquery);
					
					
					if($cntrslt==0)
					{
						$data['title']="TALLY ENTRY FORM WITH IGM INFORMATION...";
						$data['msg']="<font color='red'>Please provide assignment for the container</font>";
						$data['assigned']=0;
						$data['rotation']=$rotation;
						$data['cont']=$cont;
						//$this->load->view('tallyEntryFormView',$data);
						
						$this->load->view('cssAssets');
						$this->load->view('headerTop');
						$this->load->view('sidebar');
						$this->load->view('tallyEntryForm',$data);
						$this->load->view('jsAssets');
						
						return;
					} 
				}
				else
				{
					$cont=$this->uri->segment(3);
					$rot_year=$this->uri->segment(4);
					$rot_no=$this->uri->segment(5);
					$rotation=$rot_year.'/'.$rot_no;
					
					$cntquery="SELECT COUNT(lcl_assignment_detail.igm_detail_id) AS rtnValue
					FROM lcl_assignment_detail
					INNER JOIN igm_details ON igm_details.id=lcl_assignment_detail.igm_detail_id
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'";
					
					$cntrslt=$this->bm->dataReturnDb1($cntquery);
					
					if($cntrslt==0)
					{
						$data['title']="TALLY ENTRY FORM WITH IGM INFORMATION...";
						$data['msg']="Please provide assignment for the container";
						$data['assigned']=0;
						//$this->load->view('tallyEntryFormView',$data);
						
						$this->load->view('cssAssets');
						$this->load->view('headerTop');
						$this->load->view('sidebar');
						$this->load->view('tallyEntryForm',$data);
						$this->load->view('jsAssets');
						
						return;
					}
				}			
				$this->loadTallySheet($rotation,$cont,"form");
			}
		}
		
		function loadTallySheet($rotation,$cont,$op)
		{
			$org_Type_id = $this->session->userdata('org_Type_id');
			$chkExistShedTallyQry="select count(id) as id from shed_tally_info WHERE  import_rotation='$rotation' and cont_number='$cont'";
			$rtnExistShedTally = $this->bm->dataSelectDb1($chkExistShedTallyQry);
			$cntExist = $rtnExistShedTally[0]['id'];								
			
			$tbl = "sup_detail";
		
			//Cont_gross_weight and cont_seal_number added
			if($cntExist<1)
			{
				$sqlContainer="SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
				FROM igm_supplimentary_detail 
				LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id					
				WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'
				ORDER BY 2";
				
				$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
				$cnt = count($rtnContainerList);				
				if($cnt>0)
				{
					$tbl = "sup_detail";
				}
				
				$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
				FROM igm_supplimentary_detail 
				LEFT JOIN igm_details ON igm_details.id=igm_supplimentary_detail.igm_detail_id
				LEFT JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
				LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id	
				WHERE igm_masters.Import_Rotation_No= '$rotation' AND igm_sup_detail_container.cont_number='$cont'";
				
				
			}
			else
			{
				$sqlContainerCheck="SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
				FROM igm_supplimentary_detail 
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'
				ORDER BY 2";				

				$rtnContainerListCheck = $this->bm->dataSelectDb1($sqlContainerCheck);
				$cntCheck = count($rtnContainerListCheck);
				
				if($cntCheck==0)
				{
							$sqlContainer = "select * from (select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rotation' and cont_number='$cont'					
					) tbl1
					union
					select * from (SELECT shed_tally_info.igm_detail_id AS id,
					import_rotation AS Import_Rotation_No,
					BL_No,
					shed_tally_info.cont_number,
					cont_size,
					Cont_gross_weight,
					cont_seal_number,
					Pack_Description,
					Pack_Marks_Number,
					Pack_Number,
					ConsigneeDesc,
					NotifyDesc FROM shed_tally_info LEFT JOIN igm_details ON shed_tally_info.igm_detail_id=igm_details.id LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id WHERE shed_tally_info.import_rotation='$rotation' 
					AND shed_tally_info.cont_number='$cont'  AND shed_tally_info.igm_detail_id IS NOT NULL 
					) tbl2
					UNION
					 SELECT * FROM (SELECT shed_tally_info.igm_sup_detail_id AS id, import_rotation AS Import_Rotation_No, BL_No, shed_tally_info.cont_number, cont_size, Cont_gross_weight, cont_seal_number, Pack_Description, Pack_Marks_Number, Pack_Number, ConsigneeDesc, NotifyDesc FROM shed_tally_info LEFT JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
					LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id 
					 WHERE shed_tally_info.import_rotation='$rotation' AND shed_tally_info.cont_number='$cont'
					 AND  shed_tally_info.igm_sup_detail_id IS NOT NULL ) tbl3";
					//"AND BL_NO IS NOT NULL" (removed condition from above query for showing data of blank BL)-------------------
					$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
					FROM igm_details 
					LEFT JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
					LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id	
					WHERE igm_masters.Import_Rotation_No= '$rotation' AND igm_detail_container.cont_number='$cont'";
					
					$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
					$cnt = count($rtnContainerList);				
					if($cnt>0)
					{
						$tbl = "detail";
					}	
				}
				else
				{
					$sqlContainer="select * from (SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,
					cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					FROM igm_supplimentary_detail 
					LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id					
					WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'
					) tbl1
					union
					select * from (SELECT shed_tally_info.igm_sup_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,
					shed_tally_info.cont_number, cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,
					NotifyDesc FROM shed_tally_info 
					LEFT JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
					LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id 
					WHERE shed_tally_info.import_rotation='$rotation' and shed_tally_info.cont_number='$cont' and BL_NO is null
					AND shed_tally_info.igm_sup_detail_id IS NOT NULL
					)tbl2";
					
					$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
					$cnt = count($rtnContainerList);				
					if($cnt>0)
					{
						$tbl = "sup_detail";
					}	
					
					$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
					FROM igm_supplimentary_detail 
					LEFT JOIN igm_details ON igm_details.id=igm_supplimentary_detail.igm_detail_id
					LEFT JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
					LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id	
					WHERE igm_masters.Import_Rotation_No= '$rotation' AND igm_sup_detail_container.cont_number='$cont'";
				}										
			}
			//echo $sqlContainer;
			
			$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
			$cnt = count($rtnContainerList);				
									
			//Cont_gross_weight and cont_seal_number added
		 	if($cnt==0)
			{
				$tbl = "detail";
				if($cntExist<1)
				{
					$sqlContainer = "select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					LEFT join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rotation' and cont_number='$cont'
					order by 2";
				}
				else
				{
					$sqlContainer = "select * from (select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rotation' and cont_number='$cont'					
					) tbl1
					union
					select * from (SELECT shed_tally_info.igm_detail_id AS id,
					import_rotation AS Import_Rotation_No,
					BL_No,
					shed_tally_info.cont_number,
					cont_size,
					Cont_gross_weight,
					cont_seal_number,
					Pack_Description,
					Pack_Marks_Number,
					Pack_Number,
					ConsigneeDesc,
					NotifyDesc FROM shed_tally_info LEFT JOIN igm_details ON shed_tally_info.igm_detail_id=igm_details.id LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id WHERE shed_tally_info.import_rotation='$rotation' AND shed_tally_info.cont_number='$cont' AND BL_NO IS NOT NULL 
					)tbl2";
				}
				
				$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
				$cnt = count($rtnContainerList);				
				if($cnt>0)
				{
					$tbl = "detail";
				}
				$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
				FROM igm_details 
				LEFT JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
				LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id	
				WHERE igm_masters.Import_Rotation_No= '$rotation' AND igm_detail_container.cont_number='$cont'";
			} 
			//echo $sqlContainer;
			// query for devonestop - remove later
			$chkExchangeDoneQuery="select count(id) as chkVal from shed_tally_info where import_rotation='$rotation' and cont_number='$cont' and exchange_done_status=1";
			$data['msgExchange']="Exchange Done";
			
			if($org_Type_id==59)			//CPA Shed Users
			{
				$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
				FROM shed_tally_info 
				WHERE import_rotation='$rotation' AND cont_number='$cont' AND cpa_exchange_done_status=1";
			}
			else if($org_Type_id==30)		// Berth Operator
			{					
				$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
				FROM shed_tally_info 
				WHERE import_rotation='$rotation' AND cont_number='$cont' AND berth_exchange_done_status=1";
			}
			// else if($org_Type_id==4)		// FF
			else if($org_Type_id==2)		// C&F
			{					
				$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
				FROM shed_tally_info 
				WHERE import_rotation='$rotation' AND cont_number='$cont' AND ff_exchange_done_status=1";
			}
			
			$chkList = $this->bm->dataSelectDb1($chkExchangeDoneQuery);
			$chkVal= $chkList[0]['chkVal'];
			if($chkVal>0)
			{
				//$data['update_btn_status']=0;
				$data['view_btn_status']=1;  //previously 0; 1 for exchange done; alter if necessary
				$data['save_btn_status']=0;
				$data['exchange_btn_status']=0;
				$data['msgExchange']="Exchange Done";
			}
			else
			{
				// query for devonestop - remove later
				$chkExchangeDoneQuery="select count(id) as chkVal from shed_tally_info where import_rotation='$rotation' and cont_number='$cont' and exchange_done_status=0";
				
				if($org_Type_id==59)			//CPA Shed Users
				{
					$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
					FROM shed_tally_info 
					WHERE import_rotation='$rotation' AND cont_number='$cont' AND cpa_exchange_done_status=0";
				}
				else if($org_Type_id==30)		// Berth Operator
				{					
					$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
					FROM shed_tally_info 
					WHERE import_rotation='$rotation' AND cont_number='$cont' AND berth_exchange_done_status=0";
				}
				// else if($org_Type_id==4)		// FF
				else if($org_Type_id==2)		// C&F
				{					
					$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
					FROM shed_tally_info 
					WHERE import_rotation='$rotation' AND cont_number='$cont' AND ff_exchange_done_status=0";
				}
		
				$chkList = $this->bm->dataSelectDb1($chkExchangeDoneQuery);
				$chkVal= $chkList[0]['chkVal'];
				if($chkVal>0)
				{
					//$data['update_btn_status']=1;
					$data['view_btn_status']=1;
					$data['exchange_btn_status']=1;
					$data['save_btn_status']=1;
				}
				else
				{
					//$data['update_btn_status']=0;
					$data['view_btn_status']=0;
					$data['exchange_btn_status']=0;
					$data['save_btn_status']=1;
				}
			}
			$login_id = $this->session->userdata('login_id');
																			
			$rslt_vesselname_seal=$this->bm->dataSelectDb1($sql_vesselname_seal);
			
			$data['rslt_vesselname_seal']=$rslt_vesselname_seal;
			
			$data['assigned']=1;		
			$data['rotation']=$rotation;
			$data['tbl']=$tbl;
			$data['cont']=$cont;
			$data['stat']="";
			$data['login_id']=$login_id;
			if($op=="save")
			{
				$data['stat']="<font color='blue'><b>Sucessfully inserted</b></font>";
			}
			else if($op=="dlt")
			{
				$data['stat']="<font color='red'><b>Sucessfully deleted</b></font>";
			}
			else
			{
				$data['stat']="";
			}
			
			$data['rtnContainerList']=$rtnContainerList; //"$rtnContainerList" returns selected data for table
			$this->load->view('tallyEntryFormView',$data);
		}
		//////////// SOURAV TALLY ENTRY NEW FORMAT START ////////////////////////

		function saveTallyRcv()
		{				
			$rcv=$this->input->post('rcv');
			$conLocFast=$this->input->post('conLocFast');
			$flt=$this->input->post('flt');
			$flt_pack_loc=$this->input->post('flt_pack_loc');
			$totalPck=$this->input->post('totalPck');
			$rcv_unit=$this->input->post('rcv_unit');
			$loc=$this->input->post('contAtShed');
			$shiftname=$this->input->post('shiftname');
			$actualmarks=$this->input->post('actualmarks');
			$remark=$this->input->post('remark');			
			$dtlId=$this->input->post('dtlId');
			//$wrDate=$this->input->post('wrDate');
			
						
			$unstuffingDate=$this->input->post('unstuffingDate');
			
			$phy_tally_no=$this->input->post('phy_tally_no');	
			$phy_tally=$this->input->post('phy_tally');
			if($phy_tally_no!="")
			{
				$physical_tally_sheet_no = $phy_tally_no;
			}
			else
			{
				$physical_tally_sheet_no = $phy_tally;
			}
			
			$rot=$this->input->post('rot');
			$cont=strtoupper($this->input->post('cont'));
			
			$berth_op=$this->input->post('berth_op');
			
			$tbl=$this->input->post('tbl');
			
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			$login_id = $this->session->userdata('login_id');
			$section = $this->session->userdata('section');
			$shed_name = $this->input->post('shed_name');
			
			$date = date('dmy');
			$dtlDate = date('my');
			
			$igmDetailQuery="select MAX(id) as rtnValue from shed_tally_info";				
			$igmDetailId = $this->bm->dataReturnDb1($igmDetailQuery);
			$igmDetailId_no = $igmDetailId+1;
			$igmDetailNumber=$dtlDate."00".$igmDetailId_no;
			 
			$strChkTallySheetEntry="select count(id) as id from shed_tally_info WHERE  import_rotation='$rot' and cont_number='$cont'";
			//echo $strChkTallySheetEntry;
			$rtnExistTallySheet = $this->bm->dataSelectDb1($strChkTallySheetEntry);
			$tallyExist = $rtnExistTallySheet[0]['id'];
			
			//echo "Exist : ".$tallyExist;
			if($tallyExist>0)
			{
				$strGetTallyInformation= "select distinct tally_sheet_no,wr_date,tally_sheet_number from shed_tally_info WHERE  import_rotation='$rot' and cont_number='$cont'";
				$rtnGetTallyInformation = $this->bm->dataSelectDb1($strGetTallyInformation);
				
				$tallySheetNo=$rtnGetTallyInformation[0]['tally_sheet_no'];
				$wrDate=$rtnGetTallyInformation[0]['wr_date'];
				$tallySheetNumber=$rtnGetTallyInformation[0]['tally_sheet_number'];
				if($tbl=="sup_detail")
				{
					if($dtlId=="" || $dtlId==0)
					{
						$str = "insert into shed_tally_info(igm_sup_detail_id,import_rotation,cont_number,rcv_pack,flt_pack,flt_pack_loc,shed_loc,update_by,ip_addr,remarks,last_update,tally_sheet_no,shift_name,actual_marks,loc_first,total_pack,wr_date,shed_yard,rcv_unit,tally_sheet_number, berthOp,physical_tally_sheet_no)
						values('$igmDetailNumber','$rot','$cont','$rcv','$flt','$flt_pack_loc','$loc','$login_id','$ipaddr','$remark',now(),
						'$tallySheetNo','$shiftname','$actualmarks',$conLocFast,$totalPck,'$unstuffingDate','$shed_name','$rcv_unit','$tallySheetNumber',
						'$berth_op','$physical_tally_sheet_no')";
					}
					else
					{
					
						$str = "insert into shed_tally_info(igm_sup_detail_id,import_rotation,cont_number,rcv_pack,flt_pack,flt_pack_loc,shed_loc,update_by,ip_addr,
							remarks,last_update,tally_sheet_no,shift_name,actual_marks,loc_first,total_pack,wr_date,shed_yard,rcv_unit,tally_sheet_number, berthOp,physical_tally_sheet_no)
							values('$dtlId','$rot','$cont','$rcv','$flt','$flt_pack_loc','$loc','$login_id','$ipaddr','$remark',now(),
							'$tallySheetNo','$shiftname','$actualmarks',$conLocFast,$totalPck,'$unstuffingDate','$shed_name','$rcv_unit','$tallySheetNumber',
							'$berth_op','$physical_tally_sheet_no')";
					}
				}
				else
				{
					if($dtlId=="" || $dtlId==0)
					{
						$maxtally_sheet_no="";
						$str = "insert into shed_tally_info(igm_detail_id,import_rotation,cont_number,rcv_pack,flt_pack,flt_pack_loc,shed_loc,update_by,
						ip_addr,remarks,last_update,tally_sheet_no,shift_name,actual_marks,loc_first,total_pack,wr_date,shed_yard,rcv_unit,
						tally_sheet_number, berthOp,physical_tally_sheet_no)
						values('$igmDetailNumber','$rot','$cont','$rcv','$flt','$flt_pack_loc','$loc','$login_id','$ipaddr','$remark',now(),
						'$tallySheetNo','$shiftname','$actualmarks',$conLocFast,$totalPck,'$unstuffingDate','$shed_name','$rcv_unit',
						'$tallySheetNumber', '$berth_op','$physical_tally_sheet_no')";
					}
					else
					{
						$str = "insert into shed_tally_info(igm_detail_id,import_rotation,cont_number,rcv_pack,flt_pack,flt_pack_loc,shed_loc,update_by,
						ip_addr,remarks,last_update,tally_sheet_no,shift_name,actual_marks,loc_first,total_pack,wr_date,shed_yard,
						rcv_unit,tally_sheet_number, berthOp,physical_tally_sheet_no)
						values('$dtlId','$rot','$cont','$rcv','$flt','$flt_pack_loc','$loc','$login_id','$ipaddr','$remark',now(),
						'$tallySheetNo','$shiftname','$actualmarks',$conLocFast,$totalPck,'$unstuffingDate','$shed_name','$rcv_unit','$tallySheetNumber',
						'$berth_op','$physical_tally_sheet_no')";
					}
				}
				/* echo $str;
				return; */
				$stat = $this->bm->dataInsertDB1($str);
				if($stat==1)
				{					
					$data['stat']="<font color='red'><b>Sucessfully inserted</b></font>";
					$data['view_btn_status']=1;
					$data['exchange_btn_status']=1;
					$data['save_btn_status']=1;
				}
			}
			else
			{
				//echo "NEW DATA";
				
				$tally_sheet_noQuery="select MAX(tally_sheet_no) as rtnValue from shed_tally_info";
				$tally_sheet_no = $this->bm->dataReturnDb1($tally_sheet_noQuery);
				
				
				
				$maxtally_sheet_no = $tally_sheet_no+1;
				//$igmDetailId_no = $igmDetailId+1;
				
				$size=strlen($maxtally_sheet_no);
				
				if($size==1)
				{
				//	 $tallySheetNumber="TSN"."-".$date."000".$maxtally_sheet_no;
					 $tallySheetNumber=$section."-".$date."000".$maxtally_sheet_no;
					 //$igmDetailNumber=$dtlDate.$maxtally_sheet_no.$igmDetailId_no;
				}
				else if($size==2)
				{
				//	 $tallySheetNumber="TSN"."-".$date."00".$maxtally_sheet_no;
					$tallySheetNumber=$section."-".$date."00".$maxtally_sheet_no;
					//$igmDetailNumber=$dtlDate.$maxtally_sheet_no.$igmDetailId_no;
				}
				else if($size==3)
				{
				//	 $tallySheetNumber="TSN"."-".$date."0".$maxtally_sheet_no;
					 $tallySheetNumber=$section."-".$date."0".$maxtally_sheet_no;
					 //$igmDetailNumber=$dtlDate.$maxtally_sheet_no.$igmDetailId_no;
				}
				else 
				{
				//	 $tallySheetNumber="TSN"."-".$date."".$maxtally_sheet_no;
					$tallySheetNumber=$section."-".$date."".$maxtally_sheet_no;
					//$igmDetailNumber=$dtlDate.$maxtally_sheet_no.$igmDetailId_no;
				}
				if($tbl=="sup_detail")
				{
					if($dtlId=="" || $dtlId==0)
					{
							$str = "insert into shed_tally_info(igm_sup_detail_id,import_rotation,cont_number,rcv_pack,flt_pack,flt_pack_loc,shed_loc,update_by,ip_addr,remarks,last_update,tally_sheet_no,shift_name,actual_marks,loc_first,total_pack,wr_date,shed_yard,rcv_unit,tally_sheet_number, berthOp,physical_tally_sheet_no)
							values('$igmDetailNumber','$rot','$cont','$rcv','$flt','$flt_pack_loc','$loc','$login_id','$ipaddr','$remark',now(),
							'$maxtally_sheet_no','$shiftname','$actualmarks',$conLocFast,$totalPck,'$unstuffingDate','$shed_name','$rcv_unit','$tallySheetNumber',
							'$berth_op','$physical_tally_sheet_no')";
					}
					else
					{
							$str = "insert into shed_tally_info(igm_sup_detail_id,import_rotation,cont_number,rcv_pack,flt_pack,flt_pack_loc,shed_loc,update_by,ip_addr,remarks,last_update,tally_sheet_no,shift_name,actual_marks,loc_first,total_pack,wr_date,shed_yard,rcv_unit,tally_sheet_number, berthOp,physical_tally_sheet_no)
							values('$dtlId','$rot','$cont','$rcv','$flt','$flt_pack_loc','$loc','$login_id','$ipaddr','$remark',now(),
							'$maxtally_sheet_no','$shiftname','$actualmarks',$conLocFast,$totalPck,'$unstuffingDate','$shed_name','$rcv_unit','$tallySheetNumber',
							'$berth_op','$physical_tally_sheet_no')";
					}
				}
				else
				{
					if($dtlId=="" || $dtlId==0)
					{
						$str = "insert into shed_tally_info(igm_detail_id,import_rotation,cont_number,rcv_pack,flt_pack,flt_pack_loc,shed_loc,update_by,ip_addr,remarks,last_update,tally_sheet_no,shift_name,actual_marks,loc_first,total_pack,wr_date,shed_yard,rcv_unit,tally_sheet_number, berthOp,physical_tally_sheet_no)
							values('$igmDetailNumber','$rot','$cont','$rcv','$flt','$flt_pack_loc','$loc','$login_id','$ipaddr','$remark',now(),
							'$maxtally_sheet_no','$shiftname','$actualmarks',$conLocFast,$totalPck,'$unstuffingDate','$shed_name','$rcv_unit',
							'$tallySheetNumber', '$berth_op','$physical_tally_sheet_no')";
					}
					else
					{
						$str = "insert into shed_tally_info(igm_detail_id,import_rotation,cont_number,rcv_pack,flt_pack,flt_pack_loc,shed_loc,update_by,ip_addr,remarks,last_update,tally_sheet_no,shift_name,actual_marks,loc_first,total_pack,wr_date,shed_yard,rcv_unit,tally_sheet_number, berthOp,physical_tally_sheet_no)
						values('$dtlId','$rot','$cont','$rcv','$flt','$flt_pack_loc','$loc','$login_id','$ipaddr','$remark',now(),
						'$maxtally_sheet_no','$shiftname','$actualmarks',$conLocFast,$totalPck,'$unstuffingDate','$shed_name','$rcv_unit',
						'$tallySheetNumber', '$berth_op','$physical_tally_sheet_no')";
					}
				}
			/* echo $str;
			return; */
				$stat = $this->bm->dataInsertDB1($str);  //comment out to stop insertion
				if($stat==1)
				{
					$data['stat']="<font color='red'><b>Sucessfully inserted</b></font>";
					$data['view_btn_status']=1;
					$data['exchange_btn_status']=1;
					$data['save_btn_status']=1;
				}
			}
			// loading tally sheet
			$this->loadTallySheet($rot,$cont,"save");
			
			//echo "RCV : ".$rcv." DtlID : ".$dtlId." Rotation : ".$rotation;
		}

		function deleteTallyRcv()
		{	
			$tallyID=$this->uri->segment(3);
			$cont=$this->uri->segment(4);			
			$rot=str_replace("_","/",$this->uri->segment(5));
			$tbl=$this->uri->segment(6);
			
			$strDelQuery = "delete from shed_tally_info where id=$tallyID";
			$statDel = $this->bm->dataInsertDB1($strDelQuery);
			if($statDel==1)
			{
				$data['stat']="<font color='red'><b>Sucessfully Deleted.</b></font>";
				$data['view_btn_status']=1;
				$data['save_btn_status']=1;
				$data['exchange_btn_status']=1;
			}
			
			$this->loadTallySheet($rot,$cont,"dlt");
			// $chkExistShedTallyQry="select count(id) as id from shed_tally_info WHERE  import_rotation='$rot' and cont_number='$cont'";
			// //echo $chkExistShedTallyQry;
			// //echo $tbl."-- Table ";
			// $rtnExistShedTally = $this->bm->dataSelectDb1($chkExistShedTallyQry);
			// $cntExist = $rtnExistShedTally[0]['id'];
					
			// if($tbl=="sup_detail")
			// {
				// $tbl="sup_detail";
				// if($cntExist<1)
				// {
					// $sqlContainer = "select igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					// from igm_supplimentary_detail 
					// inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					// where Import_Rotation_No='$rot' and cont_number='$cont'
					// order by 2";
				// }
				// else
				// {
					// $sqlContainer="select * from (SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,
									// cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
									// FROM igm_supplimentary_detail 
									// LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id					
									// WHERE Import_Rotation_No='$rot' AND cont_number='$cont'
									// ) tbl1
									// union
									// select * from (SELECT shed_tally_info.igm_sup_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,
									// shed_tally_info.cont_number, cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,
									// NotifyDesc FROM shed_tally_info 
									// LEFT JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
									// LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id 
									// WHERE shed_tally_info.import_rotation='$rot' and shed_tally_info.cont_number='$cont' and BL_NO is null
									// )tbl2";
				// }
			// }						
			// else
			// {
				// $tbl="detail";
				// if($cntExist<1)
				// {
					// $sqlContainer = "select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					// from igm_details 
					// inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					// where Import_Rotation_No='$rot' and cont_number='$cont'
					// order by 2
					// ";
				// }
				// else
				// {
					// $sqlContainer="select * from (select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
									// from igm_details 
									// inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
									// where Import_Rotation_No='$rot' and cont_number='$cont'					
									// ) tbl1
									// union
									// select * from (SELECT shed_tally_info.igm_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,
									// shed_tally_info.cont_number, cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,
									// NotifyDesc FROM shed_tally_info 
									// LEFT JOIN igm_details ON shed_tally_info.igm_detail_id=igm_details.id 
									// LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id 
									// WHERE shed_tally_info.import_rotation='$rot' and shed_tally_info.cont_number='$cont' and BL_NO is null
									// )tbl2";
					// /*$sqlContainer = "SELECT shed_tally_info.igm_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,shed_tally_info.cont_number,
					// cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					// FROM shed_tally_info 
					// LEFT JOIN igm_details  ON shed_tally_info.igm_detail_id=igm_details.id
					// LEFT JOIN  igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					// WHERE  shed_tally_info.import_rotation='$rot' and shed_tally_info.cont_number='$cont'
					// ORDER BY 2";*/
				// }
			// }
			
			// $rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);			
			// $data['assigned']=1;
			// $data['rotation']=$rot;
			// $data['cont']=$cont;
			// $data['tbl']=$tbl;
				
			// $data['rtnContainerList']=$rtnContainerList;
			// $this->load->view('tallyEntryFormView',$data);
			//echo " TallyID : ".$tallyID;
		}

		//////////// SOURAV TALLY ENTRY NEW FORMAT END ////////////////////////
		/*
		function tallyEntryFormWithIgmContInfo()
		{	
			$session_id = $this->session->userdata('value');
			if($session_id!=$this->session->userdata('session_id'))
			{
				$this->logout();
			}
			else
			{
				if($this->input->post('rotation') && $this->input->post('cont'))
				{
					$rotation=trim($this->input->post('rotation'));
					$cont=trim($this->input->post('cont'));
					
					$cntquery="SELECT COUNT(lcl_assignment_detail.igm_detail_id) AS rtnValue
					FROM lcl_assignment_detail
					INNER JOIN igm_details ON igm_details.id=lcl_assignment_detail.igm_detail_id
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'";
					
					$cntrslt=$this->bm->dataReturnDb1($cntquery);
					
					if($cntrslt==0)
					{
						$data['title']="TALLY ENTRY FORM WITH IGM INFORMATION...";
						$data['msg']="Please provide assignment for the container";
						$data['assigned']=0;
						$this->load->view('tallyEntryFormView',$data);
						
						return;
					} 
				}
				else
				{
					$cont=$this->uri->segment(3);
					$rot_year=$this->uri->segment(4);
					$rot_no=$this->uri->segment(5);
					$rotation=$rot_year.'/'.$rot_no;
					
					$cntquery="SELECT COUNT(lcl_assignment_detail.igm_detail_id) AS rtnValue
					FROM lcl_assignment_detail
					INNER JOIN igm_details ON igm_details.id=lcl_assignment_detail.igm_detail_id
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'";
					
					$cntrslt=$this->bm->dataReturnDb1($cntquery);
					
					if($cntrslt==0)
					{
						$data['title']="TALLY ENTRY FORM WITH IGM INFORMATION...";
						$data['msg']="Please provide assignment for the container";
						$data['assigned']=0;
						$this->load->view('tallyEntryFormView',$data);
						
						return;
					}
				}
				
				$tbl = "sup_detail";
			
				//Cont_gross_weight and cont_seal_number added
				$sqlContainer="SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
				FROM igm_supplimentary_detail 
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'
				ORDER BY 2";				
				
				$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
				$cnt = count($rtnContainerList);
				
			//	echo "count_number " . $cnt;  //finds working query
				
				//Cont_gross_weight and cont_seal_number added
				if($cnt==0)
				{
					$tbl = "detail";
					$sqlContainer = "select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rotation' and cont_number='$cont'
					order by 2";					
					$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
				}
				$chkExchangeDoneQuery="select count(id) as chkVal from shed_tally_info where import_rotation='$rotation' and cont_number='$cont' and exchange_done_status=1";
					//echo $chkExchangeDoneQuery;
					$chkList = $this->bm->dataSelectDb1($chkExchangeDoneQuery);
					$chkVal= $chkList[0]['chkVal'];
					if($chkVal>0)
					{
						$data['update_btn_status']=0;
						$data['view_btn_status']=1;  //previously 0; 1 for exchange done; alter if necessary
						$data['save_btn_status']=0;
						$data['exchange_btn_status']=0;
						$data['msgExchange']="Exchange Done";
					}
					else{
						$chkExchangeDoneQuery="select count(id) as chkVal from shed_tally_info where import_rotation='$rotation' and cont_number='$cont' and exchange_done_status=0";
						//echo $chkQuery;
						$chkList = $this->bm->dataSelectDb1($chkExchangeDoneQuery);
						$chkVal= $chkList[0]['chkVal'];
						if($chkVal>0)
						{
							$data['update_btn_status']=1;
							$data['view_btn_status']=1;
							$data['exchange_btn_status']=1;
							$data['save_btn_status']=0;
						}
						else{
							$data['update_btn_status']=0;
							$data['view_btn_status']=0;
							$data['exchange_btn_status']=0;
							$data['save_btn_status']=1;
						}
					}
				$login_id = $this->session->userdata('login_id');
				$data['assigned']=1;		
				$data['rotation']=$rotation;
				$data['tbl']=$tbl;
				$data['cont']=$cont;
				$data['stat']="";
				$data['login_id']=$login_id;
				$data['rtnContainerList']=$rtnContainerList; //"$rtnContainerList" returns selected data for table
				$this->load->view('tallyEntryFormView',$data);
			}
		}
		
		function updateTallyInfo()
		{
			$rot=$this->input->post('rot');
				$cont=$this->input->post('cont');
				
				$tally_sheet_noQuery="select MAX(tally_sheet_no) as rtnValue from shed_tally_info";
				$tally_sheet_no = $this->bm->dataReturnDb1($tally_sheet_noQuery);
				$maxtally_sheet_no = $tally_sheet_no+1;
				
				for($i=0;$i<$this->input->post('tblRow');$i++)
				{
					$rcv=$this->input->post('rcv'.$i);
					$flt=$this->input->post('flt'.$i);
					$conLocFast=$this->input->post('conLocFast'.$i);
					$totalPck=$this->input->post('totalPck'.$i);
					$loc=$this->input->post('contAtShed'.$i);
					$wrDate=$this->input->post('wrDate');
					$remark=$this->input->post('remark'.$i); //remarks added
					
					$shiftname=$this->input->post('shiftname'.$i);  //combo box shift name
					$actualmarks=$this->input->post('actualmarks'.$i);  //textarea actual marks	
					$tbl=$this->input->post('tbl'.$i);
					$ipaddr = $_SERVER['REMOTE_ADDR'];
					$login_id = $this->session->userdata('login_id');
					$section = $this->session->userdata('section');
					$supId=$this->input->post('dtlId'.$i);
					$rcv_unit=$this->input->post('rcv_unit'.$i);
					//$chkQuery="select count(id) as chkVal from shed_tally_info where import_rotation='$rot' and cont_number='$cont' ";
					//echo $chkQuery;
					//$chkList = $this->bm->dataSelectDb1($chkQuery);
					//$chkVal= $chkList[0]['chkVal'];
					$tallysheet=$this->input->post('tallySheetNumber');
					$str = "";
					if($tallysheet!="")
					{
						//$tallysheet=$this->input->post('tallysheet'.$i);
						if($tbl=="sup_detail")
						{
							$str = "update shed_tally_info set rcv_pack='$rcv'
									,flt_pack='$flt',shed_loc='$loc',update_by='$login_id',ip_addr='$ipaddr',remarks='$remark',last_update=now(),
									shift_name='$shiftname',actual_marks='$actualmarks',loc_first=$conLocFast,total_pack=$totalPck,
									wr_date='$wrDate',shed_yard='$section',rcv_unit='$rcv_unit'
									where igm_sup_detail_id='$supId' and import_rotation='$rot' and cont_number='$cont'";
							//echo $str;
						}
						else
						{
							$str = "update shed_tally_info set rcv_pack='$rcv'
									,flt_pack='$flt',shed_loc='$loc',update_by='$login_id',ip_addr='$ipaddr',remarks='$remark',last_update=now(),
									shift_name='$shiftname',actual_marks='$actualmarks',loc_first=$conLocFast,
									total_pack=$totalPck,wr_date='$wrDate',shed_yard='$section',rcv_unit='$rcv_unit' 
									where igm_detail_id='$supId' and import_rotation='$rot' and cont_number='$cont'";
							//echo $str;
						}
					
						$stat = $this->bm->dataInsertDB1($str);  //comment out to stop insertion
						if($stat==1)
						{
							$data['stat']="<font color='red'><b>Sucessfully Updated</b></font>";
							$data['update_btn_status']=1;
							$data['view_btn_status']=1;
							$data['exchange_btn_status']=1;
						}
						else
						{
							$data['stat']="<font color='red'><b>Not Updated</b></font>";
						}
					}
					else{
						
						
						
						$date = date('dmy');
        
						$size=strlen($maxtally_sheet_no);
						$tallySheetNumber = "";
						if($size==1)
						{
					//	 $tallySheetNumber="TSN"."-".$date."000".$maxtally_sheet_no;
						 $tallySheetNumber=$section."-".$date."000".$maxtally_sheet_no;
						}
						else if($size==2)
						{
					//	 $tallySheetNumber="TSN"."-".$date."00".$maxtally_sheet_no;
						 $tallySheetNumber=$section."-".$date."00".$maxtally_sheet_no;
						}
						else if($size==3)
						{
					//	 $tallySheetNumber="TSN"."-".$date."0".$maxtally_sheet_no;
						 $tallySheetNumber=$section."-".$date."0".$maxtally_sheet_no;
						}
						else 
						{
					//	 $tallySheetNumber="TSN"."-".$date."".$maxtally_sheet_no;
						 $tallySheetNumber=$section."-".$date."".$maxtally_sheet_no;
						}
						
						
						if($tbl=="sup_detail")
						{
							$str = "insert into shed_tally_info(igm_sup_detail_id,import_rotation,cont_number,rcv_pack,flt_pack,shed_loc,update_by,ip_addr,remarks,last_update,tally_sheet_no,shift_name,actual_marks,loc_first,total_pack,wr_date,shed_yard,rcv_unit,tally_sheet_number)
							values('$supId','$rot','$cont','$rcv','$flt','$loc','$login_id','$ipaddr','$remark',now(),
							'$maxtally_sheet_no','$shiftname','$actualmarks',$conLocFast,$totalPck,'$wrDate','$section','$rcv_unit','$tallySheetNumber')";
						}
						else
						{
							$str = "insert into shed_tally_info(igm_detail_id,import_rotation,cont_number,rcv_pack,flt_pack,shed_loc,update_by,ip_addr,remarks,last_update,tally_sheet_no,shift_name,actual_marks,loc_first,total_pack,wr_date,shed_yard,rcv_unit,tally_sheet_number)
							values('$supId','$rot','$cont','$rcv','$flt','$loc','$login_id','$ipaddr','$remark',now(),
							'$maxtally_sheet_no','$shiftname','$actualmarks',$conLocFast,$totalPck,'$wrDate','$section','$rcv_unit','$tallySheetNumber')";
						}
					
						$stat = $this->bm->dataInsertDB1($str);  //comment out to stop insertion
						if($stat==1)
						{
							$data['stat']="<font color='red'><b>Sucessfully inserted</b></font>";
							//$data['update_btn_status']=1;
							$data['update_btn_status']=1;
							$data['view_btn_status']=1;
							$data['exchange_btn_status']=1;
							$data['save_btn_status']=0;
						}
						else
						{
							$data['stat']="<font color='red'><b>Not inserted</b></font>";
						}
					}
						if($tbl=="sup_detail")
						{
							$sqlContainer = "select igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
							from igm_supplimentary_detail 
							inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
							where Import_Rotation_No='$rot' and cont_number='$cont'
							order by 2";
						}
						
						else
						{
							$sqlContainer = "select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
								from igm_details 
								inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
								where Import_Rotation_No='$rotation' and cont_number='$cont'
								order by 2
								";	
						}
					//echo "Rcv".$rcv."Flt".$flt."Loc".$conLocFast."Tot".$totalPck."\n";
				}
				
				$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);			
				$data['assigned']=1;
				$data['rotation']=$rot;
				$data['cont']=$cont;
				$data['tbl']=$tbl;
				
				$data['rtnContainerList']=$rtnContainerList;
				$this->load->view('tallyEntryFormView',$data);
		}*/
		/*function tallyEntryFormWithIgmContInfo()
		{	
			$session_id = $this->session->userdata('value');
			if($session_id!=$this->session->userdata('session_id'))
			{
				$this->logout();
			}
			else
			{
				if($this->input->post('rotation') && $this->input->post('cont'))
				{
					$rotation=trim($this->input->post('rotation'));
					$cont=trim($this->input->post('cont'));
					
					$cntquery="SELECT COUNT(lcl_assignment_detail.igm_detail_id) AS rtnValue
					FROM lcl_assignment_detail
					INNER JOIN igm_details ON igm_details.id=lcl_assignment_detail.igm_detail_id
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'";
					
					$cntrslt=$this->bm->dataReturnDb1($cntquery);
					
					
					if($cntrslt==0)
					{
						$data['title']="TALLY ENTRY FORM WITH IGM INFORMATION...";
						$data['msg']="Please provide assignment for the container";
						$data['assigned']=0;
						$this->load->view('tallyEntryFormView',$data);
						
						return;
					} 
				}
				else
				{
					$cont=$this->uri->segment(3);
					$rot_year=$this->uri->segment(4);
					$rot_no=$this->uri->segment(5);
					$rotation=$rot_year.'/'.$rot_no;
					
					$cntquery="SELECT COUNT(lcl_assignment_detail.igm_detail_id) AS rtnValue
					FROM lcl_assignment_detail
					INNER JOIN igm_details ON igm_details.id=lcl_assignment_detail.igm_detail_id
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'";
					
					$cntrslt=$this->bm->dataReturnDb1($cntquery);
					
					if($cntrslt==0)
					{
						$data['title']="TALLY ENTRY FORM WITH IGM INFORMATION...";
						$data['msg']="Please provide assignment for the container";
						$data['assigned']=0;
						$this->load->view('tallyEntryFormView',$data);
						
						return;
					}
				}
				
				$chkExistShedTallyQry="select count(id) as id from shed_tally_info WHERE  import_rotation='$rotation' and cont_number='$cont'";
				$rtnExistShedTally = $this->bm->dataSelectDb1($chkExistShedTallyQry);
				$cntExist = $rtnExistShedTally[0]['id'];
				
				//echo $cntExist;
				//echo $chkExistShedTallyQry;
				
				$tbl = "sup_detail";
			
				//Cont_gross_weight and cont_seal_number added
				if($cntExist<1)
				{
					$sqlContainer="SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					FROM igm_supplimentary_detail 
					LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id					
					WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'
					ORDER BY 2";
				}
				else
				{
					$sqlContainer="SELECT shed_tally_info.igm_sup_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,shed_tally_info.cont_number,
								cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
								FROM shed_tally_info 
								LEFT JOIN igm_supplimentary_detail  ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
								LEFT JOIN  igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
								WHERE  shed_tally_info.import_rotation='$rotation' and shed_tally_info.cont_number='$cont'
								ORDER BY 2";
				}
				//echo $sqlContainer;
				
				$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
				$cnt = count($rtnContainerList);
				//echo "ee : ".$cnt."--".$sqlContainer;
				
			//	echo "count_number " . $cnt;  //finds working query
				
				//Cont_gross_weight and cont_seal_number added
				if($cnt==0)
				{
					$tbl = "detail";
					if($cntExist<1)
					{
						$sqlContainer = "select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
						from igm_details 
						LEFT join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
						where Import_Rotation_No='$rotation' and cont_number='$cont'
						order by 2";
					}
					else {
						$sqlContainer = "SELECT shed_tally_info.igm_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,shed_tally_info.cont_number,
									cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
									FROM shed_tally_info 
									LEFT JOIN igm_details  ON shed_tally_info.igm_detail_id=igm_details.id
									LEFT JOIN  igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
									WHERE  shed_tally_info.import_rotation='$rotation' and shed_tally_info.cont_number='$cont'
									ORDER BY 2";
					}
					$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
				}
				$chkExchangeDoneQuery="select count(id) as chkVal from shed_tally_info where import_rotation='$rotation' and cont_number='$cont' and exchange_done_status=1";
					//echo $chkExchangeDoneQuery;
					$chkList = $this->bm->dataSelectDb1($chkExchangeDoneQuery);
					$chkVal= $chkList[0]['chkVal'];
					if($chkVal>0)
					{
						$data['update_btn_status']=0;
						$data['view_btn_status']=1;  //previously 0; 1 for exchange done; alter if necessary
						$data['save_btn_status']=0;
						$data['exchange_btn_status']=0;
						$data['msgExchange']="Exchange Done";
					}
					else{
						$chkExchangeDoneQuery="select count(id) as chkVal from shed_tally_info where import_rotation='$rotation' and cont_number='$cont' and exchange_done_status=0";
						//echo $chkQuery;
						$chkList = $this->bm->dataSelectDb1($chkExchangeDoneQuery);
						$chkVal= $chkList[0]['chkVal'];
						if($chkVal>0)
						{
							$data['update_btn_status']=1;
							$data['view_btn_status']=1;
							$data['exchange_btn_status']=1;
							$data['save_btn_status']=0;
						}
						else{
							$data['update_btn_status']=0;
							$data['view_btn_status']=0;
							$data['exchange_btn_status']=0;
							$data['save_btn_status']=1;
						}
					}
				$login_id = $this->session->userdata('login_id');
				
				
				
				
				
				$data['assigned']=1;		
				$data['rotation']=$rotation;
				$data['tbl']=$tbl;
				$data['cont']=$cont;
				$data['stat']="";
				$data['login_id']=$login_id;
				
				
				$data['rtnContainerList']=$rtnContainerList; //"$rtnContainerList" returns selected data for table
				$this->load->view('tallyEntryFormView',$data);
			}
		}*/


		function updateTallyInfo()
		{
				$rot=$this->input->post('rot');
				$cont=$this->input->post('cont');
				
				$tally_sheet_noQuery="select MAX(tally_sheet_no) as rtnValue from shed_tally_info";
				$tally_sheet_no = $this->bm->dataReturnDb1($tally_sheet_noQuery);
				
				$igmDetailQuery="select MAX(id) as rtnValue from shed_tally_info";				
				$igmDetailId = $this->bm->dataReturnDb1($igmDetailQuery);
				
				$maxtally_sheet_no = $tally_sheet_no+1;
				$igmDetailId_no = $igmDetailId+1;
				
				$date = date('dmy');
				$dtlDate = date('my');
        
				$size=strlen($maxtally_sheet_no);
				$tallySheetNumber = "";
				$igmDetailNumber = "";
				
				
				
				
				for($i=0;$i<$this->input->post('tblRow');$i++)
				{
					$rcv=$this->input->post('rcv'.$i);
					$flt=$this->input->post('flt'.$i);
					$conLocFast=$this->input->post('conLocFast'.$i);
					$totalPck=$this->input->post('totalPck'.$i);
					$loc=$this->input->post('contAtShed'.$i);
					$wrDate=$this->input->post('wrDate');
					$remark=$this->input->post('remark'.$i); //remarks added
					
					$shiftname=$this->input->post('shiftname'.$i);  //combo box shift name
					$actualmarks=$this->input->post('actualmarks'.$i);  //textarea actual marks	
					$tbl=$this->input->post('tbl'.$i);
					$ipaddr = $_SERVER['REMOTE_ADDR'];
					$login_id = $this->session->userdata('login_id');
					$section = $this->session->userdata('section');
					$supId=$this->input->post('dtlId'.$i);
					$rcv_unit=$this->input->post('rcv_unit'.$i);
					//$chkQuery="select count(id) as chkVal from shed_tally_info where import_rotation='$rot' and cont_number='$cont' ";
					//echo $chkQuery;
					//$chkList = $this->bm->dataSelectDb1($chkQuery);
					//$chkVal= $chkList[0]['chkVal'];
					$tallysheet=$this->input->post('tallySheetNumber');
					$tallysheetNo=$this->input->post('maxTallyNo');
					
				if($size==1)
				{
				//	 $tallySheetNumber="TSN"."-".$date."000".$maxtally_sheet_no;
					 $tallySheetNumber=$section."-".$date."000".$maxtally_sheet_no;
					 $igmDetailNumber=$dtlDate.$maxtally_sheet_no.$igmDetailId_no;
				}
				else if($size==2)
				{
				//	 $tallySheetNumber="TSN"."-".$date."00".$maxtally_sheet_no;
					$tallySheetNumber=$section."-".$date."00".$maxtally_sheet_no;
					$igmDetailNumber=$dtlDate.$maxtally_sheet_no.$igmDetailId_no;
				}
				else if($size==3)
				{
				//	 $tallySheetNumber="TSN"."-".$date."0".$maxtally_sheet_no;
					 $tallySheetNumber=$section."-".$date."0".$maxtally_sheet_no;
					 $igmDetailNumber=$dtlDate.$maxtally_sheet_no.$igmDetailId_no;
				}
				else 
				{
				//	 $tallySheetNumber="TSN"."-".$date."".$maxtally_sheet_no;
					$tallySheetNumber=$section."-".$date."".$maxtally_sheet_no;
					$igmDetailNumber=$dtlDate.$maxtally_sheet_no.$igmDetailId_no;
				}
					$str = "";
					if($tallysheet!="")
					{
						//$tallysheet=$this->input->post('tallysheet'.$i);
						if($tbl=="sup_detail")
						{
							if($supId=="" || $supId==0)
							{
								if($rcv!=0 || $flt!=0 || $conLocFast!=0 || $totalPck!=0)
								{
									$str = "insert into shed_tally_info(igm_sup_detail_id,import_rotation,cont_number,rcv_pack,flt_pack,shed_loc,update_by,ip_addr,remarks,last_update,tally_sheet_no,shift_name,actual_marks,loc_first,total_pack,wr_date,shed_yard,rcv_unit,tally_sheet_number)
										values('$igmDetailNumber','$rot','$cont','$rcv','$flt','$loc','$login_id','$ipaddr','$remark',now(),
										'$tallysheetNo','$shiftname','$actualmarks',$conLocFast,$totalPck,'$wrDate','$section','$rcv_unit','$tallysheet')";
								}
								else{
									
									$getPreviousQtyDtl="select rcv_pack,flt_pack,loc_first,total_pack from shed_tally_info where igm_sup_detail_id='$supId' and import_rotation='$rot' and cont_number='$cont'";
									$rtnPreviousQtyList = $this->bm->dataSelectDb1($getPreviousQtyDtl);
									
									$chngRcvPack=$rtnPreviousQtyList[0]['rcv_pack'] + $rcv;
									$chngFltPack=$rtnPreviousQtyList[0]['flt_pack'] + $flt;
									$chngLocFastPack=$rtnPreviousQtyList[0]['loc_first'] + $conLocFast;
									$chngTotalPack=$rtnPreviousQtyList[0]['total_pack'] + $totalPck;
									
									//echo "Total : ".$previousRcvPack;
									
									$str = "update shed_tally_info set rcv_pack='$chngRcvPack'
									,flt_pack='$chngFltPack',shed_loc='$loc',update_by='$login_id',ip_addr='$ipaddr',remarks='$remark',last_update=now(),
									shift_name='$shiftname',actual_marks='$actualmarks',loc_first=$chngLocFastPack,total_pack=$chngTotalPack,
									wr_date='$wrDate',shed_yard='$section',rcv_unit='$rcv_unit'
									where igm_sup_detail_id='$supId' and import_rotation='$rot' and cont_number='$cont'";
								}
							}
							else
							{
									$getPreviousQtyDtl="select rcv_pack,flt_pack,loc_first,total_pack from shed_tally_info where igm_sup_detail_id='$supId' and import_rotation='$rot' and cont_number='$cont'";
									$rtnPreviousQtyList = $this->bm->dataSelectDb1($getPreviousQtyDtl);
									$chngRcvPack=$rtnPreviousQtyList[0]['rcv_pack'] + $rcv;
									$chngFltPack=$rtnPreviousQtyList[0]['flt_pack'] + $flt;
									$chngLocFastPack=$rtnPreviousQtyList[0]['loc_first'] + $conLocFast;
									$chngTotalPack=$rtnPreviousQtyList[0]['total_pack'] + $totalPck;
									
									//echo "Total : ".$previousRcvPack1;
									
								$str = "update shed_tally_info set rcv_pack='$chngRcvPack'
									,flt_pack='$chngFltPack',shed_loc='$loc',update_by='$login_id',ip_addr='$ipaddr',remarks='$remark',last_update=now(),
									shift_name='$shiftname',actual_marks='$actualmarks',loc_first=$chngLocFastPack,total_pack=$chngTotalPack,
									wr_date='$wrDate',shed_yard='$section',rcv_unit='$rcv_unit'
									where igm_sup_detail_id='$supId' and import_rotation='$rot' and cont_number='$cont'";
							}
							//echo $str;
						}
						else
						{
							if($supId=="" || $supId==0)
							{
								$str = "insert into shed_tally_info(igm_detail_id,import_rotation,cont_number,rcv_pack,flt_pack,shed_loc,update_by,ip_addr,remarks,last_update,tally_sheet_no,shift_name,actual_marks,loc_first,total_pack,wr_date,shed_yard,rcv_unit,tally_sheet_number)
										values('$igmDetailNumber','$rot','$cont','$rcv','$flt','$loc','$login_id','$ipaddr','$remark',now(),
										'$tallysheetNo','$shiftname','$actualmarks',$conLocFast,$totalPck,'$wrDate','$section','$rcv_unit','$tallysheet')";
							}
							else
							{
								$str = "update shed_tally_info set rcv_pack='$rcv'
									,flt_pack='$flt',shed_loc='$loc',update_by='$login_id',ip_addr='$ipaddr',remarks='$remark',last_update=now(),
									shift_name='$shiftname',actual_marks='$actualmarks',loc_first=$conLocFast,
									total_pack=$totalPck,wr_date='$wrDate',shed_yard='$section',rcv_unit='$rcv_unit' 
									where igm_detail_id='$supId' and import_rotation='$rot' and cont_number='$cont'";
							}
							//echo $str;
						}
						//echo $str;
						$stat = $this->bm->dataInsertDB1($str);  //comment out to stop insertion
						if($stat==1)
						{
							$data['stat']="<font color='red'><b>Sucessfully Updated</b></font>";
							$data['update_btn_status']=1;
							$data['view_btn_status']=1;
							$data['exchange_btn_status']=1;
							$data['save_btn_status']=0;

						}
						else
						{
							$data['stat']="<font color='red'><b>Not Updated</b></font>";
						}
					}
					else{
						if($tbl=="sup_detail")
						{
								if($supId=="" || $supId==0)
								{
									$str = "insert into shed_tally_info(igm_sup_detail_id,import_rotation,cont_number,rcv_pack,flt_pack,shed_loc,update_by,ip_addr,remarks,last_update,tally_sheet_no,shift_name,actual_marks,loc_first,total_pack,wr_date,shed_yard,rcv_unit,tally_sheet_number)
									values('$igmDetailNumber','$rot','$cont','$rcv','$flt','$loc','$login_id','$ipaddr','$remark',now(),
									'$maxtally_sheet_no','$shiftname','$actualmarks',$conLocFast,$totalPck,'$wrDate','$section','$rcv_unit','$tallySheetNumber')";
								}
								else
								{
									$str = "insert into shed_tally_info(igm_sup_detail_id,import_rotation,cont_number,rcv_pack,flt_pack,shed_loc,update_by,ip_addr,remarks,last_update,tally_sheet_no,shift_name,actual_marks,loc_first,total_pack,wr_date,shed_yard,rcv_unit,tally_sheet_number)
									values('$supId','$rot','$cont','$rcv','$flt','$loc','$login_id','$ipaddr','$remark',now(),
									'$maxtally_sheet_no','$shiftname','$actualmarks',$conLocFast,$totalPck,'$wrDate','$section','$rcv_unit','$tallySheetNumber')";
								}
						}
						else
						{
							$str = "insert into shed_tally_info(igm_detail_id,import_rotation,cont_number,rcv_pack,flt_pack,shed_loc,update_by,ip_addr,remarks,last_update,tally_sheet_no,shift_name,actual_marks,loc_first,total_pack,wr_date,shed_yard,rcv_unit,tally_sheet_number)
							values('$supId','$rot','$cont','$rcv','$flt','$loc','$login_id','$ipaddr','$remark',now(),
							'$maxtally_sheet_no','$shiftname','$actualmarks',$conLocFast,$totalPck,'$wrDate','$section','$rcv_unit','$tallySheetNumber')";
						}
					
						$stat = $this->bm->dataInsertDB1($str);  //comment out to stop insertion
						if($stat==1)
						{
							$data['stat']="<font color='red'><b>Sucessfully inserted</b></font>";
							//$data['update_btn_status']=1;
							$data['update_btn_status']=1;
							$data['view_btn_status']=1;
							$data['exchange_btn_status']=1;
							$data['save_btn_status']=0;
						}
						else
						{
							$data['stat']="<font color='red'><b>Not inserted</b></font>";
						}
					}
					$chkExistShedTallyQry="select count(id) from shed_tally_info WHERE  import_rotation='$rot' and cont_number='$cont'";
					$rtnExistShedTally = $this->bm->dataSelectDb1($chkExistShedTallyQry);
					$cntExist = count($rtnExistShedTally);
					
						if($tbl=="sup_detail")
						{
							if($cntExist<1)
							{
								$sqlContainer = "select igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
								from igm_supplimentary_detail 
								inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
								where Import_Rotation_No='$rot' and cont_number='$cont'
								order by 2";
							}
							else{
								$sqlContainer="SELECT shed_tally_info.igm_sup_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,shed_tally_info.cont_number,
								cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
								FROM shed_tally_info 
								LEFT JOIN igm_supplimentary_detail  ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
								LEFT JOIN  igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
								WHERE  shed_tally_info.import_rotation='$rot' and shed_tally_info.cont_number='$cont'
								ORDER BY 2";
							}
						}
						
						else
						{
							if($cntExist<1)
							{
								$sqlContainer = "select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
								from igm_details 
								inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
								where Import_Rotation_No='$rot' and cont_number='$cont'
								order by 2
								";
							}
							else
							{
								$sqlContainer = "SELECT shed_tally_info.igm_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,shed_tally_info.cont_number,
									cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
									FROM shed_tally_info 
									LEFT JOIN igm_details  ON shed_tally_info.igm_detail_id=igm_details.id
									LEFT JOIN  igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
									WHERE  shed_tally_info.import_rotation='$rot' and shed_tally_info.cont_number='$cont'
									ORDER BY 2";
							}
						}
					//echo "Rcv".$rcv."Flt".$flt."Loc".$conLocFast."Tot".$totalPck."\n";
				}
				
				$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);			
				$data['assigned']=1;
				$data['rotation']=$rot;
				$data['cont']=$cont;
				$data['tbl']=$tbl;
				
				$data['rtnContainerList']=$rtnContainerList;
				$this->load->view('tallyEntryFormView',$data);
		}

		// LCL Certify Section000

		function lclAssignmentCertifySection()
		{
		
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			$org_Type_id = $this->session->userdata('org_Type_id');
			
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['msg']="";
				$data['unstuff_flag']="";
				$data['verify_number']="-1";
				$data['verify_num']="-1";
				$data['flag'] = 0;
				$data['org_Type_id']=$org_Type_id;
				$data['title']="ASSINGMENT CERTIFY SECTION...";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('lclAssignmentCertifySectionHTML',$data);
				$this->load->view('jsAssets');
			}
		
		}
		
		function roForm($msg = null)
		{

			$login_id = $this->session->userdata('login_id');
			$u_name = $this->session->userdata('User_Name');

			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			$org_Type_id = $this->session->userdata('org_Type_id');
			$org_id = $this->session->userdata('org_id');
			
			if($LoginStat!="yes")
			{
				$this->logout();			
			}
			else
			{
				$sqlAgent = "SELECT vcms_vehicle_agent.id,agent_type,agent_name,users.Cell_No_1,users.Address_1,users.Address_2,vcms_vehicle_agent.agent_code
				FROM users
				INNER JOIN organization_profiles ON organization_profiles.id=users.org_id
				INNER JOIN vcms_vehicle_agency ON vcms_vehicle_agency.agency_code=organization_profiles.License_No
				INNER JOIN vcms_vehicle_agent ON vcms_vehicle_agent.agency_id=vcms_vehicle_agency.id
				WHERE users.login_id='$login_id' AND  vcms_vehicle_agent.agent_type LIKE '%Jetty Sircar%'";
				$rslt_agent = $this->bm->dataSelectDb1($sqlAgent);
				
				$data['rslt_agent'] = $rslt_agent;
				$data['login_id']=$login_id;
				$data['u_name']=$u_name;
				$data['org_Type_id']=$org_Type_id;
				$data['flag'] = 0;
				$data['msg']=$msg;
				$data['title']="RELEASE ORDER FORM";								

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('roForm',$data);
				$this->load->view('jsAssets');
			}
		}

		function lclAssignmentCertifyList($imp_rot=null,$bl_no=null)
		{			
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			$org_Type_id = $this->session->userdata('org_Type_id');
			$org_id = $this->session->userdata('org_id');
			$data['org_Type_id']=$org_Type_id;
			$data['flag'] = 1;
			
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				
				$msg="";
				$title="";
				
				$pdfView=$this->input->post('pdfView');
				
				if($imp_rot=="" and $bl_no=="")
				{
					$ddl_imp_rot_no=trim($this->input->post('ddl_imp_rot_no'));
					$ddl_bl_no=trim($this->input->post('ddl_bl_no'));			
					$bill_en_no=trim($this->input->post('bill_en_no'));			
				}
				else
				{
					$ddl_imp_rot_no=$imp_rot;
					$ddl_bl_no=$bl_no;		
				}
				/* echo $ddl_imp_rot_no;
				echo "<br>";
				echo $ddl_bl_no; */
				//return;
				// chk exists ---
				$chkExist = 0;
				
				$igm_id = "";
				$sqlIgmId="SELECT igm_details.id AS igmID FROM igm_details 
					WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no'
					UNION
					SELECT igm_supplimentary_detail.id AS igmID FROM igm_supplimentary_detail 
					WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no'
					AND igm_supplimentary_detail.BL_No='$ddl_bl_no'";
				$rslt_sqlIgmId = $this->bm->dataSelectDb1($sqlIgmId);
				for($x=0;$x<count($rslt_sqlIgmId);$x++)
					{
						$igm_id=$rslt_sqlIgmId[$x]['igmID'];	
					}
				$data['igm_id'] = $igm_id;
				
				
				$sql_chkExist="SELECT COUNT(*) AS rtnValue
				FROM igm_details
				WHERE Import_Rotation_No='$ddl_imp_rot_no' AND BL_No='$ddl_bl_no'";
				// return;
				$rslt_chkExist = $this->bm->dataSelectDb1($sql_chkExist);
				$chkExist = $rslt_chkExist[0]['rtnValue'];
				
				if($chkExist==0)
				{
					$sql_chkExist="SELECT COUNT(*) AS rtnValue FROM(SELECT cont_status
					FROM  igm_supplimentary_detail
					INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' AND igm_supplimentary_detail.BL_No='$ddl_bl_no'

					UNION

					SELECT cont_status
					FROM  igm_details
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no') AS tbl";
					$rslt_chkExist = $this->bm->dataSelectDb1($sql_chkExist);
					$chkExist = $rslt_chkExist[0]['rtnValue'];
				}
				// echo $sql_chkExist; return;
				if($chkExist>0)
				{
					$contStatus = "";

					$sql_contStatus="SELECT cont_status,Submitee_Org_Id
					FROM  igm_supplimentary_detail
					INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' AND igm_supplimentary_detail.BL_No='$ddl_bl_no'

					UNION

					SELECT cont_status,Submitee_Org_Id
					FROM  igm_details
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no'";
										
					$rsltContStatus=$this->bm->dataSelectDb1($sql_contStatus);					
					
					$contStatus = $rsltContStatus[0]['cont_status'];
					$Submitee_Org_Id = $rsltContStatus[0]['Submitee_Org_Id'];

					/* if($org_Type_id == 4 && $org_id != $Submitee_Org_Id){
						$data['canFFview'] = 'no';wr_upto_date
					} */
					
					$sqlContainer = "";
					
					$manif_num = str_replace("/"," ",$ddl_imp_rot_no);
		
					
					$sqlContainer = "SELECT igm_supplimentary_detail.id,IFNULL(SUM(rcv_pack)+SUM(loc_first),0) AS rcv_pack,
					igm_sup_detail_container.cont_number,igm_supplimentary_detail.Import_Rotation_No,Vessel_Name,
					igm_supplimentary_detail.Pack_Marks_Number,shed_loc,shed_yard, igm_supplimentary_detail.Description_of_Goods,
					igm_supplimentary_detail.ConsigneeDesc, igm_supplimentary_detail.NotifyDesc,cont_size,
					cont_weight, igm_supplimentary_detail.weight,  CEILING (igm_supplimentary_detail.weight/1000) AS updat_tonage, cont_seal_number,igm_sup_detail_container.cont_status,cont_height,cont_iso_type,
					IFNULL(shed_tally_info.verify_number,0) AS verify_number, 
					IF(shed_mlo_do_info.valid_upto_dt IS NULL OR shed_mlo_do_info.valid_upto_dt='0000-00-00',shed_tally_info.wr_upto_date,
					shed_mlo_do_info.valid_upto_dt)
					AS wr_upto_date,
					shed_tally_info.wr_date AS ustuffing_dt, shed_tally_info.verify_by,shed_tally_info.verify_time, IFNULL(shed_tally_info.id,0) AS verify_id,off_dock_id, 
					IF(shed_mlo_do_info.be_no IS NULL OR shed_mlo_do_info.be_no=' ',
					IF(certify_info_fcl.be_no IS NULL OR certify_info_fcl.be_no=' ',verify_other_data.be_no,certify_info_fcl.be_no),
					shed_mlo_do_info.be_no) AS be_no, 
					IF(shed_mlo_do_info.be_date IS NULL OR shed_mlo_do_info.be_date='0000-00-00' OR shed_mlo_do_info.be_date=' ',
					IF(certify_info_fcl.be_date IS NULL OR certify_info_fcl.be_date='0000-00-00' OR certify_info_fcl.be_date=' ',
					verify_other_data.be_date,certify_info_fcl.be_date),
					shed_mlo_do_info.be_date) AS be_date, 
					(SELECT Organization_Name FROM organization_profiles WHERE organization_profiles.id=igm_sup_detail_container.off_dock_id) AS offdock_name, organization_profiles.Organization_Name AS cnf_name, organization_profiles.License_No AS cnf_lic_no, shed_mlo_do_info.id AS agent_do, DATE(shed_mlo_do_info.upload_time) AS do_date,
					IFNULL(IFNULL(verify_other_data.update_ton,certify_info_fcl.update_ton), CEILING (igm_supplimentary_detail.weight/1000)) AS update_ton,COUNT(edo_application_by_cf.id) AS edo_done
					FROM igm_supplimentary_detail 
					INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					LEFT JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id 
					LEFT JOIN edo_application_by_cf ON igm_supplimentary_detail.Import_Rotation_No=edo_application_by_cf.rotation AND igm_supplimentary_detail.BL_No=edo_application_by_cf.bl 
					LEFT JOIN users ON users.login_id=edo_application_by_cf.sumitted_by 
					LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id 
					LEFT JOIN igm_details ON igm_supplimentary_detail.igm_detail_id=igm_details.id 
					LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.bl_no=edo_application_by_cf.bl AND shed_mlo_do_info.imp_rot=edo_application_by_cf.rotation
					LEFT JOIN shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
					LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
					LEFT JOIN certify_info_fcl ON igm_details.id=certify_info_fcl.igm_detail_id OR igm_supplimentary_detail.id=certify_info_fcl.igm_sup_detail_id 
					WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' AND igm_supplimentary_detail.BL_No='$ddl_bl_no' GROUP BY igm_sup_detail_container.id

					UNION ALL

					SELECT igm_details.id,'' AS rcv_pack,igm_detail_container.cont_number,igm_details.Import_Rotation_No,Vessel_Name,Pack_Marks_Number,'' AS shed_loc,'' AS shed_yard,Description_of_Goods, ConsigneeDesc,NotifyDesc,cont_size,cont_weight, igm_details.weight,  CEILING (igm_details.weight/1000) AS updat_tonage,  cont_seal_number, igm_detail_container.cont_status, cont_height,cont_iso_type,
					verify_number, 
					IF(shed_mlo_do_info.valid_upto_dt IS NULL OR shed_mlo_do_info.valid_upto_dt='0000-00-00',certify_info_fcl.wr_upto_date,
					shed_mlo_do_info.valid_upto_dt)
					AS wr_upto_date,
					certify_info_fcl.wr_upto_date AS ustuffing_dt,
					verify_by,verify_time,IFNULL(certify_info_fcl.id,0) AS verify_id,
					off_dock_id,
					IFNULL(shed_mlo_do_info.be_no,(SELECT reg_no
					FROM sad_info
					INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
					WHERE manif_num LIKE '%$manif_num%' AND sum_declare = '$ddl_bl_no' LIMIT 1)) AS be_no,
					IFNULL(shed_mlo_do_info.be_date,(SELECT reg_date
					FROM sad_info
					INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
					WHERE manif_num LIKE '%$manif_num%' AND sum_declare = '$ddl_bl_no' LIMIT 1)) AS be_date,

					(SELECT Organization_Name FROM organization_profiles WHERE organization_profiles.id=igm_detail_container.off_dock_id) AS offdock_name,
					organization_profiles.Organization_Name AS cnf_name, organization_profiles.License_No AS cnf_lic_no,

					shed_mlo_do_info.id AS do_no, DATE(shed_mlo_do_info.upload_time) AS do_date,
					IFNULL(certify_info_fcl.update_ton, CEILING (igm_details.weight/1000)) AS update_ton,COUNT(edo_application_by_cf.id) AS edo_done

					FROM  igm_details
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					LEFT JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
					LEFT JOIN edo_application_by_cf ON igm_details.Import_Rotation_No=edo_application_by_cf.rotation AND igm_details.BL_No=edo_application_by_cf.bl
					LEFT JOIN users ON users.login_id=edo_application_by_cf.sumitted_by
					LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id
					LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id
					LEFT JOIN certify_info_fcl ON certify_info_fcl.igm_detail_id=igm_details.id
					LEFT JOIN verify_info_fcl ON verify_info_fcl.igm_detail_id=igm_details.id
					WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no'
					GROUP BY igm_detail_container.id";
					// return;
					
					$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);

					//--//2020-03-10 
					$containerNo="";
					
					for($i=0;$i<count($rtnContainerList);$i++)
					{
						$containerNo_tmp=$rtnContainerList[$i]['cont_number'];				
						$containerNo=$containerNo."'".$containerNo_tmp."',";
					}
					
					$containerNo=rtrim($containerNo,",");
					//--//2020-03-10 
					
					
					$verify_id=$rtnContainerList[0]['verify_id'];
					$verify_num=$rtnContainerList[0]['verify_number'];
					
					$cnf_lic_no=$rtnContainerList[0]['cnf_lic_no'];
					/* $lic_p1 = substr($rtnContainerList[0]['cnf_lic_no'],5);			// 4356
					$lic_p2 = substr($rtnContainerList[0]['cnf_lic_no'],3,2);
					$cnf_lic_no = $lic_p1."/".$lic_p2; */

					$cnf_name = "";

					if($cnf_lic_no!=null)
					{
						$cnf_licQuery="SELECT name as rtnValue from ref_bizunit_scoped where id='$cnf_lic_no'";
						$rtnCnfName = $this->bm->dataSelect($cnf_licQuery);
						$cnf_name=$rtnCnfName;
					}		
					// $strID = "select count(*) as rtnValue from sparcsn4.inv_unit
					// inner join sparcsn4.srv_event on sparcsn4.srv_event.applied_to_gkey=sparcsn4.inv_unit.gkey
					// where id='$containerNo' and  category='IMPRT' and event_type_gkey=30";
					
					//2020-03-10 
					// $strID = "SELECT COUNT(*) AS rtnValue FROM sparcsn4.inv_unit
					// INNER JOIN sparcsn4.srv_event ON sparcsn4.srv_event.applied_to_gkey=sparcsn4.inv_unit.gkey
					// WHERE id IN($containerNo) AND category='IMPRT' AND event_type_gkey=30";
					// $rtnValue = $this->bm->dataReturn($strID);

					$strID="";
					$rtnValue="";
					$chkcertified = "";

					if($contStatus=="FCL")
					{
						
						$strID = "SELECT COUNT(*) AS rtnValue 
						FROM inv_unit
						INNER JOIN srv_event ON srv_event.applied_to_gkey=inv_unit.gkey 
						WHERE id IN($containerNo) AND category='IMPRT' AND event_type_gkey=30";
						
						//$rtnValue = $this->bm->dataReturn($strID);
						$rtnValue = 1;

						//Check if already certified    -- 2021-03-09
						$chkcertify = "SELECT COUNT(certify_info_fcl.id) AS rtnValue
						FROM certify_info_fcl 
						INNER JOIN igm_details ON certify_info_fcl.igm_detail_id=igm_details.id
						WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no'";
						$chkcertified = $this->bm->dataReturnDb1($chkcertify);

						if($chkcertified == 0){
							 $chkcertify = "SELECT COUNT(certify_info_fcl.id) AS rtnValue
							FROM certify_info_fcl 
							INNER JOIN igm_supplimentary_detail ON certify_info_fcl.igm_sup_detail_id=igm_supplimentary_detail.id
							WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' AND igm_supplimentary_detail.BL_No='$ddl_bl_no'";
							$chkcertified = $this->bm->dataReturnDb1($chkcertify);
						}
						
					}
					else
					{
						// $strID = "SELECT COUNT(*) AS rtnValue
						// FROM shed_tally_info WHERE import_rotation='$ddl_imp_rot_no' AND cont_number IN($containerNo)";
						 $strID = "SELECT COUNT(*) AS rtnValue
						FROM shed_tally_info WHERE import_rotation='$ddl_imp_rot_no' AND cont_number IN($containerNo) 
						AND (igm_sup_detail_id='$igm_id' OR igm_detail_id='$igm_id')";
						$rtnValue = $this->bm->dataReturnDb1($strID);

						//Check if already certified    -- 2021-03-09
				
						$chkcertify = "SELECT COUNT(verify_other_data.id) AS rtnValue
						FROM verify_other_data 
						INNER JOIN shed_tally_info ON verify_other_data.shed_tally_id=shed_tally_info.id
						INNER JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
						WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' AND igm_supplimentary_detail.BL_No='$ddl_bl_no'";
						$chkcertified = $this->bm->dataReturnDb1($chkcertify);
					}				
				
					$data['certify'] = $chkcertified;
					
					if($rtnValue==0)
					{
						 $msg="<font color='red'><b>CARGO IS NOT UNSTUFFED.</b></font>";		// uncomment later
						//$msg="rtn";		
					}
					else
					{
						
						if($contStatus=="FCL")
						{
							if($verify_id==0)
							{
								$msg="<font color='red'><b>NOT CERTIFIED YET</b></font>";
							}
						}
						else
						{
							$verifyid = "";
							$sqlVerifyFOrLCL="SELECT shed_tally_info.igm_sup_detail_id AS igmID,IFNULL(verify_other_data.id,0) AS vid 
							FROM igm_supplimentary_detail 
							INNER JOIN shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
							LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
							WHERE Import_Rotation_No='$ddl_imp_rot_no' AND BL_No='$ddl_bl_no'
							UNION
							SELECT shed_tally_info.igm_detail_id AS igmID,IFNULL(verify_other_data.id,0) AS vid FROM igm_details 
							INNER JOIN shed_tally_info ON shed_tally_info.igm_detail_id=igm_details.id
							LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
							WHERE Import_Rotation_No='$ddl_imp_rot_no' AND BL_No='$ddl_bl_no' ORDER BY vid ";
							$resVerifyId = $this->bm->dataSelectDb1($sqlVerifyFOrLCL);
							for($y=0;$y<count($resVerifyId);$y++)
								{
									$verifyid=$resVerifyId[$y]['vid'];		
								}
							if($verifyid==0)
							{
								$msg="<font color='red'><b>NOT CERTIFIED YET</b></font>";
							}
							else
							{
								$msg="<font color='blue'><b>ALREADY CERTIFIED.</b></font>";
							}
							
						}
					}

					if($pdfView=="pdfView")
					{			
						$position_data=$this->input->post('position_data');
						$yard_data=$this->input->post('yard_data');
						
						// $this->load->library('m_pdf');
						// $mpdf->use_kwt = true;
						
						// $this->data['rtnContainerList']=$rtnContainerList;
						// $this->data['cnf_lic_no'] = $cnf_lic_no;
						// $this->data['unstuff_flag']=$rtnValue;
						// $this->data['verify_id']=$verify_id;			// certify_id in case of FCL, shed_tally_id in case of LCL
						// $this->data['verify_num']=$verify_num;
						// $this->data['cnf_name']=$cnf_name;
						// $this->data['ddl_imp_rot_no']=$ddl_imp_rot_no;
						// $this->data['ddl_bl_no']=$ddl_bl_no;
						// $this->data['verify_number']="";					
						// $this->data['contStatus']=$contStatus;
						// $this->data['position_data']=$position_data;
						// $this->data['yard_data']=$yard_data;

						$data['rtnContainerList']=$rtnContainerList;
						$data['cnf_lic_no'] = $cnf_lic_no;
						$data['unstuff_flag']=$rtnValue;
						$data['verify_id']=$verify_id;			// certify_id in case of FCL, shed_tally_id in case of LCL
						$data['verify_num']=$verify_num;
						$data['cnf_name']=$cnf_name;
						$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
						$data['ddl_bl_no']=$ddl_bl_no;
						$data['verify_number']="";					
						$data['contStatus']=$contStatus;
						$data['position_data']=$position_data;
						$data['yard_data']=$yard_data;
						
						// $html=$this->load->view('certificationListPdfOutput',$this->data, true);

						$this->load->view('certificationListPdfOutput',$data);
						
						//$pdfFilePath ="certificationPdfOutput-".time()."-download.pdf";
						
						//$pdf = $this->m_pdf->load();
						////$pdf->SetWatermarkText('CPA CTMS');
						//$pdf->showWatermarkText = true;	
						
						// $pdf->useSubstitutions = true;
						
						//$pdf->WriteHTML($html,2);
						
						//$pdf->Output($pdfFilePath, "I"); // For Show Pdf
						
					}
					else
					{
						$ustuffing_dt="";				
						$wr_upto_date="";				
						for($a=0;$a<count($rtnContainerList);$a++)
						{
							$ustuffing_dt=$rtnContainerList[$a]['ustuffing_dt'];
							$wr_upto_date=$rtnContainerList[$a]['wr_upto_date'];
						}
						
						$data['rtnContainerList']=$rtnContainerList;
						$data['cnf_lic_no'] = $cnf_lic_no;
						$data['unstuff_flag']=$rtnValue;
						$data['verify_id']=$verify_id;			// certify_id in case of FCL, shed_tally_id in case of LCL
						$data['verify_num']=$verify_num;
						$data['cnf_name']=$cnf_name;
						$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
						$data['ddl_bl_no']=$ddl_bl_no;
						$data['ustuffing_dt']=$ustuffing_dt;
						$data['wr_upto_date']=$wr_upto_date;
						$data['verify_number']="";
						
						$data['contStatus']=$contStatus;
						
						$data['msg']=$msg;
						$data['title']="ASSINGMENT CERTIFY SECTION...";					
						
						$this->load->view('cssAssets');
						$this->load->view('headerTop');
						$this->load->view('sidebar');
						$this->load->view('lclAssignmentCertifySectionHTML',$data);
						$this->load->view('jsAssets');
					}
				}
				else		// if not exist
				{					
					$data['unstuff_flag']=0;
					if($bill_en_no!="")
						$data['msg']="<font color='red'><b>THE INFORMATION OF B/E IS NOT FOUND.</b></font>";
					else
						$data['msg']="<font color='red'><b>ROTATION AND BL ARE NOT MATCHED</b></font>";
						
					$data['title']="ASSINGMENT CERTIFY SECTION...";	
					$data['flag'] = 0;				
					
					$this->load->view('cssAssets');
					$this->load->view('headerTop');
					$this->load->view('sidebar');
					$this->load->view('lclAssignmentCertifySectionHTML',$data);
					$this->load->view('jsAssets');
				}				
			}
		}
		

		// function lclAssignmentVerify()		// certify action
		// {
			
		// 	$org_Type_id = $this->session->userdata('org_Type_id');
		// 	$data['org_Type_id']=$org_Type_id;
		// 	$session_id = $this->session->userdata('value');
			
		// 	if($session_id!=$this->session->userdata('session_id'))
		// 	{
		// 		$this->logout();			
		// 	}
		// 	else
		// 	{
		// 		$igm_sup_detail_id=$this->input->post('id');
			
		// 		$cnfLicense=$this->input->post('strCnfLicense');
		// 		$strCnfCode=$this->input->post('strCnfCode');
		// 		$agent_do=$this->input->post('strAgentDo');
		// 		$do_date=$this->input->post('strDoDate');
		// 		$be_no=$this->input->post('strBEno');
		// 		$be_date=$this->input->post('strBEdate');
		// 		$wr_out_date=$this->input->post('strWRdate');
				
		// 		$verify_rot=$this->input->post('verify_rot');
		// 		$verify_bl=$this->input->post('verify_bl');
				
		// 		$verify_num=$this->input->post('verify_num');		
		// 		$verify_id=$this->input->post('verify_id');		// shed tally id for LCL, certify_id for FCL
				
		// 		$strTonUpdt=$this->input->post('strTonUpdt');
		// 		$contStatus=$this->input->post('contStatus');
		// 		$certifyUpdate=$this->input->post('certifyUpdate');

		// 		$login_id = $this->session->userdata('login_id');
		// 		$ipaddr = $_SERVER['REMOTE_ADDR'];
				
				
				
				
		// 		$sqlIglDtlId="SELECT id as rtnValue FROM igm_details WHERE Import_Rotation_No='$verify_rot' AND BL_No='$verify_bl'";
		// 		$resigmDtlId = $this->bm->dataSelectDb1($sqlIglDtlId);
		// 		$igmDtlId = 0;
		// 		for($i=0;$i<count($resigmDtlId);$i++)
		// 		{
		// 			$igmDtlId = $resigmDtlId[$i]["rtnValue"];
		// 		}
				
		// 		$igm_id = "";
		// 		$sqlIgmId="SELECT igm_details.id AS igmID FROM igm_details 
		// 			WHERE igm_details.Import_Rotation_No='$verify_rot' AND igm_details.BL_No='$verify_bl'
		// 			UNION
		// 			SELECT igm_supplimentary_detail.id AS igmID FROM igm_supplimentary_detail 
		// 			WHERE igm_supplimentary_detail.Import_Rotation_No='$verify_rot'
		// 			AND igm_supplimentary_detail.BL_No='$verify_bl'";
		// 		$rslt_sqlIgmId = $this->bm->dataSelectDb1($sqlIgmId);
		// 		for($x=0;$x<count($rslt_sqlIgmId);$x++)
		// 			{
		// 				$igm_id=$rslt_sqlIgmId[$x]['igmID'];	
		// 			}
		// 		$data['igm_id'] = $igm_id;

		// 		$sqlIgmSupDtlId="SELECT id as rtnValue FROM igm_supplimentary_detail WHERE Import_Rotation_No='$verify_rot' AND BL_No='$verify_bl'";
		// 		$resigmSupDtlId = $this->bm->dataSelectDb1($sqlIgmSupDtlId);
		// 		$igmSupDtlId = 0;
		// 		for($i=0;$i<count($resigmSupDtlId);$i++)
		// 		{
		// 			$igmSupDtlId = $resigmSupDtlId[$i]["rtnValue"];
		// 		}

		// 		if($verify_num=="" or $verify_num==0)		
		// 		{	
		// 			if($contStatus=="LCL")					//2020-03-15
		// 			{
		// 				$strUpdateEq = "UPDATE shed_tally_info
		// 				set wr_upto_date='$wr_out_date',verify_by='$login_id',verify_time=NOW() 
		// 				where id='$verify_id'";

		// 				$statUp = $this->bm->dataInsertDB1($strUpdateEq);								

		// 				if($strTonUpdt!='0' or $strTonUpdt!="")	
		// 				{

		// 					$strInsertVerifyOther = "insert into verify_other_data (shed_tally_id,agent_do,do_date,
		// 					be_no,be_date,cnf_lic_no,update_ton ,last_update,update_by,user_ip,cnf_name) 
		// 					values ('$verify_id','$agent_do','$do_date','$be_no','$be_date','$cnfLicense','$strTonUpdt',NOW(),'$login_id','$ipaddr','$strCnfCode')";

		// 				}
		// 				else
		// 				{
		// 					$strInsertVerifyOther = "insert into verify_other_data (shed_tally_id,agent_do,do_date,be_no,be_date,cnf_lic_no,last_update,update_by,user_ip,cnf_name) 
		// 					values ('$verify_id','$agent_do','$do_date','$be_no','$be_date','$cnfLicense',NOW(),'$login_id','$ipaddr','$strCnfCode')";
		// 				}

		// 				$stat = $this->bm->dataInsertDB1($strInsertVerifyOther);

		// 				$data['msg']="";
						
		// 				if($stat==1)
						
		// 					if($certifyUpdate=='certifyUpdate'){
		// 				    $certifyUpdateQu="Update release_order_record SET certify_by='$login_id',certify_at=now(),certify='' where imp_rot='$verify_rot' and bl_no='$verify_bl'";
		// 					 $certifyUpdateResult = $this->bm->dataUpdateDb2($certifyUpdateQu);
		// 					}
		// 					$msg="<font color='green'><b>LCL ASSIGNMENT CERTIFIED SUCCESSFULLY FOR : ".$verify_rot." AND ".$verify_bl."</font>";
							
		// 				}
		// 				else
		// 				{
		// 					$msg="<font color='red'><b>NOT INSERTED.<font color='red'><b>";
		// 				}	
		// 			}
					
					
		// 			else if($contStatus=="FCL")				//2020-03-15
		// 			{
		// 				$count = 0;
		// 				if($igmDtlId == 0){
		// 					$countSqlDetails = "SELECT COUNT(*) AS rtnValue FROM certify_info_fcl WHERE igm_sup_detail_id='$igmSupDtlId'";
		// 					$count = $this->bm->dataReturnDB1($countSqlDetails);
							
		// 					if($strTonUpdt!='0' or $strTonUpdt!="")	
		// 					{
		// 						$strInsertCertifyInfoFCL = "insert into certify_info_fcl (igm_sup_detail_id,cnf_lic_no,cnf_name,agent_do,do_date,be_no,be_date,wr_upto_date, update_ton, update_by,last_update,ip_addr,rotation_no, bl_no) values ('$igmSupDtlId','$cnfLicense','$strCnfCode','$agent_do','$do_date','$be_no','$be_date','$wr_out_date',
		// 						'$strTonUpdt','$login_id',NOW(),'$ipaddr','$verify_rot','$verify_bl')";
		// 					}
		// 					else
		// 					{
		// 						$strInsertCertifyInfoFCL = "insert into certify_info_fcl (igm_sup_detail_id,cnf_lic_no,cnf_name,agent_do,do_date,be_no,be_date,wr_upto_date, update_by,
		// 						last_update,ip_addr,rotation_no, bl_no) values ('$igmSupDtlId','$cnfLicense','$strCnfCode','$agent_do',
		// 						'$do_date','$be_no','$be_date','$wr_out_date', '$login_id',NOW(),'$ipaddr','$verify_rot','$verify_bl')";
		// 					}
		// 				}else{
		// 					$countSqlDetails = "SELECT COUNT(*) AS rtnValue FROM certify_info_fcl WHERE igm_detail_id='$igmDtlId'";
		// 					$count = $this->bm->dataReturnDB1($countSqlDetails);
							
		// 					if($strTonUpdt!='0' or $strTonUpdt!="")	
		// 					{
		// 						$strInsertCertifyInfoFCL = "insert into certify_info_fcl (igm_detail_id,cnf_lic_no,cnf_name,agent_do,do_date,be_no,be_date,wr_upto_date,update_ton,update_by,
		// 						last_update,ip_addr,rotation_no, bl_no) values ('$igmDtlId','$cnfLicense','$strCnfCode','$agent_do','$do_date','$be_no',
		// 						'$be_date','$wr_out_date','$strTonUpdt','$login_id',NOW(),'$ipaddr','$verify_rot','$verify_bl')";
		// 					}
		// 					else
		// 					{
		// 						$strInsertCertifyInfoFCL = "insert into certify_info_fcl (igm_detail_id,cnf_lic_no,cnf_name,agent_do,do_date,be_no,be_date,wr_upto_date,update_by,last_update,ip_addr,rotation_no, bl_no) values ('$igmDtlId','$cnfLicense','$strCnfCode','$agent_do','$do_date','$be_no','$be_date','$wr_out_date',
		// 						'$login_id', NOW(), '$ipaddr', '$verify_rot', '$verify_bl')";
		// 					}
		// 				}
						
		// 				if($count == 0){
		// 					$rsltInsertCertifyInfoFCL = $this->bm->dataInsertDB1($strInsertCertifyInfoFCL);

		// 					$data['msg']="";
		// 					if($rsltInsertCertifyInfoFCL==1)
		// 					{
		// 						 $certifyUpdateQu="Update release_order_record SET certify_by='$login_id',certify_at=now(),certify='' where imp_rot='$verify_rot' and bl_no='$verify_bl'";
		// 					      $certifyUpdateResult = $this->bm->dataUpdateDb2($certifyUpdateQu);
						
		// 						  $msg="<font color='green'><b>FCL ASSIGNMENT CERTIFIED SUCCESSFULLY FOR : ".$verify_rot." AND ".$verify_bl."</font>";
		// 					}
		// 					else
		// 					{
		// 						$msg="<font color='red'><b>NOT INSERTED.</font><b>";
		// 					}
		// 				}else{
		// 					$msg="<font color='green'><b>Allready Certified!!</font><b>";
		// 				}
						
		// 			}				
				
		// 		else			// old part for verification no != ""								
		// 		{								
		// 			if($contStatus=="LCL")
		// 			{									
		// 				$strInsertTally= "UPDATE shed_tally_info 
		// 				set wr_upto_date='$wr_out_date'
		// 				WHERE id='$verify_id'";
					
		// 				$stat = $this->bm->dataInsertDB1($strInsertTally);
						
		// 				$strInsertVerifyOther = "UPDATE verify_other_data 
		// 				set agent_do='$agent_do',cnf_name='$strCnfCode',do_date='$do_date',be_no='$be_no',be_date='$be_date',cnf_lic_no='$cnfLicense',update_ton='$strTonUpdt'
		// 				WHERE shed_tally_id='$verify_id'";
					
		// 				$stat1 = $this->bm->dataInsertDB1($strInsertVerifyOther);
						
		// 				$data['msg']="";
		// 				if($stat1==1)
		// 					$msg="<font color='green'><b>ASSIGNMENT UPDATED SUCCESSFULLY.</font>";
		// 				else
		// 					$msg="<font color='red'><b>NOT UPDATED.</font>";
		// 			}
		// 			else if($contStatus=="FCL")
		// 			{
		// 				$updateCertifyInfoFCL="UPDATE certify_info_fcl SET cnf_lic_no='$cnfLicense',cnf_name='$strCnfCode',
		// 				agent_do='$agent_do',do_date='$do_date',be_no='$be_no',be_date='$be_date',wr_upto_date='$wr_out_date',update_ton='$strTonUpdt',update_by='$login_id',last_update=NOW(),ip_addr='$ipaddr' WHERE certify_info_fcl.igm_detail_id='$igmDtlId'";		
		// 				$rsltUpdateCertifyInfoFCL = $this->bm->dataUpdateDB1($updateCertifyInfoFCL);
						
		// 				$data['msg']="";
		// 				if($rsltUpdateCertifyInfoFCL==1)
		// 					$msg="<font color='green'><b>ASSIGNMENT UPDATED SUCCESSFULLY.</font>";
		// 				else
		// 					$msg="<font color='red'><b>NOT UPDATED.</font>";
		// 			}
		// 		}						
				
		// 		$sqlContainer = "";
				

		// 			$manif_num = str_replace("/"," ",$verify_rot);

		// 		$sqlContainer = "SELECT igm_supplimentary_detail.id,IFNULL(SUM(rcv_pack)+SUM(loc_first),0) AS rcv_pack,igm_sup_detail_container.cont_number,igm_supplimentary_detail.Import_Rotation_No,Vessel_Name,igm_supplimentary_detail.Pack_Marks_Number,shed_loc,shed_yard, igm_supplimentary_detail.Description_of_Goods,igm_supplimentary_detail.ConsigneeDesc, igm_supplimentary_detail.NotifyDesc,cont_size, cont_weight,cont_seal_number,
		// 			igm_sup_detail_container.cont_status,cont_height,cont_iso_type,IFNULL(shed_tally_info.verify_number,0) AS verify_number, 
					
		// 			IF(shed_mlo_do_info.valid_upto_dt IS NULL OR shed_mlo_do_info.valid_upto_dt='0000-00-00',shed_tally_info.wr_upto_date,
		// 				shed_mlo_do_info.valid_upto_dt)
		// 				AS wr_upto_date,
					
		// 			shed_tally_info.verify_by,shed_tally_info.verify_time, IFNULL(shed_tally_info.id,0) AS verify_id,off_dock_id, shed_tally_info.wr_date as ustuffing_dt,IFNULL(shed_mlo_do_info.be_no,certify_info_fcl.be_no) AS be_no, IFNULL(shed_mlo_do_info.be_date,(certify_info_fcl.be_date)) AS be_date,  (SELECT Organization_Name FROM organization_profiles WHERE organization_profiles.id=igm_sup_detail_container.off_dock_id) AS offdock_name, organization_profiles.Organization_Name AS cnf_name, organization_profiles.License_No AS cnf_lic_no, shed_mlo_do_info.id AS agent_do, DATE(shed_mlo_do_info.upload_time) AS do_date, IFNULL(verify_other_data.update_ton,certify_info_fcl.update_ton) AS update_ton
		// 			FROM igm_supplimentary_detail 
		// 			INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id 
		// 			LEFT JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
		// 			LEFT JOIN edo_application_by_cf ON igm_supplimentary_detail.Import_Rotation_No=edo_application_by_cf.rotation AND igm_supplimentary_detail.BL_No=edo_application_by_cf.bl 
		// 			LEFT JOIN users ON users.login_id=edo_application_by_cf.sumitted_by 
		// 			LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id 
		// 			LEFT JOIN igm_details ON igm_supplimentary_detail.igm_detail_id=igm_details.id 
		// 			LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id 
		// 			LEFT JOIN shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
		// 			LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
		// 			LEFT JOIN certify_info_fcl ON igm_details.id=certify_info_fcl.igm_detail_id OR igm_supplimentary_detail.id=certify_info_fcl.igm_sup_detail_id 
		// 			WHERE igm_supplimentary_detail.Import_Rotation_No='$verify_rot' AND igm_supplimentary_detail.BL_No='$verify_bl' GROUP BY igm_sup_detail_container.id

		// 			UNION ALL

		// 			SELECT igm_details.id,'' AS rcv_pack,igm_detail_container.cont_number,igm_details.Import_Rotation_No,Vessel_Name,Pack_Marks_Number,'' AS shed_loc,'' AS shed_yard,Description_of_Goods,ConsigneeDesc,NotifyDesc,cont_size,cont_weight,cont_seal_number,
		// 			igm_detail_container.cont_status,cont_height,cont_iso_type,
		// 			verify_number,
					
		// 			IF(shed_mlo_do_info.valid_upto_dt IS NULL OR shed_mlo_do_info.valid_upto_dt='0000-00-00',certify_info_fcl.wr_upto_date,
		// 				shed_mlo_do_info.valid_upto_dt)
		// 				AS wr_upto_date,
					
		// 			verify_by,verify_time,IFNULL(certify_info_fcl.id,0) AS verify_id,
		// 			off_dock_id,certify_info_fcl.wr_upto_date as ustuffing_dt,
		// 			IFNULL(shed_mlo_do_info.be_no,(SELECT reg_no
		// 			FROM sad_info
		// 			INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
		// 			WHERE manif_num LIKE '%$manif_num%' AND sum_declare = '$verify_bl' LIMIT 1)) AS be_no,
		// 			IFNULL(shed_mlo_do_info.be_date,(SELECT reg_date
		// 			FROM sad_info
		// 			INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
		// 			WHERE manif_num LIKE '%$manif_num%' AND sum_declare = '$verify_bl' LIMIT 1)) AS be_date,

		// 			(SELECT Organization_Name FROM organization_profiles WHERE organization_profiles.id=igm_detail_container.off_dock_id) AS offdock_name,
		// 			organization_profiles.Organization_Name AS cnf_name, organization_profiles.License_No AS cnf_lic_no,

		// 			shed_mlo_do_info.id AS do_no, DATE(shed_mlo_do_info.upload_time) AS do_date,
		// 			update_ton

		// 			FROM  igm_details
		// 			INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
		// 			LEFT JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
		// 			LEFT JOIN edo_application_by_cf ON igm_details.Import_Rotation_No=edo_application_by_cf.rotation AND igm_details.BL_No=edo_application_by_cf.bl
		// 			LEFT JOIN users ON users.login_id=edo_application_by_cf.sumitted_by
		// 			LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id
		// 			LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id
		// 			LEFT JOIN certify_info_fcl ON certify_info_fcl.igm_detail_id=igm_details.id
		// 			LEFT JOIN verify_info_fcl ON verify_info_fcl.igm_detail_id=igm_details.id
		// 			WHERE igm_details.Import_Rotation_No='$verify_rot' AND igm_details.BL_No='$verify_bl'
		// 			GROUP BY igm_detail_container.id";
									
			
		// 		//echo $sqlContainer;
		// 		$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
		// 		$data['rtnContainerList']=$rtnContainerList;
			
		// 		//--//2020-03-11 
		// 		$containerNo="";
				
		// 		for($i=0;$i<count($rtnContainerList);$i++)
		// 		{
		// 			$containerNo=$rtnContainerList[$i]['cont_number'];
		// 			$containerNo="'".$containerNo."',";
					
		// 		}
				
		// 		$containerNo=rtrim($containerNo,",");
		// 		//--//2020-03-11 
				
		// 	//	$containerNo=$rtnContainerList[0]['cont_number'];
		// 		$verify_id=$rtnContainerList[0]['verify_id'];
				
		// 		$cnf_lic_no=$rtnContainerList[0]['cnf_lic_no'];
		// 		$cnf_licQuery="SELECT name from ref_bizunit_scoped where id='$cnf_lic_no'";
		// 		$rtnCnfName = $this->bm->dataSelect($cnf_licQuery);
		// 		$cnf_name=@$rtnCnfName[0]['NAME'];			
				
				
				
		// 		// 2021-01-12
		// 		$strID="";
		// 		$rtnValue="";
		// 		$chkcertified = "";
		// 		// echo "bfr";
		// 		if($contStatus=="FCL")
		// 		{
					
        //             $strID = "SELECT COUNT(*) AS rtnValue 
		// 			FROM inv_unit
		// 			INNER JOIN srv_event ON srv_event.applied_to_gkey=inv_unit.gkey
		// 			WHERE id IN($containerNo) AND category='IMPRT' AND event_type_gkey=30";	
        //             $rtnValue = $this->bm->dataReturn($strID);						
					
		// 			//Check if already certified    -- 2021-03-09
		// 			$chkcertify = "SELECT COUNT(certify_info_fcl.id) AS rtnValue
		// 			FROM certify_info_fcl 
		// 			INNER JOIN igm_details ON certify_info_fcl.igm_detail_id=igm_details.id
		// 			WHERE igm_details.Import_Rotation_No='$verify_rot' AND igm_details.BL_No='$verify_bl'";
		// 			$chkcertified = $this->bm->dataReturnDb1($chkcertify);

		// 			if($chkcertified == 0){
		// 				$chkcertify = "SELECT COUNT(certify_info_fcl.id) AS rtnValue
		// 				FROM certify_info_fcl 
		// 				INNER JOIN igm_supplimentary_detail ON certify_info_fcl.igm_sup_detail_id=igm_supplimentary_detail.id
		// 				WHERE igm_supplimentary_detail.Import_Rotation_No='$verify_rot' AND igm_supplimentary_detail.BL_No='$verify_bl'";
		// 				$chkcertified = $this->bm->dataReturnDb1($chkcertify);
		// 			}

		// 		}
		// 		else
		// 		{
		// 			$strID = "SELECT COUNT(*) AS rtnValue
		// 			FROM shed_tally_info WHERE import_rotation='$verify_rot' AND cont_number IN($containerNo)";
		// 			$rtnValue = $this->bm->dataReturnDb1($strID);

		// 			//Check if already certified    -- 2021-03-09

		// 			$chkcertify = "SELECT COUNT(verify_other_data.id) AS rtnValue
		// 			FROM verify_other_data 
		// 			INNER JOIN shed_tally_info ON verify_other_data.shed_tally_id=shed_tally_info.id
		// 			INNER JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
		// 			WHERE igm_supplimentary_detail.Import_Rotation_No='$verify_rot' AND igm_supplimentary_detail.BL_No='$verify_bl'";
		// 			$chkcertified = $this->bm->dataReturnDb1($chkcertify);

		// 		}

		// 		$data['certify'] = $chkcertified;
				
		// 		/*
		// 		if($rtnValue<1)
		// 		{
		// 			$msg="<font color='red'><b>CARGO IS NOT UNSTUFFED.</b></font>";
		// 		}
		// 		else
		// 		{
		// 			if($verify_id==0)
		// 			{
		// 				$msg="<font color='red'><b>NOT VERIFIED YET</b></font>";
		// 			}
		// 		}
		// 		*/
		// 		$ustuffing_dt="";
		// 		$wr_upto_date="";
				
		// 		for($a=0;$a<count($rtnContainerList);$a++)
		// 		{
		// 			$ustuffing_dt=$rtnContainerList[$a]['ustuffing_dt'];
		// 			$wr_upto_date=$rtnContainerList[$a]['wr_upto_date'];
		// 		}

		// 		$data['cnf_lic_no']=$cnf_lic_no;
		// 		$data['unstuff_flag']=$rtnValue;
		// 		$data['verify_id']=$verify_id;
		// 		$data['verify_num']=$verify_num;
		// 		$data['cnf_name']=$cnf_name;
		// 		$data['ddl_imp_rot_no']=$verify_rot;
		// 		$data['ddl_bl_no']=$verify_bl;
		// 		$data['msg']=$msg;
		// 		$data['title']="ASSINGMENT CERTIFY SECTION...";
		// 		$data['contStatus']=$contStatus;
		// 		$data['ustuffing_dt']=$ustuffing_dt;
		// 		$data['wr_upto_date']=$wr_upto_date;
		// 		$data['flag'] = 1;
				
		// 		$this->load->view('cssAssets');
		// 		$this->load->view('headerTop');
		// 		$this->load->view('sidebar');
		// 		$this->load->view('lclAssignmentCertifySectionHTML',$data);
		// 		$this->load->view('jsAssets');			
		// 	}		
		// }

		function lclAssignmentVerify()		// certify action
		{
			$org_Type_id = $this->session->userdata('org_Type_id');
			$data['org_Type_id']=$org_Type_id;
			
			$session_id = $this->session->userdata('value');
			
			if($session_id!=$this->session->userdata('session_id'))
			{
				$this->logout();			
			}
			else
			{
				$igm_sup_detail_id=$this->input->post('id');
				$cnfLicense=$this->input->post('strCnfLicense');
				$strCnfCode=$this->input->post('strCnfCode');
				$agent_do=$this->input->post('strAgentDo');
				$do_date=$this->input->post('strDoDate');
				$be_no=$this->input->post('strBEno');
				$be_date=$this->input->post('strBEdate');
				$wr_out_date=$this->input->post('strWRdate');
				
				$verify_rot=$this->input->post('verify_rot');
				$verify_bl=$this->input->post('verify_bl');
				
				$verify_num=$this->input->post('verify_num');		
				$verify_id=$this->input->post('verify_id');		// shed tally id for LCL, certify_id for FCL
				
				$strTonUpdt=$this->input->post('strTonUpdt');
				$contStatus=$this->input->post('contStatus');

				$login_id = $this->session->userdata('login_id');
				$ipaddr = $_SERVER['REMOTE_ADDR'];
				
				$sqlIglDtlId="SELECT id as rtnValue FROM igm_details WHERE Import_Rotation_No='$verify_rot' AND BL_No='$verify_bl'";
				$resigmDtlId = $this->bm->dataSelectDb1($sqlIglDtlId);
				$igmDtlId = 0;
				for($i=0;$i<count($resigmDtlId);$i++)
				{
					$igmDtlId = $resigmDtlId[$i]["rtnValue"];
				}
				
				$igm_id = "";
				$sqlIgmId="SELECT igm_details.id AS igmID FROM igm_details 
					WHERE igm_details.Import_Rotation_No='$verify_rot' AND igm_details.BL_No='$verify_bl'
					UNION
					SELECT igm_supplimentary_detail.id AS igmID FROM igm_supplimentary_detail 
					WHERE igm_supplimentary_detail.Import_Rotation_No='$verify_rot'
					AND igm_supplimentary_detail.BL_No='$verify_bl'";
				$rslt_sqlIgmId = $this->bm->dataSelectDb1($sqlIgmId);
				for($x=0;$x<count($rslt_sqlIgmId);$x++)
					{
						$igm_id=$rslt_sqlIgmId[$x]['igmID'];	
					}
				$data['igm_id'] = $igm_id;

				$sqlIgmSupDtlId="SELECT id as rtnValue FROM igm_supplimentary_detail WHERE Import_Rotation_No='$verify_rot' AND BL_No='$verify_bl'";
				$resigmSupDtlId = $this->bm->dataSelectDb1($sqlIgmSupDtlId);
				$igmSupDtlId = 0;
				for($i=0;$i<count($resigmSupDtlId);$i++)
				{
					$igmSupDtlId = $resigmSupDtlId[$i]["rtnValue"];
				}

				// commented on 2020-03-12
				// if($verify_num=="" or $verify_num==0)		// LCL
				// {
					// $VerifyNoQuery="select MAX(verify_number) as rtnValue from shed_tally_info";
					// $VerifyNo = $this->bm->dataReturnDb1($VerifyNoQuery);
					// $maxVerifyNo = $VerifyNo+1;
								
					// //echo "Date : ".$wr_out_date;
					// //echo "VerifyNo : ".$cont;

					// $strUpdateEq = "UPDATE shed_tally_info
					// set wr_upto_date='$wr_out_date',verify_number=$maxVerifyNo,verify_by='$login_id',verify_time=NOW() 
					// where id='$verify_id'";
				
					// $statUp = $this->bm->dataInsertDB1($strUpdateEq);
					
					// $AfterUpdateShedIdQuery="select id as rtnValue from shed_tally_info where verify_number='$maxVerifyNo'";
					// $AfterUpdateShedId = $this->bm->dataReturnDb1($AfterUpdateShedIdQuery);
					// $AfterUpdateMaxShedId = $AfterUpdateShedId;
					
					// $strInsertVerifyOther = "insert into verify_other_data (shed_tally_id,agent_do,do_date,be_no,be_date,cnf_lic_no,update_ton,last_update,update_by,user_ip,cnf_name) 
					// values ('$AfterUpdateMaxShedId','$agent_do','$do_date','$be_no','$be_date','$cnfLicense','$strTonUpdt',NOW(),'$login_id','$ipaddr','$strCnfCode')";
				
					// $stat = $this->bm->dataInsertDB1($strInsertVerifyOther);
					
					// $data['msg']="";
					// if($stat==1)
						// $msg="<font color='green'><b>LCL ASSIGNMENT VERIFIED SUCCESSFULLY FOR : </font>".$maxVerifyNo;
					// else
						// $msg="<font color='red'><b>NOT INSERTED.<font color='red'><b>";
				// }
				
			//	if($verify_num=="" or $verify_num==0)

				if($verify_num=="" or $verify_num==0)		
				{	
					if($contStatus=="LCL")					//2020-03-15
					{
						$strUpdateEq = "UPDATE shed_tally_info
						set wr_upto_date='$wr_out_date',verify_by='$login_id',verify_time=NOW() 
						where id='$verify_id'";

						$statUp = $this->bm->dataInsertDB1($strUpdateEq);								

						if($strTonUpdt!='0' or $strTonUpdt!="")	
						{
							
							$strInsertVerifyOther = "insert into verify_other_data (shed_tally_id,agent_do,do_date,
							be_no,be_date,cnf_lic_no,update_ton ,last_update,update_by,user_ip,cnf_name) 
							values ('$verify_id','$agent_do','$do_date','$be_no','$be_date','$cnfLicense','$strTonUpdt',NOW(),'$login_id','$ipaddr','$strCnfCode')";

						}
						else
						{
							$strInsertVerifyOther = "insert into verify_other_data (shed_tally_id,agent_do,do_date,be_no,be_date,cnf_lic_no,last_update,update_by,user_ip,cnf_name) 
							values ('$verify_id','$agent_do','$do_date','$be_no','$be_date','$cnfLicense',NOW(),'$login_id','$ipaddr','$strCnfCode')";
						}

						$stat = $this->bm->dataInsertDB1($strInsertVerifyOther);

						$data['msg']="";
						
						if($stat==1)
							//$msg="<font color='green'><b>ASSIGNMENT VERIFIED SUCCESSFULLY FOR : </font>".$maxVerifyNo;
							$msg="<font color='green'><b>LCL ASSIGNMENT CERTIFIED SUCCESSFULLY FOR : ".$verify_rot." AND ".$verify_bl."</font>";
						else
							$msg="<font color='red'><b>NOT INSERTED.<font color='red'><b>";
							
					}
					
					
					else if($contStatus=="FCL")				//2020-03-15
					{
						$count = 0;
						if($igmDtlId == 0){
							$countSqlDetails = "SELECT COUNT(*) AS rtnValue FROM certify_info_fcl WHERE igm_sup_detail_id='$igmSupDtlId'";
							$count = $this->bm->dataReturnDB1($countSqlDetails);
							
							if($strTonUpdt!='0' or $strTonUpdt!="")	
							{
								$strInsertCertifyInfoFCL = "insert into certify_info_fcl (igm_sup_detail_id,cnf_lic_no,cnf_name,agent_do,do_date,be_no,be_date,wr_upto_date, update_ton, update_by,last_update,ip_addr,rotation_no, bl_no) values ('$igmSupDtlId','$cnfLicense','$strCnfCode','$agent_do','$do_date','$be_no','$be_date','$wr_out_date',
								'$strTonUpdt','$login_id',NOW(),'$ipaddr','$verify_rot','$verify_bl')";
							}
							else
							{
								$strInsertCertifyInfoFCL = "insert into certify_info_fcl (igm_sup_detail_id,cnf_lic_no,cnf_name,agent_do,do_date,be_no,be_date,wr_upto_date, update_by,
								last_update,ip_addr,rotation_no, bl_no) values ('$igmSupDtlId','$cnfLicense','$strCnfCode','$agent_do',
								'$do_date','$be_no','$be_date','$wr_out_date', '$login_id',NOW(),'$ipaddr','$verify_rot','$verify_bl')";
							}
						}else{
							$countSqlDetails = "SELECT COUNT(*) AS rtnValue FROM certify_info_fcl WHERE igm_detail_id='$igmDtlId'";
							$count = $this->bm->dataReturnDB1($countSqlDetails);
							
							if($strTonUpdt!='0' or $strTonUpdt!="")	
							{
								$strInsertCertifyInfoFCL = "insert into certify_info_fcl (igm_detail_id,cnf_lic_no,cnf_name,agent_do,do_date,be_no,be_date,wr_upto_date,update_ton,update_by,
								last_update,ip_addr,rotation_no, bl_no) values ('$igmDtlId','$cnfLicense','$strCnfCode','$agent_do','$do_date','$be_no',
								'$be_date','$wr_out_date','$strTonUpdt','$login_id',NOW(),'$ipaddr','$verify_rot','$verify_bl')";
							}
							else
							{
								$strInsertCertifyInfoFCL = "insert into certify_info_fcl (igm_detail_id,cnf_lic_no,cnf_name,agent_do,do_date,be_no,be_date,wr_upto_date,update_by,last_update,ip_addr,rotation_no, bl_no) values ('$igmDtlId','$cnfLicense','$strCnfCode','$agent_do','$do_date','$be_no','$be_date','$wr_out_date',
								'$login_id', NOW(), '$ipaddr', '$verify_rot', '$verify_bl')";
							}
						}
						
						// echo $strInsertCertifyInfoFCL;
						// echo $count;
						// return;
						
						if($count == 0){
							$rsltInsertCertifyInfoFCL = $this->bm->dataInsertDB1($strInsertCertifyInfoFCL);

							$data['msg']="";
							if($rsltInsertCertifyInfoFCL==1)
							//	$msg="<font color='green'><b>FCL ASSIGNMENT VERIFIED SUCCESSFULLY FOR : </font>".$maxVerifyNo;
								$msg="<font color='green'><b>FCL ASSIGNMENT CERTIFIED SUCCESSFULLY FOR : ".$verify_rot." AND ".$verify_bl."</font>";
							else
								$msg="<font color='red'><b>NOT INSERTED.</font><b>";
						}else{
							$msg="<font color='green'><b>Allready Certified!!</font><b>";
						}
						
					}				
				}
				else			// old part for verification no != ""								
				{								
					if($contStatus=="LCL")
					{									
						$strInsertTally= "UPDATE shed_tally_info 
						set wr_upto_date='$wr_out_date'
						WHERE id='$verify_id'";
					
						$stat = $this->bm->dataInsertDB1($strInsertTally);
						
						$strInsertVerifyOther = "UPDATE verify_other_data 
						set agent_do='$agent_do',cnf_name='$strCnfCode',do_date='$do_date',be_no='$be_no',be_date='$be_date',cnf_lic_no='$cnfLicense',update_ton='$strTonUpdt'
						WHERE shed_tally_id='$verify_id'";
					
						$stat1 = $this->bm->dataInsertDB1($strInsertVerifyOther);
						
						$data['msg']="";
						if($stat1==1)
							$msg="<font color='green'><b>ASSIGNMENT UPDATED SUCCESSFULLY.</font>";
						else
							$msg="<font color='red'><b>NOT UPDATED.</font>";
					}
					else if($contStatus=="FCL")
					{
						$updateCertifyInfoFCL="UPDATE certify_info_fcl SET cnf_lic_no='$cnfLicense',cnf_name='$strCnfCode',
						agent_do='$agent_do',do_date='$do_date',be_no='$be_no',be_date='$be_date',wr_upto_date='$wr_out_date',update_ton='$strTonUpdt',update_by='$login_id',last_update=NOW(),ip_addr='$ipaddr' WHERE certify_info_fcl.igm_detail_id='$igmDtlId'";		
						$rsltUpdateCertifyInfoFCL = $this->bm->dataUpdateDB1($updateCertifyInfoFCL);
						
						$data['msg']="";
						if($rsltUpdateCertifyInfoFCL==1)
							$msg="<font color='green'><b>ASSIGNMENT UPDATED SUCCESSFULLY.</font>";
						else
							$msg="<font color='red'><b>NOT UPDATED.</font>";
					}
				}						
				
				$sqlContainer = "";
				// if($contStatus=="LCL")				//2020-03-15
				// {
					// // $sqlContainer="SELECT igm_supplimentary_detail.id,IFNULL(SUM(rcv_pack)+SUM(loc_first),0) AS rcv_pack,igm_sup_detail_container.cont_number,shed_yard,off_dock_id,igm_supplimentary_detail.Import_Rotation_No,Pack_Marks_Number,shed_loc,Description_of_Goods,ConsigneeDesc,NotifyDesc,cont_size,cont_weight,cont_seal_number,cont_status,cont_height,cont_iso_type,IFNULL(shed_tally_info.verify_number,0) AS verify_number,shed_tally_info.wr_upto_date,shed_tally_info.verify_by,shed_tally_info.verify_time,shed_tally_info.wr_upto_date,IFNULL(shed_tally_info.id,0) AS verify_id,
					// // (SELECT Organization_Name FROM organization_profiles WHERE organization_profiles.id=igm_sup_detail_container.off_dock_id) AS offdock_name,
					// // agent_do,do_date,be_no,be_date,cnf_lic_no,update_ton,cnf_name
					// // FROM  igm_supplimentary_detail
					// // INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					// // LEFT JOIN  shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
					// // LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
					// // WHERE igm_supplimentary_detail.Import_Rotation_No='$verify_rot' AND igm_supplimentary_detail.BL_No='$verify_bl'
					// // GROUP BY igm_sup_detail_container.id";
					
					// $sqlContainer="SELECT igm_supplimentary_detail.id,IFNULL(SUM(rcv_pack)+SUM(loc_first),0) AS rcv_pack,igm_sup_detail_container.cont_number,igm_supplimentary_detail.Import_Rotation_No,Pack_Marks_Number,shed_loc,shed_yard,Description_of_Goods,ConsigneeDesc,NotifyDesc,cont_size,cont_weight,cont_seal_number,cont_status,cont_height,cont_iso_type,IFNULL(shed_tally_info.verify_number,0) AS verify_number,shed_tally_info.wr_upto_date,shed_tally_info.verify_by,shed_tally_info.verify_time,shed_tally_info.wr_upto_date,IFNULL(shed_tally_info.id,0) AS verify_id,off_dock_id,
					// (SELECT Organization_Name FROM organization_profiles WHERE organization_profiles.id=igm_sup_detail_container.off_dock_id) AS offdock_name,
					// agent_do,do_date,be_no,be_date,cnf_lic_no,update_ton,cnf_name
					// FROM  igm_supplimentary_detail
					// INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					// LEFT JOIN  shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
					// LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
					// WHERE igm_supplimentary_detail.Import_Rotation_No='$verify_rot' AND igm_supplimentary_detail.BL_No='$verify_bl'
					// GROUP BY igm_sup_detail_container.id";
				// }
				// else if($contStatus=="FCL")
				// {
					// // $sqlContainer="SELECT igm_details.id,igm_detail_container.cont_number,igm_details.Import_Rotation_No,Pack_Marks_Number,Description_of_Goods,ConsigneeDesc,NotifyDesc,cont_size,cont_weight,cont_seal_number,cont_status,cont_height,cont_iso_type,certify_info_fcl.wr_upto_date,certify_info_fcl.wr_upto_date,IFNULL(certify_info_fcl.id,0) AS verify_id,verify_number, '' as rcv_pack,
					// // (SELECT Organization_Name FROM organization_profiles WHERE organization_profiles.id=igm_detail_container.off_dock_id) AS offdock_name,
					// // agent_do,do_date,certify_info_fcl.be_no,be_date,cnf_lic_no,update_ton,cnf_name
					// // FROM  igm_details
					// // INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					// // LEFT JOIN certify_info_fcl ON certify_info_fcl.igm_detail_id=igm_details.id
					// // LEFT JOIN verify_info_fcl ON verify_info_fcl.igm_detail_id=igm_details.id
					// // WHERE igm_details.Import_Rotation_No='$verify_rot' AND igm_details.BL_No='$verify_bl'
					// // GROUP BY igm_detail_container.id";
					
					// $manif_num = str_replace("/"," ",$verify_rot);
						
					// $sqlContainer="SELECT igm_details.id,igm_detail_container.cont_number,igm_details.Import_Rotation_No,Pack_Marks_Number,Description_of_Goods,ConsigneeDesc,NotifyDesc,cont_size,cont_weight,cont_seal_number,cont_status,cont_height,cont_iso_type,'' AS rcv_pack,
					// certify_info_fcl.wr_upto_date,IFNULL(certify_info_fcl.id,0) AS verify_id,verify_number,
					// (SELECT Organization_Name FROM organization_profiles WHERE organization_profiles.id=igm_detail_container.off_dock_id) AS offdock_name,
					// agent_do,do_date,update_ton,					
					// (SELECT reg_no
					// FROM sad_info
					// INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
					// WHERE manif_num LIKE '%$manif_num%' AND sum_declare = '$verify_bl' limit 1) AS be_no,					
					// (SELECT reg_date
					// FROM sad_info
					// INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
					// WHERE manif_num LIKE '%$manif_num%' AND sum_declare = '$verify_bl' limit 1) AS be_date,					
					// (SELECT dec_code
					// FROM sad_info
					// INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
					// WHERE manif_num LIKE '%$manif_num%' AND sum_declare = '$verify_bl' limit 1) AS cnf_lic_no,					
					// (SELECT dec_name
					// FROM sad_info
					// INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
					// WHERE manif_num LIKE '%$manif_num%' AND sum_declare = '$verify_bl' limit 1) AS cnf_name
					// FROM  igm_details
					// INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					// LEFT JOIN certify_info_fcl ON certify_info_fcl.igm_detail_id=igm_details.id
					// LEFT JOIN verify_info_fcl ON verify_info_fcl.igm_detail_id=igm_details.id
					// WHERE igm_details.Import_Rotation_No='$verify_rot' AND igm_details.BL_No='$verify_bl'
					// GROUP BY igm_detail_container.id";
				// }	

					$manif_num = str_replace("/"," ",$verify_rot);

				$sqlContainer = "SELECT igm_supplimentary_detail.id,IFNULL(SUM(rcv_pack)+SUM(loc_first),0) AS rcv_pack,igm_sup_detail_container.cont_number,igm_supplimentary_detail.Import_Rotation_No,Vessel_Name,igm_supplimentary_detail.Pack_Marks_Number,shed_loc,shed_yard, igm_supplimentary_detail.Description_of_Goods,igm_supplimentary_detail.ConsigneeDesc, igm_supplimentary_detail.NotifyDesc,cont_size, cont_weight,cont_seal_number,
					igm_sup_detail_container.cont_status,cont_height,cont_iso_type,IFNULL(shed_tally_info.verify_number,0) AS verify_number, 
					
					IF(shed_mlo_do_info.valid_upto_dt IS NULL OR shed_mlo_do_info.valid_upto_dt='0000-00-00',shed_tally_info.wr_upto_date,
						shed_mlo_do_info.valid_upto_dt)
						AS wr_upto_date,
					
					shed_tally_info.verify_by,shed_tally_info.verify_time, IFNULL(shed_tally_info.id,0) AS verify_id,off_dock_id, shed_tally_info.wr_date as ustuffing_dt,IFNULL(shed_mlo_do_info.be_no,certify_info_fcl.be_no) AS be_no, IFNULL(shed_mlo_do_info.be_date,(certify_info_fcl.be_date)) AS be_date,  (SELECT Organization_Name FROM organization_profiles WHERE organization_profiles.id=igm_sup_detail_container.off_dock_id) AS offdock_name, organization_profiles.Organization_Name AS cnf_name, organization_profiles.License_No AS cnf_lic_no, shed_mlo_do_info.id AS agent_do, DATE(shed_mlo_do_info.upload_time) AS do_date, IFNULL(verify_other_data.update_ton,certify_info_fcl.update_ton) AS update_ton,COUNT(edo_application_by_cf.id) AS edo_done
					FROM igm_supplimentary_detail 
					INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id 
					LEFT JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
					LEFT JOIN edo_application_by_cf ON igm_supplimentary_detail.Import_Rotation_No=edo_application_by_cf.rotation AND igm_supplimentary_detail.BL_No=edo_application_by_cf.bl 
					LEFT JOIN users ON users.login_id=edo_application_by_cf.sumitted_by 
					LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id 
					LEFT JOIN igm_details ON igm_supplimentary_detail.igm_detail_id=igm_details.id 
					LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id 
					LEFT JOIN shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
					LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
					LEFT JOIN certify_info_fcl ON igm_details.id=certify_info_fcl.igm_detail_id OR igm_supplimentary_detail.id=certify_info_fcl.igm_sup_detail_id 
					WHERE igm_supplimentary_detail.Import_Rotation_No='$verify_rot' AND igm_supplimentary_detail.BL_No='$verify_bl' GROUP BY igm_sup_detail_container.id

					UNION ALL

					SELECT igm_details.id,'' AS rcv_pack,igm_detail_container.cont_number,igm_details.Import_Rotation_No,Vessel_Name,Pack_Marks_Number,'' AS shed_loc,'' AS shed_yard,Description_of_Goods,ConsigneeDesc,NotifyDesc,cont_size,cont_weight,cont_seal_number,
					igm_detail_container.cont_status,cont_height,cont_iso_type,
					verify_number,
					
					IF(shed_mlo_do_info.valid_upto_dt IS NULL OR shed_mlo_do_info.valid_upto_dt='0000-00-00',certify_info_fcl.wr_upto_date,
						shed_mlo_do_info.valid_upto_dt)
						AS wr_upto_date,
					
					verify_by,verify_time,IFNULL(certify_info_fcl.id,0) AS verify_id,
					off_dock_id,certify_info_fcl.wr_upto_date as ustuffing_dt,
					IFNULL(shed_mlo_do_info.be_no,(SELECT reg_no
					FROM sad_info
					INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
					WHERE manif_num LIKE '%$manif_num%' AND sum_declare = '$verify_bl' LIMIT 1)) AS be_no,
					IFNULL(shed_mlo_do_info.be_date,(SELECT reg_date
					FROM sad_info
					INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
					WHERE manif_num LIKE '%$manif_num%' AND sum_declare = '$verify_bl' LIMIT 1)) AS be_date,

					(SELECT Organization_Name FROM organization_profiles WHERE organization_profiles.id=igm_detail_container.off_dock_id) AS offdock_name,
					organization_profiles.Organization_Name AS cnf_name, organization_profiles.License_No AS cnf_lic_no,

					shed_mlo_do_info.id AS do_no, DATE(shed_mlo_do_info.upload_time) AS do_date,
					update_ton,COUNT(edo_application_by_cf.id) AS edo_done

					FROM  igm_details
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					LEFT JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
					LEFT JOIN edo_application_by_cf ON igm_details.Import_Rotation_No=edo_application_by_cf.rotation AND igm_details.BL_No=edo_application_by_cf.bl
					LEFT JOIN users ON users.login_id=edo_application_by_cf.sumitted_by
					LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id
					LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id
					LEFT JOIN certify_info_fcl ON certify_info_fcl.igm_detail_id=igm_details.id
					LEFT JOIN verify_info_fcl ON verify_info_fcl.igm_detail_id=igm_details.id
					WHERE igm_details.Import_Rotation_No='$verify_rot' AND igm_details.BL_No='$verify_bl'
					GROUP BY igm_detail_container.id";
						//return;			
			
				//echo $sqlContainer;
				$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
				$data['rtnContainerList']=$rtnContainerList;
			
				//--//2020-03-11 
				$containerNo="";
				
				for($i=0;$i<count($rtnContainerList);$i++)
				{
					$containerNo=$rtnContainerList[$i]['cont_number'];
					$containerNo="'".$containerNo."',";
					//$cnf_lic_no=$rtnContainerList[$i]['cnf_lic_no'];
				}
				
				$containerNo=rtrim($containerNo,",");
				//--//2020-03-11 
				
			//	$containerNo=$rtnContainerList[0]['cont_number'];
				$verify_id=$rtnContainerList[0]['verify_id'];
				
				$cnf_lic_no=$rtnContainerList[0]['cnf_lic_no'];
				$cnf_licQuery="SELECT name from ref_bizunit_scoped where id='$cnf_lic_no'";
				$rtnCnfName = $this->bm->dataSelect($cnf_licQuery);
				$cnf_name=@$rtnCnfName[0]['NAME'];			
				
				// $strID = "select count(*) as rtnValue from sparcsn4.inv_unit
				// inner join sparcsn4.srv_event on sparcsn4.srv_event.applied_to_gkey=sparcsn4.inv_unit.gkey
				// where id='$containerNo' and  category='IMPRT' and event_type_gkey=30";
				
				//2020-03-11
				// $strID = "SELECT COUNT(*) AS rtnValue FROM sparcsn4.inv_unit
				// INNER JOIN sparcsn4.srv_event ON sparcsn4.srv_event.applied_to_gkey=sparcsn4.inv_unit.gkey
				// WHERE id IN($containerNo) AND category='IMPRT' AND event_type_gkey=30";
				// $rtnValue = $this->bm->dataReturn($strID);
				
				// 2021-01-12
				$strID="";
				$rtnValue="";
				$chkcertified = "";
				// echo "bfr";
				if($contStatus=="FCL")
				{
					/*$strID = "SELECT COUNT(*) AS rtnValue 
					FROM sparcsn4.inv_unit
					INNER JOIN sparcsn4.srv_event ON sparcsn4.srv_event.applied_to_gkey=sparcsn4.inv_unit.gkey
					WHERE id IN($containerNo) AND category='IMPRT' AND event_type_gkey=30";
					$rtnValue = $this->bm->dataReturn($strID);*/
                    $strID = "SELECT COUNT(*) AS rtnValue 
					FROM inv_unit
					INNER JOIN srv_event ON srv_event.applied_to_gkey=inv_unit.gkey
					WHERE id IN($containerNo) AND category='IMPRT' AND event_type_gkey=30";	
                    $rtnValue = $this->bm->dataReturn($strID);						
					
					//Check if already certified    -- 2021-03-09
					$chkcertify = "SELECT COUNT(certify_info_fcl.id) AS rtnValue
					FROM certify_info_fcl 
					INNER JOIN igm_details ON certify_info_fcl.igm_detail_id=igm_details.id
					WHERE igm_details.Import_Rotation_No='$verify_rot' AND igm_details.BL_No='$verify_bl'";
					$chkcertified = $this->bm->dataReturnDb1($chkcertify);

					if($chkcertified == 0){
						$chkcertify = "SELECT COUNT(certify_info_fcl.id) AS rtnValue
						FROM certify_info_fcl 
						INNER JOIN igm_supplimentary_detail ON certify_info_fcl.igm_sup_detail_id=igm_supplimentary_detail.id
						WHERE igm_supplimentary_detail.Import_Rotation_No='$verify_rot' AND igm_supplimentary_detail.BL_No='$verify_bl'";
						$chkcertified = $this->bm->dataReturnDb1($chkcertify);
					}

				}
				else
				{
					$strID = "SELECT COUNT(*) AS rtnValue
					FROM shed_tally_info WHERE import_rotation='$verify_rot' AND cont_number IN($containerNo)";
					$rtnValue = $this->bm->dataReturnDb1($strID);

					//Check if already certified    -- 2021-03-09

					$chkcertify = "SELECT COUNT(verify_other_data.id) AS rtnValue
					FROM verify_other_data 
					INNER JOIN shed_tally_info ON verify_other_data.shed_tally_id=shed_tally_info.id
					INNER JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
					WHERE igm_supplimentary_detail.Import_Rotation_No='$verify_rot' AND igm_supplimentary_detail.BL_No='$verify_bl'";
					$chkcertified = $this->bm->dataReturnDb1($chkcertify);

				}

				$data['certify'] = $chkcertified;
				
				/*
				if($rtnValue<1)
				{
					$msg="<font color='red'><b>CARGO IS NOT UNSTUFFED.</b></font>";
				}
				else
				{
					if($verify_id==0)
					{
						$msg="<font color='red'><b>NOT VERIFIED YET</b></font>";
					}
				}
				*/
				$ustuffing_dt="";
				$wr_upto_date="";
				
				for($a=0;$a<count($rtnContainerList);$a++)
				{
					$ustuffing_dt=$rtnContainerList[$a]['ustuffing_dt'];
					$wr_upto_date=$rtnContainerList[$a]['wr_upto_date'];
				}

				$data['cnf_lic_no']=$cnf_lic_no;
				$data['unstuff_flag']=$rtnValue;
				$data['verify_id']=$verify_id;
				$data['verify_num']=$verify_num;
				$data['cnf_name']=$cnf_name;
				$data['ddl_imp_rot_no']=$verify_rot;
				$data['ddl_bl_no']=$verify_bl;
				$data['msg']=$msg;
				$data['title']="ASSINGMENT CERTIFY SECTION...";
				$data['contStatus']=$contStatus;
				$data['ustuffing_dt']=$ustuffing_dt;
				$data['wr_upto_date']=$wr_upto_date;
				$data['flag'] = 1;
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('lclAssignmentCertifySectionHTML',$data);
				$this->load->view('jsAssets');			
			}		
		}
	
	
		function deliveryEntryFormByWHClerk()
		{	
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{		
				if($this->uri->segment(6)=="doForm")
				{
					$blNo=str_replace("_","/",$this->uri->segment(3));
					$rotyear=$this->uri->segment(4);
					$rot=$this->uri->segment(5);
					$data['doFormFlag'] = 1;
					$data['blNo']=$blNo;
					$data['rotNo']=$rotyear.'/'.$rot;				
				}
				else if($this->input->post('ddl_imp_rot_no'))
				{
					$blNo = $this->input->post('ddl_bl_no');
					$rot = $this->input->post('ddl_imp_rot_no');
					$data['doFormFlag'] = 2;
					$data['blNo'] = $blNo;
					$data['rotNo'] = $rot;
				}
				else
				{
					$data['doFormFlag']=0;
				}

				$data['title']="ONE STOP SERVICE CENTER";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('deliveryEntryFormByWHClerkHTML',$data);
				$this->load->view('jsAssets');
			}
		}
		

	
		function deliveryEntryForm()
		{
			$oneStop=$this->input->post('oneStopPoint');
			$shedTallyInfoID=$this->input->post('shedTallyInfoID');
			$cnf_lic=$this->input->post('cnf_lic');
			$cnfName=$this->input->post('cnfName');
			$paperFileDate=$this->input->post('paperFileDate');
			$exitNoteNum=strtoupper($this->input->post('exitNoteNum'));
			$date=$this->input->post('date');
			$truckNum=$this->input->post('truckNum');
			$billOfEntryNo=$this->input->post('billOfEntryNo');
			$billOfEntryDate=$this->input->post('billOfEntryDate'); 
			$invoiceAmount=$this->input->post('invoiceAmount'); 
			$blNo=$this->input->post('blNo');
			$rotNo=$this->input->post('rotNo');
			$doNo=$this->input->post('doNo');
			$doDate=$this->input->post('doDate');
			$validUpToDate=$this->input->post('validUpToDate');
			$commLandDate=$this->input->post('commLandDate');
			$cusOrderNo=strtoupper($this->input->post('cusOrderNo'));
			$cusOrderDate=$this->input->post('cusOrderDate');
		
			$login_id = $this->session->userdata('login_id');
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			
			$verifyNo=$this->input->post('verifyNo');
			$regNumber=$this->input->post('seaNumber');
			$verifyStatus=0;
			/*
			# if returns result for reg_no then FCL
			# if that then save without generating verification no
			*/
			//return;				

			if($this->input->post('save'))  
			{
				
				$sql_contStatus="SELECT cont_status AS rtnValue
				FROM  igm_supplimentary_detail
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				LEFT JOIN  shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
				LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
				WHERE igm_supplimentary_detail.Import_Rotation_No='$rotNo' AND igm_supplimentary_detail.BL_No='$blNo'
				GROUP BY igm_sup_detail_container.id

				UNION

				SELECT cont_status AS rtnValue
				FROM  igm_details
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				LEFT JOIN  shed_tally_info ON shed_tally_info.igm_detail_id=igm_details.id
				LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
				WHERE igm_details.Import_Rotation_No='$rotNo' AND igm_details.BL_No='$blNo'
				GROUP BY igm_detail_container.id";
				//$contStatus=$this->bm->dataReturnDb1($sql_contStatus);
				$sql_contStatusRslt=$this->bm->dataSelectDb1($sql_contStatus);
				$contStatus=$sql_contStatusRslt[0]['rtnValue'];
				
				$igm_detail_id = "";
				$igm_sup_detail_id = "";				
				$dtl_id = "";
				$igm_type_flag = "";
				$igmDtlId ="";
				if($contStatus=="LCL")
				{
					$checkQuery="select verify_number,igm_detail_id,igm_sup_detail_id from shed_tally_info 
								where id='$shedTallyInfoID'";				  
					$selectStat = $this->bm->dataSelectDb1($checkQuery);
					$chkVal=$selectStat[0]['verify_number'];
					
					for($i=0;$i<count($selectStat);$i++)
					{
						$igm_detail_id=$selectStat[$i]['igm_detail_id'];
						$igm_sup_detail_id=$selectStat[$i]['igm_sup_detail_id'];
					}
					
					if($igm_detail_id != "")
					{
						$dtl_id = $igm_detail_id;
						$igm_type_flag = "dtl";
					}
					else
					{
						$dtl_id = $igm_sup_detail_id;
						$igm_type_flag = "sup_dtl";
					}
				}
				else
				{
					$sqlIglDtlId="SELECT id as rtnValue FROM igm_details 
								WHERE Import_Rotation_No='$rotNo' AND BL_No='$blNo'";
					//$igmDtlId = $this->bm->dataReturnDb1($sqlIglDtlId);
					$igmDtlIdRslt = $this->bm->dataSelectDb1($sqlIglDtlId);
					$igmDtlId=$igmDtlIdRslt [0]['rtnValue'];
					$igm_detail_id = $igmDtlId;
					$igm_type_flag = "dtl";
				}
				
				$maxVerifysql="SELECT IFNULL(MAX(verify_serial),0)+1 AS rtnValue FROM common_verification WHERE DATE(verify_dt)=DATE(NOW()) AND verify_unit='$oneStop'";
				
				$newVerifySerialrslt = $this->bm->dataSelectDb1($maxVerifysql);
				$newVerifySerial=$newVerifySerialrslt [0]['rtnValue'];
				
				$date = date('dmy');
					   
				$size=strlen($newVerifySerial);
				$newVerifyNo = "";
				if($size==1)
				{
					$newVerifyNo="U".$oneStop."".$date."000".$newVerifySerial;
				}
				else if($size==2)
				{
					$newVerifyNo="U".$oneStop."".$date."00".$newVerifySerial;
				}
				else if($size==3)
				{
					$newVerifyNo="U".$oneStop."".$date."0".$newVerifySerial;
				}
				else 
				{
					$newVerifyNo="U".$oneStop."".$date."".$newVerifySerial;
				}
				
				$strVerification = "";
				if($igm_type_flag=="dtl")
				{
					$strVerification="INSERT INTO common_verification(igm_dtl_id,cont_stat,verify_dt,verify_serial,verify_no,verify_by,verify_at,verify_ip,verify_unit) 
					VALUES ('$igm_detail_id','$contStatus',date(now()),'$newVerifySerial','$newVerifyNo','$login_id',now(),'$ipaddr','$oneStop')";	
				}	
				else
				{
					$strVerification="INSERT INTO common_verification(igm_sup_dtl_id,cont_stat,verify_dt,verify_serial,verify_no,verify_by,verify_at,verify_ip,verify_unit) 
					VALUES ('$igm_sup_detail_id','$contStatus',date(now()),'$newVerifySerial','$newVerifyNo','$login_id',now(),'$ipaddr','$oneStop')";
				}
								
				$InsStat = $this->bm->dataInsertDB1($strVerification);
								
				//echo $contStatus;
				//return;
	
				if($contStatus=="LCL")
				{
					/*$checkQuery="select verify_number,igm_detail_id,igm_sup_detail_id from shed_tally_info 
								where id='$shedTallyInfoID'";				  
					$selectStat = $this->bm->dataSelectDb1($checkQuery);
					$chkVal=$selectStat[0]['verify_number'];
					//------------
					$igm_detail_id = "";
					$igm_sup_detail_id = "";
					
					$dtl_id = "";
					$igm_type_flag = "";
					for($i=0;$i<count($selectStat);$i++)
					{
						$igm_detail_id=$selectStat[$i]['igm_detail_id'];
						$igm_sup_detail_id=$selectStat[$i]['igm_sup_detail_id'];
					}
					if($igm_detail_id != "")
					{
						$dtl_id = $igm_detail_id;
						$igm_type_flag = "dtl";
					}
					else
					{
						$dtl_id = $igm_sup_detail_id;
						$igm_type_flag = "sup_dtl";
					}
					*/
					//--------------
					if($chkVal=="" || $chkVal=="NULL" )
					{
						if($verifyNo=="")
						{
							// LCL ???
							/*$maxVerifysql="SELECT IFNULL(MAX(verify_serial),0)+1 AS rtnValue FROM shed_tally_info WHERE DATE(verify_time)=DATE(NOW()) AND verify_unit='$oneStop'";
							// $maxVerifysql="select max(verify_number)+1 as rtnValue from shed_tally_info";
							//$newVerifySerial = $this->bm->dataReturnDb1($maxVerifysql);
							$newVerifySerialrslt = $this->bm->dataSelectDb1($maxVerifysql);
							$newVerifySerial=$newVerifySerialrslt [0]['rtnValue'];
							
					  
							//$sd = date(dmy);	
					  
							//$dateQuery="select DATE_FORMAT(date(now()),'%d%m%y') as rtnValue";
							$date = date('dmy');
					   
							$size=strlen($newVerifySerial);
							$newVerifyNo = "";
							if($size==1)
							{
								$newVerifyNo="U".$oneStop."".$date."000".$newVerifySerial;
							}
							else if($size==2)
							{
								$newVerifyNo="U".$oneStop."".$date."00".$newVerifySerial;
							}
							else if($size==3)
							{
								$newVerifyNo="U".$oneStop."".$date."0".$newVerifySerial;
							}
							else 
							{
								$newVerifyNo="U".$oneStop."".$date."".$newVerifySerial;
							}
							*/
							$searchQuery="select count(shed_tally_id)as rtnValue from verify_other_data where shed_tally_id='$shedTallyInfoID'";
							//$selectStat = $this->bm->dataReturnDb1($searchQuery);
							
							$searchQueryRslt = $this->bm->dataSelectDb1($searchQuery);
							$selectStat=$searchQueryRslt [0]['rtnValue'];
							// echo  $selectStat;
							if( $selectStat==0)
							{
						  
								$updateShedQuery="UPDATE shed_tally_info SET verify_serial='$newVerifySerial', verify_number='$newVerifyNo',verify_time=now(),verify_by='$login_id',verify_unit='$oneStop' WHERE shed_tally_info.id=$shedTallyInfoID";		
								$updateStat = $this->bm->dataUpdateDB1($updateShedQuery);
					   
								$selectQuery="insert into verify_other_data (shed_tally_id, cnf_lic_no, cnf_name, date, no_of_truck, paper_file_date,
								exit_note_number, be_no, be_date, do_no, do_date, valid_up_to_date, cus_rel_odr_no, cus_rel_odr_date, comm_landing_date)
								values('$shedTallyInfoID','$cnf_lic','$cnfName', '$date','$truckNum', '$paperFileDate', '$exitNoteNum','$billOfEntryNo', '$billOfEntryDate', '$doNo', '$doDate', '$validUpToDate','$cusOrderNo', '$cusOrderDate', '$commLandDate')" ;	
						
						
								$Stat = $this->bm->dataInsertDB1($selectQuery);
										   
								//echo $selectQuery;
							}
							else
							{	  
								// echo $newVerifyNo;
								$updateShedQuery="UPDATE shed_tally_info SET verify_serial='$newVerifySerial', verify_number='$newVerifyNo',verify_time=now(),verify_by='$login_id',verify_unit='$oneStop' WHERE shed_tally_info.id=$shedTallyInfoID";		
								$updateStat = $this->bm->dataUpdateDB1($updateShedQuery);	

								$updateVerifyQuery="UPDATE verify_other_data SET cnf_lic_no='$cnf_lic', cnf_name='$cnfName',date ='$date',
								no_of_truck='$truckNum',paper_file_date='$paperFileDate', exit_note_number='$exitNoteNum', be_no='$billOfEntryNo',be_date='$billOfEntryDate', do_no='$doNo', do_date='$doDate', valid_up_to_date='$validUpToDate', cus_rel_odr_no='$cusOrderNo', cus_rel_odr_date='$cusOrderDate', comm_landing_date='$commLandDate' WHERE shed_tally_id=$shedTallyInfoID";

								$Stat = $this->bm->dataUpdateDB1($updateVerifyQuery);

							}
							//echo  $updateVerifyQuery;
							if($updateStat==1 and $Stat==1 )	 
							{
								//$data['msg']="Saved Sucessfully.";
								//echo "<font color=green>Saved Sucessfully.</font></br>";
											  
								echo "<font color=green size=4> Verification No : ".$newVerifyNo."</font>"; 
							}		
							else	
								echo "<font color=red>Not Saved.</font>";												
						}			  
						else
						{		
							// FCL	???		-- transfered below
							// $updateVerifyQuery="UPDATE verify_other_data SET cnf_lic_no='$cnf_lic',cnf_name='$cnfName',date ='$date',no_of_truck='$truckNum',paper_file_date='$paperFileDate',exit_note_number='$exitNoteNum',be_no='$billOfEntryNo',be_date='$billOfEntryDate',do_no='$doNo', do_date='$doDate', valid_up_to_date='$validUpToDate', cus_rel_odr_no='$cusOrderNo',cus_rel_odr_date='$cusOrderDate',comm_landing_date='$commLandDate' WHERE shed_tally_id=$shedTallyInfoID";
							// //echo 	$updateVerifyQuery;		

							// $Stat = $this->bm->dataUpdateDB1($updateVerifyQuery);	
							// if($Stat==1 )	
							// {
								// echo "<font color=green>Sucessfully updated</font>";

								// //$data['msg']="Sucessfully updated";
							// }		
							// else		
								// echo "<font color=red>Not Updated.</font>";									
						}
						$queryInsert="insert into lcl_dlv_assignment (igm_sup_dtl_id,rot_no,bl_no,cnf_lic_no,no_of_truck,
								igm_type,verify_num,entry_by,entry_at,entry_ip)
								values('$dtl_id','$rotNo','$blNo','$cnf_lic','$truckNum','$igm_type_flag', 
								'$newVerifyNo','$login_id',NOW(),'$ipaddr')";
						$resInsert = $this->bm->dataInsertDB1($queryInsert);
				   
					}
					else
					{
					//	echo "<font>This  is already verified and verify number: ".$chkVal."</font>";
						
						// FCL	???
						$updateVerifyQuery="UPDATE verify_other_data SET cnf_lic_no='$cnf_lic',cnf_name='$cnfName',date ='$date',no_of_truck='$truckNum',paper_file_date='$paperFileDate',exit_note_number='$exitNoteNum',be_no='$billOfEntryNo',be_date='$billOfEntryDate',do_no='$doNo', do_date='$doDate', valid_up_to_date='$validUpToDate', cus_rel_odr_no='$cusOrderNo',cus_rel_odr_date='$cusOrderDate',
						comm_landing_date='$commLandDate' WHERE shed_tally_id=$shedTallyInfoID";
						//echo 	$updateVerifyQuery;		

						$Stat = $this->bm->dataUpdateDB1($updateVerifyQuery);	
						if($Stat==1 )	
						{
							echo "<font color=green>Sucessfully updated</font>";

							//$data['msg']="Sucessfully updated";
						}		
						else		
							echo "<font color=red>Not Updated.</font>";		
					}
				}
				else if($contStatus=="FCL")
				{
					$be_no=$this->input->post('seaNumber');
					$rotNo=$this->input->post('rotNo');
					$verifyUnit=$this->input->post('oneStopPoint');
					$doNo=$this->input->post('doNo');
					$validUpToDate=$this->input->post('validUpToDate');
					$doDate=$this->input->post('doDate');
					$truckNum=$this->input->post('truckNum');
					$oneStop=$this->input->post('oneStopPoint');
					$ipaddr = $_SERVER['REMOTE_ADDR'];
					
					/*$maxVerifysql="SELECT IFNULL(MAX(verify_serial),0)+1 AS rtnValue FROM verify_info_fcl 
					WHERE DATE(verify_time)=DATE(NOW()) AND verify_unit='$oneStop'";
					//$newVerifySerial = $this->bm->dataReturnDb1($maxVerifysql);
					
					$maxVerifysqlRslt = $this->bm->dataSelectDb1($maxVerifysql);
					$newVerifySerial=$maxVerifysqlRslt [0]['rtnValue'];
					
					$date = date('dmy');
					   
					$size=strlen($newVerifySerial);
					$newVerifyNo = "";
					if($size==1)
					{
						$newVerifyNo="U".$oneStop."".$date."000".$newVerifySerial;
					}
					else if($size==2)
					{
						$newVerifyNo="U".$oneStop."".$date."00".$newVerifySerial;
					}
					else if($size==3)
					{
						$newVerifyNo="U".$oneStop."".$date."0".$newVerifySerial;
					}
					else 
					{
						$newVerifyNo="U".$oneStop."".$date."".$newVerifySerial;
					}
					
					$sqlIglDtlId="SELECT id as rtnValue FROM igm_details 
								WHERE Import_Rotation_No='$rotNo' AND BL_No='$blNo'";
					//$igmDtlId = $this->bm->dataReturnDb1($sqlIglDtlId);
					$igmDtlIdRslt = $this->bm->dataSelectDb1($sqlIglDtlId);
					$igmDtlId=$igmDtlIdRslt [0]['rtnValue'];
					*/
					
					$searchQuery="select count(be_no)as rtnValue from verify_info_fcl 
								where rotation='$rotNo' and bl_no='$blNo'";
					//$selectStat = $this->bm->dataReturnDb1($searchQuery);
					$selectStatRslt = $this->bm->dataSelectDb1($searchQuery);
					$selectStat=$selectStatRslt [0]['rtnValue'];
					
					if( $selectStat==0)
					{
						$insertQuery="insert into verify_info_fcl (rotation, bl_no, be_no,igm_detail_id,verify_serial, verify_number, cnf_lic_no,
						verify_unit, do_no,valid_up_to_date, date, no_of_truck, verify_by, verify_time, paper_file_date, exit_note_number, be_date, cus_rel_odr_no, cus_rel_odr_date)
						values('$rotNo', '$blNo', '$billOfEntryNo','$igmDtlId','$newVerifySerial','$newVerifyNo', '$cnf_lic', '$verifyUnit',  '$doNo',
						'$validUpToDate','$doDate','$truckNum', '$login_id',now(), '$paperFileDate', '$exitNoteNum', '$billOfEntryDate', '$cusOrderNo',
						'$cusOrderDate' )" ;	
						
						$resInsertQuery = $this->bm->dataInsertDB1($insertQuery);
					}
					else
					{
						$updateQuery="UPDATE verify_info_fcl SET igm_detail_id='$igmDtlId',verify_serial='$newVerifySerial',
						verify_number='$newVerifyNo',verify_unit='$verifyUnit',do_no='$doNo',
						valid_up_to_date='$validUpToDate',date='$doDate',no_of_truck='$truckNum', 
						verify_by='$login_id',verify_time=now(), paper_file_date='$paperFileDate', exit_note_number='$exitNoteNum',
						be_date='$billOfEntryDate', cus_rel_odr_no='$cusOrderNo', cus_rel_odr_date='$cusOrderDate'
						WHERE rotation='$rotNo' and bl_no='$blNo'";		
						$updateStat = $this->bm->dataUpdateDB1($updateQuery);
					}
					
					if($resInsertQuery==1 or $updateStat==1 )	 
					{
						//$data['msg']="Saved Sucessfully.";
						//echo "<font color=green>Saved Sucessfully.</font></br>";
									  
						echo "<font color=green size=4> Verification No : ".$newVerifyNo."</font>"; 
					}		
					else	
						echo "<font color=red>Not Saved.</font>";
				}
			}
//		}
	}
		
	function deliverySearchByVerifyNo()
	{	
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="ONE STOP SERVICE CENTER";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('deliverySearchByVerifyNoForm',$data);
			$this->load->view('jsAssets');
		}
	}
		
				

	function deliverySearchByVerify()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			
			$assignClerk=$this->input->post('assignClerk');
			$shedTallyId=$this->input->post('shedTallyId');
			$verifyNo1=$this->input->post('verifyNo1');
			$bankCPdate=$this->input->post('bankCPdate');
			$bankCPno=$this->input->post('bankCPno');

			
			 if($this->input->post('save'))
			  {
				  if($bankCPdate!="" and $bankCPno!="")
				  {

			 
					  $Query="UPDATE verify_other_data SET clerk_assign ='$assignClerk' WHERE shed_tally_id='$shedTallyId'";
					 //echo $Query;

					   $Stat = $this->bm->dataUpdateDB1($Query);	
					   if($Stat==1 )	
					   {
						  $data['msg']="<font color=green>Sucessfully Assigned.</font>";
					   }		
						else		
						  $data['msg']= "<font color=red>Not Updated.</font>";
				   }
				  else 
						$data['msg']= "<font color=red>Require Bank CP no and CP Date in Gate information Form!</font>";					  

			  }
			 $data['title']="ONE STOP SERVICE CENTER";
			//$data['trFlag']=1;
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('deliverySearchByVerifyNoForm',$data);
			$this->load->view('jsAssets');
				
			   
		}
	}
	//Shed delivery order
		
	function shedDeliveryOrder()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="SHED DELIVERY ORDER";				
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('shedDeliveryOrder',$data);
			$this->load->view('jsAssets');	
		}		
	}	
	
	function shedDeliveryOrderForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id = $this->session->userdata('login_id');
			$this->load->library('m_pdf');		

			$verifyNo=$this->input->post('verifyNo');
			
			$sqlOrder = "select igm_supplimentary_detail.id,IFNULL(sum(rcv_pack+loc_first),0) as rcv_pack,igm_masters.Vessel_Name,igm_supplimentary_detail.Import_Rotation_No,
			igm_sup_detail_container.cont_number,Pack_Marks_Number,shed_loc,shed_yard,Description_of_Goods,Notify_name,IFNULL(shed_tally_info.verify_number,0) as verify_number,
			IFNULL(shed_tally_info.id,0) as verify_id,igm_supplimentary_detail.Pack_Number,igm_supplimentary_detail.Pack_Description,
			igm_supplimentary_detail.BL_No,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_status,igm_sup_detail_container.cont_weight,
			verify_other_data.cnf_name,verify_other_data.be_no,verify_other_data.be_date,igm_sup_detail_container.cont_height
			from  igm_supplimentary_detail
			inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
			inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
			left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
			left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
			where shed_tally_info.verify_number='$verifyNo'";	
							
			$orderList = $this->bm->dataSelectDb1($sqlOrder);				

			$data['verifyNo']=$verifyNo;
			$data['orderList']=$orderList;
						
			$sqlTruckCount="select count(truck_id) as rtnValue from do_information where verify_no='$verifyNo'";
			$truckCount = $this->bm->dataReturnDb1($sqlTruckCount);	
			$data['truckCount']=$truckCount;
			
			$sqlTruckDetails="select truck_id, delv_pack from do_information where verify_no='$verifyNo'";
			$truckDetails = $this->bm->dataSelectDb1($sqlTruckDetails);	
			$data['truckDetails']=$truckDetails;
			
			$this->load->view('shedDeliveryOrderForm',$data);
		}	
	}
		
		/*
		function shedDeliveryOrderFormFCL()
		{
			$session_id = $this->session->userdata('value');
			if($session_id!=$this->session->userdata('session_id'))
			{
				$this->logout();
			}
			else
			{
				$login_id = $this->session->userdata('login_id');
			    $this->load->library('m_pdf');
		        $mpdf->use_kwt = true;

				$verifyNo=$this->input->post('verifyNo');
				
				$sqlOrder = "select appraisement_info_fcl.rotation,appraisement_info_fcl.BL_NO,appraisement_info_fcl.cnf_name,
							appraisement_info_fcl.be_no,appraisement_info_fcl.be_date,
							igm_details.Pack_Marks_Number,igm_details.Description_of_Goods,
							igm_masters.Vessel_Name,'' as shed_yard
							from verify_info_fcl
							inner join appraisement_info_fcl on  verify_info_fcl.be_no=appraisement_info_fcl.be_no
							inner join certify_info_fcl on verify_info_fcl.be_no=certify_info_fcl.be_no
							inner join igm_details on verify_info_fcl.be_no=igm_details.Bill_of_Entry_No
							inner join igm_supplimentary_detail on igm_supplimentary_detail.igm_detail_id=igm_details.id
							inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
							where verify_info_fcl.verify_number='$verifyNo'";	
								
				$orderList = $this->bm->dataSelectDb1($sqlOrder);	
				$this->data['verifyNo']=$verifyNo;
				$this->data['orderList']=$orderList;
				
				
				$sqlTruckCount="select count(truck_id) from do_information where verify_no='$verifyNo'";
				$truckCount = $this->bm->dataReturnDb1($sqlTruckCount);	
				$this->data['truckCount']=$truckCount;
				
				$sqlTruckDetails="select truck_id, delv_pack from do_information where verify_no='$verifyNo'";
				$truckDetails = $this->bm->dataSelectDb1($sqlTruckDetails);	
				$this->data['truckDetails']=$truckDetails;
				//echo $orderList;
				//$this->load->view('header5');
				$this->load->view('shedDeliveryOrderForm',$data);
				$html=$this->load->view('shedDeliveryOrderForm',$this->data, true); 
				
				$pdfFilePath ="mypdfName-".time()."-download.pdf";

				$pdf = $this->m_pdf->load();
				//$pdf->SetWatermarkText('CPA CTMS');
				$pdf->showWatermarkText = true;	
				//$stylesheet = file_get_contents(CSS_PATH.'style.css'); // external css
				//$stylesheet = file_get_contents('resources/styles/test.css'); 
				$pdf->useSubstitutions = true; 
					
				$pdf->setFooter('Prepared By : '.$login_id.'|Page {PAGENO}|Date {DATE j-m-Y}');
			
				//$pdf->WriteHTML($stylesheet,1);
				$pdf->WriteHTML($html,2);
					
				$pdf->Output($pdfFilePath, "I");	 		
		
			}	
		}
		*/
		
	
	
	
		// LCL Certify Section	
		function doEntrySearchForm()
		{	
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="DELIVERY ENTRY FORM...";
				$this->load->view('header2');
				$this->load->view('doEntryFormHTML',$data);
				$this->load->view('footer');
			}
		}
		
		function doEntryForm()
		{
			$rotation=$this->input->post('rotation');
			$cont=$this->input->post('cont');
			$sqlContainer = "select igm_supplimentary_detail.id,import_rotation,cont_number,BL_No,Pack_Marks_Number,Pack_Description,Pack_Number,sum(rcv_pack) as rcv_pack,
			sum(flt_pack) as flt_pack
			from shed_tally_info 
			inner join igm_supplimentary_detail on igm_supplimentary_detail.id=shed_tally_info.igm_sup_detail_id
			where import_rotation='$rotation' and cont_number='$cont' group by shed_tally_info.igm_sup_detail_id";				
			$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
			
			$data['rotation']=$rotation;
			$data['cont']=$cont;
			$data['tbl']="sup_detail";
				
			$data['rtnContainerList']=$rtnContainerList;
			$this->load->view('doEntryFormView',$data);
		}
		
		
		function updateDOInfo()
		{
			$dlv=$this->input->post('dlv');
			$loc=$this->input->post('loc');
			$supId=$this->input->post('dtlId');
			$rot=$this->input->post('rot');
			$cont=$this->input->post('cont');
			$remark=$this->input->post('remark');
			$tbl=$this->input->post('tbl');
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			$login_id = $this->session->userdata('login_id');
			
			$str = "";
			if($tbl=="sup_detail")
			{
				$str = "insert into do_information(igm_sup_detail_id,import_rotation,cont_number,delv_pack,shed_loc,update_by,ip_addr,remarks,last_update)
				values('$supId','$rot','$cont','$dlv','$loc','$login_id','$ipaddr','$remark',now())";
			}
			else
			{
				$str = "insert into do_information(igm_detail_id,import_rotation,cont_number,delv_pack,shed_loc,update_by,ip_addr,remarks,last_update)
				values('$supId','$rot','$cont','$dlv','$loc','$login_id','$ipaddr','$remark',now())";
			}
				
			//}
			$stat = $this->bm->dataInsertDB1($str);
			//echo "<br>".$str;
			if($stat==1)
			{
				$data['stat']="<font color='red'><b>Sucessfully inserted</b></font>";
			}
			else
			{
				$data['stat']="<font color='red'><b>Not inserted</b></font>";
			}
			
			if($tbl=="sup_detail")
			{
				$sqlContainer = "select igm_supplimentary_detail.id,import_rotation,cont_number,BL_No,Pack_Marks_Number,Pack_Description,Pack_Number,sum(rcv_pack) as rcv_pack,
				sum(flt_pack) as flt_pack
				from shed_tally_info 
				inner join igm_supplimentary_detail on igm_supplimentary_detail.id=shed_tally_info.igm_sup_detail_id
				where import_rotation='$rot' and cont_number='$cont' group by shed_tally_info.igm_sup_detail_id";
			}
			else
			{
				$sqlContainer = "select igm_details.id,Import_Rotation_No,BL_No,cont_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rot' and cont_number='$cont'
					order by 2
					";	
			}
				
				//echo "<br>".$sqlContainer;
				$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);				
				$data['rotation']=$rot;
				$data['cont']=$cont;
				$data['tbl']=$tbl;
				
				$data['rtnContainerList']=$rtnContainerList;
				$this->load->view('doEntryFormView',$data);
		}
		
		function wirehouseReportForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="WAREHOUSE REPORT FORM...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('wirehouseReportForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function wireHouseReport()
		{
			$rotation=$this->input->post('rotation');
			$cont=$this->input->post('cont');
			
			$sqlContainer = "select igm_supplimentary_detail.id,igm_supplimentary_detail.Line_No,Pack_Marks_Number,igm_supplimentary_detail.Description_of_Goods,Pack_Number,
			(select sum(rcv_pack) from shed_tally_info where igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id) as rcv_pack,
			(select sum(delv_pack) from do_information where igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id) as delv_pack,
			(select rcv_pack-delv_pack) as rest_pack,
			(select shed_loc from shed_tally_info where igm_sup_detail_id=igm_supplimentary_detail.id limit 1) as shed_loc
			from igm_supplimentary_detail 
			inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
			where Import_Rotation_No='$rotation' and cont_number='$cont'";
							
			$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
			
			$data['rotation']=$rotation;
			$data['cont']=$cont;
			$data['rtnContainerList']=$rtnContainerList;
			$this->load->view('wirehouseReportView',$data);
		}
		
		//datewise report view form
		function wirehouseReportFormDatewise()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="DATEWISE WIREHOUSE REPORT FORM...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('wirehouseReportFormDatewise',$data);
				$this->load->view('jsAssets');
			}
		}
		
		//sends result for wirehouseReportFormDatawise
		function wireHouseReportDatewise()
		{
			$fromdate=$this->input->post('fromdate');	//fromdate
			$todate=$this->input->post('todate');       //todate    
			
			//validation test begins
		//	$this->form_validation->set_rules('fromddate', 'From', 'required');
		//	$this->form_validation->set_rules('todate', 'To', 'required');
			
			//validation test ends
			
			//with rotation, container
			// $sqlContainer = "SELECT id,Import_Rotation_No,cont_number,Line_No,Pack_Marks_Number,Description_of_Goods,Pack_Number,
			// SUM(rcv_pack) AS rcv_pack,actual_marks,marks_state,
			// (SELECT SUM(delv_pack) FROM do_information WHERE igm_sup_detail_id=tmp.id) AS delv_pack
			// FROM
			// (SELECT igm_supplimentary_detail.id,igm_supplimentary_detail.Line_No,Import_Rotation_No,igm_sup_detail_container.cont_number,Pack_Marks_Number,igm_supplimentary_detail.Description_of_Goods,Pack_Number,rcv_pack,actual_marks,marks_state
			// FROM igm_supplimentary_detail 
			// INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
			// LEFT JOIN shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
			// WHERE DATE(shed_tally_info.last_update) BETWEEN '$fromdate' AND '$todate') AS tmp GROUP BY id";

			$sqlContainer = "SELECT id,Import_Rotation_No,cont_number,Line_No,Pack_Marks_Number,Description_of_Goods,Pack_Number,
			SUM(rcv_pack) AS rcv_pack,actual_marks,marks_state,
			(SELECT SUM(delv_pack) FROM do_information) AS delv_pack
			FROM
			(SELECT igm_supplimentary_detail.id,igm_supplimentary_detail.Line_No,Import_Rotation_No,igm_sup_detail_container.cont_number,Pack_Marks_Number,igm_supplimentary_detail.Description_of_Goods,Pack_Number,rcv_pack,actual_marks,marks_state
			FROM igm_supplimentary_detail 
			INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
			LEFT JOIN shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
			WHERE DATE(shed_tally_info.last_update) BETWEEN '2020-04-01' AND '2020-04-03') AS tmp GROUP BY id";
			
			$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
			
			$data['rtnContainerList']=$rtnContainerList;
			$data['from']=$fromdate;
			$data['to']=$todate;
			
			$this->load->view('wirehouseReportViewDatewise',$data);
		}
		
		
		function exportCopinoView()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{  
				$data['title']="Export Copino...";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('exportCopinoView',$data);
				$this->load->view('jsAssets');
			}	
		}

		function exportCopinoDownloadView()
		{
			
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
		    $search_value=$this->input->post('search_value');
			$data['title']="EXPORT COPINO ROTATION ".$search_value;					
			$data['rot']=$search_value;
										
			$this->load->view('exportCopinoDownloadView',$data);   
		}

		// MH Chowdhury report start
		function contDetailInfoByRotWithXlsDownloadForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="CONTAINER DETAILS BY ROTATION";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('contDetailByRotationFormExcelAndHtml',$data);
				$this->load->view('jsAssets');
				
			}
		}	

		function contDetailInfoByRotWithXlsDownloadPerform()
		{
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
			$search_by = $this->input->post('search_by');
			if($search_by=="rotation")
			{
				$search_value=$this->input->post('search_value');
				$data['title']="CONTAINERS DETAIL FOR THE ROTATION ".$search_value;
				$data['rot']=$search_value;
			}
			else if($search_by=="container")
			{
				$search_value=$this->input->post('search_value');
				$data['title']="CONTAINERS DETAIL FOR THE CONTAINER ".$search_value;
				$data['rot']="";
				$data['con']=$search_value;
			}
			else
			{
				$fromdate=$this->input->post('fromdate');
				$todate=$this->input->post('todate');
				$data['fromdate']=$fromdate;
				$data['todate']=$todate;
				$data['rot']="";
				$data['title']="VESSEL PERFORMANCE DATE BETWEEN ".$fromdate." AND ".$todate;	
			}
				
			$this->load->view('contDetailByRotationExcelAndHtmlView',$data);   
		}

		function contListAllByRotationForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="CONTAINER LIST (ALL)";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('ContListAllByRotationView',$data);   
				$this->load->view('jsAssets');
			}
		}

		function contListAllByRotationDownloadView()
		{
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
			$search_by = $this->input->post('search_by');
			
			$search_value=$this->input->post('search_value');
			$data['title']="CONTAINERS LIST FOR THE ROTATION ".$search_value;
			$data['containerStatus']="IGM Containers";
			$data['rot']=$search_value;
			
				 
			$this->load->view('ContListAllByRotationExcelHTMLDownloadView',$data);   
		}

		function contListDischargeByRotationForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="CONTAINER LIST (DISCHARGE)";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('ContListDischargeByRotationView',$data);   
				$this->load->view('jsAssets');
			}
		}
		
		function contListDischargeByRotationDownloadView()
		{
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
			
			$dis_date_from=$this->input->post('dis_date_from');
			$dis_date_to=$this->input->post('dis_date_to');
			
			$data['title']="CONTAINERS LIST FROM ".$dis_date_from." TO ".$dis_date_to;
			$data['containerStatus']="DISCHARGE Containers";
			
			$data['dis_date_from']=$dis_date_from;
			$data['dis_date_to']=$dis_date_to;
			
					
			$this->load->view('ContListDischargeByRotationExcelHTMLDownloadView',$data);   
		} 
				
		function contListAssignmentByRotationForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="CONTAINER LIST (ASSIGNMENT)";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('ContListAssignmentByRotationView',$data);   
				$this->load->view('jsAssets');
			}
		}

		function contListAssignmentByRotationDownloadView()
		{
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
			//$search_by = $this->input->post('search_by');
			
			$assign_date_from=$this->input->post('assign_date_from');
			$assign_date_to=$this->input->post('assign_date_to');
			
			$data['title']="CONTAINERS LIST FORM  ".$assign_date_from." TO ".$assign_date_to;
			$data['containerStatus']="Assignment Containers";
			$data['assign_date_from']=$assign_date_from;
			$data['assign_date_to']=$assign_date_to;
			
					
			$this->load->view('ContListAssignmentByRotationExcelHTMLDownloadView',$data);   
		}		

		function contListOffDockByRotationForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="CONTAINER LIST (OFFDOCK DELIVERY)";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('ContListOffDockByRotationView',$data);   
				$this->load->view('jsAssets');
				
				// $this->load->view('header2');
				// $this->load->view('ContListOffDockByRotationView',$data);   
				// $this->load->view('footer');
			}
		}

		function contListOffDockByRotationDownloadView()
		{
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
			//$search_by = $this->input->post('search_by');
			
			//$search_value=$this->input->post('search_value');
			$off_date_from=$this->input->post('off_date_from');
			$off_date_to=$this->input->post('off_date_to');
			
			
			$data['containerStatus']="DISCHARGE Containers";
			
			$data['off_date_from']=$off_date_from;
			$data['off_date_to']=$off_date_to;
			$data['title']="CONTAINERS LIST FROM ".$off_date_from." TO ".$off_date_to;
			$data['containerStatus']="OffDock Containers";
			//$data['rot']=$search_value;
			
					
			$this->load->view('ContListOffDockByRotationExcelHTMLDownloadView',$data);  
		}		

		function contListReferByRotationForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="CONTAINER LIST (REFFER)";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('ContListReferByRotationView',$data);   
				$this->load->view('jsAssets');
			}
		}

		function contListReferByRotationDownloadView()
		{
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
			$ref_date_from=$this->input->post('ref_date_from');
			$ref_date_to=$this->input->post('ref_date_to');
			
			//$search_value=$this->input->post('search_value');
			$data['title']="CONTAINERS LIST From ".$ref_date_from." To ".$ref_date_to;
			$data['containerStatus']="Reefer Containers";
			//$data['rot']=$search_value;
			$data['ref_date_from']=$ref_date_from;
			$data['ref_date_to']=$ref_date_to;
			
					
			$this->load->view('ContListReferByRotationExcelHTMLDownloadView',$data);   
		}	

		function contListEmptyGateOutByRotationForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="CONTAINER LIST (Empty GATE OUT) ";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('ContListEmptyGateOutByRotationView',$data);   
				$this->load->view('jsAssets');
			}
		}

		function contListEmptyGateOutByRotationDownloadView()
		{
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
			//$search_by = $this->input->post('search_by');
			$fromDt=$this->input->post('fromDt');
			$toDt=$this->input->post('toDt');
			
			//$search_value=$this->input->post('search_value');
			$data['title']="CONTAINERS LIST From ".$fromDt." To ".$toDt;
			$data['containerStatus']="EmptyGateOut Containers";
			//$data['rot']=$search_value;
			$data['fromDt']=$fromDt;
			$data['toDt']=$toDt;
			
					
			$this->load->view('ContListEmptyGateOutByRotationExcelHTMLDownloadView',$data);   
		}	

		function contListStripingByRotationForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="CONTAINER LIST (STRIPPING)";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('ContListStripingByRotationView',$data);   
				$this->load->view('jsAssets');
			}
		}
				 
		function contListStripingByRotationDownloadView()
		{
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
			
			$search_by = $this->input->post('search_by');
			
			if($search_by=="rotation")
			{
				$search_value=$this->input->post('search_value');
				$data['title']="CONTAINERS DETAIL FOR THE ROTATION ".$search_value;
				$data['rot']=$search_value;
				$data['search_by']=$search_by;
			}
			else{
				$stripping_date_from=$this->input->post('stripping_date_from');
				$stripping_date_to=$this->input->post('stripping_date_to');
			
				//$search_value=$this->input->post('search_value');
				$data['search_by']=$search_by;
				$data['title']="CONTAINERS LIST From ".$stripping_date_from." To ".$stripping_date_to;
				$data['stripping_date_from']=$stripping_date_from;
				$data['stripping_date_to']=$stripping_date_to;
				$data['rot']="";
			}
			
			$data['containerStatus']="Stripping Containers";
			//$data['rot']=$search_value;
			$this->load->view('ContListStripingByRotationExcelHTMLDownloadView',$data);  
		}	
		// MH Chowdhury report end

		function shedStockBalanceForm()
		{	
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$str="select verify_number,import_rotation,shed_tally_info.cont_number,master_BL_No,BL_No,cont_weight,cont_size,cont_height,cont_status,cont_type,
				Pack_Number,Pack_Description,Notify_name from shed_tally_info 
				inner join igm_supplimentary_detail on shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
				inner join igm_sup_detail_container on shed_tally_info.igm_sup_detail_id=igm_sup_detail_container.igm_sup_detail_id
				where verify_number !='' and shed_tally_info.delivery_status !=1";
				$rtnContainerList = $this->bm->dataSelectDb1($str);
				$data['rtnContainerList']=$rtnContainerList;
				$data['title']="STOCK BALANCE REPORT...";
				$this->load->view('header2');
				$this->load->view('shedStockBalanceForm',$data);
				$this->load->view('footer');
			}
		}

		function shedStockBalanceFormView()
		{
			$strVerifyNum=$this->input->post('strVerifyNum');
			
			$str="select verify_number,import_rotation,shed_tally_info.cont_number,master_BL_No,BL_No,cont_weight,cont_size,cont_height,cont_status,cont_type,
			Pack_Number,Pack_Description,Notify_name from shed_tally_info 
			inner join igm_supplimentary_detail on shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
			inner join igm_sup_detail_container on shed_tally_info.igm_sup_detail_id=igm_sup_detail_container.igm_sup_detail_id
			where verify_number='$strVerifyNum' and shed_tally_info.delivery_status !=1";
			
			$rtnContainerList = $this->bm->dataSelectDb1($str);
			//echo $rtnContainerList[0]['verify_number']."  fdfdfd";
			$data['rtnContainerList']=$rtnContainerList;
			$data['vNum']=$rtnContainerList[0]['verify_number'];
			$data['title']="STOCK BALANCE REPORT...";
			$this->load->view('header2');
			$this->load->view('shedStockBalanceForm',$data);
			$this->load->view('footer');
			/*
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
						
			$strVerifyNum=$this->input->post('strVerifyNum');
			
			
			$data['containerStatus']="STOCK BALANCE REPORT";
			$data['strVerifyNum']=$strVerifyNum;
			//echo "yy : ".$strVerifyNum;
			$this->load->view('shedStockBalanceFormView',$data);   
			*/
		}	
				
		/****************Verification List ***************/
				
				
		function verificationListForm()
		{	
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$login_id = $this->session->userdata('login_id');	

				$str="select verify_number,import_rotation,shed_tally_info.cont_number,master_BL_No,BL_No,cont_weight,cont_size,cont_height,cont_status,cont_type,
				Pack_Number,Pack_Description,Notify_name from shed_tally_info 
				inner join igm_supplimentary_detail on shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
				inner join igm_sup_detail_container on shed_tally_info.igm_sup_detail_id=igm_sup_detail_container.igm_sup_detail_id
				where verify_number!='' order by shed_tally_info.id desc limit 100";
				$rtnContainerList = $this->bm->dataSelectDb1($str);
			//	echo $rtnContainerList[0]['verify_number'];
			//	print_r($rtnContainerList);
				$data['rtnContainerList']=$rtnContainerList;
				$data['title']="VERIFICATION LIST REPORT...";
				$data['login_id']=$login_id;
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('verificationListForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function verificationListFormView()
		{
			$login_id = $this->session->userdata('login_id');	
			
			$strVerifyNum=$this->input->post('strVerifyNum');
			
			$str="select verify_number,import_rotation,shed_tally_info.cont_number,master_BL_No,BL_No,cont_weight,cont_size,cont_height,cont_status,cont_type,
			Pack_Number,Pack_Description,Notify_name from shed_tally_info 
			inner join igm_supplimentary_detail on shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
			inner join igm_sup_detail_container on shed_tally_info.igm_sup_detail_id=igm_sup_detail_container.igm_sup_detail_id
			where verify_number='$strVerifyNum'";
			
			$rtnContainerList = $this->bm->dataSelectDb1($str);
			//echo $rtnContainerList[0]['verify_number']."  fdfdfd";
			$data['rtnContainerList']=$rtnContainerList;
			$data['login_id']=$login_id;
			$data['title']="VERIFICATION LIST REPORT...";
			$data['vNum']=$rtnContainerList[0]['verify_number'];
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('verificationListForm',$data);
			$this->load->view('jsAssets');
		
		}
		
		/*******************************/
		
		/**********************Certification List ******************************/
				
	function certificationFormHtml()
	{		
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
			
		}
		else
		{
			$data['msg']="";
			$data['unstuff_flag']=-1;
			$data['verify_number']="-1";
			$data['verify_num']="-1";
			$data['title']="CERTIFICATION SECTION...";		
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('certificationFormHtml',$data);
			$this->load->view('jsAssets');
		}			
	}
				
	
	
	function certificationFormViewList()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{				
			if($this->input->post('ddl_imp_rot_no') && $this->input->post('ddl_bl_no'))
			{
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$ddl_bl_no=$this->input->post('ddl_bl_no');
			}
			else
			{
				$ddl_bl_no=str_replace("_","/",$this->uri->segment(3));
				$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(4));		
			}
			$msg = "";
			$sqlContainer="select igm_supplimentary_detail.id,IFNULL(sum(rcv_pack)+sum(loc_first),0) as rcv_pack,rcv_unit,igm_masters.Vessel_Name,igm_sup_detail_container.cont_number,igm_supplimentary_detail.Import_Rotation_No,Pack_Marks_Number,shed_loc,shed_yard,Description_of_Goods,ConsigneeDesc,Notify_name,cont_size,cont_weight,cont_seal_number,cont_status,cont_height,cont_iso_type,IFNULL(shed_tally_info.verify_number,0) as verify_number,shed_tally_info.wr_upto_date,shed_tally_info.verify_by,shed_tally_info.verify_time,shed_tally_info.wr_date,IFNULL(shed_tally_info.id,0) as verify_id,
			(select Organization_Name from organization_profiles where organization_profiles.id=igm_sup_detail_container.off_dock_id) as offdock_name,
			agent_do,do_date,be_no,be_date,cnf_lic_no,update_ton,igm_supplimentary_detail.BL_No
			from  igm_supplimentary_detail
			inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
			inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
			left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
			left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
			where igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' and igm_supplimentary_detail.BL_No='$ddl_bl_no'
			group by igm_sup_detail_container.id
			
			UNION ALL

			SELECT igm_details.id,IFNULL(SUM(rcv_pack)+SUM(loc_first),0) AS rcv_pack,rcv_unit,igm_masters.Vessel_Name,igm_detail_container.cont_number,igm_details.Import_Rotation_No,Pack_Marks_Number,shed_loc,shed_yard,Description_of_Goods,ConsigneeDesc,Notify_name,cont_size,cont_weight,cont_seal_number,cont_status,cont_height,cont_iso_type,IFNULL(shed_tally_info.verify_number,0) AS verify_number,shed_tally_info.wr_upto_date,shed_tally_info.verify_by,shed_tally_info.verify_time,shed_tally_info.wr_date,IFNULL(shed_tally_info.id,0) AS verify_id, (SELECT Organization_Name FROM organization_profiles WHERE organization_profiles.id=igm_detail_container.off_dock_id) AS offdock_name, agent_do,do_date,be_no,be_date,cnf_lic_no,update_ton,igm_details.BL_No 
			FROM igm_details 
			INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id 
			INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id 
			LEFT JOIN shed_tally_info ON shed_tally_info.igm_detail_id=igm_details.id 
			LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id 
			WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no' GROUP BY igm_detail_container.id";
		
		
			$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
			$data['rtnContainerList']=$rtnContainerList;
			$containerNo = "";
			$verify_id = "";
			$verify_num = "";
			$cnf_lic_no = "";
			for($i=0;$i<count($rtnContainerList);$i++)
			{
				$containerNo=$rtnContainerList[$i]['cont_number'];
				$verify_id=$rtnContainerList[$i]['verify_id'];
				$verify_num=$rtnContainerList[$i]['verify_number'];
				$cnf_lic_no=$rtnContainerList[$i]['cnf_lic_no'];
			}
			
			
			
			$cnf_licQuery="SELECT name from ref_bizunit_scoped where id='$cnf_lic_no'";
			$rtnCnfName = $this->bm->dataSelect($cnf_licQuery);
			$cnf_name="";
			while($rtnCnfName){
				$cnf_name = $rtnCnfName[0]['NAME'];
			}
			
			
			
				$strID ="select count(*) as rtnValue from inv_unit
				inner join srv_event on srv_event.applied_to_gkey=inv_unit.gkey
				where id='$containerNo' and  category='IMPRT' and event_type_gkey=30";
			// $rtnValue = $this->bm->dataReturn($strID);
			$rtnValue = 1;
			
			if($rtnValue<1)
			{
				$msg="<font color='red'><b>CARGO IS NOT UNSTUFFED.</b></font>";
			}
			else
			{
				if($verify_id==0)
				{
					$msg="<font color='red'><b>NOT VERIFIED YET</b></font>";
				}
			}
			
			$data['unstuff_flag']=$rtnValue;
			$data['verify_id']=$verify_id;
			$data['verify_num']=$verify_num;
			$data['cnf_name']=$cnf_name;
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$data['ddl_bl_no']=$ddl_bl_no;
			$data['msg']=$msg;
			$data['title']="CERTIFICATION SECTION...";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('certificationFormHtml',$data);
			$this->load->view('jsAssets');
		}
	}
	
	
	
	
	
	
	
		function certificationListPdf()
	{
		//load mPDF library
		$this->load->library('m_pdf');
		// $mpdf->use_kwt = true;
		//load mPDF library
		
		
		$ddl_bl_no=str_replace("_","/",$this->uri->segment(3));
		$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(4));
		
		//echo "BL : ".$ddl_bl_no."Rt : ".$ddl_imp_rot_no;
			$str="select igm_supplimentary_detail.id,IFNULL(sum(rcv_pack)+sum(loc_first),0) as rcv_pack,rcv_unit,igm_masters.Vessel_Name,igm_sup_detail_container.cont_number,igm_supplimentary_detail.Import_Rotation_No,Pack_Marks_Number,shed_loc,shed_yard,Description_of_Goods,ConsigneeDesc,Notify_name,cont_size,cont_weight,cont_seal_number,cont_status,cont_height,cont_iso_type,IFNULL(shed_tally_info.verify_number,0) as verify_number,shed_tally_info.wr_upto_date,shed_tally_info.verify_by,shed_tally_info.verify_time,shed_tally_info.wr_date,IFNULL(shed_tally_info.id,0) as verify_id,
			(select Organization_Name from organization_profiles where organization_profiles.id=igm_sup_detail_container.off_dock_id) as offdock_name,
			agent_do,do_date,be_no,be_date,cnf_lic_no,update_ton,igm_supplimentary_detail.BL_No
			from  igm_supplimentary_detail
			inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
			inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
			left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
			left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
			where igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' and igm_supplimentary_detail.BL_No='$ddl_bl_no' group by igm_sup_detail_container.id";
				
				$rtnContainerList = $this->bm->dataSelectDb1($str);
				$container=$rtnContainerList[0]['cont_number'];
				
			
				$str_fcyVisit="SELECT tmp.*
				FROM (
				SELECT time_in AS fcy_time_in,last_pos_slot AS fcy_last_pos_slot,last_pos_name AS fcy_position_name,time_out AS fcy_time_out  FROM inv_unit a
				INNER JOIN 
				inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=a.gkey
					INNER JOIN
				argo_carrier_visit h ON (h.gkey = a.declrd_ib_cv OR h.gkey = a.cv_gkey)
					INNER JOIN
				argo_visit_details i ON h.cvcvd_gkey = i.gkey
					INNER JOIN
				vsl_vessel_visit_details ww ON ww.vvd_gkey = i.gkey 
				WHERE ib_vyg='$ddl_imp_rot_no' AND a.id='$container'
				) tmp";
				$rtnfcyVisit = $this->bm->dataSelect($str_fcyVisit);
				$fcy_time_out=$rtnfcyVisit[0]['FCY_TIME_OUT'];
		//now pass the data//
		 $this->data['title']="Shed Bill";
		 $this->data['rtnContainerList']=$rtnContainerList;
		 $this->data['fcy_time_out']=$fcy_time_out;
		
		$html=$this->load->view('certificationListPdfOutput',$this->data, true); //load the pdf_output.php by passing our data and get all data in $html varriable.
 	 
		//this the the PDF filename that user will get to download
		$pdfFilePath ="certificationPdfOutput-".time()."-download.pdf";

		
		//actually, you can pass mPDF parameter on this load() function
		
		$pdf = $this->m_pdf->load();
		//$pdf->SetWatermarkText('CPA CTMS');
		$pdf->showWatermarkText = true;	

		//$pdf->mirrorMargins = 1;
		//generate the PDF!
		//$stylesheet = file_get_contents('assets/css/main.css');
        //$mpdf->WriteHTML($stylesheet,1);
		//$stylesheet = file_get_contents('resources/styles/test.css'); // external css
		$pdf->useSubstitutions = true; // optional - just as an example
		//$pdf->SetHeader($url . "\n\n" . 'Date {DATE j-m-Y}');  // optional - just as an example
		//echo "SheetAdd : ".$stylesheet;
		//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO}|Date {DATE j-m-Y}');
		//$footerHtml='<pagefooter name="MyFooter1" content-left="{DATE j-m-Y}" content-center="{PAGENO}/{nbpg}" content-right="My document" footer-style="font-family: serif; font-size: 8pt; font-weight: bold; font-style: italic; color: #000000;" />';
		//$pdf->WriteHTML($stylesheet,1);
		$pdf->WriteHTML($html,2);
		//$pdf->WriteHTML('<pagebreak resetpagenum="1" pagenumstyle="1" suppress="off" />');
		//offer it to user via browser download! (The PDF won't be saved on your server HDD)
		//$pdf->Output($pdfFilePath, "D"); /// For Direct Download 
		$pdf->Output($pdfFilePath, "I"); // For Show Pdf
	}
	
	
		/****Verification Number Delete********/
	
	function deleteVerificationNumber()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
			
		}
		else
		{
			$verifyNo=str_replace("_","/",$this->uri->segment(3));
				//echo $verifyNo;				 
			$selectQuery="select id as rtnValue from shed_tally_info where verify_number='$verifyNo'";
			$shedTallyId = $this->bm->dataReturnDb1($selectQuery);
			
			$updateShedQuery="UPDATE shed_tally_info SET verify_serial=0, verify_number=NULL, verify_time=NULL,verify_by=NULL,verify_unit=NULL WHERE shed_tally_info.id=$shedTallyId";		
			$updateStat = $this->bm->dataUpdateDB1($updateShedQuery);
			$delQuery = "DELETE  from verify_other_data WHERE shed_tally_id='$shedTallyId'";
			$deleteStat = $this->bm->dataDeleteDB1($delQuery);
			
			$delQueryFromShedBillMaster = "DELETE from shed_bill_master WHERE verify_no='$verifyNo'";
			$delStat = $this->bm->dataDeleteDB1($delQueryFromShedBillMaster);	
			
			$delQueryFromShedBillDetails = "DELETE from shed_bill_details WHERE verify_no='$verifyNo'";
			$delStatDetails = $this->bm->dataDeleteDB1($delQueryFromShedBillDetails); 
			
			$delQueryFromShedBillTariff = "DELETE from shed_bill_tarrif WHERE verify_no='$verifyNo'";
			$delStatTariff = $this->bm->dataDeleteDB1($delQueryFromShedBillTariff);
			
			$delQueryFromDOinfo = "DELETE from do_information WHERE verify_no='$verifyNo'";
			$delStatDoInfo = $this->bm->dataDeleteDB1($delQueryFromDOinfo);		   
		
			$str="select verify_number,import_rotation,shed_tally_info.cont_number,master_BL_No,BL_No,cont_weight,cont_size,cont_height,cont_status,cont_type,
			Pack_Number,Pack_Description,Notify_name from shed_tally_info 
			inner join igm_supplimentary_detail on shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
			inner join igm_sup_detail_container on shed_tally_info.igm_sup_detail_id=igm_sup_detail_container.igm_sup_detail_id
			where verify_number!='' order by verify_number desc";
			$rtnContainerList = $this->bm->dataSelectDb1($str);
			
			$data['rtnContainerList']=$rtnContainerList;
			$data['title']="VERIFICATION LIST REPORT...";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('verificationListForm',$data);
			$this->load->view('jsAssets');
		}	
	}
	
	
	/*
	//Appraisement section start
		  function appraisementCertifySection()
		  {
		   $session_id = $this->session->userdata('value');
		   if($session_id!=$this->session->userdata('session_id'))
		   {
			$this->logout();
			
		   }
		   else
		   {
			$data['msg']="";
			$data['unstuff_flag']="";
			$data['verify_number']="-1";
			$data['title']="APPRAISEMENT SECTION...";
			$data['userip']=$_SERVER['REMOTE_ADDR'];
			$this->load->view('header5');
			$this->load->view('appraisementSectionHTML',$data);
			$this->load->view('footer_1');
		   } 
		  
		  }
		  
		  function appraisementCertifyList()
		  { 
		   $session_id = $this->session->userdata('value');
		   if($session_id!=$this->session->userdata('session_id'))
		   {
			$this->logout();
			
		   }
		   else
		   {

		   if($this->input->post('ddl_imp_rot_no') && $this->input->post('ddl_bl_no'))
				{
					$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
					$ddl_bl_no=$this->input->post('ddl_bl_no');

				}
				else{
					$ddl_bl_no=str_replace("_","/",$this->uri->segment(3));
					$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(4));
					//$ddl_imp_rot_no=$this->uri->segment(4);
					//$rot_year=$this->uri->segment(4);
					//$rot_no=$this->uri->segment(5);
					//$ddl_imp_rot_no=$rot_year.'/'.$rot_no;
				}
		   /*$sqlContainer="select igm_supplimentary_detail.id,IFNULL(sum(rcv_pack),0) as rcv_pack,igm_masters.Vessel_Name,igm_supplimentary_detail.Import_Rotation_No,
						  igm_sup_detail_container.cont_number,Pack_Marks_Number,shed_loc,shed_yard,Description_of_Goods,ConsigneeDesc,NotifyDesc,Notify_name,cont_size,
						  cont_weight,cont_seal_number,cont_status,cont_height,cont_iso_type,IFNULL(shed_tally_info.verify_number,0) as verify_number,
						  shed_tally_info.wr_upto_date,shed_tally_info.verify_by,shed_tally_info.verify_time,shed_tally_info.wr_upto_date,IFNULL(shed_tally_info.id,0) as verify_id,
		   (select Organization_Name from organization_profiles where organization_profiles.id=igm_sup_detail_container.off_dock_id) as offdock_name,agent_do,do_date,be_no,be_date,cnf_lic_no,update_ton
		   from  igm_supplimentary_detail
		   inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
		   inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
		   left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
		   left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
		   where igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' and igm_supplimentary_detail.BL_No='$ddl_bl_no' 
		   group by igm_sup_detail_container.id";*/
		   
		  /* $sqlContainer="select igm_supplimentary_detail.id,IFNULL(sum(rcv_pack+loc_first),0) as rcv_pack,igm_masters.Vessel_Name,igm_supplimentary_detail.Import_Rotation_No,
							igm_sup_detail_container.cont_number,Pack_Marks_Number,shed_loc,shed_yard,Description_of_Goods,Notify_name,IFNULL(shed_tally_info.verify_number,0) as verify_number,
							IFNULL(shed_tally_info.id,0) as verify_id,igm_supplimentary_detail.Pack_Number,igm_supplimentary_detail.Pack_Description,
							igm_supplimentary_detail.BL_No,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_status,
							verify_other_data.cnf_name,verify_other_data.be_no,verify_other_data.be_date
							 from  igm_supplimentary_detail
							 inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
							 inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
							 left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
							 left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
						   where igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' and igm_supplimentary_detail.BL_No='$ddl_bl_no' 
						   ";
		   //echo $sqlContainer;
		   $rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
		   $data['rtnContainerList']=$rtnContainerList;
		   
		    $sqlAppraisementQuery="select equipment,appraise_date,carpainter_use,hosting_charge,extra_movement,scale_for from appraisement_info 
									where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
		    $rtnAppraisementList = $this->bm->dataSelectDb1($sqlAppraisementQuery);
			
			if(count($rtnAppraisementList)>0)
			{
				$appraiseFlag=1;
			}
			else{
				$appraiseFlag=0;
			}
		   //$data['rtnAppraisementList']=$rtnAppraisementList;
		   
		   $used_equipment=$rtnAppraisementList[0]['equipment'];
		   $appraise_date=$rtnAppraisementList[0]['appraise_date'];		   
		   $carpainter_use=$rtnAppraisementList[0]['carpainter_use'];
		   $hosting_charge=$rtnAppraisementList[0]['hosting_charge'];
		   $extra_movement=$rtnAppraisementList[0]['extra_movement'];
		   $scale_for=$rtnAppraisementList[0]['scale_for'];
		   
		   $containerNo=$rtnContainerList[0]['cont_number'];
		   $verify_id=$rtnContainerList[0]['verify_id'];
		   $verify_num=$rtnContainerList[0]['verify_number'];
		   //$cnf_lic_no=$rtnContainerList[0]['cnf_lic_no'];
		   
		   //$cnf_licQuery="SELECT name from ref_bizunit_scoped where id='$cnf_lic_no'";
		   //$rtnCnfName = $this->bm->dataSelect($cnf_licQuery);
		   //$cnf_name=$rtnCnfName[0]['name'];
		   
		   
		   $strID = "select count(*) as rtnValue from sparcsn4.inv_unit
			 inner join sparcsn4.srv_event on sparcsn4.srv_event.applied_to_gkey=sparcsn4.inv_unit.gkey
			 where id='$containerNo' and  category='IMPRT' and event_type_gkey=30";
		   $rtnValue = $this->bm->dataReturn($strID);
		   
		   if($rtnValue<1)
		   {
			$msg="<font color='red'><b>CARGO IS NOT UNSTUFFED.</b></font>";
		   }
		   else
		   {
			if($verify_id==0)
			{
			 $msg="<font color='red'><b>NOT VERIFIED YET</b></font>";
			}
		   }
		   $data['used_equipment']=$used_equipment;
		   $data['appraise_date']=$appraise_date;
		   $data['carpainter_use']=$carpainter_use;
		   $data['hosting_charge']=$hosting_charge;
		   $data['extra_movement']=$extra_movement;
		   $data['scale_for']=$scale_for;
		   
		   $data['unstuff_flag']=$rtnValue;
		   $data['appraiseFlag']=$appraiseFlag;
		   $data['verify_id']=$verify_id;
		   $data['verify_num']=$verify_num;
		   $data['cnf_name']=$cnf_name;
		   $data['ddl_imp_rot_no']=$ddl_imp_rot_no;
		   $data['ddl_bl_no']=$ddl_bl_no;
		  // $data['userip']=$userip;  //user ip
		  // $data['login_id']=$login_id;  //user id
		   $data['msg']=$msg;
		   $data['title']="APPRAISEMENT SECTION...";
		   $this->load->view('header5');
		   $this->load->view('appraisementSectionHTML',$data);
		   $this->load->view('footer_1');
		  }
		 }*/
		 
		/* function appraisementVerify()
		 {
		  $session_id = $this->session->userdata('value');
		  
		  $igm_sup_detail_id=$this->input->post('id');
		  
		  if($session_id!=$this->session->userdata('session_id'))
		  {
		   $this->logout();
		  }
		   
		  else
		  {
		   $login_id = $this->session->userdata('login_id');
		  // $ipaddr = $_SERVER['REMOTE_ADDR'];
		   
		   $ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
		   $ddl_bl_no=$this->input->post('ddl_bl_no');
		  // $login_id=$this->input->post('login_id');
		   $userip=$_SERVER['REMOTE_ADDR'];
		   $used_equipment=$this->input->post('used_equipment');
		   $appraise_date=$this->input->post('appraise_date');
		   
		   $carpainter_use=$this->input->post('carpainter_use');
		   $hosting_charge=$this->input->post('hosting_charge');
		   $extra_movement=$this->input->post('extra_movement');
		   $scale_for=$this->input->post('scale_for');
		   
		   $chkAppraisement="select 1 as rtnVal from appraisement_info where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
		   $rtnAppraisement = $this->bm->dataSelectDb1($chkAppraisement);
		   if($rtnAppraisement[0]['rtnVal']== 1)
		   {
			   $strInsertVerifyOther = "update appraisement_info set equipment='$used_equipment',appraise_date='$appraise_date',
										carpainter_use='$carpainter_use',hosting_charge='$hosting_charge'
										,extra_movement='$extra_movement',scale_for='$scale_for',
										user_id='$login_id',user_ip='$userip',last_update=now()
										where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
										$sucMsg = "APPRAISEMENT UPDATED SUCCESSFULLY";
										$unSucMsg = "APPRAISEMENT NOT UPDATED";
		   }
		   else
		   {
				$strInsertVerifyOther = "insert into appraisement_info (rotation,BL_NO,equipment,appraise_date,carpainter_use,hosting_charge
									,extra_movement,scale_for,user_id,user_ip,last_update) 
									values ('$ddl_imp_rot_no','$ddl_bl_no','$used_equipment','$appraise_date','$carpainter_use','$hosting_charge',
									'$extra_movement','$scale_for','$login_id','$userip',now())";									
									$sucMsg = "APPRAISEMENT SAVE SUCCESSFULLY";
									$unSucMsg = "APPRAISEMENT NOT SAVE";
		   }
		   
		   $stat = $this->bm->dataInsertDB1($strInsertVerifyOther);
		   
		   $data['msg']="";
		   if($stat==1)
			$msgPO="<font color='green'><b>".$sucMsg."</font>";
		   else
			$msgPO="<font color='red'><b>".$unSucMsg."<font color='red'><b>";
		  
		  $sqlContainer="select igm_supplimentary_detail.id,IFNULL(sum(rcv_pack+loc_first),0) as rcv_pack,igm_masters.Vessel_Name,igm_supplimentary_detail.Import_Rotation_No,
							igm_sup_detail_container.cont_number,Pack_Marks_Number,shed_loc,shed_yard,Description_of_Goods,Notify_name,IFNULL(shed_tally_info.verify_number,0) as verify_number,
							IFNULL(shed_tally_info.id,0) as verify_id,igm_supplimentary_detail.Pack_Number,igm_supplimentary_detail.Pack_Description,
							igm_supplimentary_detail.BL_No,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_status,
							verify_other_data.cnf_name,verify_other_data.be_no,verify_other_data.be_date
							 from  igm_supplimentary_detail
							 inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
							 inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
							 left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
							 left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
						   where igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' and igm_supplimentary_detail.BL_No='$ddl_bl_no' 
						   ";
		   //echo $sqlContainer;
		   $rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
		   $data['rtnContainerList']=$rtnContainerList;
		   
		    $sqlAppraisementQuery="select equipment,appraise_date,carpainter_use,hosting_charge,extra_movement,scale_for from appraisement_info 
									where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
		    $rtnAppraisementList = $this->bm->dataSelectDb1($sqlAppraisementQuery);
			if(count($rtnAppraisementList)>0)
			{
				$appraiseFlag=1;
			}
			else{
				$appraiseFlag=0;
			}
		   //$data['rtnAppraisementList']=$rtnAppraisementList;
		   
		   $used_equipment=$rtnAppraisementList[0]['equipment'];
		   $appraise_date=$rtnAppraisementList[0]['appraise_date'];		   
		   $carpainter_use=$rtnAppraisementList[0]['carpainter_use'];
		   $hosting_charge=$rtnAppraisementList[0]['hosting_charge'];
		   $extra_movement=$rtnAppraisementList[0]['extra_movement'];
		   $scale_for=$rtnAppraisementList[0]['scale_for'];
		   
		   $containerNo=$rtnContainerList[0]['cont_number'];
		   $verify_id=$rtnContainerList[0]['verify_id'];
		   $verify_num=$rtnContainerList[0]['verify_number'];
		  
		   $data['used_equipment']=$used_equipment;
		   $data['appraise_date']=$appraise_date;
		   $data['carpainter_use']=$carpainter_use;
		   $data['hosting_charge']=$hosting_charge;
		   $data['extra_movement']=$extra_movement;
		   $data['scale_for']=$scale_for;
		   
		   $data['unstuff_flag']=1;
		   $data['appraiseFlag']=$appraiseFlag;
		   $data['verify_id']=$verify_id;
		   $data['verify_num']=$verify_num;
		   $data['cnf_name']=$cnf_name;
		   $data['ddl_imp_rot_no']=$ddl_imp_rot_no;
		   $data['ddl_bl_no']=$ddl_bl_no;
		   $data['msg']=$msg;
		   $data['msgPO']=$msgPO;
		   $data['title']="APPRAISEMENT SECTION...";
		   $this->load->view('header5');
		   $this->load->view('appraisementSectionHTML',$data);
		   $this->load->view('footer_1'); 
		  }
		 }
		  
		 //Appraisement section end
		 */
		 //Appraisement section start
		//Appraisement section start
		function appraisementCertifySection()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['msg']="";
				$data['unstuff_flag']="";
				$data['verify_number']="-1";
				$data['title']="APPRAISEMENT SECTION...";
				$data['userip']=$_SERVER['REMOTE_ADDR'];
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('appraisementSectionHTML',$data);
				$this->load->view('jsAssets');
			} 
		}
		  
		function appraisementCertifyList()
		{ 
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();

			}
			else
			{
				if($this->input->post('ddl_imp_rot_no') && $this->input->post('ddl_bl_no'))
				{
					$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
					$ddl_bl_no=$this->input->post('ddl_bl_no');
				}
				else
				{
					$ddl_bl_no=str_replace("_","/",$this->uri->segment(3));
					$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(4));					
				}

				$type = "";
				$id = "";

				if($this->input->post('type')){
					$type = $this->input->post('type');
					$id = $this->input->post('id');
				}

				$data['type'] = $type;
				$data['id'] = $id;

				$msg="";
				$contStatus="";
				$sql_contStatus="SELECT cont_status AS rtnValue
				FROM  igm_supplimentary_detail
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				INNER JOIN igm_masters ON igm_supplimentary_detail.igm_master_id=igm_masters.id
				LEFT JOIN  shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
				LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
				WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' AND igm_supplimentary_detail.BL_No='$ddl_bl_no' 
				GROUP BY igm_sup_detail_container.id

				UNION

				SELECT cont_status AS rtnValue
				FROM  igm_details
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				INNER JOIN igm_masters ON igm_details.IGM_id=igm_masters.id
				LEFT JOIN  shed_tally_info ON shed_tally_info.igm_detail_id=igm_details.id
				LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
				WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no' 
				GROUP BY igm_detail_container.id";
				
				//$contStatus=$this->bm->dataReturnDb1($sql_contStatus);		
				$contStatusRslt=$this->bm->dataSelectDb1($sql_contStatus);
				for($i=0; $i<count($contStatusRslt); $i++)
				{
					$contStatus=$contStatusRslt[$i]['rtnValue'];
				}

				$excngeDoneStat = "";

				if($contStatus!="" or $contStatus!=null)
				{
					if($contStatus=="LCL")
					{
						$chkExchangeDoneQry="SELECT COUNT(shed_tally_info.id) AS exchangeCount FROM shed_tally_info 
						INNER JOIN igm_supplimentary_detail ON
						shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
						WHERE  shed_tally_info.import_rotation='$ddl_imp_rot_no' AND 
						igm_supplimentary_detail.BL_No='$ddl_bl_no'";
						//shed_tally_info.berth_exchange_done_status=1 AND shed_tally_info.cpa_exchange_done_status=1 AND shed_tally_info.ff_exchange_done_status=1 and				
						$rtnchkExchangeDoneList = $this->bm->dataSelectDb1($chkExchangeDoneQry);
						$excngeDoneStat=$rtnchkExchangeDoneList[0]['exchangeCount'];
					}
					else if($contStatus=="FCL")
					{
						$excngeDoneStat=1;
					}

					if($excngeDoneStat<1)
					{
						$data['excngeDoneStat']=$excngeDoneStat;
						$msg="<font color='red'><b>THIS CONTAINER IS NOT YET UNSTUFFED.</b></font>";
					}			
					else
					{		   
						// if($contStatus=="LCL")
						// {
						// 	 $sqlContainer="SELECT igm_supplimentary_detail.id,IFNULL(total_pack,0) AS rcv_pack,igm_masters.Vessel_Name,igm_supplimentary_detail.Import_Rotation_No,						igm_sup_detail_container.cont_number,Pack_Marks_Number,shed_loc,shed_yard,Description_of_Goods,Notify_name,IFNULL(shed_tally_info.verify_number,0) AS verify_number,
						// 	IFNULL(shed_tally_info.id,0) AS verify_id,igm_supplimentary_detail.Pack_Number,igm_supplimentary_detail.Pack_Description,
						// 	igm_supplimentary_detail.BL_No,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_height,cont_seal_number,igm_sup_detail_container.cont_status,verify_other_data.cnf_lic_no,
						// 	verify_other_data.cnf_name,verify_other_data.be_no,verify_other_data.be_date,shed_tally_info.total_pack AS rcvTally,shed_tally_info.rcv_unit,
						// 	igm_sup_detail_container.Cont_gross_weight AS Cont_gross_weight
						// 	FROM  igm_supplimentary_detail
						// 	INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
						// 	INNER JOIN igm_masters ON igm_supplimentary_detail.igm_master_id=igm_masters.id
						// 	LEFT JOIN  shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
						// 	LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
						// 	WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' AND igm_supplimentary_detail.BL_No='$ddl_bl_no' 
						// 	GROUP BY igm_sup_detail_container.id";
						// }
						// else if($contStatus=="FCL")
						// {										
						// 	$sqlContainer="SELECT igm_details.id,igm_masters.Vessel_Name,igm_details.Import_Rotation_No,igm_detail_container.cont_number,Pack_Marks_Number,Description_of_Goods,Notify_name,igm_details.Pack_Number,igm_details.Pack_Description,igm_details.BL_No,igm_detail_container.cont_size,igm_detail_container.cont_height,igm_detail_container.cont_seal_number,igm_detail_container.cont_status,certify_info_fcl.cnf_lic_no,
						// 	certify_info_fcl.cnf_name,certify_info_fcl.be_no,certify_info_fcl.be_date,IFNULL(certify_info_fcl.id,0) AS verify_id,verify_number,
						// 	igm_detail_container.Cont_gross_weight AS Cont_gross_weight
						// 	FROM  igm_details
						// 	INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
						// 	INNER JOIN igm_masters ON igm_details.IGM_id=igm_masters.id
						// 	LEFT JOIN certify_info_fcl ON certify_info_fcl.igm_detail_id=igm_details.id
						// 	LEFT JOIN verify_info_fcl ON verify_info_fcl.igm_detail_id=igm_details.id
						// 	WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no' 
						// 	GROUP BY igm_detail_container.id";												
						// }
						
						$sqlContainer = "";
						
						if($contStatus=="LCL")
						{
							$sqlContainer="SELECT igm_supplimentary_detail.id,IFNULL(total_pack,0) AS rcv_pack,igm_masters.Vessel_Name,
							igm_supplimentary_detail.Import_Rotation_No,igm_sup_detail_container.cont_height,
							igm_sup_detail_container.cont_seal_number,
							igm_sup_detail_container.cont_number,Pack_Marks_Number,shed_loc,shed_yard,Description_of_Goods,Notify_name,IFNULL(shed_tally_info.verify_number,0) AS verify_number,
							IFNULL(shed_tally_info.id,0) AS verify_id,igm_supplimentary_detail.Pack_Number,igm_supplimentary_detail.Pack_Description,
							igm_supplimentary_detail.BL_No,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_status,verify_other_data.cnf_lic_no,
							verify_other_data.cnf_name,verify_other_data.be_no,verify_other_data.be_date,shed_tally_info.total_pack AS rcvTally,shed_tally_info.rcv_unit,
							igm_sup_detail_container.Cont_gross_weight AS Cont_gross_weight,appraisement_info.custom_appraiser,appraisement_info.custom_appraiser_mobile,'' AS jetty_sirkar_lic, '' AS jetty_sirkar_name, '' AS jetty_sirkar_mobile
							FROM  igm_supplimentary_detail
							INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
							INNER JOIN igm_masters ON igm_supplimentary_detail.igm_master_id=igm_masters.id
							LEFT JOIN  shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
							LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
							LEFT JOIN appraisement_info ON appraisement_info.rotation = igm_supplimentary_detail.Import_Rotation_No AND appraisement_info.BL_NO = igm_supplimentary_detail.BL_No
							WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' AND igm_supplimentary_detail.BL_No='$ddl_bl_no' 
							GROUP BY igm_sup_detail_container.id";
						}
						else if($contStatus=="FCL")
						{							
							$sqlContainer="SELECT igm_details.id,igm_masters.Vessel_Name,igm_details.Import_Rotation_No,
							igm_detail_container.cont_number,Pack_Marks_Number,Description_of_Goods,Notify_name,
							IFNULL(certify_info_fcl.id,0) AS verify_id,igm_details.Pack_Number,igm_details.Pack_Description,
							igm_details.BL_No,igm_detail_container.cont_size,igm_detail_container.cont_height,igm_detail_container.cont_seal_number,igm_detail_container.cont_status,certify_info_fcl.cnf_lic_no,
							certify_info_fcl.cnf_name,certify_info_fcl.be_no,certify_info_fcl.be_date,
							igm_detail_container.Cont_gross_weight AS Cont_gross_weight,carpainter_use,hosting_charge,extra_movement,scale_for,
							appraisement_info_fcl.jetty_sirkar_lic,appraisement_info_fcl.jetty_sirkar_name,appraisement_info_fcl.jetty_sirkar_mobile,
							appraisement_info_fcl.custom_appraiser,appraisement_info_fcl.custom_appraiser_mobile
							FROM  igm_details
							INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
							INNER JOIN igm_masters ON igm_details.IGM_id=igm_masters.id
							LEFT JOIN certify_info_fcl ON certify_info_fcl.igm_detail_id=igm_details.id
							LEFT JOIN appraisement_info_fcl ON appraisement_info_fcl.rotation=igm_details.Import_Rotation_No AND appraisement_info_fcl.BL_NO=igm_details.BL_No
							WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no' 
							GROUP BY igm_detail_container.id";
						}
						// echo $sqlContainer;
						// return;
						$rtnContainerList = "";
						$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);

						// will do work to receive agent_name, mobile_number, submit_by 

						if($this->input->post('type'))
						{
							$agent_query = "SELECT release_order_record.entry_by,vcms_vehicle_agent.agent_code,vcms_vehicle_agent.agent_name,vcms_vehicle_agent.mobile_number
							FROM release_order_record
							LEFT JOIN vcms_vehicle_agent ON vcms_vehicle_agent.id = release_order_record.agent_id
							WHERE imp_rot='$ddl_imp_rot_no' AND bl_no='$ddl_bl_no'";
							$agent_rslt = $this->bm->dataSelectDb1($agent_query);
							if(count($agent_rslt)>0)
							{
								$rtnContainerList[0]['jetty_sirkar_lic'] = $agent_rslt[0]['agent_code'];
								$rtnContainerList[0]['jetty_sirkar_name'] = $agent_rslt[0]['agent_name'];
								$rtnContainerList[0]['jetty_sirkar_mobile'] = $agent_rslt[0]['mobile_number'];
							}
						}
						


						$data['rtnContainerList']=$rtnContainerList;

						$getId="";
						$containerNo="";
						$verify_id="";

						for($z=0;$z<count($rtnContainerList);$z++){
							$getId=$rtnContainerList[$z]['id'];
							$containerNo=$rtnContainerList[$z]['cont_number'];
							$verify_id=$rtnContainerList[$z]['verify_id'];
						}

						// $queryGetUnit for LCL Only
						if($contStatus=="LCL")
						{
							$queryGetUnit="select SUM(IFNULL(shed_tally_info.total_pack,0)) as rcvTally,shed_tally_info.rcv_unit,shed_tally_info.shed_loc
							from  igm_supplimentary_detail
							inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
							inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
							left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
							left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
							where igm_supplimentary_detail.id='$getId'
							group by shed_tally_info.shed_loc,shed_tally_info.rcv_unit";
							$rtnUnitList = $this->bm->dataSelectDb1($queryGetUnit);
							$data['rtnUnitList']=$rtnUnitList;
						}
						
						if($contStatus=="LCL")
						{
							 $sqlAppraisementQuery="select equipment,appraise_date,carpainter_use,hosting_charge,extra_movement,scale_for,equipment_id from appraisement_info 
							where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
							$rtnAppraisementList = $this->bm->dataSelectDb1($sqlAppraisementQuery);
						}
						else if($contStatus=="FCL")		// remove this part if appraisement can be done multiple times - see another comment below
						{
							$sqlAppraisementQuery="select equipment,appraise_date,carpainter_use,hosting_charge,extra_movement,scale_for,equipment_id from appraisement_info_fcl 
							where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
							$rtnAppraisementList = $this->bm->dataSelectDb1($sqlAppraisementQuery);
						}
						//return;
						if($contStatus=="LCL" && count($rtnAppraisementList)>0)
						{
							$appraiseFlag=1;
						}
						else{
							$appraiseFlag=0;
						}

						//$data['rtnAppraisementList']=$rtnAppraisementList;

						$used_equipment="";
						$equip_charge="";
						$appraise_date="";		   
						$carpainter_use="";
						$hosting_charge="";
						$extra_movement="";
						$scale_for="";

						for($z=0;$z<count($rtnAppraisementList);$z++){
							$used_equipment=$rtnAppraisementList[$z]['equipment_id'];
							$equip_charge=$rtnAppraisementList[$z]['equipment'];
							$appraise_date=$rtnAppraisementList[$z]['appraise_date'];		   
							$carpainter_use=$rtnAppraisementList[$z]['carpainter_use'];
							$hosting_charge=$rtnAppraisementList[$z]['hosting_charge'];
							$extra_movement=$rtnAppraisementList[$z]['extra_movement'];
							$scale_for=$rtnAppraisementList[$z]['scale_for'];
						}

						$rtnValue=1;
						if($rtnValue<1)
						{
							$msg="<font color='red'><b>CARGO IS NOT UNSTUFFED.</b></font>";
						}
						else
						{
							// if($verify_id==0)
							// {
							// 	$msg="<font color='red'><b>NOT VERIFIED YET</b></font>";
							// }
						} 

						$getUsedEquipmentQuery= "SELECT equipment_id,equipment_name,equipment_charge,remarks FROM used_equipment ORDER BY equipment_id ASC";
						$getUsedEquipment = $this->bm->dataSelectDb1($getUsedEquipmentQuery);

						$data['getUsedEquipment']=$getUsedEquipment;

						$data['used_equipment']=$used_equipment;
						$data['equip_charge']=@$equip_charge;
						$data['appraise_date']=$appraise_date;
						$data['carpainter_use']=$carpainter_use;
						$data['hosting_charge']=$hosting_charge;
						$data['extra_movement']=$extra_movement;
						$data['scale_for']=$scale_for;

						$data['unstuff_flag']=$rtnValue;
						$data['appraiseFlag']=$appraiseFlag;
						$data['verify_id']=$verify_id;
						//$data['verify_num']=$verify_num;
						$data['cnf_name']=@$cnf_name;
						$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
						$data['ddl_bl_no']=$ddl_bl_no;
						$data['contStatus']=$contStatus;
					}
					$data['contStatus']=$contStatus;
					$data['msg']=$msg;
				}
				else
				{
					$data['contStatus']="";
					$data['msg']="BL number not Correct for this Rotation: ".$ddl_imp_rot_no;
				}
				// var_dump($data);
				// die();
				$data['title']="APPRAISEMENT SECTION...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('appraisementSectionHTML',$data);
				$this->load->view('jsAssets');
			}
		}	
		 
		 
		function appraisementVerify()
		{
			
			$session_id = $this->session->userdata('value');

			$igm_sup_detail_id=$this->input->post('id');

			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$type = $this->input->post('type');
				$id = $this->input->post('id');

				$login_id = $this->session->userdata('login_id');
				$userip=$_SERVER['REMOTE_ADDR'];

				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$ddl_bl_no=$this->input->post('ddl_bl_no');			
				
				$used_equipment=$this->input->post('used_equipment');
				$equip_charge=$this->input->post('equip_charge');		   
				$appraise_date=$this->input->post('appraise_date');

				$carpainter_use=$this->input->post('carpainter_use');
				$hosting_charge=$this->input->post('hosting_charge');
				$extra_movement=$this->input->post('extra_movement');
				$scale_for=$this->input->post('scale_for');
				
				$cnfLicense=$this->input->post('cnfLicense');
				$cnfName=$this->input->post('cnfName');
				$beNo=$this->input->post('beNo');
				$beDate=$this->input->post('beDate');
				
				$appraiser_mobile=$this->input->post('appraiser_mobile');
				$appraiser_name=$this->input->post('appraiser_name');
				
				$jetty_sarkar_lic=$this->input->post('jetty_sarkar_lic');
				$jetty_sarkar_name=$this->input->post('jetty_sarkar_name');
				$jetty_sarkar_mob=$this->input->post('jetty_sarkar_mob');
				$contStatus="";
				$sqlContainerType="SELECT cont_status AS rtnValue
				FROM  igm_supplimentary_detail
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' AND igm_supplimentary_detail.BL_No='$ddl_bl_no'
				GROUP BY igm_sup_detail_container.id

				UNION

				SELECT cont_status AS rtnValue
				FROM  igm_details
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no'
				GROUP BY igm_detail_container.id";
						
				$contStatusRslt=$this->bm->dataSelectDb1($sqlContainerType);
				for($i=0; $i<count($contStatusRslt); $i++)
				{
					$contStatus=$contStatusRslt[$i]['rtnValue'];
				}

				//$contStatus = $this->bm->dataReturnDb1($sqlContainerType); rtnUnitList
				
				if($contStatus=="LCL")
				{
				//	$chkAppraisement="select 1 as rtnVal from appraisement_info where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
					$chkAppraisement="select count(*) as rtnVal from appraisement_info where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
					$rtnAppraisement = $this->bm->dataSelectDb1($chkAppraisement);
					if($rtnAppraisement[0]['rtnVal']== 1)		
					{
					//	echo "update appraisement_info";
						$strInsertVerifyOther = "UPDATE appraisement_info
						SET equipment='$equip_charge',appraise_date='$appraise_date',
						carpainter_use='$carpainter_use',hosting_charge='$hosting_charge'
						,extra_movement='$extra_movement',scale_for='$scale_for',
						jetty_sirkar_lic='$jetty_sarkar_lic',jetty_sirkar_name='$jetty_sarkar_name',
						jetty_sirkar_mobile='$jetty_sarkar_mob',custom_appraiser='$appraiser_name',
						custom_appraiser_mobile='$appraiser_mobile',
						user_id='$login_id',user_ip='$userip',last_update=NOW(),equipment_id='$used_equipment'
						WHERE rotation='$ddl_imp_rot_no' AND BL_NO='$ddl_bl_no'";
						$sucMsg = "APPRAISEMENT UPDATED SUCCESSFULLY";
						$unSucMsg = "APPRAISEMENT NOT UPDATED";
					}
					else
					{
					//	echo "inside insert into appraisement_info";
						$strInsertVerifyOther = "INSERT INTO appraisement_info(rotation,BL_NO,equipment,appraise_date,carpainter_use,hosting_charge,extra_movement,scale_for,jetty_sirkar_lic,jetty_sirkar_name,jetty_sirkar_mobile,custom_appraiser,custom_appraiser_mobile,user_id,user_ip,last_update,equipment_id) 
						VALUES('$ddl_imp_rot_no','$ddl_bl_no','$equip_charge','$appraise_date','$carpainter_use','$hosting_charge','$extra_movement','$scale_for','$jetty_sarkar_lic','$jetty_sarkar_name','$jetty_sarkar_mob','$appraiser_name','$appraiser_mobile','$login_id','$userip',NOW(),'$used_equipment')";
						
						$sucMsg = "APPRAISEMENT SAVE SUCCESSFULLY";
						$unSucMsg = "APPRAISEMENT NOT SAVE";
					}
					
					$stat = $this->bm->dataInsertDB1($strInsertVerifyOther);
				}
				
				if($contStatus=="LCL")
				{
					$chkVerifyOtherData="SELECT shed_tally_info.id
					from  igm_supplimentary_detail
					inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
					left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
					left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
					where igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' and igm_supplimentary_detail.BL_No='$ddl_bl_no'";
					$chkVerifyOther = $this->bm->dataSelectDb1($chkVerifyOtherData);
					$shedTallyID=$chkVerifyOther[0]['id'];

					// $cnfLicense=$this->input->post('cnfLicense');
					// $cnfName=$this->input->post('cnfName');
					// $beNo=$this->input->post('beNo');
					// $beDate=$this->input->post('beDate');

					//	$chkOtherQuery="SELECT 1 as rtnVal from verify_other_data where shed_tally_id='$shedTallyID'";
					$chkOtherQuery="SELECT count(*) as rtnVal from verify_other_data where shed_tally_id='$shedTallyID'";
					$rtnChkOther = $this->bm->dataSelectDb1($chkOtherQuery);
					$shedRtnValue=$rtnChkOther[0]['rtnVal'];
					// }
				
					// if($contStatus=="LCL")
					// {
					if($shedRtnValue == 1)
					{
						$strInsertVerifyOtherData = "update verify_other_data set cnf_lic_no='$cnfLicense',cnf_name='$cnfName',
						be_no='$beNo',be_date='$beDate'
						where shed_tally_id='$shedTallyID'";
						//$sucMsg = "APPRAISEMENT UPDATED SUCCESSFULLY";
						//$unSucMsg = "APPRAISEMENT NOT UPDATED";
					}
					else
					{
						$strInsertVerifyOtherData = "insert into verify_other_data ( shed_tally_id,cnf_lic_no,cnf_name,be_no,be_date,last_update,update_by,user_ip) 
						values ('$shedTallyID','$cnfLicense','$cnfName','$beNo','$beDate',now(),'$login_id','$userip')";									
						//$sucMsg = "APPRAISEMENT SAVE SUCCESSFULLY";
						//$unSucMsg = "APPRAISEMENT NOT SAVE";
					}
					//echo $strInsertVerifyOtherData;
					$statOther = $this->bm->dataInsertDB1($strInsertVerifyOtherData);
	
				}
				else if($contStatus=="FCL")
				{
					$sqlFCLappraisement="SELECT COUNT(*) AS rtnValue FROM appraisement_info_fcl WHERE rotation='$ddl_imp_rot_no' AND BL_NO='$ddl_bl_no'";
					$cntFCLappraisement = $this->bm->dataReturnDb1($sqlFCLappraisement);
					if($cntFCLappraisement == 0)
					{
						$strInsertFCLappraisement = "INSERT INTO appraisement_info_fcl (rotation,BL_NO,cnf_lic_no,cnf_name,be_no,be_date,equipment,appraise_date,carpainter_use,hosting_charge,
						extra_movement,scale_for,jetty_sirkar_lic,jetty_sirkar_name,jetty_sirkar_mobile,custom_appraiser,custom_appraiser_mobile,user_id,
						user_ip,last_update,equipment_id) 
						VALUES ('$ddl_imp_rot_no','$ddl_bl_no','$cnfLicense','$cnfName','$beNo','$beDate','$equip_charge',
						'$appraise_date','$carpainter_use','$hosting_charge','$extra_movement','$scale_for','$jetty_sarkar_lic','$jetty_sarkar_name',
						'$jetty_sarkar_mob','$appraiser_name','$appraiser_mobile','$login_id','$userip',NOW(),'$used_equipment')";
						$resInsertFCLappraisement = $this->bm->dataInsertDB1($strInsertFCLappraisement);
						$stat=$resInsertFCLappraisement;

						$certify_Query = "UPDATE certify_info_fcl SET be_date = '$beDate' WHERE rotation_no = '$ddl_imp_rot_no' AND bl_no = '$ddl_bl_no'";
						$rsltCertify = $this->bm->dataUpdateDB1($certify_Query);
						
						$sucMsg = "APPRAISEMENT SAVE SUCCESSFULLY";
						$unSucMsg = "APPRAISEMENT NOT SAVE";
					}
					else
					{
						$strUpdateFCLappraisement = "update appraisement_info_fcl set cnf_lic_no='$cnfLicense',cnf_name='$cnfName',
						be_no='$beNo',be_date='$beDate',equipment='$equip_charge',appraise_date='$appraise_date',
						carpainter_use='$carpainter_use',hosting_charge='$hosting_charge',extra_movement='$extra_movement',scale_for='$scale_for',
						jetty_sirkar_lic='$jetty_sarkar_lic',jetty_sirkar_name='$jetty_sarkar_name',
						jetty_sirkar_mobile='$jetty_sarkar_mob',custom_appraiser='$appraiser_name',custom_appraiser_mobile='$appraiser_mobile',
						user_id='$login_id',user_ip='$userip',
						last_update=NOW(),equipment_id='$used_equipment'
						where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
						$resUpdateFCLappraisement = $this->bm->dataUpdateDB1($strUpdateFCLappraisement);
						$stat=$resUpdateFCLappraisement;

						$certify_Query = "UPDATE certify_info_fcl SET be_date = '$beDate' WHERE rotation_no = '$ddl_imp_rot_no' AND bl_no = '$ddl_bl_no'";
						$rsltCertify = $this->bm->dataUpdateDB1($certify_Query);
						
						$sucMsg = "APPRAISEMENT UPDATED SUCCESSFULLY";
						$unSucMsg = "APPRAISEMENT NOT UPDATED";
					}
				}

				$data['msg']="";
				if($stat==1){
					if($type == "RO" && strlen($id)>0)
					{
						$RO_update_query = "UPDATE release_order_record SET appraise_st = 1, appraise_at = NOW() WHERE id = '$id'";
						$this->bm->dataUpdateDB1($RO_update_query );
					}
					$msgPO="<font color='green'><b>".$sucMsg."</font>";
				}else{
					$msgPO="<font color='red'><b>".$unSucMsg."<font color='red'><b>";
				}

				if($contStatus=="LCL")
				{
					$sqlContainer="SELECT igm_supplimentary_detail.id,IFNULL(total_pack,0) AS rcv_pack,igm_masters.Vessel_Name,
					igm_supplimentary_detail.Import_Rotation_No,igm_sup_detail_container.cont_height,
					igm_sup_detail_container.cont_seal_number,
					igm_sup_detail_container.cont_number,Pack_Marks_Number,shed_loc,shed_yard,Description_of_Goods,Notify_name,IFNULL(shed_tally_info.verify_number,0) AS verify_number,
					IFNULL(shed_tally_info.id,0) AS verify_id,igm_supplimentary_detail.Pack_Number,igm_supplimentary_detail.Pack_Description,
					igm_supplimentary_detail.BL_No,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_status,verify_other_data.cnf_lic_no,
					verify_other_data.cnf_name,verify_other_data.be_no,verify_other_data.be_date,shed_tally_info.total_pack AS rcvTally,shed_tally_info.rcv_unit,
					igm_sup_detail_container.Cont_gross_weight AS Cont_gross_weight,appraisement_info.custom_appraiser,appraisement_info.custom_appraiser_mobile
					FROM  igm_supplimentary_detail
					INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					INNER JOIN igm_masters ON igm_supplimentary_detail.igm_master_id=igm_masters.id
					LEFT JOIN  shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
					LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
					LEFT JOIN appraisement_info ON appraisement_info.rotation = igm_supplimentary_detail.Import_Rotation_No AND appraisement_info.BL_NO = igm_supplimentary_detail.BL_No
					WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' AND igm_supplimentary_detail.BL_No='$ddl_bl_no' 
					GROUP BY igm_sup_detail_container.id";
				}
				else if($contStatus=="FCL")
				{							
					$sqlContainer="SELECT igm_details.id,igm_masters.Vessel_Name,igm_details.Import_Rotation_No,
					igm_detail_container.cont_number,Pack_Marks_Number,Description_of_Goods,Notify_name,
					IFNULL(certify_info_fcl.id,0) AS verify_id,igm_details.Pack_Number,igm_details.Pack_Description,
					igm_details.BL_No,igm_detail_container.cont_size,igm_detail_container.cont_height,igm_detail_container.cont_seal_number,igm_detail_container.cont_status,certify_info_fcl.cnf_lic_no,
					certify_info_fcl.cnf_name,certify_info_fcl.be_no,certify_info_fcl.be_date,
					igm_detail_container.Cont_gross_weight AS Cont_gross_weight,
					carpainter_use,hosting_charge,extra_movement,scale_for,
					appraisement_info_fcl.jetty_sirkar_lic,appraisement_info_fcl.jetty_sirkar_name,appraisement_info_fcl.jetty_sirkar_mobile,
					appraisement_info_fcl.custom_appraiser,appraisement_info_fcl.custom_appraiser_mobile
					FROM  igm_details
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					INNER JOIN igm_masters ON igm_details.IGM_id=igm_masters.id
					LEFT JOIN certify_info_fcl ON certify_info_fcl.igm_detail_id=igm_details.id
					LEFT JOIN appraisement_info_fcl ON appraisement_info_fcl.rotation=igm_details.Import_Rotation_No AND appraisement_info_fcl.BL_NO=igm_details.BL_No
					WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no' 
					GROUP BY igm_detail_container.id";
				}
				
				//echo $cont_seal_number;
				$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
				$data['rtnContainerList']=$rtnContainerList;
				
				$getId="";
				$containerNo="";
				$verify_id="";

				for($z=0;$z<count($rtnContainerList);$z++){
					$getId=$rtnContainerList[$z]['id'];
					$containerNo=$rtnContainerList[$z]['cont_number'];
					$verify_id=$rtnContainerList[$z]['verify_id'];
				}

				if($contStatus=="LCL")
				{
					$queryGetUnit="select SUM(IFNULL(shed_tally_info.total_pack,0)) as rcvTally,shed_tally_info.rcv_unit,
					shed_tally_info.shed_loc
					from  igm_supplimentary_detail
					inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
					left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
					left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
					where igm_supplimentary_detail.id='$getId'
					group by shed_tally_info.shed_loc,shed_tally_info.rcv_unit";
					$rtnUnitList = $this->bm->dataSelectDb1($queryGetUnit);
					$data['rtnUnitList']=$rtnUnitList;
				}
				
				//$rtnAppraisementList = "";
				//echo count($rtnAppraisementList);

				$appraiseFlag=0;

				$used_equipment="";
				$equip_charge="";
				$appraise_date="";		   
				$carpainter_use="";
				$hosting_charge="";
				$extra_movement="";
				$scale_for="";
				

				if($contStatus=="LCL")
				{
					$sqlAppraisementQuery="select equipment,appraise_date,carpainter_use,hosting_charge,extra_movement,scale_for,equipment_id from appraisement_info 
					where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
					$rtnAppraisementList = $this->bm->dataSelectDb1($sqlAppraisementQuery);

					$appraiseFlag=1;
				}
				else if($contStatus=="FCL")	
				{
					$sqlAppraisementQuery="select equipment,appraise_date,carpainter_use,hosting_charge,extra_movement,scale_for,equipment_id from appraisement_info_fcl 
					where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
					$rtnAppraisementList = $this->bm->dataSelectDb1($sqlAppraisementQuery);
				}

				for($z=0;$z<count($rtnAppraisementList);$z++){
					$used_equipment=$rtnAppraisementList[$z]['equipment_id'];
					$equip_charge=$rtnAppraisementList[$z]['equipment'];
					$appraise_date=$rtnAppraisementList[$z]['appraise_date'];		   
					$carpainter_use=$rtnAppraisementList[$z]['carpainter_use'];
					$hosting_charge=$rtnAppraisementList[$z]['hosting_charge'];
					$extra_movement=$rtnAppraisementList[$z]['extra_movement'];
					$scale_for=$rtnAppraisementList[$z]['scale_for'];
				}
				
				$data['rtnAppraisementList']=$rtnAppraisementList;
				
				$getUsedEquipmentQuery= "SELECT equipment_id,equipment_name,equipment_charge,remarks FROM used_equipment ORDER BY equipment_id ASC";
				$getUsedEquipment = $this->bm->dataSelectDb1($getUsedEquipmentQuery);

				$data['getUsedEquipment']=$getUsedEquipment;

				$data['used_equipment']=$used_equipment;
				$data['appraise_date']=$appraise_date;
				$data['carpainter_use']=$carpainter_use;
				$data['hosting_charge']=$hosting_charge;
				$data['extra_movement']=$extra_movement;
				$data['scale_for']=$scale_for;

				$data['unstuff_flag']=1;
				$data['appraiseFlag']=$appraiseFlag;
				$data['verify_id']=$verify_id;
				$data['cnf_name']=$cnfName;
				$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
				$data['ddl_bl_no']=$ddl_bl_no;
				$data['msg']="";
				$data['msgPO']=$msgPO;
				$data['title']="APPRAISEMENT SECTION...";
				$data['contStatus']=$contStatus;
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('appraisementSectionHTML',$data);
				$this->load->view('jsAssets');
			}
		}
		
		 
		 
		function appraisementCertifySectionEdit()
		{
		   	$session_id = $this->session->userdata('value');
		   	$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		   	{
				$this->logout();
		   	}
		   else
		   	{
				$data['msg']="";
				$data['unstuff_flag']="";
				$data['verify_number']="-1";
				$data['title']="APPRAISEMENT EDIT SECTION...";
				$data['userip']=$_SERVER['REMOTE_ADDR'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('appraisementEditSectionHTML',$data);
				$this->load->view('jsAssets');
		   	} 
		}

		function appraisementCertifyListEdit()
		{ 
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			if($LoginStat!="yes")
			{
				$this->logout();	
			}
			else
			{
			if($this->input->post('ddl_imp_rot_no') && $this->input->post('ddl_bl_no'))
					{
						$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
						$ddl_bl_no=$this->input->post('ddl_bl_no');
					}
					else{
						$ddl_bl_no=str_replace("_","/",$this->uri->segment(3));
						$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(4));
						}
				$chkExchangeDoneQry="select count(shed_tally_info.id) as exchangeCount from shed_tally_info 
									inner join igm_supplimentary_detail on
									shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
									where  shed_tally_info.import_rotation='$ddl_imp_rot_no' and 
									igm_supplimentary_detail.BL_No='$ddl_bl_no'";
			//shed_tally_info.berth_exchange_done_status=1 AND shed_tally_info.cpa_exchange_done_status=1 AND shed_tally_info.ff_exchange_done_status=1 and
				$rtnchkExchangeDoneList = $this->bm->dataSelectDb1($chkExchangeDoneQry);
				$excngeDoneStat=$rtnchkExchangeDoneList[0]['exchangeCount'];
				
				if($excngeDoneStat<1)
				{
					$data['excngeDoneStat']=$excngeDoneStat;
					$msg="<font color='red'><b>THIS CONTAINER IS NOT YET UNSTUFFED.</b></font>";
				}			
			else
			{		   
			$sqlContainer="select igm_supplimentary_detail.id,IFNULL(total_pack,0) as rcv_pack,igm_masters.Vessel_Name,igm_supplimentary_detail.Import_Rotation_No,			igm_sup_detail_container.cont_number,Pack_Marks_Number,shed_loc,shed_yard,Description_of_Goods,Notify_name,IFNULL(shed_tally_info.verify_number,0) as verify_number,
				IFNULL(shed_tally_info.id,0) as verify_id,igm_supplimentary_detail.Pack_Number,igm_supplimentary_detail.Pack_Description,
				igm_supplimentary_detail.BL_No,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_status,verify_other_data.cnf_lic_no,
				verify_other_data.cnf_name,verify_other_data.be_no,verify_other_data.be_date,shed_tally_info.total_pack as rcvTally,shed_tally_info.rcv_unit,
				igm_sup_detail_container.Cont_gross_weight as Cont_gross_weight
				from  igm_supplimentary_detail
				inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
				left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
				left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
			where igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' and igm_supplimentary_detail.BL_No='$ddl_bl_no' 
			limit 1";
			//echo $sqlContainer;
			$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
			$data['rtnContainerList']=$rtnContainerList;
			
			$getId=$rtnContainerList[0]['id'];
			$queryGetUnit="select SUM(IFNULL(shed_tally_info.total_pack,0)) as rcvTally,shed_tally_info.rcv_unit,shed_tally_info.shed_loc
								from  igm_supplimentary_detail
								inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
								inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
								left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
								left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
								where igm_supplimentary_detail.id='$getId'
								group by shed_tally_info.shed_loc,shed_tally_info.rcv_unit";
			$rtnUnitList = $this->bm->dataSelectDb1($queryGetUnit);
			$data['rtnUnitList']=$rtnUnitList;
			
				$sqlAppraisementQuery="select equipment,appraise_date,carpainter_use,hosting_charge,extra_movement,scale_for,equipment_id from appraisement_info 
										where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
				$rtnAppraisementList = $this->bm->dataSelectDb1($sqlAppraisementQuery);
				
				if(count($rtnAppraisementList)>0)
				{
					$appraiseFlag=1;
				}
				else{
					$appraiseFlag=0;
				}
			//$data['rtnAppraisementList']=$rtnAppraisementList;
			
			$used_equipment=$rtnAppraisementList[0]['equipment_id'];
			$equip_charge=$rtnAppraisementList[0]['equipment'];
			$appraise_date=$rtnAppraisementList[0]['appraise_date'];		   
			$carpainter_use=$rtnAppraisementList[0]['carpainter_use'];
			$hosting_charge=$rtnAppraisementList[0]['hosting_charge'];
			$extra_movement=$rtnAppraisementList[0]['extra_movement'];
			$scale_for=$rtnAppraisementList[0]['scale_for'];
			
			$containerNo=$rtnContainerList[0]['cont_number'];
			$verify_id=$rtnContainerList[0]['verify_id'];
			$verify_num=$rtnContainerList[0]['verify_number'];
			$cnf_name=$rtnContainerList[0]['cnf_name'];
			$rtnValue=1;
			if($rtnValue<1)
			{
				$msg="<font color='red'><b>CARGO IS NOT UNSTUFFED.</b></font>";
			}
			else
			{
				if($verify_id==0)
				{
				$msg="<font color='red'><b>NOT VERIFIED YET</b></font>";
				}
			}
			$getUsedEquipmentQuery= "select equipment_id,equipment_name,equipment_charge,remarks from used_equipment order by equipment_id asc";
			$getUsedEquipment = $this->bm->dataSelectDb1($getUsedEquipmentQuery);
				
			$data['getUsedEquipment']=$getUsedEquipment;
			$data['used_equipment']=$used_equipment;
			$data['equip_charge']=$equip_charge;
			$data['appraise_date']=$appraise_date;
			$data['carpainter_use']=$carpainter_use;
			$data['hosting_charge']=$hosting_charge;
			$data['extra_movement']=$extra_movement;
			$data['scale_for']=$scale_for;
			
			$data['unstuff_flag']=$rtnValue;
			$data['appraiseFlag']=$appraiseFlag;
			$data['verify_id']=$verify_id;
			$data['verify_num']=$verify_num;
			$data['cnf_name']=$cnf_name;
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$data['ddl_bl_no']=$ddl_bl_no;
			}
			$data['msg']="";
			$data['title']="APPRAISEMENT EDIT SECTION...";

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('appraisementEditSectionHTML',$data);
				$this->load->view('jsAssets');
			}
		}
		 
		function appraisementVerifyEdit()
		{
		  $session_id = $this->session->userdata('value');
		  
		  $igm_sup_detail_id=$this->input->post('id');
		  
		  $LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
		   
		  else
		  {
		   $login_id = $this->session->userdata('login_id');
		   //$ipaddr = $_SERVER['REMOTE_ADDR'];
		   
		   $ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
		   $ddl_bl_no=$this->input->post('ddl_bl_no');
		  // $login_id=$this->input->post('login_id');
		   $userip=$_SERVER['REMOTE_ADDR'];
		   $used_equipment=$this->input->post('used_equipment');
		   $equip_charge=$this->input->post('equip_charge');
		   $appraise_date=$this->input->post('appraise_date');
		   
		   $carpainter_use=$this->input->post('carpainter_use');
		   $hosting_charge=$this->input->post('hosting_charge');
		   $extra_movement=$this->input->post('extra_movement');
		   $scale_for=$this->input->post('scale_for');
		   
		   $chkAppraisement="select 1 as rtnVal from appraisement_info where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
		   $rtnAppraisement = $this->bm->dataSelectDb1($chkAppraisement);
		   if($rtnAppraisement[0]['rtnVal']== 1)
		   {
			   $strInsertVerifyOther = "update appraisement_info set equipment='$equip_charge',appraise_date='$appraise_date',
										carpainter_use='$carpainter_use',hosting_charge='$hosting_charge'
										,extra_movement='$extra_movement',scale_for='$scale_for',
										user_id='$login_id',user_ip='$userip',last_update=now(),equipment_id='$used_equipment'
										where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
										$sucMsg = "APPRAISEMENT UPDATED SUCCESSFULLY";
										$unSucMsg = "APPRAISEMENT NOT UPDATED";
		   }
		   else
		   {
				$strInsertVerifyOther = "insert into appraisement_info (rotation,BL_NO,equipment,appraise_date,carpainter_use,hosting_charge
									,extra_movement,scale_for,user_id,user_ip,last_update,equipment_id) 
									values ('$ddl_imp_rot_no','$ddl_bl_no','$equip_charge','$appraise_date','$carpainter_use','$hosting_charge',
									'$extra_movement','$scale_for','$login_id','$userip',now(),'$used_equipment')";									
									$sucMsg = "APPRAISEMENT SAVE SUCCESSFULLY";
									$unSucMsg = "APPRAISEMENT NOT SAVE";
		   }
		   
		   $stat = $this->bm->dataInsertDB1($strInsertVerifyOther);
		   
		   $chkVerifyOtherData="select shed_tally_info.id
							 from  igm_supplimentary_detail
							 inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
							 inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
							 left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
							 left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
								where igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' and igm_supplimentary_detail.BL_No='$ddl_bl_no'";
		   $chkVerifyOther = $this->bm->dataSelectDb1($chkVerifyOtherData);
		   $shedTallyID=$chkVerifyOther[0]['id'];
		   
		   $cnfLicense=$this->input->post('cnfLicense');
		   $cnfName=$this->input->post('cnfName');
		   $beNo=$this->input->post('beNo');
		   $beDate=$this->input->post('beDate');
		   
		   $chkOtherQuery="select 1 as rtnVal from verify_other_data where shed_tally_id='$shedTallyID'";
		   $rtnChkOther = $this->bm->dataSelectDb1($chkOtherQuery);
		   $shedRtnValue=$rtnChkOther[0]['rtnVal'];
		   
		   if($shedRtnValue == 1)
		   {
			     $strInsertVerifyOtherData = "update verify_other_data set cnf_lic_no='$cnfLicense',cnf_name='$cnfName',
										be_no='$beNo',be_date='$beDate'
										where shed_tally_id='$shedTallyID'";
										//$sucMsg = "APPRAISEMENT UPDATED SUCCESSFULLY";
										//$unSucMsg = "APPRAISEMENT NOT UPDATED";
		   }
		   else{
			   	$strInsertVerifyOtherData = "insert into verify_other_data ( shed_tally_id,cnf_lic_no,cnf_name,be_no,be_date,last_update,update_by,user_ip) 
									values ('$shedTallyID','$cnfLicense','$cnfName','$beNo','$beDate',now(),'$login_id','$userip')";									
									//$sucMsg = "APPRAISEMENT SAVE SUCCESSFULLY";
									//$unSucMsg = "APPRAISEMENT NOT SAVE";
		   }
		    //echo $strInsertVerifyOtherData;
		    $statOther = $this->bm->dataInsertDB1($strInsertVerifyOtherData);
		   
		   $msg="";
		   if($stat==1)
			$msgPO="<font color='green'><b>".$sucMsg."</font>";
		   else
			$msgPO="<font color='red'><b>".$unSucMsg."<font color='red'><b>";
		  
		  $sqlContainer="select igm_supplimentary_detail.id,IFNULL(sum(rcv_pack+loc_first),0) as rcv_pack,igm_masters.Vessel_Name,igm_supplimentary_detail.Import_Rotation_No,
							igm_sup_detail_container.cont_number,Pack_Marks_Number,shed_loc,shed_yard,Description_of_Goods,Notify_name,IFNULL(shed_tally_info.verify_number,0) as verify_number,
							IFNULL(shed_tally_info.id,0) as verify_id,igm_supplimentary_detail.Pack_Number,igm_supplimentary_detail.Pack_Description,
							igm_supplimentary_detail.BL_No,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_status,verify_other_data.cnf_lic_no,
							verify_other_data.cnf_name,verify_other_data.be_no,verify_other_data.be_date,shed_tally_info.total_pack as rcvTally,shed_tally_info.rcv_unit,
							igm_sup_detail_container.Cont_gross_weight as Cont_gross_weight
							 from  igm_supplimentary_detail
							 inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
							 inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
							 left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
							 left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
						   where igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' and igm_supplimentary_detail.BL_No='$ddl_bl_no'
							limit 1
						   ";
		   //echo $sqlContainer;
		   $rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
		   $data['rtnContainerList']=$rtnContainerList;
		   
		   $getId=$rtnContainerList[0]['id'];
		   $queryGetUnit="select SUM(IFNULL(shed_tally_info.total_pack,0)) as rcvTally,shed_tally_info.rcv_unit,shed_tally_info.shed_loc
							 from  igm_supplimentary_detail
							 inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
							 inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
							 left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
							 left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
						     where igm_supplimentary_detail.id='$getId'
							 group by shed_tally_info.shed_loc,shed_tally_info.rcv_unit";
		   $rtnUnitList = $this->bm->dataSelectDb1($queryGetUnit);
		   $data['rtnUnitList']=$rtnUnitList;
		   
		    $sqlAppraisementQuery="select equipment,appraise_date,carpainter_use,hosting_charge,extra_movement,scale_for,equipment_id from appraisement_info 
									where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
		    $rtnAppraisementList = $this->bm->dataSelectDb1($sqlAppraisementQuery);
			if(count($rtnAppraisementList)>0)
			{
				$appraiseFlag=1;
			}
			else{
				$appraiseFlag=0;
			}
		   //$data['rtnAppraisementList']=$rtnAppraisementList;
		   
		   $used_equipment=$rtnAppraisementList[0]['equipment_id'];
		   $equip_charge=$rtnAppraisementList[0]['equipment'];
		   $appraise_date=$rtnAppraisementList[0]['appraise_date'];		   
		   $carpainter_use=$rtnAppraisementList[0]['carpainter_use'];
		   $hosting_charge=$rtnAppraisementList[0]['hosting_charge'];
		   $extra_movement=$rtnAppraisementList[0]['extra_movement'];
		   $scale_for=$rtnAppraisementList[0]['scale_for'];
		   
		   $containerNo=$rtnContainerList[0]['cont_number'];
		   $verify_id=$rtnContainerList[0]['verify_id'];
		   $verify_num=$rtnContainerList[0]['verify_number'];
			
		   $getUsedEquipmentQuery= "select equipment_id,equipment_name,equipment_charge,remarks from used_equipment order by equipment_id asc";
		   $getUsedEquipment = $this->bm->dataSelectDb1($getUsedEquipmentQuery);
			
		   $data['getUsedEquipment']=$getUsedEquipment;
		  
		  
		   $data['used_equipment']=$used_equipment;
		   $data['equip_charge']=$equip_charge;
		   $data['appraise_date']=$appraise_date;
		   $data['carpainter_use']=$carpainter_use;
		   $data['hosting_charge']=$hosting_charge;
		   $data['extra_movement']=$extra_movement;
		   $data['scale_for']=$scale_for;
		   
		   $data['unstuff_flag']=1;
		   $data['appraiseFlag']=$appraiseFlag;
		   $data['verify_id']=$verify_id;
		   $data['verify_num']=$verify_num;
		   $data['cnf_name']="";
		   $data['ddl_imp_rot_no']=$ddl_imp_rot_no;
		   $data['ddl_bl_no']=$ddl_bl_no;
		   $data['msg']=$msg;
		   $data['msgPO']=$msgPO;
		   $data['title']="APPRAISEMENT EDIT SECTION...";

		   
		    $this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('appraisementEditSectionHTML',$data);
			$this->load->view('jsAssets');
		  }
		}

		 //Appraisement section end
		 //Appraisement section end


		 // APPRAISEMENT List Section Start
		 function appraisementListForm()
		 {	
			 $session_id = $this->session->userdata('value');
			 $LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				 $str="select rotation,BL_NO,equipment,appraise_date,carpainter_use,hosting_charge,extra_movement,scale_for 
						 from appraisement_info
						 order by gkey desc";
				 $rtnContainerList = $this->bm->dataSelectDb1($str);
				 $data['rtnContainerList']=$rtnContainerList;
				 $data['title']="APPRAISEMENT LIST REPORT...";
				 $this->load->view('cssAssets');
				 $this->load->view('headerTop');
				 $this->load->view('sidebar');
				 $this->load->view('appraisementListHTML',$data);
				 $this->load->view('jsAssets');
			 }
		}

		 
		function appraisementListFormList()
		{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$ddl_bl_no=$this->input->post('ddl_bl_no');
			
			$str="select rotation,BL_NO,equipment,appraise_date,carpainter_use,hosting_charge,extra_movement,scale_for 
					from appraisement_info where rotation='$ddl_imp_rot_no' and BL_NO='$ddl_bl_no'";
			
			$rtnContainerList = $this->bm->dataSelectDb1($str);
			//echo $rtnContainerList[0]['verify_number']."  fdfdfd";
			$data['rtnContainerList']=$rtnContainerList;
			$data['title']="APPRAISEMENT LIST REPORT...";
			$data['vNum']=$rtnContainerList[0]['BL_NO'];
			$this->load->view('header2');
			$this->load->view('appraisementListHTML',$data);
			$this->load->view('footer');
		
		}	
		// APPRAISEMENT List Section End
		
		// TALLY LIST Start
		function tallyListForm()
		{	
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			
			$login_id = $this->session->userdata('login_id');
			$org_Type_id = $this->session->userdata('org_Type_id');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$section = $this->session->userdata('section');
				$uname = $this->session->userdata('User_Name');
				
				$qryPrt = "";
				if($org_Type_id==59 or $org_Type_id==5)			//CPA Shed Users - cpashed (59) or cpacs1 (5)
				{
					$qryPrt = ",cpa_exchange_done_status AS exChngStatus ";
				}
				else if($org_Type_id==30)		// Berth Operator
				{
					$qryPrt = ",berth_exchange_done_status AS exChngStatus ";
				}
				else if($org_Type_id==2)		// C&F
				{
					$qryPrt = ",ff_exchange_done_status AS exChngStatus ";
				}
				else if($org_Type_id==4)		// FF
				{
					$qryPrt = ",ff_exchange_done_status AS exChngStatus ";
				}
				
				$str="SELECT tally_sheet_number,import_rotation,cont_number,SUM(rcv_pack) AS rcv_pack,SUM(flt_pack) AS flt_pack,SUM(shed_loc) AS shed_loc,loc_first,wr_date,shed_yard".$qryPrt." 
				FROM shed_tally_info
				INNER JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
				WHERE shed_yard='$section'
				GROUP BY tally_sheet_number
				ORDER BY shed_tally_info.id DESC";
				// echo $str;return;
				$rtnContainerList = $this->bm->dataSelectDb1($str);
				$data['rtnContainerList']=$rtnContainerList;
				$data['uname']=$uname;
				$data['title']="TALLY LIST REPORT...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('tallyListForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function tallyFormList()
		{
			//---
			$org_Type_id = $this->session->userdata('org_Type_id');
			$uname = $this->session->userdata('User_Name');
			$qryPrt = "";
			if($org_Type_id==59)			//CPA Shed Users
			{
				$qryPrt = ",cpa_exchange_done_status AS exChngStatus ";
			}
			else if($org_Type_id==30)		// Berth Operator
			{
				$qryPrt = ",berth_exchange_done_status AS exChngStatus ";
			}
			else if($org_Type_id==2)		// C&F
			{
				$qryPrt = ",ff_exchange_done_status AS exChngStatus ";
			}
			//---
			
			
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$ddl_cont_no=$this->input->post('ddl_cont_no');
					
			/* $str="SELECT tally_sheet_number,import_rotation,cont_number,igm_supplimentary_detail.BL_NO,rcv_pack,flt_pack,
				shed_loc,loc_first,wr_date,shed_yard FROM shed_tally_info
				INNER JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
				where import_rotation='$ddl_imp_rot_no' and cont_number='$ddl_cont_no'"; */
				
			$str="SELECT tally_sheet_number,import_rotation,cont_number,SUM(rcv_pack) AS rcv_pack,SUM(flt_pack) AS flt_pack,SUM(shed_loc) AS shed_loc,loc_first,wr_date,shed_yard".$qryPrt." 
			FROM shed_tally_info
			INNER JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
			WHERE import_rotation='$ddl_imp_rot_no' AND cont_number='$ddl_cont_no'";	
					
			$rtnContainerList = $this->bm->dataSelectDb1($str);
			//echo $rtnContainerList[0]['verify_number']."  fdfdfd";
			$data['org_Type_id']=$org_Type_id;
			$data['uname']=$uname;
			$data['rtnContainerList']=$rtnContainerList;
			$data['title']="TALLY LIST REPORT...";
			$data['vNum']=@$rtnContainerList[0]['BL_NO'];
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('tallyListForm',$data);
			$this->load->view('jsAssets');
			
		}	
		// TALLY LIST End
		
	//Release Order Start

	function releaseOrderForm()
	{		
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
			
		}
		else
		{
			$data['msg']="";
			$data['unstuff_flag']="";
			$data['verify_number']="-1";
			$data['title']="RELEASE ORDER SECTION...";		

			$sql_releaseOrderList = "SELECT * FROM(
			SELECT id,verify_number,rotation,cont_number,verify_info_fcl.bl_no,shed_bill_master.bill_no AS bn,
			(SELECT cp_no FROM bank_bill_recv WHERE bill_no=bn LIMIT 1) AS cp_no,'FCL' AS cont_status,counter_confirm_flag,pr_number
			FROM verify_info_fcl 
			INNER JOIN shed_bill_master ON shed_bill_master.verify_no=verify_info_fcl.verify_number
			WHERE verify_number IS NOT NULL 
			UNION
			SELECT shed_tally_info.id,verify_number,shed_tally_info.import_rotation AS rotation,shed_tally_info.cont_number,igm_supplimentary_detail.BL_No AS bl_no,shed_bill_master.bill_no AS bn,(SELECT cp_no FROM bank_bill_recv WHERE bill_no=bn LIMIT 1) AS cp_no,'LCL' AS cont_status,counter_confirm_flag,pr_number
			FROM shed_tally_info 
			INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=shed_tally_info.igm_sup_detail_id
			INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
			LEFT JOIN igm_details ON igm_details.id=igm_supplimentary_detail.igm_detail_id
			INNER JOIN shed_bill_master ON shed_bill_master.verify_no=shed_tally_info.verify_number
			WHERE verify_number IS NOT NULL AND shed_tally_info.import_rotation IS NOT NULL AND shed_tally_info.cont_number IS NOT NULL
			ORDER BY id DESC LIMIT 1000) AS tbl WHERE cp_no IS NOT NULL OR cp_no!=''";
			$rslt_releaseOrderList = $this->bm->dataSelectDb1($sql_releaseOrderList);
			$data['rslt_releaseOrderList']=$rslt_releaseOrderList;		
						
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('releaseOrderForm',$data);
			$this->load->view('jsAssetsList');			
		}			
	}
		
	function releaseOrderFormView()
	{
		$verify_number=$this->input->post('verify_number');
		
		if(isset($_POST['options']))
		{
			if($_POST['options']=='Bill')
			{
				$this->getShedBillPdf($verify_number);
			}
		}		
		else
		{
			$login_id = $this->session->userdata('login_id');
			$imp_rot=$this->input->post('imp_rot');
			$bl_no=$this->input->post('bl_no');
			
			$strBill="select igm_supplimentary_detail.id,IFNULL(sum(rcv_pack+loc_first),0) as rcv_pack,igm_masters.Vessel_Name,igm_supplimentary_detail.Import_Rotation_No,igm_sup_detail_container.cont_number,Pack_Marks_Number,shed_loc,shed_yard,Description_of_Goods,Notify_name,IFNULL(shed_tally_info.verify_number,0) as verify_number,IFNULL(shed_tally_info.id,0) as verify_id,igm_supplimentary_detail.Pack_Number,igm_supplimentary_detail.Pack_Description,igm_supplimentary_detail.BL_No,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_status,igm_sup_detail_container.cont_weight,verify_other_data.cnf_name,verify_other_data.be_no,verify_other_data.be_date,igm_sup_detail_container.cont_height,bank_bill_recv.bill_no,bank_bill_recv.cp_no,RIGHT(bank_bill_recv.cp_year,2) AS cp_year,bank_bill_recv.cp_bank_code,bank_bill_recv.cp_unit,date(bank_bill_recv.recv_time) as cp_date,igm_supplimentary_detail.Notify_address,igm_supplimentary_detail.Line_No,total_port,concat(right(YEAR(bill_date),2),'/',concat(if(length(bill_generation_no)=1,'00000',if(length(bill_generation_no)=2,'0000',if(length(bill_generation_no)=3,'000',if(length(bill_generation_no)=4,'00',if(length(bill_generation_no)=5,'0',''))))),bill_generation_no)) as master_bill_no,shed_bill_master.bill_date,VoyNo,verify_other_data.exit_note_number
			from  igm_supplimentary_detail
			inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
			inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
			left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
			left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
			left join shed_bill_master on shed_bill_master.verify_no=shed_tally_info.verify_number
			left join bank_bill_recv on bank_bill_recv.bill_no=shed_bill_master.bill_no
			left join vessels_berth_detail on shed_bill_master.import_rotation=vessels_berth_detail.Import_Rotation_No
			where igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'";
				
			$rtnContainerList = $this->bm->dataSelectDb1($strBill);
			$this->data['rtnContainerList']=$rtnContainerList;
			
			if($verify_number!=0)
			{
			
				$strBillRcvInfo="select description,gl_code from shed_bill_details 
							inner join shed_bill_master on shed_bill_master.bill_no=shed_bill_details.bill_no
							where shed_bill_master.verify_no='$verify_number'";
				$rtnBillRcvInfo = $this->bm->dataSelectDb1($strBillRcvInfo);
				$this->data['rtnBillRcvInfo']=$rtnBillRcvInfo;
				
				$sqlTruckNumber="select no_of_truck from verify_other_data
							inner join shed_tally_info on shed_tally_info.id=verify_other_data.shed_tally_id
							where shed_tally_info.verify_number='$verify_number'";
					//echo "TestData : ".$sqlTruckNumber;
				$rtnTruckNumber = $this->bm->dataSelectDb1($sqlTruckNumber);						
				$this->data['rtnTruckNumber']=$rtnTruckNumber;
				
				$str="select concat(right(YEAR(bill_date),2),'/',concat(if(length(bill_generation_no)=1,'00000',if(length(bill_generation_no)=2,'0000',if(length(bill_generation_no)=3,'000',if(length(bill_generation_no)=4,'00',if(length(bill_generation_no)=5,'0',''))))),bill_generation_no)) as bill_no,verify_no,unit_no,cpa_vat_reg_no,ex_rate,bill_date,arraival_date,import_rotation,vessel_name,cl_date,bl_no,wr_date,wr_upto_date,importer_vat_reg_no,importer_name,cnf_lic_no,cnf_agent,be_no,be_date,ado_no,ado_date,ado_valid_upto,manifest_qty,cont_size,cont_height,bill_rcv_stat, if(bill_rcv_stat=1,'Paid','Not Paid') as paid_status from shed_bill_master where verify_no='$verify_number'"; 
				//and bill_no in (select max(bill_no) from shed_bill_master where verify_no='$verify_number')";
				//echo $str;
				//echo $str;
				$rtnBillList = $this->bm->dataSelectDb1($str);
				$unit_no=$rtnBillList[0]['unit_no'];
				$cpa_vat_reg_no=$rtnBillList[0]['cpa_vat_reg_no'];
				$ex_rate=$rtnBillList[0]['ex_rate'];
				$bill_rcv_stat=$rtnBillList[0]['bill_rcv_stat'];
				
				$this->data['rtnBillList']=$rtnBillList;
				$this->data['unit_no']=$unit_no;
				$this->data['cpa_vat_reg_no']=$cpa_vat_reg_no;
				$this->data['ex_rate']=$ex_rate;
				$this->data['bill_rcv_stat']=$bill_rcv_stat;
				
				$strBankPaymentInfo = "select shed_bill_master.bill_no,bill_rcv_stat,cp_bank_code,user,concat(cp_bank_code,cp_unit,'/',right(cp_year,2),'-',concat(if(length(cp_no)=1,'000',if(length(cp_no)=2,'00',if(length(cp_no)=3,'0',''))),cp_no)) as cp_no
				from shed_bill_master 
				inner join bank_bill_recv on bank_bill_recv.bill_no=shed_bill_master.bill_no
				where verify_no='$verify_number'";
				$rtnBankPaymentInfo = $this->bm->dataSelectDb1($strBankPaymentInfo);
				$rcvstat=$rtnBankPaymentInfo[0]['bill_rcv_stat'];
				$cpnoview=$rtnBankPaymentInfo[0]['cp_no'];
				$cpbankcode=$rtnBankPaymentInfo[0]['cp_bank_code'];
				$shedbill=$rtnBankPaymentInfo[0]['bill_no'];
				$billPrepareBy=$rtnBankPaymentInfo[0]['user'];
				
				if($cpbankcode=="OB")
					$cpbankname="ONE BANK LIMITED";
				
				$sqlrcvdate="SELECT recv_by,DATE(recv_time) AS recv_time FROM bank_bill_recv WHERE bill_no='$shedbill'";
				$rtnrcvdate = $this->bm->dataSelectDb1($sqlrcvdate);
				
				$recv_by=$rtnrcvdate[0]['recv_by'];
				$recv_time=$rtnrcvdate[0]['recv_time'];
				
				
				$qry="select verify_no,bill_no,gl_code,description,tarrif_rate,Qty,qday,amt,vatTK,mlwfTK from shed_bill_details
				where verify_no='$verify_number' and bill_no in (select max(bill_no) from shed_bill_master where verify_no='$verify_number')";
				//echo $qry;
				$chargeList = $this->bm->dataSelectDb1($qry);
				$this->data['chargeList']=$chargeList;
				
				$this->data['cpnoview']=$cpnoview;
				$this->data['cpbankname']=$cpbankname;
				$this->data['recv_time']=$recv_time;
				$this->data['recv_by']=$recv_by;
				$this->data['billPrepareBy']=$billPrepareBy;
			}
			else
			{
			
				$this->data['rtnBillList']="";
				$this->data['unit_no']="";
				$this->data['cpa_vat_reg_no']="";
				$this->data['ex_rate']="";
				$this->data['bill_rcv_stat']="";
				
				$this->data['chargeList']="";
				
				$this->data['cpnoview']="";
				$this->data['cpbankname']="";
				$this->data['recv_time']="";
				$this->data['recv_by']="";
				$this->data['billPrepareBy']="";
			}
			
			$qry_sum="select SUM(amt) as amt from shed_bill_details
					where verify_no='$verify_number' and bill_no in (select max(bill_no) from shed_bill_master where verify_no='$verify_number')";
			//echo $qry;
			$sumAll = $this->bm->dataSelectDb1($qry_sum);
			$tot_sum=$sumAll[0]['amt'];
					
			$qry_qday="select IFNULL(SUM(qday),0) as qday from shed_bill_details
					where verify_no='$verify_number' and bill_no in (select max(bill_no) from shed_bill_master where verify_no='$verify_number') AND gl_code not in('501005','502000N','503000N')";
			//echo $qry;
			$qdayAll = $this->bm->dataSelectDb1($qry_qday);
			$tot_qday=$qdayAll[0]['qday'];
				
			//now pass the data//
			$this->data['title']="Shed Bill";
			$this->data['verify_number']=$verify_number;
			$this->data['tot_sum']=$tot_sum;
			$this->data['tot_qday']=$tot_qday;
			//$this->data['amountInwords']=convert_number_to_words(5000);
				 
			$this->data['bill_print_times']=4;
			$this->data['login_id']=$login_id;
					
			//echo $rtnContainerList[0]['verify_number']."  fdfdfd";
					
			$this->data['verifyNo']=$verify_number;
			//$data['title']="TALLY LIST REPORT...";
			//$data['vNum']=$rtnContainerList[0]['BL_NO'];
			//$this->load->view('header2');			
			//$this->load->view('footer');
			//$this->load->view('releaseOrderFormViewPDF',$data);
			
			
			$this->load->library('m_pdf');
			$html=$this->load->view('releaseOrderFormViewPDF',$this->data, true); //load the pdf_output.php by passing our data and get all data in $html varriable.
			 
			$pdfFilePath ="ReleaseOrder-".time()."-download.pdf";

			$pdf = $this->m_pdf->load();
			$pdf->allow_charset_conversion = true;
			$pdf->charset_in = 'iso-8859-4';
			$stylesheet = file_get_contents('assets/stylesheets/test.css'); // external css
			//	$pdf->useSubstitutions = true; // optional - just as an example
				
			//$pdf->setFooter('Prepared By : '.$login_id.'|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
				
			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);
				 
			$pdf->Output($pdfFilePath, "I"); // For Show Pdf
		}
	}

	function releaseorderpdf()
	{
		// $verify_number=$this->input->post('verify_number');
		
		if($this->input->post('options')=="Bill")
		{
			// echo "bill";return;
			$verify_number=$this->input->post('verify_number');
			$bill=1; // From Release Order Form
			$this->getShedBillPdf($verify_number,$bill);
		}
		else
		{
			$verify_num = "";
			if($this->uri->segment(3)){
				// echo "url";return;
				$bl_no = str_replace("_","/",$this->uri->segment(3));
				$imp_rot=str_replace("_","/",$this->uri->segment(4));
				$verify_num=$this->uri->segment(5);
				
			}else{
				// echo "post";return;
				$verify_num=$this->input->post('verify_number');		// in view page modify on verify_no != 0
				$imp_rot=$this->input->post('imp_rot');
				$bl_no=$this->input->post('bl_no');
			}
			
			//$verify_num=$this->input->post('verify_number');		// in view page modify on verify_no != 0
			
			//$imp_rot=$this->input->post('imp_rot');
			//$bl_no=$this->input->post('bl_no');
			   $submit_ro =$this->input->post('submit_ro');	
              	
			
			$chkContStatus="";
			$vryStat=0;
			
			if($this->input->post('verify_number'))
			{
				$vryStat=1;
				
				$chkContStatus="SELECT igm_sup_detail_container.cont_status
				FROM igm_supplimentary_detail
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id 
				LEFT JOIN shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
				WHERE shed_tally_info.verify_number='$verify_num' LIMIT 1
				UNION ALL
				SELECT igm_detail_container.cont_status
				FROM igm_details
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id 
				INNER JOIN verify_info_fcl ON verify_info_fcl.igm_detail_id=igm_details.id
				WHERE verify_info_fcl.verify_number='$verify_num' LIMIT 1";			
				
			}
			else
			{
				$chkContStatus="SELECT igm_sup_detail_container.cont_status
				FROM igm_supplimentary_detail
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id 
				WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no' LIMIT 1
				UNION ALL
				SELECT igm_detail_container.cont_status
				FROM igm_details
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id 
				WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no' LIMIT 1";
			}
			// echo $chkContStatus;return;
			
			// $contStatus=$this->bm->dataReturnDb1($chkContStatus);
			
			$rsltContStatus=$this->bm->dataSelectDb1($chkContStatus);
			$contStatus="";
			for($t=0;$t<count($rsltContStatus);$t++){
			$contStatus=$rsltContStatus[$t]['cont_status'];
			}
			
			
			$strBill="";
			if($contStatus=="LCL")
			{
				if($vryStat==1)
				{
					$strBill="select igm_supplimentary_detail.id,IFNULL(sum(rcv_pack+loc_first),0) as rcv_pack,igm_masters.Vessel_Name,
					igm_supplimentary_detail.Import_Rotation_No,igm_sup_detail_container.cont_number,Pack_Marks_Number,shed_loc,
					shed_yard,Description_of_Goods,Notify_name,IFNULL(shed_tally_info.verify_number,0) as verify_number,
					IFNULL(shed_tally_info.id,0) as verify_id,igm_supplimentary_detail.Pack_Number,
					igm_supplimentary_detail.Pack_Description,igm_supplimentary_detail.BL_No,igm_sup_detail_container.cont_size,
					igm_sup_detail_container.cont_status,igm_sup_detail_container.cont_weight,verify_other_data.cnf_name,
					IFNULL(NULLIF(shed_mlo_do_info.be_no,' '),verify_other_data.be_no) AS be_no,
					verify_other_data.be_date,igm_sup_detail_container.cont_height,bank_bill_recv.bill_no,bank_bill_recv.cp_no,
					RIGHT(bank_bill_recv.cp_year,2) AS cp_year,bank_bill_recv.cp_bank_code,bank_bill_recv.cp_unit,
					date(bank_bill_recv.recv_time) as cp_date,igm_supplimentary_detail.Notify_address,igm_supplimentary_detail.Line_No,
					total_port,concat(right(YEAR(bill_date),2),'/',concat(if(length(bill_generation_no)=1,'00000',
					if(length(bill_generation_no)=2,'0000',if(length(bill_generation_no)=3,'000',if(length(bill_generation_no)=4,'00',
					if(length(bill_generation_no)=5,'0',''))))),bill_generation_no)) as master_bill_no,shed_bill_master.bill_date,VoyNo,
					verify_other_data.exit_note_number,pr_number
					from  igm_supplimentary_detail
					inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
					left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
					left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
					left join shed_bill_master on shed_bill_master.verify_no=shed_tally_info.verify_number
					left join bank_bill_recv on bank_bill_recv.bill_no=shed_bill_master.bill_no
					left join vessels_berth_detail on shed_bill_master.import_rotation=vessels_berth_detail.Import_Rotation_No
					LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.imp_rot=igm_supplimentary_detail.Import_Rotation_No AND igm_supplimentary_detail.BL_No=shed_mlo_do_info.bl_no
					where shed_tally_info.verify_number='$verify_num' limit 1";
				}
				else
				{
					// $strBill="SELECT igm_supplimentary_detail.id,IFNULL(SUM(rcv_pack+loc_first),0) AS rcv_pack,igm_masters.Vessel_Name,
					// igm_supplimentary_detail.Import_Rotation_No,igm_sup_detail_container.cont_number,Pack_Marks_Number,shed_loc,shed_yard,
					// Description_of_Goods,Notify_name,IFNULL(shed_tally_info.verify_number,0) AS verify_number,
					// IFNULL(shed_tally_info.id,0) AS verify_id,igm_supplimentary_detail.Pack_Number,
					// igm_supplimentary_detail.Pack_Description,igm_supplimentary_detail.BL_No,igm_sup_detail_container.cont_size,
					// igm_sup_detail_container.cont_status,igm_sup_detail_container.cont_weight,verify_other_data.cnf_name,
					// IFNULL(NULLIF(shed_mlo_do_info.be_no,' '),verify_other_data.be_no) AS be_no,verify_other_data.be_date,
					// igm_sup_detail_container.cont_height,bank_bill_recv.bill_no,bank_bill_recv.cp_no,
					// RIGHT(bank_bill_recv.cp_year,2) AS cp_year,bank_bill_recv.cp_bank_code,bank_bill_recv.cp_unit,
					// DATE(bank_bill_recv.recv_time) AS cp_date,igm_supplimentary_detail.Notify_address,igm_supplimentary_detail.Line_No,
					// total_port,CONCAT(RIGHT(YEAR(bill_date),2),'/',CONCAT(IF(LENGTH(bill_generation_no)=1,'00000',
					// IF(LENGTH(bill_generation_no)=2,'0000',IF(LENGTH(bill_generation_no)=3,'000',IF(LENGTH(bill_generation_no)=4,'00',
					// IF(LENGTH(bill_generation_no)=5,'0',''))))),bill_generation_no)) AS master_bill_no,shed_bill_master.bill_date,VoyNo,
					// verify_other_data.exit_note_number,pr_number
					// FROM  igm_supplimentary_detail
					// INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					// INNER JOIN igm_masters ON igm_supplimentary_detail.igm_master_id=igm_masters.id
					// LEFT JOIN  shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
					// LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
					// LEFT JOIN shed_bill_master ON shed_bill_master.verify_no=shed_tally_info.verify_number
					// LEFT JOIN bank_bill_recv ON bank_bill_recv.bill_no=shed_bill_master.bill_no
					// LEFT JOIN vessels_berth_detail ON shed_bill_master.import_rotation=vessels_berth_detail.Import_Rotation_No
					// LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.imp_rot=igm_supplimentary_detail.Import_Rotation_No AND  igm_supplimentary_detail.BL_No=shed_mlo_do_info.bl_no
					// WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no' LIMIT 1";
					
					// for new format of Release order - intakhab - 2022-03-14
					$strBill = "SELECT igm_supplimentary_detail.id,
					IFNULL(SUM(rcv_pack+loc_first),0) AS rcv_pack,
					rcv_unit,
					igm_masters.Vessel_Name,
					Voy_No,
					igm_supplimentary_detail.Volume_in_cubic_meters,
					(SELECT actual_delv_pack FROM do_truck_details_entry WHERE verify_number='U20107210001') AS actual_delv_pack,	
					(SELECT gate_out_time FROM do_truck_details_entry WHERE verify_number='U20107210001') AS gate_out_time,		
					igm_supplimentary_detail.Notify_name,
					igm_supplimentary_detail.Notify_code,
					igm_supplimentary_detail.Import_Rotation_No,
					igm_sup_detail_container.cont_number,
					SUBSTRING(igm_supplimentary_detail.Pack_Marks_Number, 1, 50) AS Pack_Marks_Number,
					shed_loc,
					shed_yard,
					SUBSTRING(Description_of_Goods, 1, 50) AS Description_of_Goods,
					Notify_name,
					IFNULL(shed_tally_info.verify_number,0) AS verify_number,
					IFNULL(shed_tally_info.id,0) AS verify_id,
					igm_supplimentary_detail.Pack_Number,
					igm_supplimentary_detail.Pack_Description,
					igm_supplimentary_detail.BL_No,

					igm_sup_detail_container.cont_number,
					igm_sup_detail_container.cont_size,
					igm_sup_detail_container.cont_height,
					igm_sup_detail_container.cont_status,
					igm_sup_detail_container.cont_weight,
					igm_sup_detail_container.cont_iso_type,
					igm_sup_detail_container.cont_type,

					verify_other_data.cnf_name,
					IFNULL(NULLIF(shed_mlo_do_info.be_no,' '),
					verify_other_data.be_no) AS be_no,
					verify_other_data.be_date,
					bank_bill_recv.bill_no,
					bank_bill_recv.cp_no,
					RIGHT(bank_bill_recv.cp_year,2) AS cp_year,
					bank_bill_recv.cp_bank_code,
					bank_bill_recv.cp_unit,
					DATE(bank_bill_recv.recv_time) AS cp_date,
					igm_supplimentary_detail.Notify_address,
					igm_supplimentary_detail.Line_No,
					total_port,
					CONCAT(RIGHT(YEAR(bill_date),2),'/',CONCAT(IF(LENGTH(bill_generation_no)=1,'00000',
					IF(LENGTH(bill_generation_no)=2,'0000',IF(LENGTH(bill_generation_no)=3,'000',IF(LENGTH(bill_generation_no)=4,'00',
					IF(LENGTH(bill_generation_no)=5,'0',''))))),bill_generation_no)) AS master_bill_no,
					shed_bill_master.bill_date,
					VoyNo,
					verify_other_data.exit_note_number,
					pr_number
					FROM  igm_supplimentary_detail
					INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					INNER JOIN igm_masters ON igm_supplimentary_detail.igm_master_id=igm_masters.id
					LEFT JOIN  shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
					LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
					LEFT JOIN shed_bill_master ON shed_bill_master.verify_no=shed_tally_info.verify_number
					LEFT JOIN bank_bill_recv ON bank_bill_recv.bill_no=shed_bill_master.bill_no
					LEFT JOIN vessels_berth_detail ON shed_bill_master.import_rotation=vessels_berth_detail.Import_Rotation_No
					LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.imp_rot=igm_supplimentary_detail.Import_Rotation_No AND igm_supplimentary_detail.BL_No=shed_mlo_do_info.bl_no
					WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no' LIMIT 1";
				}				
			}
			else if($contStatus=="FCL")
			{
				if($vryStat==1)
				{//be_no
					
					
					$strBill="SELECT DISTINCT igm_detail_container.cont_number,igm_details.id,shed_bill_master.vessel_Name,igm_details.Import_Rotation_No,
					igm_details.Pack_Marks_Number,
					igm_details.Description_of_Goods,igm_details.Notify_name,IFNULL(verify_info_fcl.verify_number,0) AS verify_number,IFNULL(verify_info_fcl.id,0) AS verify_id,igm_details.Pack_Number,
					igm_details.Pack_Description,igm_details.BL_No,igm_detail_container.igm_detail_id,igm_detail_container.cont_size,igm_detail_container.cont_status,igm_detail_container.cont_weight,
					appraisement_info_fcl.cnf_name,
					IFNULL(shed_mlo_do_info.be_no,(SELECT reg_no FROM sad_info INNER JOIN sad_item ON sad_item.sad_id=sad_info.id WHERE manif_num LIKE '%2021 851%' AND sum_declare = 'MAX/SIN/2302/2021' LIMIT 1)) AS be_no, IFNULL(shed_mlo_do_info.be_date,(SELECT reg_date FROM sad_info INNER JOIN sad_item ON sad_item.sad_id=sad_info.id WHERE manif_num LIKE '%2021 851%' AND sum_declare = 'MAX/SIN/2302/2021' LIMIT 1)) AS be_date,
					igm_detail_container.cont_height,shed_bill_details.bill_no,bank_bill_recv.cp_no,
					RIGHT(bank_bill_recv.cp_year,2) AS cp_year,bank_bill_recv.cp_bank_code,bank_bill_recv.cp_unit,DATE(bank_bill_recv.recv_time) AS cp_date,igm_details.Notify_address,
					igm_details.Line_No,shed_bill_master.total_port,CONCAT(RIGHT(YEAR(bill_date),2),'/',CONCAT(IF(LENGTH(bill_generation_no)=1,'00000',
					IF(LENGTH(bill_generation_no)=2,'0000',IF(LENGTH(bill_generation_no)=3,'000',IF(LENGTH(bill_generation_no)=4,'00',IF(LENGTH(bill_generation_no)=5,'0',''))))),bill_generation_no)) AS master_bill_no,shed_bill_master.bill_date,shed_bill_master.import_rotation AS VoyNo,'' AS shed_loc,'' AS shed_yard,pr_number
					FROM  igm_details
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
					LEFT JOIN verify_info_fcl ON verify_info_fcl.igm_detail_id=igm_details.id
					LEFT JOIN appraisement_info_fcl ON appraisement_info_fcl.rotation=igm_details.Import_Rotation_No AND appraisement_info_fcl.BL_NO=igm_details.BL_No
					  LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id

					LEFT JOIN shed_bill_master ON shed_bill_master.verify_no=verify_info_fcl.verify_number
					LEFT JOIN shed_bill_details ON shed_bill_details.verify_no=verify_info_fcl.verify_number
					LEFT JOIN bank_bill_recv ON bank_bill_recv.bill_no=shed_bill_master.bill_no
					WHERE verify_info_fcl.verify_number='$verify_num'
					
					UNION

					SELECT DISTINCT igm_sup_detail_container.cont_number,igm_supplimentary_detail.id,shed_bill_master.vessel_Name,igm_supplimentary_detail.Import_Rotation_No, igm_supplimentary_detail.Pack_Marks_Number, igm_supplimentary_detail.Description_of_Goods,igm_supplimentary_detail.Notify_name,IFNULL(verify_info_fcl.verify_number,0) AS verify_number,IFNULL(verify_info_fcl.id,0) AS verify_id,igm_supplimentary_detail.Pack_Number, igm_supplimentary_detail.Pack_Description,igm_supplimentary_detail.BL_No,igm_sup_detail_container.igm_sup_detail_id,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_status,igm_sup_detail_container.cont_weight,appraisement_info_fcl.cnf_name, IFNULL(shed_mlo_do_info.be_no,certify_info_fcl.be_no) AS be_no, IFNULL(shed_mlo_do_info.be_date,(certify_info_fcl.be_date)) AS be_date, igm_sup_detail_container.cont_height,shed_bill_details.bill_no,bank_bill_recv.cp_no, RIGHT(bank_bill_recv.cp_year,2) AS cp_year,bank_bill_recv.cp_bank_code,bank_bill_recv.cp_unit,DATE(bank_bill_recv.recv_time) AS cp_date,igm_supplimentary_detail.Notify_address, igm_supplimentary_detail.Line_No,shed_bill_master.total_port,CONCAT(RIGHT(YEAR(bill_date),2),'/',CONCAT(IF(LENGTH(bill_generation_no)=1,'00000', IF(LENGTH(bill_generation_no)=2,'0000',IF(LENGTH(bill_generation_no)=3,'000',IF(LENGTH(bill_generation_no)=4,'00',IF(LENGTH(bill_generation_no)=5,'0',''))))),bill_generation_no)) AS master_bill_no,shed_bill_master.bill_date,shed_bill_master.import_rotation AS VoyNo,'' AS shed_loc,'' AS shed_yard,pr_number 
					FROM igm_supplimentary_detail 
					INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id 
					INNER JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
					LEFT JOIN verify_info_fcl ON verify_info_fcl.igm_detail_id=igm_supplimentary_detail.id 
					LEFT JOIN igm_details ON igm_supplimentary_detail.igm_detail_id=igm_details.id 
					LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id
					LEFT JOIN certify_info_fcl ON igm_details.id=certify_info_fcl.igm_detail_id OR igm_supplimentary_detail.id=certify_info_fcl.igm_sup_detail_id 
					LEFT JOIN appraisement_info_fcl ON appraisement_info_fcl.rotation=igm_supplimentary_detail.Import_Rotation_No AND appraisement_info_fcl.BL_NO=igm_supplimentary_detail.BL_No 
					LEFT JOIN shed_bill_master ON shed_bill_master.verify_no=verify_info_fcl.verify_number 
					LEFT JOIN shed_bill_details ON shed_bill_details.verify_no=verify_info_fcl.verify_number 
					LEFT JOIN bank_bill_recv ON bank_bill_recv.bill_no=shed_bill_master.bill_no
					WHERE verify_info_fcl.verify_number='$verify_num'";	
				}
				else
				{
					$strBill="SELECT DISTINCT igm_detail_container.cont_number,
					'' AS rcv_unit,
					'' AS Volume_in_cubic_meters,
					'' AS gate_out_time,
					'' AS actual_delv_pack,
					'' AS Notify_code,
					
					-- '' AS cpnoview,
					-- '' AS yard_No,
					-- '' AS pos,
					-- '' AS Vessel_Name,					
					
					igm_details.id,igm_masters.Vessel_Name,igm_details.Import_Rotation_No,
					SUBSTRING(igm_details.Pack_Marks_Number, 1, 50) AS Pack_Marks_Number,
					SUBSTRING(igm_details.Description_of_Goods, 1, 50) AS Description_of_Goods,
					igm_details.Notify_name,IFNULL(verify_info_fcl.verify_number,0) AS verify_number,IFNULL(verify_info_fcl.id,0) AS verify_id,igm_details.Pack_Number,
					igm_details.Pack_Description,igm_details.BL_No,igm_detail_container.igm_detail_id,igm_detail_container.cont_size,igm_detail_container.cont_status,igm_detail_container.cont_weight,igm_detail_container.cont_iso_type,appraisement_info_fcl.cnf_name,
					IFNULL(shed_mlo_do_info.be_no,(SELECT reg_no FROM sad_info INNER JOIN sad_item ON sad_item.sad_id=sad_info.id WHERE manif_num LIKE '%2021 851%' AND sum_declare = 'MAX/SIN/2302/2021' LIMIT 1)) AS be_no, IFNULL(shed_mlo_do_info.be_date,(SELECT reg_date FROM sad_info INNER JOIN sad_item ON sad_item.sad_id=sad_info.id WHERE manif_num LIKE '%2021 851%' AND sum_declare = 'MAX/SIN/2302/2021' LIMIT 1)) AS be_date,
					igm_detail_container.cont_height,shed_bill_details.bill_no,bank_bill_recv.cp_no,
					RIGHT(bank_bill_recv.cp_year,2) AS cp_year,bank_bill_recv.cp_bank_code,bank_bill_recv.cp_unit,DATE(bank_bill_recv.recv_time) AS cp_date,igm_details.Notify_address,
					igm_details.Line_No,shed_bill_master.total_port,CONCAT(RIGHT(YEAR(bill_date),2),'/',CONCAT(IF(LENGTH(bill_generation_no)=1,'00000',
					IF(LENGTH(bill_generation_no)=2,'0000',IF(LENGTH(bill_generation_no)=3,'000',IF(LENGTH(bill_generation_no)=4,'00',IF(LENGTH(bill_generation_no)=5,'0',''))))),bill_generation_no)) AS master_bill_no,shed_bill_master.bill_date,shed_bill_master.import_rotation AS VoyNo,Voy_No,'' AS shed_loc,'' AS shed_yard, pr_number
					FROM  igm_details
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
					LEFT JOIN verify_info_fcl ON verify_info_fcl.igm_detail_id=igm_details.id
					LEFT JOIN appraisement_info_fcl ON appraisement_info_fcl.rotation=igm_details.Import_Rotation_No AND appraisement_info_fcl.BL_NO=igm_details.BL_No
					LEFT JOIN shed_bill_master ON shed_bill_master.verify_no=verify_info_fcl.verify_number
					LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id
					LEFT JOIN shed_bill_details ON shed_bill_details.verify_no=verify_info_fcl.verify_number
					LEFT JOIN bank_bill_recv ON bank_bill_recv.bill_no=shed_bill_master.bill_no
					WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no'
					
					UNION

					SELECT DISTINCT igm_sup_detail_container.cont_number,
					
					'' AS rcv_unit,
					'' AS Volume_in_cubic_meters,
					'' AS gate_out_time,
					'' AS actual_delv_pack,
					'' AS Notify_code,
					
					-- '' AS cpnoview,
					-- '' AS yard_No,
					-- '' AS pos,
					-- '' AS Vessel_Name,					
					
					igm_supplimentary_detail.id,igm_masters.Vessel_Name,igm_supplimentary_detail.Import_Rotation_No, 
					SUBSTRING(igm_supplimentary_detail.Pack_Marks_Number, 1, 50) AS Pack_Marks_Number,					
					SUBSTRING(igm_supplimentary_detail.Description_of_Goods, 1, 50) AS Description_of_Goods,
					igm_supplimentary_detail.Notify_name,IFNULL(verify_info_fcl.verify_number,0) AS verify_number,IFNULL(verify_info_fcl.id,0) AS verify_id,igm_supplimentary_detail.Pack_Number, igm_supplimentary_detail.Pack_Description,igm_supplimentary_detail.BL_No,igm_sup_detail_container.igm_sup_detail_id,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_status, igm_sup_detail_container.cont_weight,igm_sup_detail_container.cont_iso_type,appraisement_info_fcl.cnf_name, 
					IFNULL(shed_mlo_do_info.be_no,certify_info_fcl.be_no) AS be_no,
					IFNULL(shed_mlo_do_info.be_date,(certify_info_fcl.be_date)) AS be_date,
					igm_sup_detail_container.cont_height,shed_bill_details.bill_no,bank_bill_recv.cp_no, RIGHT(bank_bill_recv.cp_year,2) AS cp_year,bank_bill_recv.cp_bank_code,bank_bill_recv.cp_unit,DATE(bank_bill_recv.recv_time) AS cp_date,igm_supplimentary_detail.Notify_address, igm_supplimentary_detail.Line_No,shed_bill_master.total_port,CONCAT(RIGHT(YEAR(bill_date),2),'/',CONCAT(IF(LENGTH(bill_generation_no)=1,'00000', IF(LENGTH(bill_generation_no)=2,'0000',IF(LENGTH(bill_generation_no)=3,'000',IF(LENGTH(bill_generation_no)=4,'00',IF(LENGTH(bill_generation_no)=5,'0',''))))),bill_generation_no)) AS master_bill_no,shed_bill_master.bill_date,shed_bill_master.import_rotation AS VoyNo,Voy_No,'' AS shed_loc,'' AS shed_yard, pr_number FROM igm_supplimentary_detail INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id INNER JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id LEFT JOIN verify_info_fcl ON verify_info_fcl.igm_detail_id=igm_supplimentary_detail.id 
					LEFT JOIN igm_details ON igm_supplimentary_detail.igm_detail_id=igm_details.id 
					LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id
					LEFT JOIN certify_info_fcl ON igm_details.id=certify_info_fcl.igm_detail_id OR igm_supplimentary_detail.id=certify_info_fcl.igm_sup_detail_id 
					LEFT JOIN appraisement_info_fcl ON appraisement_info_fcl.rotation=igm_supplimentary_detail.Import_Rotation_No AND appraisement_info_fcl.BL_NO=igm_supplimentary_detail.BL_No LEFT JOIN shed_bill_master ON shed_bill_master.verify_no=verify_info_fcl.verify_number LEFT JOIN shed_bill_details ON shed_bill_details.verify_no=verify_info_fcl.verify_number LEFT JOIN bank_bill_recv ON bank_bill_recv.bill_no=shed_bill_master.bill_no
					WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'";	
				}					
			}						
			/*  echo $be_no;
			 return; */
			// echo $strBill;return;
			$rtnContainerList = $this->bm->dataSelectDb1($strBill);									
							
			$data['rtnContainerList']=$rtnContainerList;
				
			$strBillRcvInfo="select description,gl_code 
							from shed_bill_details 
							inner join shed_bill_master on shed_bill_master.bill_no=shed_bill_details.bill_no
							where shed_bill_master.verify_no='$verify_num'";
											
			$rtnBillRcvInfo = $this->bm->dataSelectDb1($strBillRcvInfo);
		
			$data['rtnBillRcvInfo']=$rtnBillRcvInfo;
						
			$str="select concat(right(YEAR(bill_date),2),'/',concat(if(length(bill_generation_no)=1,'00000',if(length(bill_generation_no)=2,'0000',if(length(bill_generation_no)=3,'000',if(length(bill_generation_no)=4,'00',if(length(bill_generation_no)=5,'0',''))))),bill_generation_no)) as bill_no,verify_no,unit_no,cpa_vat_reg_no,ex_rate,bill_date,arraival_date,import_rotation,vessel_name,cl_date,bl_no,wr_date,wr_upto_date,importer_vat_reg_no,importer_name,cnf_lic_no,cnf_agent,be_no,be_date,ado_no,ado_date,ado_valid_upto,manifest_qty,cont_size,cont_height,bill_rcv_stat,if(bill_rcv_stat=1,'Paid','Not Paid') as paid_status 
			from shed_bill_master where verify_no='$verify_num'"; 
				
			$rtnBillList = $this->bm->dataSelectDb1($str);
				
			$unit_no="";
			$cpa_vat_reg_no="";
			$ex_rate="";
			$bill_rcv_stat="";
			
			if(count($rtnBillList)>0)
			{
				$unit_no=$rtnBillList[0]['unit_no'];
				$cpa_vat_reg_no=$rtnBillList[0]['cpa_vat_reg_no'];
				$ex_rate=$rtnBillList[0]['ex_rate'];
				$bill_rcv_stat=$rtnBillList[0]['bill_rcv_stat'];
			}			

			$data['rtnBillList']=$rtnBillList;				

			// certify by - start
			$certifyBy = "";
			$sql_certifyBy = "SELECT certify_info_fcl.update_by
			FROM certify_info_fcl
			INNER JOIN igm_details ON igm_details.id=certify_info_fcl.igm_detail_id
			WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no'";
			$rslt_certifyBy = $this->bm->dataSelectDB1($sql_certifyBy);
			
			for($i=0;$i<count($rslt_certifyBy);$i++)
			{
				$certifyBy = $rslt_certifyBy[$i]['update_by'];							
			}
			
			if($certifyBy=="")
			{
				$sql_certifyBy = "SELECT verify_other_data.update_by
				FROM verify_other_data
				INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=verify_other_data.igm_sup_detail_id
				WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'";
				$rslt_certifyBy = $this->bm->dataSelectDB1($sql_certifyBy);
				
				for($i=0;$i<count($rslt_certifyBy);$i++)
				{
					$certifyBy = $rslt_certifyBy[$i]['update_by'];							
				}
			}
			$data['certifyBy']=$certifyBy;
			// certify by - end 
			
			// verify by - start
			$verifyBy = "";
			$verifyTime = "";
			$sql_verifyBy = "SELECT verify_info_fcl.verify_by,DATE(verify_info_fcl.verify_time) AS verify_time
			FROM verify_info_fcl
			INNER JOIN igm_details ON igm_details.id=verify_info_fcl.igm_detail_id
			WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no'
			LIMIT 1";
			$rslt_verifyBy = $this->bm->dataSelectDB1($sql_verifyBy);
			
			for($i=0;$i<count($rslt_verifyBy);$i++)
			{
				$verifyBy = $rslt_verifyBy[$i]['verify_by'];							
				$verifyTime = $rslt_verifyBy[$i]['verify_time'];							
			}
			
			if($verifyBy == "")
			{
				$sql_verifyBy = "SELECT shed_tally_info.verify_by,DATE(shed_tally_info.verify_time) AS verify_time
				FROM shed_tally_info
				INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=shed_tally_info.igm_sup_detail_id
				WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'";
				$rslt_verifyBy = $this->bm->dataSelectDB1($sql_verifyBy);	

				for($i=0;$i<count($rslt_verifyBy);$i++)
				{
					$verifyBy = $rslt_verifyBy[$i]['verify_by'];							
					$verifyTime = $rslt_verifyBy[$i]['verify_time'];							
				}				
			}
			$data['verifyBy']=$verifyBy;
			$data['verifyTime']=$verifyTime;
			// verify by - end 
			
			$data['title']="Shed Bill";
			$data['verify_number']=$verify_num;
		//	$data['tot_sum']=$tot_sum;
			$data['unit_no']=$unit_no;
			$data['cpa_vat_reg_no']=$cpa_vat_reg_no;
			$data['ex_rate']=$ex_rate;
			$data['bill_rcv_stat']=$bill_rcv_stat;
		//	$data['cpnoview']=$cpnoview;
					
		//	$data['recv_time']=$recv_time;
		//	$data['recv_by']=$recv_by;
		//	$data['billPrepareBy']=$billPrepareBy;
			$data['bill_print_times']=4;
			$login_id = $this->session->userdata('login_id');
			$data['login_id']=$login_id;
									
			$data['verifyNo']=$verify_num;				
			$data['verify_num']=$verify_num;
			
					
			// $this->load->view('releaseOrderFormViewPDF',$data);				 			
			//$this->load->view('releaseOrderFormViewPDF_static_5',$data);				 			
		}
	}				
				
	public function getShedBillPdf($verify_number,$bill)
	{ 

		$login_id = $this->session->userdata('login_id');

		$billVerify = $verify_number;

		$strBankPaymentInfo = "select shed_bill_master.bill_no,bill_rcv_stat,cp_bank_code,user,concat(cp_bank_code,cp_unit,'/',right(cp_year,2),'-',concat(if(length(cp_no)=1,'000',if(length(cp_no)=2,'00',if(length(cp_no)=3,'0',''))),cp_no)) as cp_no
		from shed_bill_master 
		inner join bank_bill_recv on bank_bill_recv.bill_no=shed_bill_master.bill_no
		where verify_no='$billVerify'";
		$rtnBankPaymentInfo = $this->bm->dataSelectDb1($strBankPaymentInfo);
		$rcvstat=$rtnBankPaymentInfo[0]['bill_rcv_stat'];
		$cpnoview=$rtnBankPaymentInfo[0]['cp_no'];
		$cpbankcode=$rtnBankPaymentInfo[0]['cp_bank_code'];
		$shedbill=$rtnBankPaymentInfo[0]['bill_no'];
		$bill_clerk=$rtnBankPaymentInfo[0]['user'];
		if($cpbankcode=="OB")
			$cpbankname="ONE BANK LIMITED";
		//load mPDF library	   
		
		$str="select concat(right(YEAR(bill_date),2),'/',concat(if(length(bill_generation_no)=1,'00000',if(length(bill_generation_no)=2,'0000',if(length(bill_generation_no)=3,'000',if(length(bill_generation_no)=4,'00',if(length(bill_generation_no)=5,'0',''))))),bill_generation_no)) as bill_no,verify_no,unit_no,cpa_vat_reg_no,ex_rate,bill_date,arraival_date,import_rotation,vessel_name,
		cl_date,bl_no,wr_date,wr_upto_date,importer_vat_reg_no,importer_name,cnf_lic_no,cnf_agent,be_no,
		be_date,ado_no,ado_date,ado_valid_upto,manifest_qty,cont_size,cont_height from shed_bill_master 
		where verify_no='$billVerify'";
		
		$rtnContainerList = $this->bm->dataSelectDb1($str);
		$unit_no=$rtnContainerList[0]['unit_no'];
		$cpa_vat_reg_no=$rtnContainerList[0]['cpa_vat_reg_no'];
		$ex_rate=$rtnContainerList[0]['ex_rate'];
		
		$qry="select verify_no,bill_no,gl_code,description,tarrif_rate,Qty,qday,amt,vatTK,mlwfTK from shed_bill_details
		where verify_no='$billVerify'";
		
		$chargeList = $this->bm->dataSelectDb1($qry); 
			
		$qry_sum="select SUM(amt) as amt from shed_bill_details
					where verify_no='$billVerify'";
				//echo $qry;
		$sumAll = $this->bm->dataSelectDb1($qry_sum);
		$tot_sum=$sumAll[0]['amt'];
			
		$qry_qday="select IFNULL(SUM(qday),0) as qday from shed_bill_details
					where verify_no='$billVerify' AND gl_code not in('501005','502000N','503000N')";
				//echo $qry;
		$qdayAll = $this->bm->dataSelectDb1($qry_qday);
		$tot_qday=$qdayAll[0]['qday'];
			
		$sqlrcvdate="SELECT recv_by,DATE(recv_time) AS recv_time FROM bank_bill_recv WHERE bill_no='$shedbill'";
		$rtnrcvdate = $this->bm->dataSelectDb1($sqlrcvdate);
		
		$recv_by=$rtnrcvdate[0]['recv_by'];
		$recv_time=$rtnrcvdate[0]['recv_time'];		

		$data['rtnContainerList']=$rtnContainerList;
		$data['chargeList']=$chargeList;
		
		$data['title']="Shed Bill";
		$data['verify_number']=$billVerify;
		$data['rcvstat']=$rcvstat;
		$data['cpnoview']=$cpnoview;
		$data['cpbankname']=$cpbankname;
		$data['recv_time']=$recv_time;
		$data['recv_by']=$recv_by;
		$data['tot_sum']=$tot_sum;
		$data['tot_qday']=$tot_qday;
		$data['bill_clerk']=$bill_clerk;
		$data['bill_print_times']=3;
		//$this->data['amountInwords']=convert_number_to_words(5000);
		 
		$data['unit_no']=$unit_no;
		$data['cpa_vat_reg_no']=$cpa_vat_reg_no;
		$data['ex_rate']=$ex_rate;
		$data['billFrmRls']=$bill;
		 
		//attached Shed delivery order
			 
		$verifyNo=$verify_number;
				
		$sqlOrder = "select igm_supplimentary_detail.id,IFNULL(sum(rcv_pack+loc_first),0) as rcv_pack,igm_masters.Vessel_Name,igm_supplimentary_detail.Import_Rotation_No,igm_sup_detail_container.cont_number,Pack_Marks_Number,shed_loc,shed_yard,Description_of_Goods,Notify_name,IFNULL(shed_tally_info.verify_number,0) as verify_number,IFNULL(shed_tally_info.id,0) as verify_id,igm_supplimentary_detail.Pack_Number,igm_supplimentary_detail.Pack_Description,igm_supplimentary_detail.BL_No,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_status,igm_sup_detail_container.cont_weight,verify_other_data.cnf_name,verify_other_data.be_no,verify_other_data.be_date,igm_sup_detail_container.cont_height
		from  igm_supplimentary_detail
		inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
		inner join igm_masters on igm_supplimentary_detail.igm_master_id=igm_masters.id
		left join  shed_tally_info on shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
		left join verify_other_data on shed_tally_info.id=verify_other_data.shed_tally_id
		where shed_tally_info.verify_number='$verifyNo'";	
								
		$orderList = $this->bm->dataSelectDb1($sqlOrder);	
		$data['verifyNo']=$verifyNo;
		$data['orderList']=$orderList;
				
		$sqlTruckCount="select count(truck_id) as rtnValue from do_information where verify_no='$verifyNo'";
		$truckCount = $this->bm->dataReturnDb1($sqlTruckCount);	
	
		$data['truckCount']=$truckCount;
				
		$sqlTruckDetails="select truck_id, delv_pack from do_information where verify_no='$verifyNo'";
		$truckDetails = $this->bm->dataSelectDb1($sqlTruckDetails);	
	
		$data['truckDetails']=$truckDetails;
	
		$this->load->view('shedBillPdfOutputPrint',$data); //load the pdf_output.php by passing our data and get all data in $html varriable. 	 	
	}
		//Release Order End
		
	//Cart Ticket start
	function cartTicketForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
			
		}
		else
		{
			$data['msg']="";
			$data['title']="CART TICKET SECTION..."; 			
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('cartTicketForm',$data);
			$this->load->view('jsAssets');	
		}		
	}
		
	function cartTicketView()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$sqlTruckNumber = "";
			if($this->input->post('btnCartView'))
			{
				$verifyNo=$this->input->post('verify_number');
				$truckno=$this->input->post('troCart');
			//	$sqlTruckNumber="SELECT verify_no,truck_id,delv_pack FROM do_information WHERE verify_no='$verifyNo' AND truck_id='$truckno'";
				$sqlTruckNumber="SELECT verify_no,truck_id, gate_no, delv_pack FROM do_information WHERE verify_no='$verifyNo'";
			}
			else
			{
				$verifyNo=$this->input->post('verify_number');
				$sqlTruckNumber="select verify_no,truck_id, gate_no,delv_pack from do_information where verify_no='$verifyNo'";
			}
			//echo $sqlTruckNumber;			
			
			$rtnTruckNumber = $this->bm->dataSelectDb1($sqlTruckNumber);
			
			$data['rtnTruckNumber']=$rtnTruckNumber;
			$data['verifyNo']=$verifyNo;
			$this->load->view('cartTicketHTML',$data);
		}	
	}
		
	function cartTicketPdf()
	{
		$verify_number=$this->input->post('verify_number');
		
		$sql_contStatus="SELECT verify_info_fcl.be_no,verify_info_fcl.igm_detail_id,verify_number,Import_Rotation_No,appraisement_info_fcl.BL_NO,cont_status
		FROM verify_info_fcl
		INNER JOIN igm_details ON igm_details.id=verify_info_fcl.igm_detail_id
		LEFT JOIN certify_info_fcl ON certify_info_fcl.igm_detail_id=igm_details.id
		LEFT JOIN appraisement_info_fcl ON appraisement_info_fcl.rotation=igm_details.Import_Rotation_No
		INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
		WHERE verify_number='$verify_number'";
		$rslt_contStatus=$this->bm->dataSelectDb1($sql_contStatus);
		$rowCount=count($rslt_contStatus);
		$contStatus="";
		if($rowCount==0)
		{
			$contStatus = "LCL";
		}
		else
		{
			$contStatus=$rslt_contStatus[0]['cont_status'];
		}
		
		
	//	return;
		if($contStatus=="LCL")
		{
			//load mPDF library
			$this->load->library('m_pdf');
			$mpdf->use_kwt = true;
			
			$sqlTruckNumber = "";
			if($this->input->post('btnCartView'))
			{
				$verifyNo=$this->input->post('verify_number');
				$truckno=$this->input->post('troCart');
				
				$sqlTruckNumber_2="SELECT verify_no,truck_id,gate_no,delv_pack FROM do_information WHERE verify_no='$verifyNo'";

				$sqlTruckNumber="select no_of_truck from verify_other_data 
				inner join shed_tally_info on shed_tally_info.id=verify_other_data.shed_tally_id
				where verify_number='$verifyNo'";
			}
			else{
				$verifyNo=$this->input->post('verify_number');
			
				$sqlTruckNumber_2="select verify_no,truck_id,gate_no,delv_pack from do_information where verify_no='$verifyNo'";
				
				$sqlTruckNumber="select no_of_truck from verify_other_data 
				inner join shed_tally_info on shed_tally_info.id=verify_other_data.shed_tally_id
				where verify_number='$verifyNo'";
			}
				//echo $sqlTruckNumber;			
				
			$rtnTruckNumber_2 = $this->bm->dataSelectDb1($sqlTruckNumber_2);
			
			$rtnTruckNumber = $this->bm->dataSelectDb1($sqlTruckNumber);
			
			$login_id = $this->session->userdata('login_id');
				
			$this->data['rtnTruckNumber']=$rtnTruckNumber;
			$this->data['rtnTruckNumber_2']=$rtnTruckNumber_2;
			$this->data['verifyNo']=$verifyNo;
			$this->data['contStatus']=$contStatus;

			$html=$this->load->view('cartTicketPdfOutput',$this->data, true); //load the pdf_output.php by passing our data and get all data in $html varriable.
			 
			$pdfFilePath ="cartTicket-".time()."-download.pdf";

			$pdf = $this->m_pdf->load();
			//$pdf->SetWatermarkText('CPA CTMS');
			$pdf->showWatermarkText = true;		
		//	$stylesheet = file_get_contents('resources/styles/test.css'); // external css
			$stylesheet = file_get_contents('resources/styles/cartticket.css'); // external css
		//	$pdf->useSubstitutions = true; // optional - just as an example
				
			//$pdf->setFooter('Developed By : '.$login_id.'|Page {PAGENO}|Date {DATE j-m-Y}');
				
			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);
				 
			$pdf->Output($pdfFilePath, "I"); // For Show Pdf
		}
		else if($contStatus=="FCL")
		{
			//load mPDF library
			$this->load->library('m_pdf');
			$mpdf->use_kwt = true;

			$sqlTruckNumber = "";
			if($this->input->post('btnCartView'))
			{
				$verifyNo=$this->input->post('verify_number');
				$truckno=$this->input->post('troCart');

				// $sqlTruckNumber_2 = "SELECT verify_no,truck_id,gate_no,delv_pack 
				// FROM do_information WHERE verify_no='$verifyNo'";
				
				$sqlTruckNumber_2 = "SELECT verify_number,truck_id,gate_no,delv_pack
				FROM do_truck_details_entry
				WHERE verify_number='$verifyNo'";

				//				$sqlTruckNumber="select no_of_truck from verify_other_data
				//				inner join shed_tally_info on shed_tally_info.id=verify_other_data.shed_tally_id
				//				where verify_number='$verifyNo'";   // check this query no_of_truck

				// $sqlTruckNumber="SELECT COUNT(*)
				// AS no_of_truck
				// FROM do_information WHERE verify_no='$verifyNo'";   // check this query no_of_truck
				
				$sqlTruckNumber="SELECT COUNT(*)
				AS no_of_truck
				FROM do_truck_details_entry WHERE verify_number='$verifyNo'";   // check this query no_of_truck

				//            $sqlTruckNumber=" SELECT verify_info_fcl.no_of_truck AS no_of_truck
				//                          FROM verify_info_fcl WHERE verify_info_fcl.verify_number='$verifyNo'";   // check this query no_of_truck
			}
			else
			{
				$verifyNo=$this->input->post('verify_number');

				// $sqlTruckNumber_2="select verify_no,truck_id,gate_no,delv_pack from do_information where verify_no='$verifyNo'";
				
				$sqlTruckNumber_2 = "SELECT verify_number,truck_id,gate_no,delv_pack
				FROM do_truck_details_entry
				WHERE verify_number='$verifyNo'";

				//				$sqlTruckNumber="select no_of_truck from verify_other_data
				//				inner join shed_tally_info on shed_tally_info.id=verify_other_data.shed_tally_id
				//				where verify_number='$verifyNo'";

				// $sqlTruckNumber="SELECT COUNT(*)
				// AS no_of_truck
				// FROM do_information WHERE verify_no='$verifyNo'";
				
				$sqlTruckNumber="SELECT COUNT(*)
				AS no_of_truck
				FROM do_truck_details_entry WHERE verify_number='$verifyNo'";   // check this query no_of_truck
				
				//            $sqlTruckNumber=" SELECT verify_info_fcl.no_of_truck AS no_of_truck
				//                          FROM verify_info_fcl WHERE verify_info_fcl.verify_number='$verifyNo'";   // check this query no_of_truck
			}
			//echo $sqlTruckNumber;

			$rtnTruckNumber_2 = $this->bm->dataSelectDb1($sqlTruckNumber_2);

			$rtnTruckNumber = $this->bm->dataSelectDb1($sqlTruckNumber);

			$login_id = $this->session->userdata('login_id');

			$this->data['rtnTruckNumber']=$rtnTruckNumber;
			$this->data['rtnTruckNumber_2']=$rtnTruckNumber_2;
			$this->data['verifyNo']=$verifyNo;
			$this->data['contStatus']=$contStatus;
			//        echo "<pre>";
			//        print_r("hello");
			//        echo "</pre>";
			//        exit();
			$html=$this->load->view('cartTicketPdfOutputFCL',$this->data, true); //load the pdf_output.php by passing our data and get all data in $html varriable.

			$pdfFilePath ="cartTicket-".time()."-download.pdf";

			$pdf = $this->m_pdf->load();
			//$pdf->SetWatermarkText('CPA CTMS');
			$pdf->showWatermarkText = true;
			//	$stylesheet = file_get_contents('resources/styles/test.css'); // external css
			$stylesheet = file_get_contents('resources/styles/cartticket.css'); // external css
			//	$pdf->useSubstitutions = true; // optional - just as an example

			//$pdf->setFooter('Developed By : '.$login_id.'|Page {PAGENO}|Date {DATE j-m-Y}');

			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);

			$pdf->Output($pdfFilePath, "I"); // For Show Pdf
		}						
	}
	//Cart Ticket end
		

	 
	// MH Chowdhury report EXPORT start
	function exportContListAllByRotationForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="CONTAINER LIST (ALL)";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('exportContListAllByRotationView',$data);   
			$this->load->view('jsAssets');
		}
	}
	
	function exportContListAllByRotationDownloadView()
	{
		$login_id = $this->session->userdata('login_id');	
		$data['login_id']=$login_id;
		$search_by = $this->input->post('search_by');
		if($search_by=="rotation")
		{
			$rotation=$this->input->post('search_value');
			$cond = " WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg='$rotation'";
			$data['title']="CONTAINERS LIST FOR THE ROTATION ".$rotation;
			$data['cond']=$cond;
			$data['containerStatus']="Export Containers";
		}
		else if($search_by=="dateRange")
		{
			$fromdate=$this->input->post('fromdate');
			$todate=$this->input->post('todate');
			$cond = " WHERE DATE(sparcsn4.inv_unit_fcy_visit.time_out) BETWEEN '$fromdate' AND '$todate'";
			$data['title']="CONTAINERS LIST FROM ".$fromdate." TO ".$todate;
			$data['cond']=$cond;
			$data['containerStatus']="Export Containers";
		}
					
		$this->load->view('exportContListAllByRotationExcelHTMLDownloadView',$data);   
	}
	// MH Chowdhury report EXPORT end
	
	
	//////////// VESSEL LIST WITH STATUS START//////////////////
	function viewVesselListStatus()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$rot_no = $this->input->post('rot_no');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id = $this->session->userdata('login_id');
			$org_Type_id = $this->session->userdata('org_Type_id');
			
			if($rot_no)
				{
					//Search by rotation
					$query="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name,vsl_vessel_visit_details.ib_vyg,
					vsl_vessel_visit_details.ob_vyg,SUBSTR(argo_carrier_visit.phase, 3, 
					LENGTH( argo_carrier_visit.phase)) AS phase_num,SUBSTR(argo_carrier_visit.phase,3) AS phase_str,argo_visit_details.eta,
					argo_visit_details.etd,argo_carrier_visit.ata,argo_carrier_visit.atd,ref_bizunit_scoped.id AS agent,
					COALESCE(vsl_vessel_visit_details.flex_string02,vsl_vessel_visit_details.flex_string03) AS berthop
					FROM argo_carrier_visit
					INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
					INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
					INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
					INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessel_visit_details.bizu_gkey
					WHERE vsl_vessel_visit_details.ib_vyg = '$rot_no'
					ORDER BY argo_carrier_visit.phase";
				}
				else if($org_Type_id==57)
				{
					// Shipping Agent Panel
					$query="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name,vsl_vessel_visit_details.ib_vyg,vsl_vessel_visit_details.ob_vyg,
							SUBSTR(argo_carrier_visit.phase, 3, 
					LENGTH( argo_carrier_visit.phase)) AS phase_num,SUBSTR(argo_carrier_visit.phase,3) AS phase_str,argo_visit_details.eta,
							argo_visit_details.etd,argo_carrier_visit.ata,
							argo_carrier_visit.atd,ref_bizunit_scoped.id AS agent,
							NVL(vsl_vessel_visit_details.flex_string02,vsl_vessel_visit_details.flex_string03) AS berthop
							FROM argo_carrier_visit
							INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
							INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
							INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
							INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessel_visit_details.bizu_gkey
							WHERE vsl_vessel_visit_details.ib_vyg='$rot_num' and ref_bizunit_scoped.id in (SELECT r.id FROM ref_bizunit_scoped r       
							LEFT JOIN ( ref_agent_representation X       
							LEFT JOIN ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey )  ON r.gkey=X.bzu_gkey 
							WHERE Y.id = '$login_id')
							ORDER BY argo_carrier_visit.phase";
					
					
					
					// $query="  SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name,vsl_vessel_visit_details.ib_vyg,
					// vsl_vessel_visit_details.ob_vyg,SUBSTR(argo_carrier_visit.phase, 3, 
					// LENGTH( argo_carrier_visit.phase)) AS phase_num,SUBSTR(argo_carrier_visit.phase,3) AS phase_str,argo_visit_details.eta,
					// argo_visit_details.etd,argo_carrier_visit.ata,
					// argo_carrier_visit.atd,ref_bizunit_scoped.id AS agent,
					// COALESCE(vsl_vessel_visit_details.flex_string02,vsl_vessel_visit_details.flex_string03) AS berthop
					// FROM argo_carrier_visit
					// INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
					// INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
					// INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
					// INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessel_visit_details.bizu_gkey
					// WHERE argo_carrier_visit.phase IN ('20INBOUND','30ARRIVED','40WORKING','50COMPLETE','60DEPARTED') 
					// and ref_bizunit_scoped.id in 
					// (
                        // SELECT r.id FROM ref_bizunit_scoped r       
						// LEFT JOIN ( ref_agent_representation X       
						// LEFT JOIN ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey )  ON r.gkey=X.bzu_gkey 
						// WHERE Y.id = '$login_id')
                    
					// ORDER BY argo_carrier_visit.phase";
				}
				else if($org_Type_id==1)
				{
					// MLO Panel
					$query="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name,vsl_vessel_visit_details.ib_vyg,vsl_vessel_visit_details.ob_vyg,
						SUBSTR(argo_carrier_visit.phase, 3, LENGTH( argo_carrier_visit.phase)) AS phase_num,SUBSTR(argo_carrier_visit.phase,3) AS phase_str,
                        argo_visit_details.eta,
						argo_visit_details.etd,argo_carrier_visit.ata,
						argo_carrier_visit.atd,ref_bizunit_scoped.id AS agent,
						NVL(vsl_vessel_visit_details.flex_string02,vsl_vessel_visit_details.flex_string03) AS berthop
						FROM argo_carrier_visit
						INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
						INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
						INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
						INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessel_visit_details.bizu_gkey
						WHERE vsl_vessel_visit_details.ib_vyg='$rot_num' and ref_bizunit_scoped.id='$login_id'
						ORDER BY argo_carrier_visit.phase";
				}
				else
				{
					$query="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name,vsl_vessel_visit_details.ib_vyg,
					vsl_vessel_visit_details.ob_vyg,SUBSTR(argo_carrier_visit.phase, 3, 
					LENGTH( argo_carrier_visit.phase)) AS phase_num,SUBSTR(argo_carrier_visit.phase,3) AS phase_str,argo_visit_details.eta,
					argo_visit_details.etd,argo_carrier_visit.ata,argo_carrier_visit.atd,ref_bizunit_scoped.id AS agent,
					COALESCE(vsl_vessel_visit_details.flex_string02,vsl_vessel_visit_details.flex_string03) AS berthop
					FROM argo_carrier_visit
					INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
					INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
					INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
					INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessel_visit_details.bizu_gkey
					WHERE argo_carrier_visit.phase IN ('20INBOUND','30ARRIVED','40WORKING','50COMPLETE','60DEPARTED')
					ORDER BY argo_carrier_visit.phase";
				}
			
			$rtnVesselList = $this->bm->dataSelect($query);
						
			$data['rtnVesselList']=$rtnVesselList;
			$data['login_id']=$login_id;
				
			$data['title']="VESSEL LIST WITH STATUS";
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('viewVesselListWithStatus',$data);
			$this->load->view('jsAssetsList');			
		}
	}

	function viewVesselListSearchList()
	{
		$rot_num=trim($this->input->post('rot_num'));
		$login_id = $this->session->userdata('login_id');
		$org_Type_id = $this->session->userdata('org_Type_id');
			if($org_Type_id==1)
						{
						$query="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name,vsl_vessel_visit_details.ib_vyg,vsl_vessel_visit_details.ob_vyg,
						SUBSTR(argo_carrier_visit.phase, 3, 
					LENGTH( argo_carrier_visit.phase)) AS phase_num,SUBSTR(argo_carrier_visit.phase,3) AS phase_str,argo_visit_details.eta,
						argo_visit_details.etd,argo_carrier_visit.ata,
						argo_carrier_visit.atd,ref_bizunit_scoped.id AS agent,
						NVL(vsl_vessel_visit_details.flex_string02,vsl_vessel_visit_details.flex_string03) AS berthop
						FROM argo_carrier_visit
						INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
						INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
						INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
						INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessel_visit_details.bizu_gkey
						WHERE vsl_vessel_visit_details.ib_vyg='$rot_num' and ref_bizunit_scoped.id='$login_id'
						ORDER BY argo_carrier_visit.phase";
						}
						else if($org_Type_id==57)
						{
							$query="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name,vsl_vessel_visit_details.ib_vyg,vsl_vessel_visit_details.ob_vyg,
							SUBSTR(argo_carrier_visit.phase, 3, 
					LENGTH( argo_carrier_visit.phase)) AS phase_num,SUBSTR(argo_carrier_visit.phase,3) AS phase_str,argo_visit_details.eta,
							argo_visit_details.etd,argo_carrier_visit.ata,
							argo_carrier_visit.atd,ref_bizunit_scoped.id AS agent,
							NVL(vsl_vessel_visit_details.flex_string02,vsl_vessel_visit_details.flex_string03) AS berthop
							FROM argo_carrier_visit
							INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
							INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
							INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
							INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessel_visit_details.bizu_gkey
							WHERE vsl_vessel_visit_details.ib_vyg='$rot_num' and ref_bizunit_scoped.id in (SELECT r.id FROM ref_bizunit_scoped r       
							LEFT JOIN ( ref_agent_representation X       
							LEFT JOIN ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey )  ON r.gkey=X.bzu_gkey 
							WHERE Y.id = '$login_id')
							ORDER BY argo_carrier_visit.phase";
						}
						else
						{
							$query="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name,vsl_vessel_visit_details.ib_vyg,vsl_vessel_visit_details.ob_vyg,
						SUBSTR(argo_carrier_visit.phase, 3, 
					LENGTH( argo_carrier_visit.phase)) AS phase_num,SUBSTR(argo_carrier_visit.phase,3) AS phase_str,argo_visit_details.eta,
							argo_visit_details.etd,argo_carrier_visit.ata,
							argo_carrier_visit.atd,ref_bizunit_scoped.id AS agent,
							NVL(vsl_vessel_visit_details.flex_string02,vsl_vessel_visit_details.flex_string03) AS berthop
							FROM argo_carrier_visit
							INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
							INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
							INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
							INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessel_visit_details.bizu_gkey
							WHERE vsl_vessel_visit_details.ib_vyg='$rot_num'
							ORDER BY argo_carrier_visit.phase";
						}

		$rtnVesselList = $this->bm->dataSelect($query);

		$data['rtnVesselList']=$rtnVesselList;
		$data['login_id']=$login_id;
		$data['title']="VESSEL LIST WITH STATUS...";
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('viewVesselListWithStatus',$data);
		$this->load->view('jsAssets');
			
	}
	//SOURAV
	// FOR IMPORT APPS LIST START
	//  Table 'ctmsmis.mis_inv_unit' doesn't exist
	
	function viewVesselListImportStatus()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id = $this->session->userdata('login_id');
			$org_Type_id = $this->session->userdata('org_Type_id');
			if($org_Type_id==1)
				{
					$query="SELECT * FROM ( SELECT ctmsmis.mis_inv_unit.vvd_gkey,ctmsmis.mis_inv_unit.vsl_visit_dtls_ib_vyg,ctmsmis.mis_inv_unit.vsl_name,
					COUNT(ctmsmis.mis_exp_unit.gkey) AS exp_cont
					FROM ctmsmis.mis_exp_unit 
					INNER JOIN ctmsmis.mis_inv_unit ON ctmsmis.mis_inv_unit.gkey=ctmsmis.mis_exp_unit.gkey
					WHERE ctmsmis.mis_inv_unit.vsl_visit_dtls_ib_vyg is not null and snx=0 
					GROUP BY 1) as tmp where  mlo='$login_id'";
				}
				else if($org_Type_id==57)
				{
					$idListQuery="SELECT r.id FROM ref_bizunit_scoped r       
					LEFT JOIN ( ref_agent_representation X       
					LEFT JOIN ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey )  ON r.gkey=X.bzu_gkey 
					WHERE Y.id = '$login_id'";
				$idListRes=$this->bm->dataSelect($idListQuery);
				$idList="";
				for($i=0;$i<count($idListRes);$i++){
					$idString="";
					$idString=$idListRes[$i]['ID'];

					if($i==(count($idListRes)-1)){
						$idList=$idList."'".$idString."'";
					}
					else{
						$idList=$idList."'".$idString."',";

					}

				}
					$query="SELECT * FROM ( SELECT ctmsmis.mis_inv_unit.vvd_gkey,ctmsmis.mis_inv_unit.vsl_visit_dtls_ib_vyg,ctmsmis.mis_inv_unit.vsl_name,
					COUNT(ctmsmis.mis_exp_unit.gkey) AS exp_cont
					FROM ctmsmis.mis_exp_unit 
					INNER JOIN ctmsmis.mis_inv_unit ON ctmsmis.mis_inv_unit.gkey=ctmsmis.mis_exp_unit.gkey
					WHERE ctmsmis.mis_inv_unit.vsl_visit_dtls_ib_vyg is not null and snx=0 
					GROUP BY 1) as tmp where  mlo in ($idList)";
				}
				else
				{
					$query="SELECT * FROM ( SELECT ctmsmis.mis_inv_unit.vvd_gkey,ctmsmis.mis_inv_unit.vsl_visit_dtls_ib_vyg,ctmsmis.mis_inv_unit.vsl_name,
					COUNT(ctmsmis.mis_exp_unit.gkey) AS exp_cont
					FROM ctmsmis.mis_exp_unit 
					INNER JOIN ctmsmis.mis_inv_unit ON ctmsmis.mis_inv_unit.gkey=ctmsmis.mis_exp_unit.gkey
					WHERE ctmsmis.mis_inv_unit.vsl_visit_dtls_ib_vyg is not null and snx=0 
					GROUP BY 1) as tmp";
				}
			
			//$rtnVesselList = $this->bm->dataSelectDb2($query);
			//$data['rtnVesselList']=$rtnVesselList;
			$data['login_id']=$login_id;
				
			$data['title']="VESSEL LIST WITH STATUS...";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('viewVesselListImportStatus',$data);
			$this->load->view('jsAssets');
		}
	}

	//Table 'ctmsmis.mis_inv_unit' doesn't exist

	function viewVesselListImportSearchList()
	{
		$rot_num=trim($this->input->post('rot_num'));
		$login_id = $this->session->userdata('login_id');
		$org_Type_id = $this->session->userdata('org_Type_id');
		
		if($org_Type_id==1)
		{
			$query="SELECT * FROM ( SELECT ctmsmis.mis_inv_unit.vvd_gkey,ctmsmis.mis_inv_unit.vsl_visit_dtls_ib_vyg,ctmsmis.mis_inv_unit.vsl_name,
			COUNT(ctmsmis.mis_exp_unit.gkey) AS exp_cont
			FROM ctmsmis.mis_exp_unit 
			INNER JOIN ctmsmis.mis_inv_unit ON ctmsmis.mis_inv_unit.gkey=ctmsmis.mis_exp_unit.gkey
			WHERE ctmsmis.mis_inv_unit.vsl_visit_dtls_ib_vyg='$rot_num' AND snx=0 
			GROUP BY 1) AS tmp WHERE  mlo='$login_id' ";
		}
		else if($org_Type_id==57)
		{
			$idListQuery="SELECT r.id FROM ref_bizunit_scoped r       
			LEFT JOIN ( ref_agent_representation X       
			LEFT JOIN ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey )  ON r.gkey=X.bzu_gkey 
			WHERE Y.id = '$login_id'";
				$idListRes=$this->bm->dataSelect($idListQuery);
				$idList="";
				for($i=0;$i<count($idListRes);$i++){
					$idString="";
					$idString=$idListRes[$i]['ID'];

					if($i==(count($idListRes)-1)){
						$idList=$idList."'".$idString."'";
					}
					else{
						$idList=$idList."'".$idString."',";

					}

				}
			$query="SELECT * FROM ( SELECT ctmsmis.mis_inv_unit.vvd_gkey,ctmsmis.mis_inv_unit.vsl_visit_dtls_ib_vyg,ctmsmis.mis_inv_unit.vsl_name,
			COUNT(ctmsmis.mis_exp_unit.gkey) AS exp_cont
			FROM ctmsmis.mis_exp_unit 
			INNER JOIN ctmsmis.mis_inv_unit ON ctmsmis.mis_inv_unit.gkey=ctmsmis.mis_exp_unit.gkey
			WHERE ctmsmis.mis_inv_unit.vsl_visit_dtls_ib_vyg='$rot_num' and snx=0 
			GROUP BY 1) as tmp where mlo in ($idList)";
		}
		else
		{
			$query="SELECT * FROM ( SELECT ctmsmis.mis_inv_unit.vvd_gkey,ctmsmis.mis_inv_unit.vsl_visit_dtls_ib_vyg,ctmsmis.mis_inv_unit.vsl_name,
			COUNT(ctmsmis.mis_exp_unit.gkey) AS exp_cont
			FROM ctmsmis.mis_exp_unit 
			INNER JOIN ctmsmis.mis_inv_unit ON ctmsmis.mis_inv_unit.gkey=ctmsmis.mis_exp_unit.gkey
			WHERE ctmsmis.mis_inv_unit.vsl_visit_dtls_ib_vyg='$rot_num' and snx=0 
			GROUP BY 1) as tmp ";
		}
						
		//echo $data['voysNo'];
		$rtnVesselList = $this->bm->dataSelectDb2($query);
		$data['rtnVesselList']=$rtnVesselList;
		$data['login_id']=$login_id;
		$data['rot_num']=$rot_num;
		$data['title']="VESSEL LIST WITH STATUS IMPORT...";
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('viewVesselListImportStatus',$data);
		$this->load->view('jsAssets');
			
	}
	// FOR IMPORT APPS LIST END
	
	function vesselListWithStatusEntry()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$remarks=trim($this->input->post('remarks'));
			$vvd_gkey=trim($this->input->post('vvd_gkey'));
			$rot_num=trim($this->input->post('rot_num'));
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			$login_id = $this->session->userdata('login_id');
				
			if($remarks=="")
			{
				$data['msg']="<font color='red'><b>Blank Comment Can not be Saved.</b></font>";
			}
			else
			{
				$getBerthOpQry="SELECT 
									IFNULL(flex_string03,flex_string02) AS berthop
									FROM sparcsn4.vsl_vessel_visit_details WHERE vvd_gkey=$vvd_gkey";
				$rtnBerthOp = $this->bm->dataSelect($getBerthOpQry);
				$rslt_berthop=$rtnBerthOp[0]['berthop'];
				
				//$getOrgId="SELECT DISTINCT org_id FROM cchaportdb.users WHERE u_name LIKE '%$rslt_berthop%' AND org_Type_id=30";
				$getOrgId="SELECT id AS org_id FROM organization_profiles WHERE Organization_Name='$rslt_berthop' AND org_Type_id=30";
				$rtnOrgId = $this->bm->dataSelectDb1($getOrgId);
				$rslt_OrgId=$rtnOrgId[0]['org_id'];
				
				$existChkQry="select count(vvd_gkey) as vvd_gkey from ctmsmis.mis_exp_vvd where vvd_gkey=$vvd_gkey";
					
				$rtnExistQry = $this->bm->dataSelect($existChkQry);
			//	echo "yt : ".$rtnExistQry;
				$rslt_vvd_gkey=$rtnExistQry[0]['vvd_gkey'];
					
				if($rslt_vvd_gkey<1) // insert Data
				{
					
					
					$insertQuery="insert into ctmsmis.mis_exp_vvd (vvd_gkey,comments,comments_by,comments_time,user_ip,brth_org_id,pre_comments,pre_comments_time) values('$vvd_gkey','$remarks','$login_id',now(),'$ipaddr','$rslt_OrgId','$remarks',now())";
					$vesselStatusEntryStat=$this->bm->dataInsert($insertQuery);
					if($vesselStatusEntryStat==1)
					{
						$data['msg']="<font color='green'><b>Data Successfully Inserted.</b></font>";
					}
					else
					{
						$data['msg']="<font color='red'><b>Data Not Inserted.</b></font>";
					}
				}
				else // update Data
					{
						$updateQuery="update ctmsmis.mis_exp_vvd  set comments='$remarks',comments_by='$login_id',comments_time=now(),user_ip='$ipaddr',brth_org_id='$rslt_OrgId' where vvd_gkey='$vvd_gkey'";
						$vesselStatusUpdtStat=$this->bm->dataInsert($updateQuery);
						if($vesselStatusUpdtStat==1)
						{
							$data['msg']="<font color='green'><b>Data Successfully Updated.</b></font>";
						}
						else
						{
							$data['msg']="<font color='red'><b>Data Not Updated.</b></font>";
						}
					}
			}
					$org_Type_id = $this->session->userdata('org_Type_id');
					

				if($rot_num)
				{
					$query="SELECT sparcsn4.vsl_vessel_visit_details.vvd_gkey,sparcsn4.vsl_vessels.name,sparcsn4.vsl_vessel_visit_details.ib_vyg,sparcsn4.vsl_vessel_visit_details.ob_vyg,
					LEFT(sparcsn4.argo_carrier_visit.phase,2) AS phase_num,SUBSTR(sparcsn4.argo_carrier_visit.phase,3) AS phase_str,sparcsn4.argo_visit_details.eta,
					sparcsn4.argo_visit_details.etd,sparcsn4.argo_carrier_visit.ata,
					sparcsn4.argo_carrier_visit.atd,sparcsn4.ref_bizunit_scoped.id AS agent,
					IFNULL(sparcsn4.vsl_vessel_visit_details.flex_string02,sparcsn4.vsl_vessel_visit_details.flex_string03) AS berthop
					FROM sparcsn4.argo_carrier_visit
					INNER JOIN sparcsn4.argo_visit_details ON sparcsn4.argo_visit_details.gkey=sparcsn4.argo_carrier_visit.cvcvd_gkey
					INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessel_visit_details.vvd_gkey=sparcsn4.argo_visit_details.gkey
					INNER JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
					INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.vsl_vessel_visit_details.bizu_gkey
					WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg = '$rot_num'
					ORDER BY sparcsn4.argo_carrier_visit.phase";
				}
				else if($org_Type_id==57)
				{
					$query=" SELECT sparcsn4.vsl_vessel_visit_details.vvd_gkey,sparcsn4.vsl_vessels.name,sparcsn4.vsl_vessel_visit_details.ib_vyg,sparcsn4.vsl_vessel_visit_details.ob_vyg,
					LEFT(sparcsn4.argo_carrier_visit.phase,2) AS phase_num,SUBSTR(sparcsn4.argo_carrier_visit.phase,3) AS phase_str,sparcsn4.argo_visit_details.eta,
					sparcsn4.argo_visit_details.etd,sparcsn4.argo_carrier_visit.ata,
					sparcsn4.argo_carrier_visit.atd,sparcsn4.ref_bizunit_scoped.id AS agent,
					IFNULL(sparcsn4.vsl_vessel_visit_details.flex_string02,sparcsn4.vsl_vessel_visit_details.flex_string03) AS berthop
					FROM sparcsn4.argo_carrier_visit
					INNER JOIN sparcsn4.argo_visit_details ON sparcsn4.argo_visit_details.gkey=sparcsn4.argo_carrier_visit.cvcvd_gkey
					INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessel_visit_details.vvd_gkey=sparcsn4.argo_visit_details.gkey
					INNER JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
					INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.vsl_vessel_visit_details.bizu_gkey
					WHERE sparcsn4.argo_carrier_visit.phase IN ('20INBOUND','30ARRIVED','40WORKING','50COMPLETE','60DEPARTED') and sparcsn4.ref_bizunit_scoped.id in 
					(SELECT r.id FROM sparcsn4.ref_bizunit_scoped r       
						LEFT JOIN ( sparcsn4.ref_agent_representation X       
						LEFT JOIN sparcsn4.ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey )  ON r.gkey=X.bzu_gkey 
						WHERE Y.id = '$login_id'))
					ORDER BY sparcsn4.argo_carrier_visit.phase ";
				}
				else if($org_Type_id==1)
				{
					$query="SELECT sparcsn4.vsl_vessel_visit_details.vvd_gkey,sparcsn4.vsl_vessels.name,sparcsn4.vsl_vessel_visit_details.ib_vyg,sparcsn4.vsl_vessel_visit_details.ob_vyg,
					LEFT(sparcsn4.argo_carrier_visit.phase,2) AS phase_num,SUBSTR(sparcsn4.argo_carrier_visit.phase,3) AS phase_str,sparcsn4.argo_visit_details.eta,
					sparcsn4.argo_visit_details.etd,sparcsn4.argo_carrier_visit.ata,
					sparcsn4.argo_carrier_visit.atd,sparcsn4.ref_bizunit_scoped.id AS agent,
					IFNULL(sparcsn4.vsl_vessel_visit_details.flex_string02,sparcsn4.vsl_vessel_visit_details.flex_string03) AS berthop
					FROM sparcsn4.argo_carrier_visit
					INNER JOIN sparcsn4.argo_visit_details ON sparcsn4.argo_visit_details.gkey=sparcsn4.argo_carrier_visit.cvcvd_gkey
					INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessel_visit_details.vvd_gkey=sparcsn4.argo_visit_details.gkey
					INNER JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
					INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.vsl_vessel_visit_details.bizu_gkey
					WHERE sparcsn4.argo_carrier_visit.phase IN ('20INBOUND','30ARRIVED','40WORKING','50COMPLETE','60DEPARTED') and sparcsn4.ref_bizunit_scoped.id='$login_id'
					ORDER BY sparcsn4.argo_carrier_visit.phase";
				}
				else
				{
					$query=" SELECT sparcsn4.vsl_vessel_visit_details.vvd_gkey,sparcsn4.vsl_vessels.name,sparcsn4.vsl_vessel_visit_details.ib_vyg,sparcsn4.vsl_vessel_visit_details.ob_vyg,
					LEFT(sparcsn4.argo_carrier_visit.phase,2) AS phase_num,SUBSTR(sparcsn4.argo_carrier_visit.phase,3) AS phase_str,sparcsn4.argo_visit_details.eta,
					sparcsn4.argo_visit_details.etd,sparcsn4.argo_carrier_visit.ata,
					sparcsn4.argo_carrier_visit.atd,sparcsn4.ref_bizunit_scoped.id AS agent,
					IFNULL(sparcsn4.vsl_vessel_visit_details.flex_string02,sparcsn4.vsl_vessel_visit_details.flex_string03) AS berthop
					FROM sparcsn4.argo_carrier_visit
					INNER JOIN sparcsn4.argo_visit_details ON sparcsn4.argo_visit_details.gkey=sparcsn4.argo_carrier_visit.cvcvd_gkey
					INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessel_visit_details.vvd_gkey=sparcsn4.argo_visit_details.gkey
					INNER JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
					INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.vsl_vessel_visit_details.bizu_gkey
					WHERE sparcsn4.argo_carrier_visit.phase IN ('20INBOUND','30ARRIVED','40WORKING','50COMPLETE','60DEPARTED')
					ORDER BY sparcsn4.argo_carrier_visit.phase ";
				}

		//echo $data['voysNo'];

						//echo $data['voysNo'];
			$rtnVesselList = $this->bm->dataSelect($query);
			$data['rtnVesselList']=$rtnVesselList;			
			$data['rot_num']=$vvd_gkey;			
			$data['title']="VESSEL LIST WITH STATUS...";
			
			$data['login_id']=$login_id;
				
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('viewVesselListWithStatus',$data);
			$this->load->view('jsAssets');
		}
	}
	//////////// VESSEL LIST WITH STATUS END//////////////////
	
	
	//EXPORT EXCEL UPLOAD SAMPLE FORM (WITH LOADED DATA) start
	function myExportExcelUploadSampleForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="EXPORT EXCEL UPLOAD SAMPLE FORM...";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myExportExcelUploadSampleForm',$data);
			$this->load->view('jsAssets');
		}	
	}
		
	function myExportExcelUploadSampleReportViewPerform()
	{
		$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
		$this->load->model('ci_auth', 'bm', TRUE);
		$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
		$data['voysNo']=$getVoyNo;

		$this->load->view('myExportExcelUploadSampleReportViewPerform',$data);
		//$this->load->view('myclosebar');
	}
		/*function myExportExcelUploadSampleForm(){
			$session_id = $this->session->userdata('value');
			if($session_id!=$this->session->userdata('session_id'))
			{
				$this->logout();
			}
			else
			{
				$data['title']="EXPORT EXCEL UPLOAD SAMPLE FORM...";
				$this->load->view('header2');
				$this->load->view('myExportExcelUploadSampleForm',$data);
				$this->load->view('footer');
			}	
        }
		
		function myExportExcelUploadSampleReportViewPerform()
		{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$this->load->model('ci_auth', 'bm', TRUE);
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;

			$this->load->view('myExportExcelUploadSampleReportViewPerform',$data);
			$this->load->view('myclosebar');
		}*/
		
		//EXPORT EXCEL UPLOAD SAMPLE FORM (WITH LOADED DATA) end
		
		//EXPORT EXCEL UPLOAD SAMPLE (WITH LOADED DATA) start
		
	function myExportExcelUploadSample()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$login_id = $this->session->userdata('login_id');

		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="EXPORT EXCEL UPLOAD SAMPLE...";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myExportExcelUploadSample',$data);
			$this->load->view('jsAssets');
		}	
	}
				
	function myExportExcelUploadSampleReportView()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');

		if($this->uri->segment(3))
		{
			$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(3));
		}
		else
		{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
		}
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else{
			
			$this->load->model('ci_auth', 'bm', TRUE);
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$data['login_id']=$login_id;
			$this->load->view('cssAssets');
			$this->load->view('myExportExcelUploadSampleReportView',$data);
			$this->load->view('jsAssets');
		}	
			
			
	}
		
	//EXPORT EXCEL UPLOAD SAMPLE (WITH LOADED DATA) end
	///////////// POD,ISO CODE,YARD LIST START ///////////////
	function podListView()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$query="SELECT DISTINCT ref_unloc_code.id,ref_unloc_code.place_code,ref_unloc_code.place_name
					FROM ref_routing_point
					INNER JOIN ref_unloc_code ON ref_unloc_code.gkey=ref_routing_point.unloc_gkey
					ORDER BY ref_unloc_code.id";
			//echo $data['voysNo'];
			$rtnVesselList = $this->bm->dataSelect($query);
			$data['rtnVesselList']=$rtnVesselList;
			$data['listType'] = "new";

			$data['title']="POD LIST ...";
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('podListView',$data);
			$this->load->view('jsAssetsList');
		}
	}

	function podListViewSearchList()
	{
		$rot_num=trim($this->input->post('rot_num'));
				
		$query="SELECT DISTINCT ref_unloc_code.id,ref_unloc_code.place_code,ref_unloc_code.place_name
				FROM ref_routing_point
				INNER JOIN ref_unloc_code ON ref_unloc_code.gkey=ref_routing_point.unloc_gkey
				where place_code='$rot_num'
				ORDER BY ref_unloc_code.id";
		//echo $data['voysNo'];
		$rtnVesselList = $this->bm->dataSelect($query);
		$data['rtnVesselList']=$rtnVesselList;
		$data['listType'] = "search";
		$data['podCode'] = $rot_num;

		$data['title']="POD LIST ...";
		$this->load->view('cssAssetsList');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('podListView',$data);
		$this->load->view('jsAssetsList');
			
	}
	
	function yardListView()
	{
		$session_id = $this->session->userdata('value');
		if($session_id!=$this->session->userdata('session_id'))
		{
			$this->logout();
		}
		else
		{
			$query="select terminal,block,block_cpa from ctmsmis.yard_block order by terminal asc";
			//echo $data['voysNo'];
			$rtnVesselList = $this->bm->dataSelect($query);
			$data['rtnVesselList']=$rtnVesselList;
				
			$data['title']="YARD LIST ...";
			
			$data['listType']="new";
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('yardListView',$data);
			$this->load->view('jsAssetsList');
		}
	}

	function yardListViewSearchList()
	{
		$terminalName="";
		$terminal=trim($this->input->post('rot_num'));
				
		$query="select terminal,block,block_cpa from ctmsmis.yard_block where terminal='$terminal' order by terminal asc";
		//echo $data['voysNo'];
		$rtnVesselList = $this->bm->dataSelect($query);
		$data['rtnVesselList']=$rtnVesselList;
				
		$data['title']="YARD LIST ...";
		
		$data['listType']="search";
		$data['terminalName']=$terminal;
		
		$this->load->view('cssAssetsList');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('yardListView',$data);
		$this->load->view('jsAssetsList');
			
	}
	
	function isoCodeListView()
	{
		$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$query="SELECT DISTINCT cont_iso_type,cont_size,cont_height,cont_type FROM igm_detail_container";
			//echo $data['voysNo'];
			$rtnVesselList = $this->bm->dataSelectDb1($query);
			$data['rtnVesselList']=$rtnVesselList;
			$data['listType'] = "new";
			
			$data['title']="ISO CODE LIST ...";
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('isoCodeListView',$data);
			$this->load->view('jsAssetsList');
			
		}
	}

	function isoCodeListViewSearchList()
	{
		$isoType = "";
		$iso_type=trim($this->input->post('rot_num'));
				
		$query="SELECT DISTINCT cont_iso_type,cont_size,cont_height,cont_type FROM igm_detail_container where cont_iso_type='$iso_type'";
		//echo $data['voysNo'];
		$rtnVesselList = $this->bm->dataSelectDb1($query);
		$data['rtnVesselList']=$rtnVesselList;
		$data['isoType'] = $iso_type;
		$data['listType'] = "search";
		$data['title']="ISO CODE LIST ...";
		$this->load->view('cssAssetsList');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('isoCodeListView',$data);
		$this->load->view('jsAssetsList');
			
	}
	///////////// POD,ISO CODE,YARD LIST END ///////////////

	//Search Vessel List start
	function commentsSearchForVessel(){
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="SEARCH COMMENTS...";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('commentsSearchForVessel',$data);
			$this->load->view('jsAssets');
		}	
	}

	function commentsSearchForVesselDownloadView(){
		$login_id = $this->session->userdata('login_id');	
		$data['login_id']=$login_id;
			//$search_by = $this->input->post('search_by');
		$fromDt=$this->input->post('from_dt');
		$toDt=$this->input->post('to_dt');
		
		//$search_value=$this->input->post('search_value');
		$data['title']="Vessel List With Comments by Shipping Section </br> From ".$fromDt." To ".$toDt;
		//$data['rot']=$search_value;
		$data['fromDt']=$fromDt;
		$data['toDt']=$toDt;
			
		$this->load->view('cssAssets');
		$this->load->view('commentsSearchForVesselDownloadView',$data);
		$this->load->view('jsAssets');   
	}

	//Search Vessel List end
	//YARD WISE CONTAINER HANDLING REPORT START ////
	function yardWiseContainerHandlingRptForm(){
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{  
			$data['title']="YARD WISE CONTAINER RECEIVE REPORT...";
			//echo $data['title'];
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('yardWiseContainerHandlingFrm',$data);
			$this->load->view('jsAssets');
		}	
	}
			
	//container Handling Report
	function yardWiseContainerHandlingView()
	{
		$session_id = $this->session->userdata('value');

		if($this->input->post())
		{
			$fileOptions=$this->input->post('fileOptions');
			$searchBy=$this->input->post('searchBy');
			$rotNum=$this->input->post('rotNum');
			$yard_no=$this->input->post('yard_no');
			$block=$this->input->post('block');
			$fromdate=$this->input->post('fromdate');
			$fromTime=$this->input->post('fromTime');
			$todate=$this->input->post('todate');
			$toTime=$this->input->post('toTime');
		}
		
		$data['fileOptions']=$fileOptions;
		$data['searchBy']=$searchBy;
		$data['rotNum']=$rotNum;
		$data['yard_no']=$yard_no;
		$data['block']=$block;
		$data['fromdate']=$fromdate;
		$data['fromTime']=$fromTime;
		$data['todate']=$todate;
		$data['toTime']=$toTime;
		
		$this->load->view('cssAssets');
		$this->load->view('yardWiseContainerHandlingList',$data);
		$this->load->view('myclosebar');
		$this->load->view('jsAssets');
	}
	//YARD WISE CONTAINER HANDLING REPORT END ////
	
	//YARD WISE CONTAINER HANDLING REPORT START ////

	function yardWiseContainerHandlingDetailsRptForm(){
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{  
			$data['title']="CURRENT YARD LYING CONTAINER REPORT...";
			//echo $data['title'];

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('yardWiseContainerHandlingDetailsFrm',$data);
			$this->load->view('jsAssets');
		}	
	}
		
	//container Handling Report
	function yardWiseContainerHandlingDetailsView()
	{
		$session_id = $this->session->userdata('value');
		$login_id = $this->session->userdata('login_id');
		$org_Type_id = $this->session->userdata('org_Type_id');
		
		$data['login_id']=$login_id;
		$data['org_Type_id']=$org_Type_id;
			
		if($this->input->post())
		{
			$yard_no=$this->input->post('yard_no');
			$block=$this->input->post('block');							
		}
		
		$data['yard_no']=$yard_no;
		$data['block']=$block;
		
		$this->load->view('cssAssetsList');
		$this->load->view('yardWiseContainerHandlingDetailsList',$data);
		$this->load->view('jsAssetsList');
	}
		
	function yardWiseContainerDeliveryRptForm(){
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{  
			$data['title']="YARD WISE CONTAINER DELIVERY REPORT...";
			//echo $data['title'];

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('yardWiseContainerDeliveryFrm',$data);
			$this->load->view('jsAssets');
		}	
	}
			
	//container Handling Report
			
	function yardWiseContainerDeliveryView()
	{
		$session_id = $this->session->userdata('value');
		
		if($this->input->post())
		{
			$action = $this->input->post('show');
			$assDt=$this->input->post('assDt');
			$yard_no=$this->input->post('yard_no');
			$block=$this->input->post('block');
			$fromdate=$this->input->post('fromdate');
			$fromTime=$this->input->post('fromTime');
			$todate=$this->input->post('todate');
			$toTime=$this->input->post('toTime');
		}
		
		$data['action']=$action;
		$data['assDt']=$assDt;
		$data['yard_no']=$yard_no;
		$data['block']=$block;
		$data['fromdate']=$fromdate;
		$data['fromTime']=$fromTime;
		$data['todate']=$todate;
		$data['toTime']=$toTime;
		
		$this->load->view('cssAssets');
		$this->load->view('yardWiseContainerDeliveryList',$data);
		$this->load->view('myclosebar');
		$this->load->view('jsAssets');
	}
		
	//YARD WISE CONTAINER HANDLING REPORT END ////

	/*************************************************/
				
		//Search IGM Container start

	function searchIGMByContainer()
	{
		$flag=0;
		
		$data['title']="Search IGM Container...";
		$data['flag']=$flag;
		
		$this->load->view('cssAssetsList');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('searchIGMByContainer',$data);
		$this->load->view('jsAssetsList');
	}
		
	function searchIGMByContainerPerform()
	{
		$container=$this->input->post('container');
		$flag=1;
		
		$sql_container_search="SELECT DISTINCT cont_number,Import_Rotation_No,mlocode,cont_size,cont_height 
		FROM igm_detail_container
		INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id
		WHERE cont_number LIKE '$container%'";
		
		$rslt_container_search = $this->bm->dataSelectDb1($sql_container_search);
		
		$data['flag']=$flag;
		$data['title']="Search IGM Container...";
		$data['rslt_container_search']=$rslt_container_search;
		
		$this->load->view('cssAssetsList');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('searchIGMByContainer',$data);
		$this->load->view('jsAssetsList');
	}

	function uploadSignature()
	{
		$preRot=$this->input->post('rotNumber');
		$rot=str_replace('/','_',$preRot);
		$cont=$this->input->post('contNumber');
		//$user=$this->input->post('user');
		
		$upload_dir = FCPATH . 'resources/images/Signature/';  //implement this function yourself
		
		$img = $this->input->post('my_hidden');
		$img_ff = $this->input->post('my_hidden_ff');
		$img_cpa = $this->input->post('my_hidden_cpa');
		
						//echo "Image : ".$img;
						//echo "Rot : ".$rot;
						
		$imgBs = str_replace('data:image/png;base64,', '', $img);
		$imgRep = str_replace(' ', '+', $imgBs);
		$dataImg = base64_decode($imgRep);
		
		$imgBs_ff = str_replace('data:image/png;base64,', '', $img_ff);
		$imgRep_ff = str_replace(' ', '+', $imgBs_ff);
		$dataImg_ff = base64_decode($imgRep_ff);
		
		$imgBs_cpa = str_replace('data:image/png;base64,', '', $img_cpa);
		$imgRep_cpa = str_replace(' ', '+', $imgBs_cpa);
		$dataImg_cpa= base64_decode($imgRep_cpa);
		
		//echo "Data : ".$data;
		$sign_name="sign_".$rot."_".$cont."_bo.png";
		$file = $upload_dir.$sign_name;
		
		$sign_name_ff="sign_".$rot."_".$cont."_ff.png";
		$file_ff = $upload_dir.$sign_name_ff;
		
		$sign_name_cpa="sign_".$rot."_".$cont."_cpa.png";
		$file_cpa = $upload_dir.$sign_name_cpa;
				
		$str = "update shed_tally_info set signature_path_berth='$sign_name',signature_path_freight='$sign_name_ff',signature_path_cpa='$sign_name_cpa' where import_rotation='$preRot' and cont_number='$cont'";				
		//$data['str']=$str;
		$stat = $this->bm->dataInsertDB1($str);  //comment out to stop insertion
		if($stat==1)
		{
			//$data['stat']="1";
			$data['stat']="Image Successfully Uploaded";
			$success = file_put_contents($file, $dataImg);
			$success_ff = file_put_contents($file_ff, $dataImg_ff);
			$success_cpa = file_put_contents($file_cpa, $dataImg_cpa);
			
			require('ShedBillController.php');
			$test = new ShedBillController();
			$test->tallyReportPdf($preRot,$cont);
			
		}
		else
		{
			//$data['stat']="0";	
			$data['stat']="Image Successfully Not Uploaded";	
		}
		echo json_encode($data);
	}
	//Search IGM Container end
		
	//Container Search start
	function containerSearchForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$flag=0;
			$data['msg']="";
			$data['flag']=$flag;
			$data['title']="CONTAINER SEARCH...";
			$this->load->view('header5');
			$this->load->view('containerSearchForm',$data);
			$this->load->view('footer_1');
		}	
	}
		
	function containerSearchResult()
	{	
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$ddl_imp_cont_no=$this->input->post('ddl_imp_cont_no');
			$assignment=$this->input->post('assignment');
			$flag=1;
			
			if($assignment == "")
			{
				$data['title']="YARD WISE PROPOSED EMPTY AND EMPTY CONTAINER REPORT...";
				$data['msg6'] = "<font color='red' size='3'>Please Provide Date</font>";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('assignmentAllReportForm',$data);
				$this->load->view('jsAssets');
			}
			else
			{
				$sqlBl="select BL_No from igm_details inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id 
						where cont_number='$ddl_imp_cont_no' order by igm_detail_container.id desc";
				$rtnBlList = $this->bm->dataSelectDb1($sqlBl);
				$rtnBlNo= @$rtnBlList[0]['BL_No'];
				
				$sqlContainer="select igm_details.id,igm_detail_container.cont_gross_weight,igm_details.mlocode,
				left(igm_details.Description_of_Goods,20) AS Description_of_Goods,cont_number,igm_details.Import_Rotation_No,
				igm_details.BL_No,
				(select Vessel_Name from igm_masters 
				where igm_masters.id=igm_details.IGM_id) as vsl_name,
				igm_details.BL_No,
				cont_size,cont_height,off_dock_id,
				(select Organization_Name from organization_profiles where organization_profiles.id=igm_detail_container.off_dock_id) as offdock_name,
				cont_status,cont_seal_number,cont_iso_type 
				from igm_detail_container 
				inner join igm_details on igm_details.id=igm_detail_container.igm_detail_id 
				where igm_details.BL_No='$rtnBlNo'
				union
				select igm_details.id,igm_detail_container.cont_gross_weight,igm_details.mlocode,left(igm_details.Description_of_Goods,20) AS Description_of_Goods,igm_sup_detail_container.cont_number,igm_details.Import_Rotation_No,igm_details.BL_No,
				(select Vessel_Name from igm_masters 
				where igm_masters.id=igm_supplimentary_detail.igm_master_id) as vsl_name,igm_details.BL_No,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_height,igm_sup_detail_container.off_dock_id,
				(select Organization_Name 
				from organization_profiles where organization_profiles.id=igm_sup_detail_container.off_dock_id) as offdock_name,igm_sup_detail_container.cont_status,igm_sup_detail_container.cont_seal_number,igm_sup_detail_container.cont_iso_type 
				from igm_sup_detail_container 
				inner join igm_supplimentary_detail on igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id 
				inner join igm_details on igm_details.id=igm_supplimentary_detail.igm_detail_id
				inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
				where igm_supplimentary_detail.BL_No='$rtnBlNo'";
				
				$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
				$data['rtnContainerList']=$rtnContainerList;
				
				$data['title'] = "CONTAINER SEARCH";
				$data['assignment']=$assignment;
				$data['containerNo']=$ddl_imp_cont_no;
				$data['blNo']=@$ddl_imp_bl_no;
				$data['flag']=$flag;
			//	$data['title']="Container List";
			//	$this->load->view('header5');
				$this->load->view('cssAssets');
				$this->load->view('containerSearchResult',$data);
				$this->load->view('jsAssets');
			//	$this->load->view('footer_1');
			}
		}
	}
	//Container Search end

		/// Container Discharge By Apps Start ///////
	public function containerDischargeAppsForm()
	{


			$strQuery="SELECT ctmsmis.mis_exp_unit.gkey,mis_exp_unit.cont_id AS id,mis_exp_unit.rotation,mis_exp_unit.isoType AS iso,ctmsmis.mis_exp_unit.last_update,
			(CASE 
			WHEN mis_exp_unit.cont_size= '20' AND mis_exp_unit.cont_height = '86' AND mis_exp_unit.isoGroup NOT IN ('RS','RT','RE','UT','TN','TD','TG','PF','PC') THEN '2D'
			WHEN mis_exp_unit.cont_size = '40' AND mis_exp_unit.cont_height='86' AND mis_exp_unit.isoGroup NOT IN ('RS','RT','RE','UT','TN','TD','TG','PF','PC') THEN '4D'
			WHEN mis_exp_unit.cont_size = '40' AND mis_exp_unit.cont_height='96' AND mis_exp_unit.isoGroup NOT IN ('RS','RT','RE','UT','TN','TD','TG','PF','PC') THEN '4H'
			WHEN mis_exp_unit.cont_size = '45' AND mis_exp_unit.cont_height='96' AND mis_exp_unit.isoGroup NOT IN ('RS','RT','RE','UT','TN','TD','TG','PF','PC') THEN '45H'
			WHEN mis_exp_unit.cont_size = '20' AND mis_exp_unit.cont_height='86' AND mis_exp_unit.isoGroup IN ('RS','RT','RE') THEN '2RF'
			WHEN mis_exp_unit.cont_size = '40' AND mis_exp_unit.isoGroup IN ('RS','RT','RE') THEN '4RH'
			WHEN mis_exp_unit.cont_size = '20' AND mis_exp_unit.cont_height='86' AND mis_exp_unit.isoGroup IN ('UT') THEN '2OT'
			WHEN mis_exp_unit.cont_size = '40' AND mis_exp_unit.isoGroup IN ('UT') THEN '4OT'
			WHEN mis_exp_unit.cont_size = '20' AND mis_exp_unit.cont_height='86' AND mis_exp_unit.isoGroup IN ('PF','PC') THEN '2FR'
			WHEN mis_exp_unit.cont_size = '40' AND mis_exp_unit.isoGroup IN ('PF','PC') THEN '4FR'
			WHEN mis_exp_unit.cont_size = '20' AND mis_exp_unit.cont_height='86' AND mis_exp_unit.isoGroup IN ('TN','TD','TG') THEN '2TK'
			ELSE ''
			END
			) AS TYPE,
			mis_exp_unit.cont_mlo AS mlo,ctmsmis.mis_exp_unit.current_position,
			cont_status AS freight_kind,ctmsmis.mis_exp_unit.goods_and_ctr_wt_kg AS weight,ctmsmis.mis_exp_unit.coming_from AS coming_from,
			ctmsmis.mis_exp_unit.pod,ctmsmis.mis_exp_unit.stowage_pos,ctmsmis.mis_exp_unit.last_update,
			ctmsmis.mis_exp_unit.user_id
			FROM ctmsmis.mis_exp_unit 
			WHERE mis_exp_unit.snx_type=2 AND DATE(last_update)=CURDATE() ORDER BY last_update DESC";
        	$strResult = $this->bm->dataSelectDb2($strQuery);
		
			$j=0;
			$result;
			for($i=0;$i<count($strResult);$i++){
				$gkey="";
				$gkey=$strResult[$i]['gkey'];
				$strQuery2="SELECT ref_commodity.short_name,inv_goods.destination FROM inv_unit 
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				INNER JOIN inv_goods ON inv_goods.gkey=inv_unit.goods
				INNER JOIN ref_commodity ON ref_commodity.gkey=inv_goods.commodity_gkey
				WHERE inv_unit_fcy_visit.transit_state='S20_INBOUND' AND inv_unit.gkey='$gkey'";
				$strResult2 = $this->bm->dataSelect($strQuery2);
				if(count($strResult2 )>0){
					$result[$j]['gkey']=$strResult[$i]['gkey'];
					$result[$j]['id']=$strResult[$i]['id'];
					$result[$j]['rotation']=$strResult[$i]['rotation'];
					$result[$j]['iso']=$strResult[$i]['iso'];
					$result[$j]['TYPE']=$strResult[$i]['TYPE'];
					$result[$j]['mlo']=$strResult[$i]['mlo'];
					$result[$j]['current_position']=$strResult[$i]['current_position'];
					$result[$j]['freight_kind']=$strResult[$i]['freight_kind'];
					$result[$j]['weight']=$strResult[$i]['weight'];
					$result[$j]['coming_from']=$strResult[$i]['coming_from'];
					$result[$j]['stowage_pos']=$strResult[$i]['stowage_pos'];
					$result[$j]['last_update']=$strResult[$i]['last_update'];
					$result[$j]['user_id']=$strResult[$i]['user_id'];
					$result[$j]['short_name']=$strResult2[0]['SHORT_NAME'];
					$result[$j]['destination']=$strResult2[0]['DESTINATION'];
					
					$j++;
					

				}

			}
			
		
			$data['rtnAllList']=$result;
			//print_r($result);
			$data['title']="CONTAINER DISCHARGE LIST APPS...";
			//echo $data['title'];
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('containerDischargeAppsForm',$data);
			$this->load->view('jsAssetsList');
		//}	
	}


		public function containerDischargeAppsList()
	{
		
		$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
		$this->load->model('ci_auth', 'bm', TRUE);
		$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
		$data['voysNo']=$getVoyNo;
		
		$search_by = $this->input->post('search_by');
				
				
		if($search_by=="yard" and $ddl_imp_rot_no=="")
		{
			$search_value=$this->input->post('search_value');
			$fromdate=$this->input->post('fromdate');
			$todate=$this->input->post('todate');
			$data['title']="DISCHARGE CONTAINER FOR THE YARD ".$search_value;
			$data['yard']=$search_value;
			$data['search_by']=$search_by;
			//$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$data['fromdate']=$fromdate;
			$data['todate']=$todate;
		}
		if($search_by=="yard" and $ddl_imp_rot_no!="")
		{
			$search_value=$this->input->post('search_value');
			$fromdate=$this->input->post('fromdate');
			$todate=$this->input->post('todate');
			$data['title']="DISCHARGE CONTAINER FOR THE YARD ".$search_value;
			$data['yard']=$search_value;
			$data['search_by']=$search_by;
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$data['fromdate']=$fromdate;
			$data['todate']=$todate;
		}
		if($search_by=="all" and $ddl_imp_rot_no!="")
		{
			//$search_value=$this->input->post('search_value');
			$data['title']="DISCHARGE CONTAINER FOR THE ROTATION".$ddl_imp_rot_no;
			//$data['yard']=$search_value;
			$data['search_by']="all";
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
		}
		else if($search_by=="dateRange")
		{
			$fromdate=$this->input->post('fromdate');
			$todate=$this->input->post('todate');
			
			$data['title']="DISCHARGE CONTAINER FROM ".$fromdate." TO ".$todate;
			$data['fromdate']=$fromdate;
			$data['todate']=$todate;
			$data['search_by']=$search_by;
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
		}
		else if($search_by=="dateTime")
		{
			$fromdate=$this->input->post('fromdate');
			$todate=$this->input->post('todate');
			$fromTime=$this->input->post('fromTime');
			$toTime=$this->input->post('toTime');
			
			$data['title']="DISCHARGE CONTAINER FROM ".$fromdate." ".$fromTime." TO ".$todate." ".$toTime;
			$data['fromdate']=$fromdate;
			$data['todate']=$todate;
			$data['fromTime']=$fromTime;
			$data['toTime']=$toTime;
			$data['search_by']=$search_by;
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
		}
		else{
			//$stripping_date_from=$this->input->post('stripping_date_from');
			//$stripping_date_to=$this->input->post('stripping_date_to');
				
			//$search_value=$this->input->post('search_value');
			//$data['search_by']=$search_by;
			//$data['title']="CONTAINERS LIST From ".$stripping_date_from." To ".$stripping_date_to;
			//$data['stripping_date_from']=$stripping_date_from;
			//$data['stripping_date_to']=$stripping_date_to;
				}
		$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
		$this->load->view('containerDischargeAppsList',$data);
		//$this->load->view('myclosebar');
	}
		
	/// Container Discharge By Apps End ///////

	// Container Search By ROTATION APPS START/////
	public function containerSearchByRotationAppsForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="CONTAINER SEARCH BY ROTATION APPS..";
			//echo $data['title'];
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('containerSearchByRotationAppsForm',$data);
			$this->load->view('jsAssets');
		}
	}

	public function containerSearchByRotationAppsList()
	{
		$rotation = $this->input->post('rotation');
		$search_format = $this->input->post('options');
		if($search_format=="xl" or $search_format=="html")
		{
			$data['rotation']=$rotation;
			$data['title']="CONTAINER SEARCH BY APPS";
			$this->load->view('containerSearchByRotationAppsList',$data);
			//$this->load->view('myclosebar');
		}
		else{
			//load mPDF library
			$this->load->library('M_pdf');
			$pdf->use_kwt = true;
			//$this->data['search_by']=$search_by;
			$this->data['rotation']=$rotation;
			$this->data['title']="CONTAINER SEARCH BY APPS";
			//$this->data['toDt']=$toDt;
			$html=$this->load->view('containerSearchByRotationAppsList',$this->data, true);
			//this the the PDF filename that user will get to download
			$pdfFilePath ="containerSearchByRotationAppsList-".time()."-download.pdf";
			$pdf = $this->M_pdf->load();
			//$pdf->SetWatermarkText('CPA CTMS');
			$pdf->showWatermarkText = true;	
			$stylesheet = file_get_contents('resources/styles/test.css'); // external css
			$pdf->useSubstitutions = true; // optional - just as an example
			//$pdf->SetHeader($url . "\n\n" . 'Date {DATE j-m-Y}');  // optional - just as an example
			//echo "SheetAdd : ".$stylesheet;
			//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
			//$footerHtml='<pagefooter name="MyFooter1" content-left="{DATE j-m-Y}" content-center="{PAGENO}/{nbpg}" content-right="My document" footer-style="font-family: serif; font-size: 8pt; font-weight: bold; font-style: italic; color: #000000;" />';
			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);
			$pdf->Output($pdfFilePath, "I"); // For Show Pdf
				//load mPDF library
			
			}
		
	}
	// Container Search By ROTATION APPS END/////

	//MIS Assignment start
	function misAssignmentForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
			$title="MIS Assignment";
				
			$data['title']=$title;
			$this->load->view('header2');
			$this->load->view('misAssignmentForm',$data);
			$this->load->view('footer');
		}
	}
	
	function misAssignmentPerform()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
			$date=$this->input->post('date');
			$terminal=$this->input->post('terminal');		//CCT, NCT, GCB
			$yard=$this->input->post('yard');
			$assigntype=$this->input->post('assigntype');
			$filetype=$this->input->post('option');
			
			// 
			//$strCallProc = "CALL ctmsmis.update_assignment_type_new('$date')";
			//$this->bm->dataUpdate($strCallProc);
			
			if($date == "")
			{
				$data['title']="YARD WISE PROPOSED EMPTY AND EMPTY CONTAINER REPORT...";
				$data['msg5'] = "<font color='red' size='3'>Please Provide Date</font>";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('assignmentAllReportForm',$data);
				$this->load->view('jsAssets');
			}
			else
			{
				//pdf start
				if($filetype=="pdf")
				{
					
					$this->load->library('m_pdf');
					//$mpdf->use_kwt = true;
					
					if($terminal=="CCT" or $terminal=="NCT" or $terminal=="OFY")
					{
						// $sqlNCTCCT="SELECT DISTINCT mfdch_value,mfdch_desc 
						// FROM ctmsmis.tmp_assignment_type_new
						// WHERE date(flex_date01)='$date' and 
						// (CASE
						// 	WHEN
						// 		'$assigntype' !='ALLASSIGN'
						// 	THEN
						// 		Yard_No='$terminal' AND mfdch_value='$assigntype'
						// 	ELSE
						// 		Yard_No='$terminal'
						// END)
						// ORDER BY Yard_No,mfdch_value,flex_date01,line_no";

						$sqlNCTCCT="SELECT DISTINCT mfdch_value,mfdch_desc 
						FROM ctmsmis.tmp_oracle_assignment
						WHERE date(flex_date01)='$date' AND 
						(CASE
							WHEN
								'$assigntype' !='ALLASSIGN'
							THEN
								Yard_No='$terminal' AND mfdch_value='$assigntype'
							ELSE
								Yard_No='$terminal'
						END)
						ORDER BY Yard_No,mfdch_value,flex_date01,bl_no";
						
						/*
						if('$assigntype' !='ALLASSIGN')
							SELECT DISTINCT mfdch_value,mfdch_desc 
							FROM ctmsmis.tmp_assignment_type_new
							WHERE date(flex_date01)='$date' and Yard_No='$terminal' AND mfdch_value='$assigntype';
						else 
							SELECT DISTINCT mfdch_value,mfdch_desc 
							FROM ctmsmis.tmp_assignment_type_new
							WHERE date(flex_date01)='$date' and Yard_No='$terminal';
						*/
						
						$rsltNCTCCT=$this->bm->dataSelectDb2($sqlNCTCCT);
					
						// $this->data['date']=$date;
						// $this->data['terminal']=$terminal;
						// $this->data['rsltNCTCCT']=$rsltNCTCCT;

						$data['date']=$date;
						$data['terminal']=$terminal;
						$data['rsltNCTCCT']=$rsltNCTCCT;

						$this->load->view('cctnctReport',$data); 

						// $html=$this->load->view('cctnctReport',$this->data, true); 
						
						// $pdfFilePath ="cctnctReport-".time()."-download.pdf";

						// $pdf = $this->m_pdf->load();
						
						// //$pdf->SetWatermarkText('CPA CTMS');
						// $pdf->showWatermarkText = true;	
						// $stylesheet = file_get_contents('assets/stylesheets/cctnct.css'); 
						
						// // $pdf->AddPage('P', // L - landscape, P - portrait
						// // 	'', '', '', '',
						// // 	10, // margin_left
						// // 	10, // margin right
						// // 	10, // margin top
						// // 	10, // margin bottom
						// // 	5, // margin header
						// // 	10); // margin footer
							
						// $pdf->WriteHTML($stylesheet,1);
						// $pdf->WriteHTML($html,2);
							
						// $pdf->Output($pdfFilePath, "I"); // For Show Pdf
					}
				
					else if($terminal=="GCB")
					{
						// $sqlGCB="SELECT DISTINCT Block_No FROM ctmsmis.tmp_assignment_type_new
						// WHERE 
						// 	(CASE
						// 		WHEN
						// 			'$yard' !='ALLBLOCK'
						// 		THEN
						// 			(CASE
						// 				WHEN
						// 					'$assigntype' !='ALLASSIGN'
						// 				THEN
						// 					Yard_No='$terminal' AND Block_No='$yard' AND mfdch_value='$assigntype'
						// 				ELSE
						// 					Yard_No='$terminal' AND Block_No='$yard'
						// 			END)
						// 		ELSE
						// 			(CASE
						// 				WHEN
						// 					'$assigntype' !='ALLASSIGN'
						// 				THEN
						// 					Yard_No='$terminal' AND mfdch_value='$assigntype'
						// 				ELSE
						// 					Yard_No='$terminal'
						// 			END)
						// 	END)
						// 		ORDER BY Yard_No,Block_No,mfdch_value,flex_date01,line_no";

						$sqlGCB="SELECT DISTINCT Block_No FROM ctmsmis.tmp_oracle_assignment
						WHERE date(flex_date01)='$date' AND 
							(CASE
								WHEN
									'$yard' !='ALLBLOCK'
								THEN
									(CASE
										WHEN
											'$assigntype' !='ALLASSIGN'
										THEN
											Yard_No='$terminal' AND Block_No='$yard' AND mfdch_value='$assigntype'
										ELSE
											Yard_No='$terminal' AND Block_No='$yard'
									END)
								ELSE
									(CASE
										WHEN
											'$assigntype' !='ALLASSIGN'
										THEN
											Yard_No='$terminal' AND mfdch_value='$assigntype'
										ELSE
											Yard_No='$terminal'
									END)
							END)
								ORDER BY Yard_No,Block_No,mfdch_value,flex_date01,bl_no";
						//return;
						$rsltGCB=$this->bm->dataSelectDb2($sqlGCB);
						// $this->data['date']=$date;
						// $this->data['yard']=$yard;
						// $this->data['assigntype']=$assigntype;
						// $this->data['terminal']=$terminal;
						// $this->data['rsltGCB']=$rsltGCB;

						$data['date']=$date;
						$data['yard']=$yard;
						$data['assigntype']=$assigntype;
						$data['terminal']=$terminal;
						$data['rsltGCB']=$rsltGCB;
						

						$this->load->view('gcbReport',$data);

						//$this->load->library('m_pdf');
						// $html=$this->load->view('gcbReport',$this->data, true); //load the pdf_output.php by passing our data and get all data in $html varriable.
							
						// $pdfFilePath ="gcbReport-".time()."-download.pdf";

						// $pdf = $this->m_pdf->load();
						// $pdf->allow_charset_conversion = true;
						// $pdf->charset_in = 'iso-8859-4';
						// $stylesheet = file_get_contents('assets/stylesheets/test.css'); // external css
						// //	$pdf->useSubstitutions = true; // optional - just as an example
						
						// //$pdf->setFooter('Prepared By : '.$login_id.'|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
							
						// $pdf->WriteHTML($stylesheet,1);
						// $pdf->WriteHTML($html,2);
								
						// $pdf->Output($pdfFilePath, "I"); // For Show Pdf
					}
				}
				//pdf end
				
				//excel start
				else
				{
					if($terminal=="CCT" or $terminal=="NCT" or $terminal=="OFY")
					{
						// $sqlNCTCCT="SELECT DISTINCT mfdch_value,mfdch_desc 
						// FROM ctmsmis.tmp_assignment_type_new
						// WHERE date(flex_date01)='$date' and 
						// (CASE
						// 	WHEN
						// 		'$assigntype' !='ALLASSIGN'
						// 	THEN
						// 		Yard_No='$terminal' AND mfdch_value='$assigntype'
						// 	ELSE
						// 		Yard_No='$terminal'
						// END)
						// ORDER BY Yard_No,mfdch_value,flex_date01,line_no";

						$sqlNCTCCT="SELECT DISTINCT mfdch_value,mfdch_desc 
						FROM ctmsmis.tmp_oracle_assignment
						WHERE date(flex_date01)='$date' AND 
						(CASE
							WHEN
								'$assigntype' !='ALLASSIGN'
							THEN
								Yard_No='$terminal' AND mfdch_value='$assigntype'
							ELSE
								Yard_No='$terminal'
						END)
						ORDER BY Yard_No,mfdch_value,flex_date01,bl_no";
						
						$rsltNCTCCT=$this->bm->dataSelectDb2($sqlNCTCCT);
					
						$data['date']=$date;
						$data['terminal']=$terminal;
						$data['rsltNCTCCT']=$rsltNCTCCT;

						// $this->load->view('cssAssets');
						$this->load->view('cctnctExcel',$data);
						// $this->load->view('jsAssets');
					}
					
					else if($terminal=="GCB")
					{
						// $sqlGCB="SELECT DISTINCT Block_No FROM ctmsmis.tmp_oracle_assignment
						// WHERE 
						// 	(CASE
						// 		WHEN
						// 			'$yard' !='ALLBLOCK'
						// 		THEN
						// 			(CASE
						// 				WHEN
						// 					'$assigntype' !='ALLASSIGN'
						// 				THEN
						// 					Yard_No='$terminal' AND Block_No='$yard' AND mfdch_value='$assigntype'
						// 				ELSE
						// 					Yard_No='$terminal' AND Block_No='$yard'
						// 			END)
						// 		ELSE
						// 			(CASE
						// 				WHEN
						// 					'$assigntype' !='ALLASSIGN'
						// 				THEN
						// 					Yard_No='$terminal' AND mfdch_value='$assigntype'
						// 				ELSE
						// 					Yard_No='$terminal'
						// 			END)
						// 	END)
						// 		ORDER BY Yard_No,Block_No,mfdch_value,flex_date01";

						$sqlGCB="SELECT DISTINCT Block_No FROM ctmsmis.tmp_oracle_assignment
						WHERE date(flex_date01)='$date' AND 
							(CASE
								WHEN
									'$yard' !='ALLBLOCK'
								THEN
									(CASE
										WHEN
											'$assigntype' !='ALLASSIGN'
										THEN
											Yard_No='$terminal' AND Block_No='$yard' AND mfdch_value='$assigntype'
										ELSE
											Yard_No='$terminal' AND Block_No='$yard'
									END)
								ELSE
									(CASE
										WHEN
											'$assigntype' !='ALLASSIGN'
										THEN
											Yard_No='$terminal' AND mfdch_value='$assigntype'
										ELSE
											Yard_No='$terminal'
									END)
							END)
								ORDER BY Yard_No,Block_No,mfdch_value,flex_date01,bl_no";

						//return;
						$rsltGCB=$this->bm->dataSelectDb2($sqlGCB);
					
						$data['date']=$date;
						$data['yard']=$yard;
						$data['assigntype']=$assigntype;
						$data['terminal']=$terminal;
						$data['rsltGCB']=$rsltGCB;

						// $this->load->view('cssAssets');
						$this->load->view('gcbExcel',$data);
						// $this->load->view('jsAssets');  
					}
				}
				//excel end
			}
		}
	}
	//MIS Assignment end

	/// Last 24 Hour ER Position Start ///////
	public function last24HoursERForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="LAST 24 HOURS 20' AND 40' EIR POSITION";
			//echo $data['title'];
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('last24HoursERForm',$data);
			$this->load->view('jsAssets');
		}	
	}

	public function last24HoursERList()
	{
		$search_by = $this->input->post('er_date');
		$search_yard = $this->input->post('search_yard');
		$search_shift = $this->input->post('search_shift');
		if($search_shift=="all")
		{
			$data['fromTime']="08:30:00";
			$data['toTime']="08:30:00";
		}
		else if($search_shift=="A")
		{
			$data['fromTime']="08:30:01";
			$data['toTime']="16:30:00";
		}
		else if($search_shift=="B")
		{
			$data['fromTime']="16:30:01";
			$data['toTime']="00:30:00";
		}
		else if($search_shift=="C")
		{
			$data['fromTime']="00:30:01";
			$data['toTime']="08:30:00";
		}
		$data['title']="LAST 24 HOURS 20' AND 40' EIR POSITION";
		
		$data['search_by']=$search_by;
		$data['search_yard']=$search_yard;
		$data['search_shift']=$search_shift;
		$this->load->view('cssAssets');
		$this->load->view('last24HoursERList',$data);
		$this->load->view('jsAssets');
		$this->load->view('myclosebar');
	}
	/// Last 24 Hour ER Position End ///////

	/// OffDock Removal Position Start ///////
	public function offDockRemovalPositionForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="OFFDOCK REMOVAL POSITION FROM YARD TO DEPOT";
			//echo $data['title'];

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('offDockRemovalPositionForm',$data);
			$this->load->view('jsAssets');
		}	
	}

	public function offDockRemovalPositionList()
	{
		$search_by = $this->input->post('er_date');
		$search_shift = $this->input->post('search_shift');
		$terminal = $this->input->post('terminal');
		$search_yard = $this->input->post('search_yard');
		if($search_shift=="all")
		{
			$data['fromTime']="00:00:00";
			$data['toTime']="23:59:59";
		}
		else if($search_shift=="A")
		{
			$data['fromTime']="08:00:01";
			$data['toTime']="16:00:00";
		}
		else if($search_shift=="B")
		{
			$data['fromTime']="16:00:01";
			$data['toTime']="23:59:59";
		}
		else if($search_shift=="C")
		{
			$data['fromTime']="00:00:00";
			$data['toTime']="08:00:00";
		}
		
		$data['title']="OFFDOCK REMOVAL POSITION FROM ".$search_yard." YARD TO DEPOT";
		
		$data['search_by']=$search_by;
		$data['terminal']=$terminal;
		$data['search_yard']=$search_yard;
		$data['search_shift']=$search_shift;

		$this->load->view('cssAssets');
		$this->load->view('offDockRemovalPositionList',$data);
		$this->load->view('myclosebar');
		$this->load->view('jsAssets');
	}

	/// Last 24 Hour ER Position End ///////
		
	public function appraiseReSlotLocForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="APPRAISE RE-SLOT LOCATION...";
			//echo $data['title'];
			$this->load->view('header2');
			$this->load->view('appraiseReSlotLocForm',$data);
			$this->load->view('footer');
		}	
	}
		
	//appraisementRegister
	// function appraisementRegisterPerform()
	// {
	// 	$session_id = $this->session->userdata('value');
	// 	$LoginStat = $this->session->userdata('LoginStat');
		
	// 	if($LoginStat!="yes")
	// 	{
	// 		$this->logout();	
	// 	}
	// 	else
	// 	{
	// 		$this->load->library('m_pdf');
	// 		//$mpdf->use_kwt = true;
			
	// 	/* 	$date=$this->input->post('date');
	// 		$terminal=$this->input->post('terminal');
	// 		$block=$this->input->post('block');
	// 		$assigntype=$this->input->post('assigntype'); */
			
	// 		$date=$this->input->post('regdate');
	// 		$terminal=$this->input->post('regterminal');		//CCT, NCT, GCB
	// 		$yard=$this->input->post('regblock');
	// 		$assigntype=$this->input->post('regassigntype');
	// 	//	$filetype=$this->input->post('option');
			
	// 		// $strCallProc = "CALL ctmsmis.update_assignment_type_new('$date')";
	// 		// $this->bm->dataUpdate($strCallProc);
			
	// 		$this->load->library('m_pdf');
	// 		//$mpdf->use_kwt = true;
				
	// 		if($terminal=="CCT" or $terminal=="NCT")
	// 		{
	// 		//	echo "ok";
	// 			$sqlNCTCCT="SELECT DISTINCT mfdch_value,mfdch_desc 
	// 			FROM ctmsmis.tmp_assignment_type_new
	// 			WHERE date(flex_date01)='$date' and 
	// 			(CASE
	// 				WHEN
	// 					'$assigntype' !='ALLASSIGN'
	// 				THEN
	// 					Yard_No='$terminal' AND mfdch_value='$assigntype'
	// 				ELSE
	// 					Yard_No='$terminal'
	// 			END)
	// 			ORDER BY Yard_No,mfdch_value,flex_date01,line_no";
					
	// 			$rsltNCTCCT=$this->bm->dataSelect($sqlNCTCCT);
				
	// 			$this->data['date']=$date;
	// 			$this->data['terminal']=$terminal;
	// 			$this->data['rsltNCTCCT']=$rsltNCTCCT;

	// 			$html=$this->load->view('cctnctReportAppraise',$this->data, true); 
						
	// 			$pdfFilePath ="cctnctReportAppraise.pdf";

	// 			$pdf = $this->m_pdf->load();
	// 			//$pdf->SetWatermarkText('CPA CTMS');
	// 			$pdf->showWatermarkText = true;	
	// 			//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
	// 			$stylesheet = file_get_contents('resources/styles/cctnct.css'); 
				
	// 			// $pdf->AddPage('P', // L - landscape, P - portrait
	// 			// 		'', '', '', '',
	// 			// 		10, // margin_left
	// 			// 		10, // margin right
	// 			// 		10, // margin top
	// 			// 		10, // margin bottom
	// 			// 		5, // margin header
	// 			// 		10); // margin footer
						
	// 			$pdf->WriteHTML($stylesheet,1);
	// 			$pdf->WriteHTML($html,2);
							
	// 			$pdf->Output($pdfFilePath, "I"); // For Show Pdf
	// 		}
	// 		else if($terminal=="GCB")
	// 		{
	// 			//$this->load->library('m_pdf');
	// 			//$mpdf->use_kwt = true;
				
	// 			$cond="";
	// 			$date=$this->input->post('regdate');
	// 			$block=$this->input->post('regblock');
	// 			$assigntype=$this->input->post('regassigntype');
				
	// 			if($assigntype!="ALLASSIGN")
	// 			{
	// 				$sql_assignment="SELECT DISTINCT mfdch_value,mfdch_desc 
	// 							FROM ctmsmis.tmp_assignment_type_new 
	// 							WHERE date(flex_date01)='$date' and Block_No='$block' AND mfdch_value='$assigntype'";
	// 			}
	// 			else
	// 			{
	// 				$sql_assignment="SELECT DISTINCT mfdch_value,mfdch_desc 
	// 						FROM ctmsmis.tmp_assignment_type_new
	// 						WHERE date(flex_date01)='$date' and Block_No='$block'";
	// 			}
							
	// 			$rslt_assignment=$this->bm->dataSelect($sql_assignment);
				
	// 			$this->data['date']=$date;
	// 			$this->data['block']=$block;
	// 			$this->data['terminal']=$terminal;
	// 			//	$this->data['assigntype']=$assigntype;
				
	// 			//	$this->data['rslt_appraisement_register']=$rslt_appraisement_register;
	// 			$this->data['rslt_assignment']=$rslt_assignment;

	// 			$html=$this->load->view('gcbReportAppraise',$this->data, true); 
						
	// 			$pdfFilePath ="gcbReportAppraise.pdf";

	// 			$pdf = $this->m_pdf->load();
	// 			//$pdf->SetWatermarkText('CPA CTMS');
	// 			$pdf->showWatermarkText = true;	
	// 			//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
	// 			$stylesheet = file_get_contents('resources/styles/cctnct.css'); 
					
	// 			// $pdf->AddPage('P', // L - landscape, P - portrait
	// 			// 		'', '', '', '',
	// 			// 		10, // margin_left
	// 			// 		10, // margin right
	// 			// 		10, // margin top
	// 			// 		10, // margin bottom
	// 			// 		5, // margin header
	// 			// 		10); // margin footer
						
	// 			$pdf->WriteHTML($stylesheet,1);
	// 			$pdf->WriteHTML($html,2);
							
	// 			$pdf->Output($pdfFilePath, "I"); // For Show Pdf
	// 		}
	// 	}
	// }


	function appraisementRegisterPerform()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
			$this->load->library('m_pdf');
			//$mpdf->use_kwt = true;
			
		/* 	$date=$this->input->post('date');
			$terminal=$this->input->post('terminal');
			$block=$this->input->post('block');
			$assigntype=$this->input->post('assigntype'); */
			
			$date=$this->input->post('regdate');

			if($date == "")
			{
				$data['title']="YARD WISE PROPOSED EMPTY AND EMPTY CONTAINER REPORT...";
				$data['msg4'] = "<font color='red' size='3'>Please Provide Date</font>";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('assignmentAllReportForm',$data);
				$this->load->view('jsAssets');
			}
			else
			{
				$terminal=$this->input->post('regterminal');		//CCT, NCT, GCB
				$yard=$this->input->post('regblock');
				$assigntype=$this->input->post('regassigntype');
			//	$filetype=$this->input->post('option');
				
				//$strCallProc = "CALL ctmsmis.update_assignment_type_new('$date')";
				//$this->bm->dataUpdate($strCallProc);
				
				$this->load->library('m_pdf');
				//$mpdf->use_kwt = true;
					
				if($terminal=="CCT" or $terminal=="NCT")
				{
				//	echo "ok";
					// $sqlNCTCCT="SELECT DISTINCT mfdch_value,mfdch_desc 
					// FROM ctmsmis.tmp_assignment_type_new
					// WHERE date(flex_date01)='$date' and 
					// (CASE
					// 	WHEN
					// 		'$assigntype' !='ALLASSIGN'
					// 	THEN
					// 		Yard_No='$terminal' AND mfdch_value='$assigntype'
					// 	ELSE
					// 		Yard_No='$terminal'
					// END)
					// ORDER BY Yard_No,mfdch_value,flex_date01,line_no";
					if($assigntype !='ALLASSIGN'){
						$sqlNCTCCT = "SELECT DISTINCT mfdch_value,mfdch_desc FROM ctmsmis.tmp_oracle_assignment WHERE assignmentDate = '$date' AND 
						Yard_No='$terminal' AND mfdch_value='$assigntype'
						ORDER BY Yard_No,mfdch_value,flex_date01,bl_no";
					}else{
						$sqlNCTCCT = "SELECT DISTINCT mfdch_value,mfdch_desc FROM ctmsmis.tmp_oracle_assignment WHERE assignmentDate = '$date' AND 
						Yard_No='$terminal'
						ORDER BY Yard_No,mfdch_value,flex_date01,bl_no";
					}

					$rsltNCTCCT=$this->bm->dataSelectDb2($sqlNCTCCT);

					$this->data['date']=$date;
					$this->data['terminal']=$terminal;
					$this->data['rsltNCTCCT']=$rsltNCTCCT;

					$html=$this->load->view('cctnctReportAppraise',$this->data, true); 
							
					$pdfFilePath ="cctnctReportAppraise.pdf";

					$pdf = $this->m_pdf->load();
					//$pdf->SetWatermarkText('CPA CTMS');
					$pdf->showWatermarkText = true;	
					//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
					$stylesheet = file_get_contents('resources/styles/cctnct.css'); 
					
					// $pdf->AddPage('P', // L - landscape, P - portrait
					// 		'', '', '', '',
					// 		10, // margin_left
					// 		10, // margin right
					// 		10, // margin top
					// 		10, // margin bottom
					// 		5, // margin header
					// 		10); // margin footer
							
					$pdf->WriteHTML($stylesheet,1);
					$pdf->WriteHTML($html,2);
								
					$pdf->Output($pdfFilePath, "I"); // For Show Pdf
				}
				
				else if($terminal=="GCB")
				{
					//$this->load->library('m_pdf');
					//$mpdf->use_kwt = true;
					
					$cond="";
					$date=$this->input->post('regdate');
					$block=$this->input->post('regblock');
					$assigntype=$this->input->post('regassigntype');
					
			//--------------if tmp_oracle_assignment block history found, then below this comment out------------------------
				
				/* 	if($assigntype != "ALLASSIGN")
					{

						if($block != "ALLBLOCK"){
							$sql_assignment="SELECT DISTINCT mfdch_value,mfdch_desc 
							FROM ctmsmis.tmp_oracle_assignment 
							WHERE date(flex_date01)='$date' AND Block_No='$block' AND Yard_No = 'GCB' AND mfdch_value='$assigntype'";
						}
						else
						{
							$sql_assignment="SELECT DISTINCT mfdch_value,mfdch_desc 
							FROM ctmsmis.tmp_oracle_assignment 
							WHERE date(flex_date01)='$date' AND Yard_No = 'GCB' AND mfdch_value='$assigntype'";
						}
						
					}
					else
					{

						if($block != "ALLBLOCK"){
							$sql_assignment="SELECT DISTINCT mfdch_value,mfdch_desc 
							FROM ctmsmis.tmp_oracle_assignment 
							WHERE date(flex_date01)='$date' AND Yard_No = 'GCB' AND Block_No='$block'";
						}
						else
						{
							$sql_assignment="SELECT DISTINCT mfdch_value,mfdch_desc 
							FROM ctmsmis.tmp_oracle_assignment 
							WHERE date(flex_date01)='$date' AND Yard_No = 'GCB'";
						}

					} */
							
					if($assigntype!="ALLASSIGN")
					{
						$sql_assignment="SELECT DISTINCT mfdch_value,mfdch_desc 
									FROM ctmsmis.tmp_oracle_assignment 
									WHERE date(flex_date01)='$date' AND mfdch_value='$assigntype'";
					}
					else
					{
						$sql_assignment="SELECT DISTINCT mfdch_value,mfdch_desc 
								FROM ctmsmis.tmp_oracle_assignment
								WHERE date(flex_date01)='$date'";
					}	
					
					$rslt_assignment=$this->bm->dataSelectDb2($sql_assignment);
					
					$this->data['date']=$date;
					$this->data['block']=$block;
					$this->data['terminal']=$terminal;
					//	$this->data['assigntype']=$assigntype;
					
					//	$this->data['rslt_appraisement_register']=$rslt_appraisement_register;
					$this->data['rslt_assignment']=$rslt_assignment;

					$html=$this->load->view('gcbReportAppraise',$this->data, true); 
							
					$pdfFilePath ="gcbReportAppraise.pdf";

					$pdf = $this->m_pdf->load();
					//$pdf->SetWatermarkText('CPA CTMS');
					$pdf->showWatermarkText = true;	
					//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
					$stylesheet = file_get_contents('resources/styles/cctnct.css'); 
						
					// $pdf->AddPage('P', // L - landscape, P - portrait
					// 		'', '', '', '',
					// 		10, // margin_left
					// 		10, // margin right
					// 		10, // margin top
					// 		10, // margin bottom
					// 		5, // margin header
					// 		10); // margin footer
							
					$pdf->WriteHTML($stylesheet,1);
					$pdf->WriteHTML($html,2);
								
					$pdf->Output($pdfFilePath, "I"); // For Show Pdf
				}
			}
		}
	}



	//CONTAINER POSITION ENTRY START ////
	public function containerPositionEntryForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="CONTAINER POSITION ENTRY...";
			$data['msg']="";
			//echo $data['title'];
			$searchQry="select id,cont_number,rotation,cont_size,cont_height,cont_status,position,trailer_no from ctmsmis.container_move_position where solve_stat=0 order by id desc";
			$rtnSearchList = $this->bm->dataSelectDb2($searchQry);
			$data['rtnSearchList']=$rtnSearchList;

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('containerPositionEntryForm',$data);
			$this->load->view('jsAssets');
		}	
	}
		
	public function containerPositionToDB()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			$login_id = $this->session->userdata('login_id');
			
			$cont_no = $this->input->post('cont_no');
			$cont_position = $this->input->post('cont_position');
			$cont_size_hd = $this->input->post('cont_size_hd');
			$cont_height_hd = $this->input->post('cont_height_hd');
			$cont_status_hd = $this->input->post('cont_status_hd');
			$cont_rotation_hd = $this->input->post('cont_rotation_hd');
			$trailer_no = $this->input->post('trailer_no');
			
			$insertQuery="insert into ctmsmis.container_move_position (cont_number,rotation,cont_size,cont_height,cont_status,
						position,entry_date,user,ip_address,trailer_no) 
						values ('$cont_no','$cont_rotation_hd','$cont_size_hd','$cont_height_hd','$cont_status_hd','$cont_position',now(),'$login_id','$ipaddr','$trailer_no')
						";
			$vesselStatusEntryStat=$this->bm->dataInsertDb2($insertQuery);
			if($vesselStatusEntryStat==1)
			{
				$data['msg']="<font color='green'><b>Data Successfully Inserted.</b></font>";
				
				
			}
			else
			{
				$data['msg']="<font color='red'><b>Data Not Inserted.</b></font>";
			}
			$searchQry="select id,cont_number,rotation,cont_size,cont_height,cont_status,position,trailer_no from ctmsmis.container_move_position where solve_stat=0 order by id desc";
			$rtnSearchList = $this->bm->dataSelectDb2($searchQry);
			$data['rtnSearchList']=$rtnSearchList;
			$data['title']="CONTAINER POSITION ENTRY...";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('containerPositionEntryForm',$data);
			$this->load->view('jsAssets');
		}
	}

	
	public function containerPositionDelete()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			$login_id = $this->session->userdata('login_id');
			$cont_move_id = $this->input->post('cont_move_id');
			//echo "ID : ".$cont_move_id;
			$deleteQuery="delete from ctmsmis.container_move_position where id= $cont_move_id";
			$containerPositionDelStat=$this->bm->dataInsertDb2($deleteQuery);
			if($containerPositionDelStat==1)
			{
				$data['msg']="<font color='green'><b>Position Successfully Deleted.</b></font>";
			}
			else
			{
				$data['msg']="<font color='red'><b>Position Not Deleted.</b></font>";
			}
			$searchQry="select id,cont_number,rotation,cont_size,cont_height,cont_status,position,trailer_no from ctmsmis.container_move_position where solve_stat=0 order by id desc";
			$rtnSearchList = $this->bm->dataSelectDb2($searchQry);
			$data['rtnSearchList']=$rtnSearchList;
			$data['title']="CONTAINER POSITION ENTRY...";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('containerPositionEntryForm',$data);
			$this->load->view('jsAssets');
		}
		
	}
	//CONTAINER POSITION ENTRY END ////
	
	
	function rotationWiseContainerPosition()	
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="Rotation Wise Container Position..";
			$data['msg']="";
			
			$searchQry="select id,cont_number,rotation,cont_size,cont_height,cont_status,position,trailer_no from ctmsmis.container_move_position where solve_stat=0 order by id desc";
			$rtnSearchList = $this->bm->dataSelectDb2($searchQry);
			$data['rtnSearchList']=$rtnSearchList;
				
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('rotationWiseContainerPosition',$data);
			$this->load->view('jsAssets');
		}	
	}
	
	
	
	function rotationWiseContainerPositionView()		
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$rotNo=$this->input->post('rotNo');
			
			$data['title']="Rotation: $rotNo Container Position..";
			$data['msg']="";
			$searchQry="select id,cont_number,rotation,cont_size,cont_height,cont_status,position,trailer_no from ctmsmis.container_move_position where rotation='$rotNo' and solve_stat=0 order by id desc";
			$rtnSearchList = $this->bm->dataSelectDb2($searchQry);
			$data['rtnSearchList']=$rtnSearchList;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('rotationWiseContainerPosition',$data);
			$this->load->view('jsAssets');
		}	
	}

	public function containerPositionSolveUpdate()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			$login_id = $this->session->userdata('login_id');
			$cont_move_id = $this->input->post('cont_move_id');
			//echo "ID : ".$cont_move_id;
			$updateQuery="update ctmsmis.container_move_position set solve_stat=1 where id= $cont_move_id";
			$containerPositionUpdtStat=$this->bm->dataInsert($updateQuery);
			if($containerPositionUpdtStat==1)
			{
				$data['msg']="<font color='green'><b>Container Position Successfully Solved.</b></font>";
			}
			else
			{
				$data['msg']="<font color='red'><b>Container Position Not Solved.</b></font>";
			}
			$searchQry="select id,cont_number,rotation,cont_size,cont_height,cont_status,position,trailer_no from ctmsmis.container_move_position where solve_stat=0 order by id desc";
			$rtnSearchList = $this->bm->dataSelect($searchQry);
			$data['rtnSearchList']=$rtnSearchList;
			$data['title']="Rotation Wise Container Position..";
			$this->load->view('header2');
			$this->load->view('rotationWiseContainerPosition',$data);
			$this->load->view('footer');
		}
		
	}
	// Container Operation Report Start //
	public function containerOperationReportForm()			// 2020-06-09
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="CONTAINER OPERATION REPORT";	
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('containerOperationReportForm',$data);
			$this->load->view('jsAssets');
		}	
	}
	
	public function containerOperationReportList()			// 2020-06-09
	{
		$searchDt = $this->input->post('searchDt');
		$cont_position = $this->input->post('cont_position');
		$search_format = $this->input->post('options');
					
		if($search_format=="xl" or $search_format=="html")
		{				
			$data['searchDt']=$searchDt;
			$data['cont_position']=$cont_position;
			$data['title']="Container Operation Report";
			$this->load->view('containerOperationReportList',$data);
			$this->load->view('myclosebar');
		}
		else
		{	
			$this->load->library('m_pdf');
			$pdf->use_kwt = true;
			$this->data['searchDt']=$searchDt;
			$this->data['cont_position']=$cont_position;
			$this->data['title']="Container Operation Report";
			$html=$this->load->view('containerOperationReportList',$this->data, true);
	
			$pdfFilePath ="containerOperationReportList-".time()."-download.pdf";
			$pdf = $this->m_pdf->load();
			//$pdf->SetWatermarkText('CPA CTMS');
			$pdf->showWatermarkText = true;	
			$stylesheet = file_get_contents('resources/styles/test.css'); 
			$pdf->useSubstitutions = true; 
		
			$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
		
			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);
			$pdf->Output($pdfFilePath, "I"); 
		}
	}
	// Container Operation Report End //

	// Container Operation YardLying START //	
	function containerOperationYardLyingList(){

		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{

			$this->load->view('containerOperationYardLyingList',$data);
			$this->load->view('myclosebar');
		}
	}
	// Container Operation YardLying END //
	
	//User edit or delete start
/*
	function userList()				// 2020-06-03
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
			$org_Type_id = $this->session->userdata('org_Type_id');
			if($org_Type_id=='66')
			{
				$sql_user_num="select count(*) as rtnValue from users  WHERE users.org_Type_id='66'";
			}
			else
			{
				$sql_user_num="select count(*) as rtnValue from users";
			}					
			
			if($org_Type_id=='66')
			{
				$sql_user_list="select users.id,login_id,u_name,Organization_Name,image_path
				from users
				left join organization_profiles on organization_profiles.id=users.org_id WHERE users.org_Type_id='66'";
			}
			else
			{
				$sql_user_list="select users.id,login_id,u_name,Organization_Name,image_path
				from users
				left join organization_profiles on organization_profiles.id=users.org_id";
			}
			
			$rslt_user_list=$this->bm->dataSelectDb1($sql_user_list);
			$data['rslt_user_list']=$rslt_user_list;			
			$data['msg']="";			
			$data['title']="USER LIST";			
			$data['org_Type_id']=$org_Type_id;
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('userList',$data);
			$this->load->view('jsAssetsList');
		}
	}
*/

	function userList()				// new function
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{

			$listType = $this->uri->segment(3);
			
			$org_Type_id = $this->session->userdata('org_Type_id');					
			
			if($org_Type_id=='66')
			{
				if($listType == "active")
				{
					$data['title']="USER LIST (Active)";	
					$sql_user_list="SELECT users.id,login_id,u_name,Organization_Name,image_path,entrydate,IFNULL(update_by,'SYSTEM') entry_by
					FROM users
					LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id WHERE users.org_Type_id='66' AND active_stat = 1";
				}
				else
				{
					$data['title']="USER LIST (Inactive)";
					$sql_user_list="SELECT users.id,login_id,u_name,Organization_Name,image_path,entrydate,IFNULL(update_by,'SYSTEM') entry_by
					FROM users
					LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id WHERE users.org_Type_id='66' AND active_stat = 0";
				}
			}
			else
			{
				if($listType == "active")
				{
					$data['title']="USER LIST (Active)";
					$sql_user_list="SELECT users.id,login_id,u_name,Organization_Name,image_path,entrydate,IFNULL(update_by,'SYSTEM') entry_by
					FROM users
					LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id WHERE active_stat = 1";
				}
				else
				{
					$data['title']="USER LIST (Inactive)";
					$sql_user_list="SELECT users.id,login_id,u_name,Organization_Name,image_path,entrydate,IFNULL(update_by,'SYSTEM') entry_by
					FROM users
					LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id WHERE active_stat = 0";
				}
				
			}
			
			$rslt_user_list=$this->bm->dataSelectDb1($sql_user_list);
			$data['rslt_user_list']=$rslt_user_list;			
			$data['msg']="";			
			// $data['title']="USER LIST";			
			$data['org_Type_id']=$org_Type_id;
			$data['listType'] = $listType;
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('userList',$data);
			$this->load->view('jsAssetsList');
		}
	}

// Activate - Deactivate
	function UserStsCng()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
		
			$login = $this->session->userdata('login_id');
			$org_Type_id = $this->session->userdata('org_Type_id');
			$listType = $this->input->post('listType');
			$status = $this->input->post('status');
			$login_id = $this->input->post('login_id');
			$ipaddr = $_SERVER['REMOTE_ADDR'];

			if($status == "Inactive")
			{
				$query = "UPDATE users set active_stat = 0 , active_change_at=NOW(), active_change_by = '$login' , active_change_ip = '$ipaddr' where login_id = '$login_id'";
			}
			else if($status == "Active")
			{
				$query = "UPDATE users set active_stat = 1 , active_change_at=NOW(), active_change_by = '$login' , active_change_ip = '$ipaddr' where login_id = '$login_id'";
			}

			$stsCng = $this->bm->dataUpdateDb1($query);
			//$this->userList($listType);
			redirect('Report/userList/'.$listType, 'refresh');
		}
	}

/*
	function userListSearch(){
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
		
			$login=$this->input->post('login');
			$org_Type_id = $this->session->userdata('org_Type_id');

			$sql_search="select users.id,login_id,u_name,Organization_Name,image_path
			from users
			left join organization_profiles on organization_profiles.id=users.org_id 
			where login_id='$login'";
			
			
			$rslt_user_list=$this->bm->dataSelectDb1($sql_search);
			$data['rslt_user_list']=$rslt_user_list;
			
			$data['msg']="";			
			$data['title']="USER LIST";	
			$data['org_Type_id']=$org_Type_id;
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('userList',$data);
			$this->load->view('jsAssetsList');
			
		}
	}
*/
	
	function userListSearch()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
		
			$login=$this->input->post('login');
			$listType = $this->input->post('listType');
			$org_Type_id = $this->session->userdata('org_Type_id');

			if($listType == "active")
			{
				$data['title']="USER LIST (Active)";
				$sql_search = "select users.id,login_id,u_name,Organization_Name,image_path
				from users
				left join organization_profiles on organization_profiles.id=users.org_id 
				where login_id='$login' AND active_stat = 1";
			}
			else if($listType == "inactive")
			{
				$data['title']="USER LIST (Inactive)";
				$sql_search = "select users.id,login_id,u_name,Organization_Name,image_path
				from users
				left join organization_profiles on organization_profiles.id=users.org_id 
				where login_id='$login' AND active_stat = 0";
			}
			
			$rslt_user_list=$this->bm->dataSelectDb1($sql_search);
			$data['rslt_user_list']=$rslt_user_list;
			$data['listType'] = $listType;
			$data['msg']="";				
			$data['org_Type_id']=$org_Type_id;
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('userList',$data);
			$this->load->view('jsAssetsList');
			
		}
	}
	
	function searchUser()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
			$search_by=$this->input->post('search_by');
		
			$login_id=$this->input->post('login_id_search');
			$org_type_id=$this->input->post('org_type_id');
			
			if($search_by=="login_id")
			{
				$sql_search="select *
				from users
				left join organization_profiles on organization_profiles.id=users.org_id 
				where login_id='$login_id'";
			}
			else if($search_by=="org_Type")
			{
				$sql_search="SELECT *
				FROM users
				WHERE Org_Type_id='$org_type_id'";
			}
			
			$rslt_user_list=$this->bm->dataSelectDb1($sql_search);
			$data['rslt_user_list']=$rslt_user_list;
			
		
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('userList',$data);
			$this->load->view('jsAssets');
			
		}
	}
	
	function editUser()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
			$login_id=$this->input->post('login_id_edit');
			
			// $sql_user_data="select * from users where login_id='$login_id'";
			$sql_user_data="SELECT users.* FROM users
						LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id
						WHERE login_id='$login_id'";
			
			$rslt_user_data=$this->bm->dataSelectDb1($sql_user_data);
			
			$sql = "select id,Org_Type from tbl_org_types where id in(1,2,3,5,6,30,57,59,4,64,66,67,70,28,72,73,74,75,76,84,103)";
			$orgList = $this->bm->dataSelectDb1($sql);
			$data['orgList']=$orgList;
			$org_Type_id = $this->session->userdata('org_Type_id');
			$data['org_Type_id']=$org_Type_id;
			$data['rslt_user_data']=$rslt_user_data;
						
			$data['creation']=0;
			$data['title']="User Modification Form...";
			$data['msg']="";
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('userCreationForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function deleteUser()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
			$update_by = $this->session->userdata('login_id');
			
			$login_id_delete=$this->input->post('login_id_delete');
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			
			// user delete log - start			
			$sql_prevUserData = "SELECT id,u_name
			FROM users
			WHERE login_id='$login_id_delete'";
			$rslt_prevUserData = $this->bm->dataSelectDB1($sql_prevUserData);
			
			$prevId = $rslt_prevUserDatap[0]['id'];
			$uName = $rslt_prevUserDatap[0]['u_name'];	

			$sql_insertUserLog = "INSERT INTO users_delete_log(prev_id,u_name,login_id,delete_at,delete_by,delete_ip)
								VALUES('$prevId','$uName','$login_id_delete',NOW(),'$update_by','$ipaddr')";
			$this->bm->dataInsertDB1($sql_insertUserLog);			
			// user delete log - end
			
			$sql_delete="DELETE FROM users WHERE login_id='$login_id_delete'";
			
			$rslt_delete=$this->bm->dataDeleteDB1($sql_delete);
			
			$dt=date("Y-m-d H:i:s");
			$status="delete";						
			$dataWrite="\r\n$update_by | $login_id_delete | $status | $dt | $ipaddr ";
			write_file("userCreateEditPassChangeLog.txt", $dataWrite, 'a');
			
		//after deleting an entry load the page with pagination
			
			$sql_user_num="select count(*) as rtnValue from users";
			
			$segment_three = $this->uri->segment(3);
			
			$config = array();
			$config["base_url"] = site_url("report/userList/$segment_three");
			$config["total_rows"] = $this->bm->dataReturnDb1($sql_user_num);
			$config["per_page"] = 20;
			$offset = $this->uri->segment(4, 0);
			$config["uri_segment"] = 4;
			$limit=$config["per_page"];
			
			$this->pagination->initialize($config);
			$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;
			$start=$page;
			
			$sql_user_list="select *
			from users
			left join organization_profiles on organization_profiles.id=users.org_id limit $start,$limit";
			
			$rslt_user_list=$this->bm->dataSelectDb1($sql_user_list);
			
			$data['rslt_user_list']=$rslt_user_list;
			$data['start']=$start;
			$data["links"] = $this->pagination->create_links();
			
			$msg="<font color='blue'><b>Successfully deleted login ID ".$login_id_delete."</b></font>";
			$data['msg']=$msg;

			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('userList',$data);
			$this->load->view('jsAssets');
		}
	}
	//User edit or delete end
	
	// WORK DONE REPORT 24 HRS START
	
	function workDone24hrsForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="24 HRS. CONTAINER HANDLING FORM ...";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('workDone24hrsForm',$data);
			$this->load->view('jsAssets');
		}
	}

	function workDone24hrsList()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$work_date=$this->input->post('work_date');
			$rotation_no=$this->input->post('rotation_no');
			$search_format = $this->input->post('options');
			
			if($search_format=="xl" or $search_format=="html")
			{
				$data['title']="24 HRS. CONTAINER HANDLING REPORT OF ".$work_date;
				$data['work_date']=$work_date;
				$data['rotation_no']=$rotation_no;
				
				$this->load->view('cssAssets');
				$this->load->view('workDone24hrsListhtml',$data);
				$this->load->view('jsAssets');
			}
			else
			{
				//load mPDF library
				$this->load->library('m_pdf');
				//$pdf->use_kwt = true;
				$this->data['title']="24 HRS. CONTAINER HANDLING REPORT OF ".$work_date;
				$this->data['work_date']=$work_date;
				$this->data['rotation_no']=$rotation_no;
				
				//$this->data['title']="Container Operation Report";
				$html=$this->load->view('workDone24hrsList',$this->data, true);
				//this the the PDF filename that user will get to download
				$pdfFilePath ="24_HRS_CONTAINER_HANDLING_RPT".time()."-download.pdf";
				$pdf = $this->m_pdf->load();
				//$pdf->SetWatermarkText('CPA CTMS');
				$pdf->showWatermarkText = true;	
				
				$stylesheet = file_get_contents('assets/stylesheets/test.css'); // external css
				
				$pdf->useSubstitutions = true; // optional - just as an example
				
				//$pdf->SetHeader($url . "\n\n" . 'Date {DATE j-m-Y}');  // optional - just as an example
				//echo "SheetAdd : ".$stylesheet;
				//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
				// $pdf->AddPage('P', // L - landscape, P - portrait
				// '', '', '', '',
				// 5, // margin_left
				// 5, // margin right
				// 5, // margin top
				// 5, // margin bottom
				// 5, // margin header
				// 5); // margin footer
				//$footerHtml='<pagefooter name="MyFooter1" content-left="{DATE j-m-Y}" content-center="{PAGENO}/{nbpg}" content-right="My document" footer-style="font-family: serif; font-size: 8pt; font-weight: bold; font-style: italic; color: #000000;" />';
				
				$pdf->WriteHTML($stylesheet,1);
				
				$pdf->WriteHTML($html,2);
				
				$pdf->Output($pdfFilePath, "I"); // For Show Pdf
				

			}
			
		}
	}
	// WORK DONE REPORT 24 HRS END
	
	//LAST 24 HOURS STUFFING CONTAINER LIST start
	function stuffingContainerListForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
			$org_Type_id = $this->session->userdata('org_Type_id');
			
			if($org_Type_id==6 )		//for Offdock
			{
				$login_id = $this->session->userdata('login_id');
				
				//	$sql_time="SELECT HOUR(NOW()) AS ctime,TIMEDIFF(CONCAT(DATE(NOW()),' 10:00:00'),NOW()) AS diff";
				$sql_time="SELECT HOUR(NOW()) AS ctime,TIMEDIFF(CONCAT(DATE(NOW()),' 08:00:00'),NOW()) AS diff";
			
				$rslt_time=$this->bm->dataSelectDb2($sql_time);
					
				$data['ctime']=$rslt_time[0]['ctime'];
				$data['diff']=$rslt_time[0]['diff'];
				
								
				/* 
				$lowerLimit=9;
				$upperLimit=10;
				*/
				
				$lowerLimit=7;
				$upperLimit=8;
				
				$data['lowerLimit']=$lowerLimit;
				$data['upperLimit']=$upperLimit;
				
				$login_id = $this->session->userdata('login_id');

				$data['title']="STUFFING CONTAINER LIST...";
				$data['login_id']=$login_id;
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('stuffingContainerListOffdockWiseForm',$data);
				$this->load->view('jsAssets');
				return;
			}
			else if($org_Type_id==1 or $org_Type_id==57)	//for MLO & Shipping Agent
			{
				$login_id = $this->session->userdata('login_id');
			
				$data['title']="STUFFING CONTAINER LIST...";
				$data['login_id']=$login_id;
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('ShippingAgentPanel/stuffingContainerListMloWiseForm',$data);
				$this->load->view('jsAssets');
				
				//$this->load->view('header2');
				//$this->load->view('stuffingContainerListMloWiseForm',$data);
				//$this->load->view('footer');

				return;
			}
			else					//for CPA and Admin
			{
				$data['title']="STUFFING CONTAINER LIST...";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('stuffingContainerListForm',$data);
				$this->load->view('jsAssets');
				
			}
		}
	}
	
	function stuffingContainerListPerform()
	{
		
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
			
			$org_Type_id = $this->session->userdata('org_Type_id');
			//$this->load->library('m_pdf');
			//$mpdf->use_kwt = true;
						
			$type=$this->input->post('option');
			$stuffing_date=$this->input->post('stuffing_date');
			$cont_no=$this->input->post('cont_no');
			$offdock=$this->input->post('offdock');
			$login_id_offdock=$this->input->post('login_id_offdock');
			$login_id_mlo=$this->input->post('login_id_mlo');
			
			if($stuffing_date!=null and $cont_no!=null)				//Date and container wise search from cpa and admin panel
			{
				
				$sql_stuffing_report="select *,last_update as submit_date 
				from ctmsmis.exp_stuffing_unit 
				inner join ctmsmis.offdoc on ctmsmis.offdoc.id=ctmsmis.exp_stuffing_unit.depo_code
				where stuffing_date='$stuffing_date' and cont_id='$cont_no'";
				
				$rslt_stuffing_report=$this->bm->dataSelectDb2($sql_stuffing_report);
				
				//teus calculation start
				$row=count($rslt_stuffing_report);
				
				$t20=1;
				$t40=1;
				$size_20=0;
				$size_40=0;
				
				for($j=0;$j<$row;$j++)
				{
					if($rslt_stuffing_report[$j]['size']==20)
					{
						$size_20=$size_20+1;
					}
					else if($rslt_stuffing_report[$j]['size']==40)
					{
						$size_40=$size_40+1;
					}
				}
				
				$t20=$size_20*1;
				$t40=$size_40*2;
				//teus calculation end
				
				
				if($type=="html")
				{
					$searchType = "cont";
					$data['rslt_stuffing_report']=$rslt_stuffing_report;
					$data['stuffing_date']=$stuffing_date;
					$data['offdock']=$offdock;
					$data['cont_no']=$cont_no;
					$data['searchType']=$searchType;
					
					$data['t20']=$t20;
					$data['t40']=$t40;
					$data['size_20']=$size_20;
					$data['size_40']=$size_40;
				
					$this->load->view('cssAssetsList');
					$this->load->view('stuffingContainerList',$data);
					$this->load->view('jsAssetsList.php');
					
				}
				else if($type=="pdf")
				{	
					$this->data['rslt_stuffing_report']=$rslt_stuffing_report;
					$this->data['stuffing_date']=$stuffing_date;
					
					$this->data['t20']=$t20;
					$this->data['t40']=$t40;
					$this->data['size_20']=$size_20;
					$this->data['size_40']=$size_40;

					$html=$this->load->view('stuffingContainerListPDF',$this->data, true); 
						 
					$pdfFilePath ="stuffingContainerListPDF_date-".time()."-download.pdf";

					$pdf = $this->m_pdf->load();
					//$pdf->SetWatermarkText('CPA CTMS');
					$pdf->showWatermarkText = true;	
					//	$stylesheet = file_get_contents('resources/styles/cctnct.css'); 
						
					$pdf->AddPage('P', // L - landscape, P - portrait
							'', '', '', '',
							10, // margin_left
							10, // margin right
							10, // margin top
							10, // margin bottom
							10, // margin header
							10); // margin footer
							
					//	$pdf->WriteHTML($stylesheet,1);
					$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
						$pdf->WriteHTML($html,2);
							 
					$pdf->Output($pdfFilePath, "I"); // For Show Pdf
				}
			}
			
			else if($stuffing_date!=null and $offdock!=null)			//Date and offdock wise search from cpa and admin panel
			{
				$sql_stuffing_report="select *,last_update as submit_date 
				from ctmsmis.exp_stuffing_unit 
				inner join ctmsmis.offdoc on ctmsmis.offdoc.id=ctmsmis.exp_stuffing_unit.depo_code
				where code='$offdock' and stuffing_date='$stuffing_date'";
				
				$rslt_stuffing_report=$this->bm->dataSelectDb2($sql_stuffing_report);
				
				//teus calculation start
				$row=count($rslt_stuffing_report);
				
				$t20=1;
				$t40=1;
				$size_20=0;
				$size_40=0;
				
				for($j=0;$j<$row;$j++)
				{
					if($rslt_stuffing_report[$j]['size']==20)
					{
						$size_20=$size_20+1;
					}
					else if($rslt_stuffing_report[$j]['size']==40)
					{
						$size_40=$size_40+1;
					}
				}
				
				$t20=$size_20*1;
				$t40=$size_40*2;
				
				//teus calculation end
				
				if($type=="html")
				{
					$searchType = "offdock";
					$data['rslt_stuffing_report']=$rslt_stuffing_report;
					$data['offdock']=$offdock;
					$data['stuffing_date']=$stuffing_date;
					$data['cont_no']=$cont_no;
					$data['searchType']=$searchType;
					
					$data['t20']=$t20;
					$data['t40']=$t40;
					$data['size_20']=$size_20;
					$data['size_40']=$size_40;
					
					$this->load->view('cssAssetsList');
					$this->load->view('stuffingContainerList',$data);
					$this->load->view('jsAssetsList');
				}
				else if($type=="pdf")
				{
					$this->data['rslt_stuffing_report']=$rslt_stuffing_report;
					$this->data['offdock']=$offdock;
					
					$this->data['t20']=$t20;
					$this->data['t40']=$t40;
					$this->data['size_20']=$size_20;
					$this->data['size_40']=$size_40;

					$html=$this->load->view('stuffingContainerListPDF',$this->data, true); 
						 
					$pdfFilePath ="stuffingContainerListPDF_offdock-".time()."-download.pdf";

					$pdf = $this->m_pdf->load();
					//$pdf->SetWatermarkText('CPA CTMS');
					$pdf->showWatermarkText = true;	
					//	$stylesheet = file_get_contents('resources/styles/cctnct.css'); 
						
					$pdf->AddPage('P', // L - landscape, P - portrait
							'', '', '', '',
							10, // margin_left
							10, // margin right
							10, // margin top
							10, // margin bottom
							10, // margin header
							10); // margin footer
							
					//	$pdf->WriteHTML($stylesheet,1);
					$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
						$pdf->WriteHTML($html,2);
							 
					$pdf->Output($pdfFilePath, "I"); // For Show Pdf
				}
			} 
			
			else if($login_id_offdock!=null)			//Date wise search from offdock panel
			{
				$stuffing_date_offdock=$this->input->post('stuffing_date_offdock');
				$isOffdock=1;
				
				$depo_code=$this->Offdock($login_id_offdock);
				
				/* 
				//previous query with uploaded_by, modified to get result in case of data was uploaded by admin
				
				$sql_stuffing_report="select *,hour(now()) as hr 
				from ctmsmis.exp_stuffing_unit 
				inner join ctmsmis.offdoc on ctmsmis.offdoc.id=ctmsmis.exp_stuffing_unit.depo_code
				where uploaded_by='$login_id_offdock' and stuffing_date='$stuffing_date_offdock'"; */
				
				$name = "";
				$sql_stuffing_report="select *,hour(now()) as hr 
				from ctmsmis.exp_stuffing_unit 
				inner join ctmsmis.offdoc on ctmsmis.offdoc.id=ctmsmis.exp_stuffing_unit.depo_code
				where depo_code='$depo_code' and stuffing_date='$stuffing_date_offdock'";
				
				$rslt_stuffing_report=$this->bm->dataSelectDb2($sql_stuffing_report);
				for($x=0; $x<count($rslt_stuffing_report); $x++)
				{
					$name=$rslt_stuffing_report[$x]['name'];
				}
				
				//teus calculation start
				$row=count($rslt_stuffing_report);
				
				$t20=1;
				$t40=1;
				$size_20=0;
				$size_40=0;
				
				for($j=0;$j<$row;$j++)
				{
					if($rslt_stuffing_report[$j]['size']==20)
					{
						$size_20=$size_20+1;
					}
					else if($rslt_stuffing_report[$j]['size']==40)
					{
						$size_40=$size_40+1;
					}
				}
				
				$t20=$size_20*1;
				$t40=$size_40*2;
				
				//teus calculation end
					
				if($type=="html")
				{
					//	$sql_time="SELECT HOUR(NOW()) AS ctime,TIMEDIFF(CONCAT(DATE(NOW()),' 10:00:00'),NOW()) AS diff";
					$sql_time="SELECT HOUR(NOW()) AS ctime,TIMEDIFF(CONCAT(DATE(NOW()),' 08:00:00'),NOW()) AS diff";
			
					$rslt_time=$this->bm->dataSelectDb1($sql_time);
					
					$data['ctime']=$rslt_time[0]['ctime'];
					$data['diff']=$rslt_time[0]['diff'];
					
					/* $lowerLimit=9;
					$upperLimit=10; */
					
					$lowerLimit=7;
					$upperLimit=8;
					
					$data['lowerLimit']=$lowerLimit;
					$data['upperLimit']=$upperLimit;
					
					$data['rslt_stuffing_report']=$rslt_stuffing_report;
					$data['offdock']=$login_id_offdock;
					$data['isOffdock']=$isOffdock;
					
					$data['t20']=$t20;
					$data['t40']=$t40;
					$data['size_20']=$size_20;
					$data['size_40']=$size_40;
					
					$data['stuffing_date']=$stuffing_date;
					$data['cont_no']=$cont_no;
					$data['searchType']=$type;
					$data['name']=$name;
					
					$this->load->view('stuffingContainerList',$data);
				}
				else if($type=="pdf")
				{
					$this->data['rslt_stuffing_report']=$rslt_stuffing_report;
					$this->data['offdock']=$login_id_offdock;
					
					$this->data['t20']=$t20;
					$this->data['t40']=$t40;
					$this->data['size_20']=$size_20;
					$this->data['size_40']=$size_40;
					$this->data['name']=$name;
					
					$this->load->library('m_pdf');
					$html=$this->load->view('stuffingContainerListPDF',$this->data, true); 						 
					$pdfFilePath ="stuffingContainerListPDF_offdock-".time()."-download.pdf";
					$pdf = $this->m_pdf->load();					
					$pdf->allow_charset_conversion = true;
					$pdf->charset_in = 'iso-8859-4';
					$stylesheet = file_get_contents('assets/stylesheets/test.css'); // external css
					$mpdf->shrink_tables_to_fit = 1;					
					//$pdf->SetWatermarkText('CPA CTMS');
					$pdf->showWatermarkText = true;
					$pdf->WriteHTML($stylesheet,1);
					$pdf->WriteHTML($html,2);							 
					$pdf->Output($pdfFilePath, "I"); // For Showing Pdf									
				}
			}
			
			else if($login_id_mlo!=null)					//MLO wise search from MLO panel
			{
				$stuffing_date_mlo=$this->input->post('stuffing_date_mlo');
				//echo $stuffing_date_mlo;
				$search_by=$this->input->post('search_by');
				if($org_Type_id==57) // If Shipping Agent 
				{
					$ship_mlo=$this->input->post('ship_mlo');
					
					if($ship_mlo=="ALL")
					{
						/*$cond = "mlo_code in (SELECT r.id FROM sparcsn4.ref_bizunit_scoped r       
											LEFT JOIN ( sparcsn4.ref_agent_representation X       
											LEFT JOIN sparcsn4.ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey )  ON r.gkey=X.bzu_gkey 
											WHERE Y.id = '$login_id_mlo')";*/
						$condtionQuery="SELECT r.id FROM ref_bizunit_scoped r       
						LEFT JOIN ( ref_agent_representation X       
						LEFT JOIN ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey )  ON r.gkey=X.bzu_gkey 
						WHERE Y.id = '$login_id_mlo'";	
						$condtionRes=$this->bm->dataSelect($condtionQuery);
						$resSize= count($condtionRes);
						$condStr= "";
						if(	$resSize==0){
							$condStr= "' '";

						}else{
							for($k=0; $k<$resSize; $k++){
								$id="";
								$id=$condtionRes[$k]['ID'];
								if($k==($resSize-1)) {
									$condStr=$condStr."'".$id."'" ;
	
								}
								else{
								
									$condStr=$condStr."'".$id."'".","; 
								}
								
							}	

						}

						$cond = "mlo_code in ($condStr)";
										
					}
					else
					{
						$cond = "mlo_code='$ship_mlo'";
					}
				}
				else // If MLO
				{
					$cond = "mlo_code='$login_id_mlo'";
				}
				if($offdock=="ALL")
				{
					$offDock_cond = "";
					$offDock_condsubstring = "";
				}
				else{
					$offDock_cond = "and code='$offdock'";
					$offDock_condsubstring = substr($offDock_cond,10,-1);
				}
				if($search_by=="offdock")
					{
						$sql_stuffing_report="select * 
												from ctmsmis.exp_stuffing_unit 
												inner join ctmsmis.offdoc on ctmsmis.offdoc.id=ctmsmis.exp_stuffing_unit.depo_code
												where ".$cond." ".$offDock_cond." and stuffing_date='$stuffing_date_mlo'";
					}
					else if($search_by=="cont_no")
					{
						$sql_stuffing_report="select * 
												from ctmsmis.exp_stuffing_unit 
												inner join ctmsmis.offdoc on ctmsmis.offdoc.id=ctmsmis.exp_stuffing_unit.depo_code
												where ".$cond." and cont_id='$cont_no' and stuffing_date='$stuffing_date_mlo'";
					}

					
			
				$rslt_stuffing_report=$this->bm->dataSelectDb2($sql_stuffing_report);
				$row=count($rslt_stuffing_report);
				
				$t20=1;
				$t40=1;
				$size_20=0;
				$size_40=0;
				
				for($j=0;$j<$row;$j++)
				{
					if($rslt_stuffing_report[$j]['size']==20)
					{
						$size_20=$size_20+1;
					}
					else if($rslt_stuffing_report[$j]['size']==40)
					{
						$size_40=$size_40+1;
					}
				}
				
				$condmlo = substr($cond,10,-1);
				
				$t20=$size_20*1;
				$t40=$size_40*2;
				
				//teus calculation end
				
				$data['rslt_stuffing_report']=$rslt_stuffing_report;
				$data['offdock']=$login_id_mlo;
				
				$data['t20']=$t20;
				$data['t40']=$t40;
				$data['size_20']=$size_20;
				$data['size_40']=$size_40;
				
				
				$data['cond']=$cond;
				$data['condmlo']=$condmlo;
				$data['offDock_cond']=$offDock_cond;
				$data['offDock_condsubstring']=$offDock_condsubstring;
				$data['stuffing_date_mlo']=$stuffing_date_mlo;
				$data['cont_no']=$cont_no;
				$data['search_by']=$search_by;
				
			
				
				$this->load->view('cssAssetsList');
				$this->load->view('ShippingAgentPanel/stuffingContainerListMloWise',$data);
			
				$this->load->view('jsAssetsList.php');
				
			}
		}
	}

	function stuffingContListPrint()
	{
		
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
			
			$org_Type_id = $this->session->userdata('org_Type_id');
			//$this->load->library('m_pdf');
			//$mpdf->use_kwt = true;
			
			//$type=$this->input->post('option');
			$stuffing_date=$this->input->post('stuffing_date');
			$cont_no=$this->input->post('cont_no');
			$offdock=$this->input->post('offdock');
			$searchType=$this->input->post('searchType');
			//$login_id_offdock=$this->input->post('login_id_offdock');
			//$login_id_mlo=$this->input->post('login_id_mlo');
			
			if($searchType=="cont")				//Date and container wise search from cpa and admin panel
			{
				
				$sql_stuffing_report="select *,last_update as submit_date 
				from ctmsmis.exp_stuffing_unit 
				inner join ctmsmis.offdoc on ctmsmis.offdoc.id=ctmsmis.exp_stuffing_unit.depo_code
				where stuffing_date='$stuffing_date' and cont_id='$cont_no'";
				
				$rslt_stuffing_report=$this->bm->dataSelect($sql_stuffing_report);
				
				//teus calculation start
				$row=count($rslt_stuffing_report);
				
				$t20=1;
				$t40=1;
				$size_20=0;
				$size_40=0;
				
				for($j=0;$j<$row;$j++)
				{
					if($rslt_stuffing_report[$j]['size']==20)
					{
						$size_20=$size_20+1;
					}
					else if($rslt_stuffing_report[$j]['size']==40)
					{
						$size_40=$size_40+1;
					}
				}
				
				$t20=$size_20*1;
				$t40=$size_40*2;
				//teus calculation end
				
				$data['rslt_stuffing_report']=$rslt_stuffing_report;
				$data['stuffing_date']=$stuffing_date;
				$data['offdock']=$offdock;
				$data['cont_no']=$cont_no;
				
				$data['t20']=$t20;
				$data['t40']=$t40;
				$data['size_20']=$size_20;
				$data['size_40']=$size_40;
			
				$this->load->view('cssAssetsList');
				$this->load->view('stuffingContainerListPrint',$data);
				$this->load->view('jsAssetsList.php');
			}
			else if($searchType=="offdock")			//Date and offdock wise search from cpa and admin panel
			{
				$sql_stuffing_report="select *,last_update as submit_date 
				from ctmsmis.exp_stuffing_unit 
				inner join ctmsmis.offdoc on ctmsmis.offdoc.id=ctmsmis.exp_stuffing_unit.depo_code
				where code='$offdock' and stuffing_date='$stuffing_date'";
				
				$rslt_stuffing_report=$this->bm->dataSelect($sql_stuffing_report);
				
				//teus calculation start
				$row=count($rslt_stuffing_report);
				
				$t20=1;
				$t40=1;
				$size_20=0;
				$size_40=0;
				
				for($j=0;$j<$row;$j++)
				{
					if($rslt_stuffing_report[$j]['size']==20)
					{
						$size_20=$size_20+1;
					}
					else if($rslt_stuffing_report[$j]['size']==40)
					{
						$size_40=$size_40+1;
					}
				}
				
				$t20=$size_20*1;
				$t40=$size_40*2;
				
				//teus calculation end
				
				
					$searchType = "offdock";
					$data['rslt_stuffing_report']=$rslt_stuffing_report;
					$data['offdock']=$offdock;
					$data['stuffing_date']=$stuffing_date;
					$data['cont_no']=$cont_no;
					$data['searchType']=$searchType;
					
					$data['t20']=$t20;
					$data['t40']=$t40;
					$data['size_20']=$size_20;
					$data['size_40']=$size_40;
					
					$this->load->view('cssAssetsList');
					$this->load->view('stuffingContainerListPrint',$data);
					$this->load->view('jsAssetsList');
				
				
			}
		}
	}
	
	function stuffingContainerListPrintPerform()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
			/*
			take value of offdock or cont_no
			set condition on these values
			and execute query
			*/
			//$cont_no=$this->input->post('cont_no');
			//echo $cont_no;
			//echo "hi";
			$cont_no=$this->input->post('cont_no');
			$cond=$this->input->post('condmlo');
			$offDock_condsubstring=$this->input->post('offDock_condsubstring');
			$stuffing_date_mlo=$this->input->post('stuffing_date_mlo');
			//echo $cont_no;
			if($cont_no != "")
			{
				//echo "container";
				
				$sql_stuffing_report="select * from ctmsmis.exp_stuffing_unit 
				inner join ctmsmis.offdoc on ctmsmis.offdoc.id=ctmsmis.exp_stuffing_unit.depo_code
				where mlo_code='$cond' and cont_id='$cont_no' and stuffing_date='$stuffing_date_mlo'";
				$rslt_stuffing_report=$this->bm->dataSelect($sql_stuffing_report);
				$row=count($rslt_stuffing_report);
				
				$t20=1;
				$t40=1;
				$size_20=0;
				$size_40=0;
					
				for($j=0;$j<$row;$j++)
				{
					if($rslt_stuffing_report[$j]['size']==20)
					{
						$size_20=$size_20+1;
					}
					else if($rslt_stuffing_report[$j]['size']==40)
					{
						$size_40=$size_40+1;
					}
				}
				
				$t20=$size_20*1;
				$t40=$size_40*2;
				
				//teus calculation end
				
				$data['rslt_stuffing_report']=$rslt_stuffing_report;
				
				$data['t20']=$t20;
				$data['t40']=$t40;
				$data['size_20']=$size_20;
				$data['size_40']=$size_40;
				
				
				$data['cond']=$cond;
				$data['stuffing_date_mlo']=$stuffing_date_mlo;
				$data['cont_no']=$cont_no;
				
				//$this->mytry($data);
				
				$this->load->view('cssAssetsList');
				$this->load->view('ShippingAgentPanel/stuffingContainerListMloWisePrint',$data);
				//$this->load->view('FrontEnd/berthReportViewForm',$data);
				$this->load->view('jsAssetsList.php');
			}
			else
			{
				if($offDock_condsubstring != "")
				{
					//echo "offdock not null";
					
					$offDock_cond=$this->input->post('offDock_condsubstring');
					
					$sql_stuffing_report="select * from ctmsmis.exp_stuffing_unit 
					inner join ctmsmis.offdoc on ctmsmis.offdoc.id=ctmsmis.exp_stuffing_unit.depo_code
					where mlo_code='$cond' and code='$offDock_cond' and stuffing_date='$stuffing_date_mlo'";
					$rslt_stuffing_report=$this->bm->dataSelect($sql_stuffing_report);
					$row=count($rslt_stuffing_report);
					
					$t20=1;
					$t40=1;
					$size_20=0;
					$size_40=0;
						
					for($j=0;$j<$row;$j++)
					{
						if($rslt_stuffing_report[$j]['size']==20)
						{
							$size_20=$size_20+1;
						}
						else if($rslt_stuffing_report[$j]['size']==40)
						{
							$size_40=$size_40+1;
						}
					}
					
					$t20=$size_20*1;
					$t40=$size_40*2;
					
					//teus calculation end
					
					$data['rslt_stuffing_report']=$rslt_stuffing_report;
					
					$data['t20']=$t20;
					$data['t40']=$t40;
					$data['size_20']=$size_20;
					$data['size_40']=$size_40;
					
					
					$data['cond']=$cond;
					$data['offDock_cond']=$offDock_cond;
					$data['stuffing_date_mlo']=$stuffing_date_mlo;
					
					//$this->mytry($data);
					
					$this->load->view('cssAssetsList');
					$this->load->view('ShippingAgentPanel/stuffingContainerListMloWisePrint',$data);
					//$this->load->view('FrontEnd/berthReportViewForm',$data);
					$this->load->view('jsAssetsList.php');
				}
				else
				{
					//echo "offdock null";
					$sql_stuffing_report="select * from ctmsmis.exp_stuffing_unit 
					inner join ctmsmis.offdoc on ctmsmis.offdoc.id=ctmsmis.exp_stuffing_unit.depo_code
					where mlo_code='$cond' and stuffing_date='$stuffing_date_mlo'";
					$rslt_stuffing_report=$this->bm->dataSelect($sql_stuffing_report);
					$row=count($rslt_stuffing_report);
					
					$t20=1;
					$t40=1;
					$size_20=0;
					$size_40=0;
						
					for($j=0;$j<$row;$j++)
					{
						if($rslt_stuffing_report[$j]['size']==20)
						{
							$size_20=$size_20+1;
						}
						else if($rslt_stuffing_report[$j]['size']==40)
						{
							$size_40=$size_40+1;
						}
					}
					
					$t20=$size_20*1;
					$t40=$size_40*2;
					
					//teus calculation end
					
					$data['rslt_stuffing_report']=$rslt_stuffing_report;
					
					$data['t20']=$t20;
					$data['t40']=$t40;
					$data['size_20']=$size_20;
					$data['size_40']=$size_40;
					
					
					$data['cond']=$cond;
					$data['stuffing_date_mlo']=$stuffing_date_mlo;
					
					//$this->mytry($data);
					
					$this->load->view('cssAssetsList');
					$this->load->view('ShippingAgentPanel/stuffingContainerListMloWisePrint',$data);
					//$this->load->view('FrontEnd/berthReportViewForm',$data);
					$this->load->view('jsAssetsList.php');
				}
			}
			
		}
	}
	
	function deleteOffdockEntry()				//only for html view, delete is not applicable in pdf
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
			$login_id_offdock=$this->session->userdata('login_id');
			$isOffdock=1;
			$delete_cont=$this->input->post('delete_cont');
			$delete_stfdate=$this->input->post('delete_stfdate');
			
			$sql_delete_offdock="DELETE FROM ctmsmis.exp_stuffing_unit WHERE cont_id='$delete_cont' and stuffing_date='$delete_stfdate'";
			
			$rslt_delete_offdock=$this->bm->dataDelete($sql_delete_offdock);
			
			//after deleting an entry reload the full page with previous query
			
			$stuffing_date_offdock=$delete_stfdate;
			
			$depo_code=$this->Offdock($login_id_offdock);
				
			/* 
			//previous query with uploaded_by, modified to get result in case of data was uploaded by admin
			
			$sql_stuffing_report="select *,time(now()) as time 
			from ctmsmis.exp_stuffing_unit 
			inner join ctmsmis.offdoc on ctmsmis.offdoc.id=ctmsmis.exp_stuffing_unit.depo_code
			where uploaded_by='$login_id_offdock' and stuffing_date='$stuffing_date_offdock'"; */
			
			$sql_stuffing_report="select *,time(now()) as time 
			from ctmsmis.exp_stuffing_unit 
			inner join ctmsmis.offdoc on ctmsmis.offdoc.id=ctmsmis.exp_stuffing_unit.depo_code
			where depo_code='$depo_code' and stuffing_date='$stuffing_date_offdock'";
			
			$rslt_stuffing_report=$this->bm->dataSelect($sql_stuffing_report);
			
			//teus calculation start
			$row=count($rslt_stuffing_report);
				
			$t20=1;
			$t40=1;
			$size_20=0;
			$size_40=0;
				
			for($j=0;$j<$row;$j++)
			{
				if($rslt_stuffing_report[$j]['size']==20)
				{
					$size_20=$size_20+1;
				}
				else if($rslt_stuffing_report[$j]['size']==40)
				{
					$size_40=$size_40+1;
				}
			}
				
			$t20=$size_20*1;
			$t40=$size_40*2;
				
			//teus calculation end
			
		//	$sql_time="SELECT HOUR(NOW()) AS ctime,TIMEDIFF(CONCAT(DATE(NOW()),' 10:00:00'),NOW()) AS diff";
			$sql_time="SELECT HOUR(NOW()) AS ctime,TIMEDIFF(CONCAT(DATE(NOW()),' 08:00:00'),NOW()) AS diff";
			
			$rslt_time=$this->bm->dataSelectDb1($sql_time);
					
			$data['ctime']=$rslt_time[0]['ctime'];
			$data['diff']=$rslt_time[0]['diff'];
				
			/* $lowerLimit=9;
			$upperLimit=10; */
			
			$lowerLimit=7;
			$upperLimit=8;
				
			$data['lowerLimit']=$lowerLimit;
			$data['upperLimit']=$upperLimit;
			
			$data['rslt_stuffing_report']=$rslt_stuffing_report;
			$data['offdock']=$login_id_offdock;
			$data['isOffdock']=$isOffdock;
					
			$data['t20']=$t20;
			$data['t40']=$t40;
			$data['size_20']=$size_20;
			$data['size_40']=$size_40;
					
			$this->load->view('stuffingContainerList',$data);
		}
	}
	//LAST 24 HOURS STUFFING CONTAINER LIST end
	
	//LAST 24 HOURS STUFFING CONTAINER LIST for admin start
	
	function last24hrsOffDockStatementoforAdminForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['flag']=0;
			$data['title']="Last 24 hrs Offdock statement";
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('last24hrsOffDockStatementoforAdminForm',$data);
			$this->load->view('jsAssetsList');
		}
	}
		
		
	function last24hrsOffDockStatementList()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$offdock_login_id=$this->input->post('offdock');
			$stuffing_date=$this->input->post('stuffing_date');
			
			$query="SELECT *  FROM ctmsmis.offdoc_statement WHERE date(last_update)='$stuffing_date' and update_by='$offdock_login_id'";
			//echo $query;
			//return;
			$offDock = $this->bm->dataSelectDb2($query);
			$data['title']="Last 24 hrs Offdock statement";
			$data['offDock']=$offDock;
			$data['flag']=1;
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('last24hrsOffDockStatementoforAdminForm',$data);
			$this->load->view('jsAssetsList');
		}
	}
		
	//LAST 24 HOURS STUFFING CONTAINER LIST for admin end
	
	//offDock Stuffing or statement permission form start
	function stuffingPermissionForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$msg = "";
			$timeQuery="Select date(now()) as rtnValue";
			$data["toDate"] = $this->bm->dataReturnDb2($timeQuery);
			$data['title']="Stuffing\Statement Permission Form";
			$data['msg']=$msg;
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('stuffingPermissionFormHTML',$data);
			$this->load->view('jsAssets');
		}
	}
		
	function stuffingPermissionPerform()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{  
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			$offdock=$this->input->post('offdock');
			$stuffing_date=$this->input->post('stuffing_date');
			$time=$this->input->post('time');
			$login_id = $this->session->userdata('login_id');	
			$data['login_id']=$login_id;
			
			if($offdock=="all")
			{
				$sql_offdock_id="select id,name from ctmsmis.offdoc";
				
				$rslt_offdock_id=$this->bm->dataSelectDb2($sql_offdock_id);
				
				for($i=0;$i<count($rslt_offdock_id);$i++)
				{
					$offdock=$rslt_offdock_id[$i]['id'];
					
					$find_query="SELECT offdock_code as rtnValue from ctmsmis.offdock_upload_permission WHERE offdock_code='$offdock' and date(last_update)=date(now())";
					$find_offdock=$this->bm->dataReturnDb2($find_query);
						
					if($find_offdock=="")
					{
						$insertQuery="insert into ctmsmis.offdock_upload_permission(offdock_code,permit_date,permit_time,permit_by,last_update, ip_address) 
						values('$offdock','$stuffing_date','$time','$login_id',now(),'$ipaddr')";
					}
					else
					{
						$insertQuery="Update ctmsmis.offdock_upload_permission 
						set offdock_code='$offdock',permit_date='$stuffing_date',permit_time='$time',permit_by='$login_id',last_update=now(),ip_address='$ipaddr' 
						where offdock_code='$offdock' and date(last_update)=date(now())";
					}
					$stat=$this->bm->dataInsertDb2($insertQuery);
				}
			}
			else
			{
				$find_query="SELECT offdock_code as rtnValue from ctmsmis.offdock_upload_permission WHERE offdock_code='$offdock' and date(last_update)=date(now())";
				$find_offdock=$this->bm->dataReturnDb2($find_query);
					
				if($find_offdock=="")
				{
					$insertQuery="insert into ctmsmis.offdock_upload_permission(offdock_code,permit_date,permit_time,permit_by,last_update, ip_address) 
					values('$offdock','$stuffing_date','$time','$login_id',now(),'$ipaddr')";
				}
				else
				{
					$insertQuery="Update ctmsmis.offdock_upload_permission 
					set offdock_code='$offdock',permit_date='$stuffing_date',permit_time='$time',permit_by='$login_id',last_update=now(),ip_address='$ipaddr' 
					where offdock_code='$offdock' and date(last_update)=date(now())";
				}
				$stat=$this->bm->dataInsertDb2($insertQuery);
			}
			
			if($stat==1)
			{
				$data['msg']="Permission is granted.";
			}
			else
			{	
				$data['msg']="Permission failed.";
			}
			
			$timeQuery="Select date(now()) as rtnValue";
			$data["toDate"] = $this->bm->dataReturnDb1($timeQuery);	
			
			$data['title']="Stuffing\Statement Permission Form";
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('stuffingPermissionFormHTML',$data);
			$this->load->view('jsAssets');
		}
	}


	
		//Old function without facility to select all offdock from combo box. Remove comment if necessary or any error occurs in present function with same name.
		/* function stuffingPermissionPerform()
		{
			$session_id = $this->session->userdata('value');
			if($session_id!=$this->session->userdata('session_id'))
			{
				$this->logout();
			}
			else
			{  
				$ipaddr = $_SERVER['REMOTE_ADDR'];
				$offdock=$this->input->post('offdock');
				$stuffing_date=$this->input->post('stuffing_date');
				$time=$this->input->post('time');
				$login_id = $this->session->userdata('login_id');	
				$data['login_id']=$login_id;
				
				$find_query="SELECT offdock_code as rtnValue from ctmsmis.offdock_upload_permission WHERE offdock_code='$offdock' and date(last_update)=date(now())";
				$find_offdock=$this->bm->dataReturn($find_query);
				
				if($find_offdock=="")
				{
					$insertQuery="insert into ctmsmis.offdock_upload_permission(offdock_code, permit_date, permit_time, permit_by, last_update, ip_address ) 
					values ('$offdock', '$stuffing_date','$time', '$login_id', now(), '$ipaddr')";
					
				//echo $insertQuery;
				//return;	
				}
				else
				{
					$insertQuery="Update ctmsmis.offdock_upload_permission set offdock_code='$offdock', permit_date='$stuffing_date', permit_time='$time',
								permit_by='$login_id', last_update=now(), ip_address='$ipaddr' where offdock_code='$offdock' and date(last_update)=date(now())";
								
				}
				$stat=$this->bm->dataInsert($insertQuery);
				if($stat==1)
				{
					$data['msg']="Permission is granted.";
				}
				else
				{	
					$data['msg']="Permission failed.";
				}
				$timeQuery="Select date(now()) as rtnValue";
				$data["toDate"] = $this->bm->dataReturnDb1($timeQuery);				
				$data['title']="Stuffing\Statement Permission Form";
				$this->load->view('header2');
				$this->load->view('stuffingPermissionFormHTML',$data);
				$this->load->view('footer');
			}
		} */
		
	//offDock Stuffing or statement permission form end

	//Barcode TEST Start
	function barcodeTestForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="Barcode Generation FORM";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('barcodeTestForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function generateBarcodePage()
	{
		$container_no=$this->input->post('container_no');
		$container_no2=$this->input->post('container_no2');
		$truck_no=$this->input->post('truck_no');		
		$contCat=$this->input->post('contCat');
		$printType=$this->input->post('printType');
		
		$search_format = "html";
		
		// Log Write START
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		$login_id = $this->session->userdata('login_id');		
		$printDate=date("Y-m-d H:i:s");
		$writeDocs="\r\n$container_no |$container_no2 |$truck_no |$printDate |$ipaddr |$login_id ";		
		$myFile = "barcodePrintLog.txt";
		write_file($myFile, $writeDocs, 'a');
		// Log Write END
		
		if($search_format=="xl" or $search_format=="html")
		{
			$data['title']=" ";
			$data['container_no']=$container_no;
			$data['truck_no']=$truck_no;
			$data['search_format']=$search_format;
			
			$data['container_no2']=$container_no2;
			$data['contCat']=$contCat;
			$data['printType']=$printType;
						
			$this->load->view('generateBarcodePage',$data);
		}
		else
		{
			//load mPDF library
			$this->load->library('m_pdf');
			$pdf->use_kwt = true;
			$this->data['title']="Barcode Test ";
			$this->data['container_no']=$container_no;
			$this->data['truck_no']=$truck_no;
			$this->data['search_format']=$search_format;
			$this->data['container_no2']=$container_no2;
			$this->data['contCat']=$contCat;
			$this->data['printType']=$printType;
			//$this->data['title']="Container Operation Report";
			$html=$this->load->view('generateBarcodePage',$this->data, true);
			//this the the PDF filename that user will get to download
			$pdfFilePath ="generateBarcodePage-".time()."-download.pdf";
			$pdf = $this->m_pdf->load();
			//$pdf->SetWatermarkText('CPA CTMS');
			$pdf->showWatermarkText = true;	
			$stylesheet = file_get_contents('resources/styles/test.css'); // external css
			$scriptSheet = file_get_contents('resources/scripts/JsBarcode.all.min.js'); // external css
			$pdf->useSubstitutions = true; // optional - just as an example
			//$pdf->SetHeader($url . "\n\n" . 'Date {DATE j-m-Y}');  // optional - just as an example
			//echo "SheetAdd : ".$stylesheet;
			$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
			$pdf->AddPage('P', // L - landscape, P - portrait
			'', '', '', '',
			5, // margin_left
			5, // margin right
			5, // margin top
			5, // margin bottom
			5, // margin header
			5); // margin footer
			//$footerHtml='<pagefooter name="MyFooter1" content-left="{DATE j-m-Y}" content-center="{PAGENO}/{nbpg}" content-right="My document" footer-style="font-family: serif; font-size: 8pt; font-weight: bold; font-style: italic; color: #000000;" />';
			$pdf->WriteHTML($stylesheet,1);
			
			$pdf->WriteHTML($html,2);
			$pdf->WriteHTML($scriptSheet,3);
			$pdf->Output($pdfFilePath, "I"); // For Show Pdf	
		}

	}
	//Barcode TEST End
	// Export CONTAINER GATE IN  START
	
	function exportContainerGateInForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="EXPORT CONTAINER GATE IN FORM";
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('exportContainerGateInForm',$data);
			$this->load->view('jsAssets');
			
			//$this->load->view('header2');
			//$this->load->view('exportContainerGateInForm',$data);
			//$this->load->view('footer');
		}
	}

	function exportContainerGateInList()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$agentCode = $this->session->userdata('agentCode'); 
			
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id_ship=$this->session->userdata('login_id');
			$rotation_no=$this->input->post('rotation_no');
			$search_format = $this->input->post('options');
			
			if($search_format=="xl")
			{
				$data['title']="EXPORT CONTAINER GATE IN LIST FOR THE ROTATION ".$rotation_no;
				$data['rotation_no']=$rotation_no;
				$data['login_id_ship']=$login_id_ship;
				$data['agentCode']=$agentCode;
				$this->load->view('exportContainerGateInList',$data);
			}
			else
			{
				$data['title']="EXPORT CONTAINER GATE IN LIST FOR THE ROTATION ".$rotation_no;
				$data['rotation_no']=$rotation_no;
				$data['login_id_ship']=$login_id_ship;
				$data['search_format']=$search_format;
				$data['agentCode']=$agentCode;				
				$this->load->view('cssAssetsList');
				$this->load->view('exportContainerGateInListView',$data);
				$this->load->view('jsAssetsList');
			}
			
		}
	}

	function exportContainerGateInListPrint()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id_ship=$this->session->userdata('login_id');
			$rotation_no=$this->input->post('rotation_no');
			$search_format = $this->input->post('options');
			
			$data['title']="EXPORT CONTAINER GATE IN LIST FOR THE ROTATION ".$rotation_no;
			$data['rotation_no']=$rotation_no;
			$data['login_id_ship']=$login_id_ship;
			
			//$this->load->view('exportContainerGateInList',$data);
			
			$this->load->view('cssAssetsList');
			$this->load->view('exportContainerGateInListPrint',$data);
			$this->load->view('jsAssetsList');
			
			
		}
	}
	// Export CONTAINER GATE IN END
	function acceptStuffingList()
	{
		//$acceptChkVal=
		
		$countSelectedRow = count($this->input->post('acceptChk'));   // get selected value
		//echo $countSelectedRow."-- ".$this->input->post('acceptChk');
		$countTotalTblRow = count($this->input->post('stuffingKey')); // get all table row
		
		//echo $countSelectedRow."gg\n";
		$setval="";
		$data['msg']="";
		
		for($i=0;$i<$countTotalTblRow;$i++) {
			
			$strAcceptStuffingKeyQry="update ctmsmis.exp_stuffing_unit set accept_stuffing=0 where akey=".$this->input->post('stuffingKey')[$i];
			$acceptStuffingKeyStat=$this->bm->dataInsert($strAcceptStuffingKeyQry);
			$data['msg']="<font color='green'><b>Stuffing Data Accepted.</b></font>";
		}
		
		if( $this->input->post('acceptChk') != "") // IF Stuffing Container not Checked.
		{
			for($j=0;$j<$countSelectedRow;$j++) {			
				$strAcceptStuffingQry="update ctmsmis.exp_stuffing_unit set accept_stuffing=1 where akey=".$this->input->post('acceptChk')[$j];
				$acceptStuffingStat=$this->bm->dataInsert($strAcceptStuffingQry);
				if($acceptStuffingStat==1)
					{
						$data['msg']="<font color='green'><b>Stuffing Data Accepted.</b></font>";
					}
					else
					{
						$data['msg']="<font color='red'><b>Stuffing Data Not Accepted.</b></font>";
					}
				
			}
		}
		echo $data['msg'];
	}
	
	//edi convert start
	
	//View Converted Edi List
	function ConvertedEDISearch()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
			//$this->load->view('header');
			//$this->load->view('welcomeview_1', $data);
			//$this->load->view('footer');
		}
		else
		{
			$this->load->model('ci_auth', 'bm', TRUE);
				
			/*********** Pagination for old myportpanel**************/
				
			$config = array();
			$config["total_rows"] = $this->bm->record_count_row('edi_master');
			$config["per_page"] = 5;
			$config["uri_segment"] = 3;
			
			$this->pagination->initialize($config);
			$page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;
			
			
				
			$ediDetails = $this->bm->myEdiDetail($config["per_page"], $page);
			$data["links"] = $this->pagination->create_links();	
			$data['ediDetails']=$ediDetails;
			$data['title']="CONVERTED EDI LIST";
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myEDIList',$data);
			$this->load->view('jsAssetsList');
		}
	}
	

	
	//view EDI details................
	function viewEDIDetails()
	{
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$exp_no=$this->uri->segment(3);
			//echo $exp_no;
			$this->load->model('ci_auth', 'bm', TRUE);
			/*********** Pagination**************/
				
			$config = array();
			$config["base_url"] = site_url("Report/viewEDIDetails/$exp_no");
			$config["total_rows"] = $this->bm->record_count_edi('edi_detail',$exp_no);
			$config["per_page"] = 5;
			$config["uri_segment"] = 4;
			
			$this->pagination->initialize($config);
			$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;
			//echo $config["total_rows"] ;
			/***********Pagination***************/
				
			$ediDetails = $this->bm->viewEDIDetails($exp_no,$config["per_page"], $page); ///ai khane error khachche
			$data['ediDetails']=$ediDetails;
               
			$data['title']="EDI CONTAINER DETAILS";
			$data["links"] = $this->pagination->create_links();
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myviewEDIDetailsList',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	//Search Edi List........................
	function myEDIListSearch()
	{
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$SearchCriteria=$this->input->post('SearchCriteria');
			$Searchdata=$this->input->post('Searchdata');
							
			$this->load->model('ci_auth', 'bm', TRUE);
			$ediDetails = $this->bm->myEDIListSearch($SearchCriteria, $Searchdata); 
			$data['ediDetails']=$ediDetails;
               
			$data['title']="CONVERTED EDI LIST";
			//$data['type']=$type;
				
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myEDIList',$data);
			$this->load->view('jsAssetsList');
		}
	}
		
	//view berth details................
	function viewBerthDetails()
	{
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$exp_no=$this->uri->segment(3);
			//echo $exp_no;
			$this->load->model('ci_auth', 'bm', TRUE);
			$ediDetails = $this->bm->viewBerthDetails($exp_no); ///ai khane error khachche
			$data['ediDetails']=$ediDetails;
               
			$data['title']="VESSEL BERTH DETAILS";
			//$data['type']=$type;
				
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myBerthDetailList',$data);
			$this->load->view('jsAssets');
		}
	}
	
	//Awal EDI Mdule start	
	
		//Edi Search
		//pcs_old and pcs are same
	function EDISearch($msg)
	{
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['msg']=$msg;
			$data['title']="SEARCH BY EXPORT ROTATION";
						
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myEdiSearchHTML',$data);
			$this->load->view('jsAssets');
		}
	}
	
	
		
		//Edi converter
	function EDIConverter($msg)
	{
		
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
			//$this->load->view('header');
			//$this->load->view('welcomeview_1', $data);
			//$this->load->view('footer');
		}
		else
		{
			
		 
			
			$exp_no1=$this->input->post('exp_no');
			$exp_no=str_replace("/","",$exp_no1);
			$this->load->model('ci_auth', 'bm', TRUE);
			list($berth,$vsl) = $this->bm->myEdiVslSearch($exp_no1); 
			$data['berth']=$berth;
			
			$data['vsl']=$vsl;
			
			$data['exp_no']=$exp_no;
			$data['exp_no1']=$exp_no1;
			$data['msg']=$msg;
			$data['title']="EDI CONVERT FROM EXCEL";
			$this->load->view('cssAssetsList');
			$this->load->view('myEdiConverterHTML',$data);
			$this->load->view('jsAssetsList');
		}
	}
		
		//Edi Converter
	function EDIFileConverter()
	{
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$login_id = $this->session->userdata('login_id');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
			//$this->load->view('header');
			//$this->load->view('welcomeview_1', $data);
			//$this->load->view('footer');
		}
		else
		{
			$data['title']="EDI CONVERT FROM EXCEL";
			
			$exp_no=$this->input->post('exp_no');
			
			error_reporting(E_ALL ^ E_NOTICE);			
			$exp_no1=str_replace("/","_",$exp_no);
			$filenm=$login_id."_".$exp_no1.".xls";
			$filetype=$_POST["filetype"];
			if ($_FILES["file"]["error"] > 0)
			{
			echo "Error: " . $_FILES["file"]["error"] . "<br />";
			return;
			}
			else
			move_uploaded_file($_FILES["fileToUpload"]["tmp_name"],$_SERVER['DOCUMENT_ROOT']."/resources/uploadfile/edi/".$_FILES["fileToUpload"]["name"]);
			
			rename($_SERVER['DOCUMENT_ROOT']."/resources/uploadfile/edi/".$_FILES["fileToUpload"]["name"],$_SERVER['DOCUMENT_ROOT']."/resources/uploadfile/edi/".$filenm);
			
			require_once('excel_reader2.php');
			$data = new Spreadsheet_Excel_Reader($_SERVER['DOCUMENT_ROOT']."/resources/uploadfile/edi/".$filenm);
			$rtn=$this->Checkxcel($data,$login_id,$exp_no);
			
			if($rtn==2){
				$rtn=$this->excelWritetoEDI($data,$login_id,$exp_no);					
			}
			else
			{
				
				$this->load->view('cssAssetsList');
				$this->load->view('myEdiConverterHTML',$data);
				$this->load->view('jsAssetsList');
			}
		}
	}
		
		// Read excel file to check error

	function Checkxcel($mydata,$login_id,$exp_no){
		$agent=$mydata->value(3,2);
		$voy=$mydata->value(4,2);
		$callSign=$mydata->value(5,2);
		$vsl_name=$mydata->value(6,2);
		$date=$mydata->value(7,2);
		$LOP=$mydata->value(8,2);
		$nextPort=$mydata->value(9,2);
		
		if($agent==""){
			$data['msg']="Agent Can not be blank on cell B3...";
			$this->EDIConverter($data['msg']);
			return ;
		}else if($voy==""){
			$data['msg']="Voys Can not be blank on cell B4...";
			$this->EDIConverter($data['msg']);
			return ;
		}else if($callSign==""){
			$data['msg']="Call Sign can not be blank on cell B5...";
			$this->EDIConverter($data['msg']);
			return ;
		}else if($vsl_name==""){
			$data['msg']="Vessel Name can not be blank on cell B6...";
			$this->EDIConverter($data['msg']);
			return ;
		}else if($date==""){
			$data['msg']="Date can not be blank on cell B7...";
			$this->EDIConverter($data['msg']);
			return ;
		}else if($LOP==""){
			$data['msg']="Load Port can not be blank on cell B8...";
			$this->EDIConverter($data['msg']);
			return ;
		}else if($nextPort==""){
			$data['msg']="Next Port can not be blank on cell B9...";
			$this->EDIConverter($data['msg']);
			return ;
		}else{
		return 2;
		}
		
	}

	function excelWritetoEDI($mydata,$login_id,$exp_no)
	{
		$agent=$mydata->value(3,2);
		$voy=$mydata->value(4,2);
		$callSign=$mydata->value(5,2);
		$vsl_name=$mydata->value(6,2);
		$date=$mydata->value(7,2);
		$date2=substr($date,2);
		$LOP=$mydata->value(8,2);
		$nextPort=$mydata->value(9,2);
		$presentTime=date("is");
		$j=0;
		//$todate=date("YmdHis");
		//$vsl=str_replace(" ","_",$vsl_name);
		$exp_no1=str_replace("/","",$exp_no);
		$rot=str_replace("/","",$exp_no);
		$file=$login_id."_".$exp_no1;
		$myFile=$file.'.edi';
		
		// if(file_exists($_SERVER['DOCUMENT_ROOT']."/myportpanel/resources/uploadfile/xml/".$myFile)){
			// unlink($_SERVER['DOCUMENT_ROOT']."/myportpanel/resources/uploadfile/xml/".$myFile);
		// }
		
		if(file_exists($_SERVER['DOCUMENT_ROOT']."/pcs/resources/uploadfile/xml/".$myFile)){
			unlink($_SERVER['DOCUMENT_ROOT']."/pcs/resources/uploadfile/xml/".$myFile);
		}
		
		$fh= fopen($_SERVER['DOCUMENT_ROOT']."/pcs/resources/uploadfile/xml/".$myFile , 'a');
		$stringData ="UNB+UNOA:2+".$agent."+".$agent."+".$date2.":".$presentTime."+0+++++".$agent."'\n";
		fwrite($fh, $stringData);
		$j++;
		$stringData ="UNH+1+BAPLIE:D:95B:UN:SMDG20'\n";
		fwrite($fh, $stringData);
		$j++;
		$stringData ="BGM++0+9'\n";
		fwrite($fh, $stringData);
		$j++;
		$stringData ="DTM+137:" .$date.$presentTime.":201'\n";
		fwrite($fh, $stringData);
		$j++;
		$stringData ="TDT+20+".$voy. "+++".$agent.":172:20+++".$callSign.":103:ZZZ:".$vsl_name. "'\n";
		fwrite($fh, $stringData);
		$j++;
		$stringData ="LOC+5+" .$LOP. ":139:6'\n";
		fwrite($fh, $stringData);
		$j++;
		$stringData ="LOC+61+" .$nextPort. ":139:6'\n";
		fwrite($fh, $stringData);
		$j++;
		$stringData ="DTM+178:" .$date.$presentTime.":201'\n";
		fwrite($fh, $stringData);
		$j++;
		//insert into edi_master table in model
		$this->load->model('ci_auth', 'bm', TRUE);
		$ediMasterinsert = $this->bm->myEdiMasterInsert($agent,$voy, $callSign,$vsl_name,$date,$LOP,$nextPort,$login_id,$rot); 
		
		$totalrow=0;
		$excelrow=$mydata->rowcount(0);
		$i=12;

		while($i<=$excelrow)
		{
			if( $mydata->value($i,1)!="" )
			$totalrow=$totalrow+1;
			$i=$i+1;
		}
		
		$row=12;
		
		while($row<($totalrow+12))
		{
			
			$container_no=$mydata->value($row,1);
			$iso=$mydata->value($row,2);
			$liner=$mydata->value($row,3);
			$status=$mydata->value($row,4);
			$weight=$mydata->value($row,5);
			$booking=$mydata->value($row,6);
			$seal=$mydata->value($row,7);
			$imdg=$mydata->value($row,8);
			$unno=$mydata->value($row,9);
			$temp=$mydata->value($row,10);
			$loadport=$mydata->value($row,11);
			$dischargeport=$mydata->value($row,12);
			$st=$mydata->value($row,13);
			
			$container_no=trim($container_no);
			$iso=trim($iso);
			$liner=trim($liner);
			$status=trim($status);
			$weight=trim($weight);
			$booking=trim($booking);
			$seal=trim($seal);
			$imdg=trim($imdg);
			$unno=trim($unno);
			$temp=trim($temp);
			$loadport=trim($loadport);
			$dischargeport=trim($dischargeport);
			$st=trim($st);
			
						
			
			
			$convertWeight=$weight*1000;
			/*$num_length = strlen((string)$convertWeight);
			if($num_length>7){
				$convertWeight=sprintf('%.2E',$convertWeight);
				$convertWeight=str_replace('+','',$convertWeight);
				
			}*/
			
			
			if(substr($status,0,1)=="F"){
				$cnt_status="5";
			}else{
				$cnt_status="4";
			}
			
			$stringData="LOC+147+" .$st. "::5'\n"; 
			fwrite($fh, $stringData);
			$j++;
			$stringData="MEA+WT++KGM:".$convertWeight. "'\n";
			fwrite($fh, $stringData);
			$j++;
			if($temp!=""){
				$stringData="TMP+2+".$temp.":CEL'\n";
				fwrite($fh, $stringData);
				$j++;					
			}
			$stringData="LOC+9+".$loadport. "'\n";
			fwrite($fh, $stringData);
			$j++;
			$stringData="LOC+11+" .$dischargeport. "'\n";
			fwrite($fh, $stringData);
			$j++;
			$stringData="LOC+83+".$dischargeport. "'\n";
			fwrite($fh, $stringData);
			$j++;
			$stringData="RFF+BM:1'\n"; 
			fwrite($fh, $stringData);
			$j++;
			$stringData="EQD+CN+".$container_no. "+".$iso. "+++".$cnt_status. "'\n";
			fwrite($fh, $stringData);
			$j++;				
			$stringData="NAD+CA+" .$liner. ":172:ZZZ'\n";
			fwrite($fh, $stringData);
			$j++;
			if(!($imdg=="" and $unno=="")){
			$stringData="DGS+IMD+".$imdg. "+".$unno. "+2'\n";
			fwrite($fh, $stringData);
			$j++;
			
			//echo $container_no;
			//$this->load->model('ci_auth', 'bm2', TRUE);
			//$ediMasterinsert = $this->bm->myEdiDetailInsert($container_no,$iso, $liner,$status,$weight,$booking,$seal,$imdg,$unno,$temp,$loadport,$dischargeport,$st,$login_id,$vsl_name,$rot); 
			
		
			}	
			$ediMasterinsert = $this->bm->myEdiDetailInsert($container_no,$iso, $liner,$status,$weight,$booking,$seal,$imdg,$unno,$temp,$loadport,$dischargeport,$st,$login_id,$vsl_name,$rot); 
			$row=$row+1;
		}
		$stringData="UNT+".$j."+1'\n";
		fwrite($fh, $stringData);
		$stringData="UNZ+1+0'";
		fwrite($fh, $stringData);
		fclose($fh);
		
		//$myFile="abcd.pdf";
		$ip = $this->input->ip_address();
		//echo $ip;
		//$converted_EDI="http://192.168.16.42/myportpaneltest/resources/edi/".$myFile;
		// $converted_EDI='http://'.$_SERVER['SERVER_ADDR']."/myportpanel/resources/uploadfile/xml/".$myFile;
		$converted_EDI='http://'.$_SERVER['SERVER_ADDR']."/pcs/resources/uploadfile/xml/".$myFile;
		$data['msg']="<a href=".$converted_EDI." target='_blank' download>Download EDI File for Vessel $vsl_name and Rotation $exp_no</a>";
		$data['exp_no']=$exp_no;
		//$this->EDIConverter($data['msg']);
		$this->EDISearch($data['msg']);
		//$this->load->view('header2');
		//$this->load->view('myEdiConverterHTML',$data);
		//$this->load->view('footer');
		//echo "<br>".$j;
	}
		
		//Awal EDI Mdule end
		
	//Search Edi Detail List........................
	function myEDIDetailSearch()
	{
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$SearchCriteria=$this->input->post('SearchCriteria');
			$Searchdata=$this->input->post('Searchdata');
							
			$this->load->model('ci_auth', 'bm', TRUE);
			$ediDetails = $this->bm->myEDIDetailSearch($SearchCriteria, $Searchdata); ///ai khane error khachche
			$data['ediDetails']=$ediDetails;
               
			$data['title']="CONVERTED EDI LIST...";
			$data['type']=$type;
				
			$this->load->view('header2');
			$this->load->view('myviewEDIDetailsList',$data);
			$this->load->view('footer');
		}
	}
		
	//edi convert end
	
		
	//Vessel Bill List start
	
	function vesselBillList()
	{
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
			$agentCode = $this->session->userdata('agentCode'); 
			
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{	
				$agentCode = $this->session->userdata('agentCode'); 

			$login_id = $this->session->userdata('login_id');
			$data['title']="VESSEL BILL LIST...";
			
			$sql_row_num="select count(*) as rtnValue from ctmsmis.mis_vsl_billing_detail where agent_code='$login_id'";
			
			//echo $sql_row_num;
			$segment_three = $this->uri->segment(3);
			
			$config = array();
			$config["base_url"] = site_url("Report/vesselBillList/$segment_three");
			$config["total_rows"] = $this->bm->dataReturnDb2($sql_row_num);
			$config["per_page"] = 20;
			$offset = $this->uri->segment(4, 0);
			$config["uri_segment"] = 4;
			$limit=$config["per_page"];
			
			$this->pagination->initialize($config);
			$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;
			$start=$page;
			$sql_bill_list = "";
			if($login_id=="devsh")
			{
				$sql_bill_list="select draftNumber,IFNULL(finalNumber,draftNumber) as finalNumber,rotation,vsl_name,bill_name,ata,atd,berth,agent_code,agent_name,flag,cnt_code,bill_type from
				ctmsmis.mis_vsl_billing_detail order by draftNumber DESC limit $start,$limit";
			}
			else{
				 $sql_bill_list="select draftNumber,IFNULL(finalNumber,draftNumber) as finalNumber,rotation,vsl_name,bill_name,ata,atd,berth,agent_code,agent_name,flag,cnt_code,bill_type from
				ctmsmis.mis_vsl_billing_detail where agent_code='$agentCode' order by draftNumber DESC limit $start,$limit";
			}
			$rslt_bill_list=$this->bm->dataSelectDb2($sql_bill_list);
			
			$data['rslt_bill_list']=$rslt_bill_list;
			$data['start']=$start;
			$data["links"] = $this->pagination->create_links();
			$data['agentCode']=$agentCode;
			$this->load->view('cssAssetsList');
			$this->load->view('vesselBillList',$data);
			$this->load->view('jsAssetsList');
			
			//$this->load->view('header5');
			//$this->load->view('vesselBillList',$data);
			//$this->load->view('footer_1');
		}
	}
	
	function searchBill()
	{
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id = $this->session->userdata('login_id');
			$data['title']="VESSEL BILL LIST...";
			
			$rotation=trim($this->input->post('rotation'));
			$sql_search_bill="";
			if($login_id=="devsh")
			{
				$sql_search_bill="select draftNumber,IFNULL(finalNumber,draftNumber) as finalNumber,rotation,vsl_name,bill_name,ata,atd,berth,agent_code,agent_name,flag,cnt_code,bill_type 
				from ctmsmis.mis_vsl_billing_detail where rotation='$rotation'";
			}
			else{
				$sql_search_bill="select draftNumber,IFNULL(finalNumber,draftNumber) as finalNumber,rotation,vsl_name,bill_name,ata,atd,berth,agent_code,agent_name,flag,cnt_code,bill_type 
				from ctmsmis.mis_vsl_billing_detail where rotation='$rotation' and agent_code='$login_id'";
			}
			
			$rslt_bill_list=$this->bm->dataSelect($sql_search_bill);
			
			$data['rslt_bill_list']=$rslt_bill_list; 
			$this->load->view('header5');
			$this->load->view('vesselBillList',$data);
			$this->load->view('footer_1');
			
		}
	}
	
	function viewBill()
	{
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$draftNumber=$this->uri->segment(3);	
			$cnt_code=$this->uri->segment(4);	
			$bill_type=$this->uri->segment(5);				
			
			//echo "Draft no-".$draftNumber."<br/>";
			//echo "cont no-".$cnt_code."<br/>";
			//echo "bill type-".$bill_type."<br/>";
			
			
			if($bill_type==101)
			{
				if($cnt_code=='PBD')
				{
					$bill_sql="select invoiceDesc,draftNumber,vesselName,ibVoyageNbr,captain,date(ATD) as ATD,date(ATA) as ATA,customerName,payeecustomerkey,agent_address,grossRevenueTons,
								exchangeRate,date(created) as created,berth,flagcountry,cargo,ffd,description,glcode,rateBilled,quantityUnit,sum(quantityBilled) as quantityBilled,
								creator,sum(totbsd) as totbsd,status
								from(
								select bill_name as invoiceDesc,ifnull(finalNumber,if(cnt_code='BD' or cnt_code='PBD',
								concat('JL/',mis_vsl_billing_detail.draftNumber,'-',substr(billing_date,4,1)),
								concat('JF/',mis_vsl_billing_detail.draftNumber,'-',substr(billing_date,4,1)))) as draftNumber,
								vsl_name as vesselName,rotation as ibVoyageNbr,master_name as captain,atd as ATD,ata as ATA,agent_name as customerName,
								concat(agent_code,'(',ifnull(agent_alias_id,''),')') as payeecustomerkey,agent_address,grt as grossRevenueTons,exchangeRate as exchangeRate,
								date(billing_date) as created,berth as berth,flag as flagcountry,deck_cargo as cargo,date(oa_date) as ffd,
								description as description,if(description like 'PCT HARBOUR CRANE%','5000',concat(gl_code,'0')) as glcode,rate as rateBilled,bas as quantityUnit,
								IF(description LIKE 'BERTH_HIRE_1%',mis_vsl_billing_detail.unit,mis_vsl_billing_sub_detail.unit_for_pilot) as quantityBilled,
								if(finalNumber is null,creator,drft_update_by) as creator,
								if(description LIKE 'BERTH_HIRE_1%',(rate*unit),(rate*mis_vsl_billing_sub_detail.unit_for_pilot*exchangeRate)) as totbsd, 'DRAFT' as status
								from ctmsmis.mis_vsl_billing_detail
								inner join ctmsmis.mis_vsl_billing_sub_detail on mis_vsl_billing_sub_detail.draftNumber=mis_vsl_billing_detail.draftNumber 
								where mis_vsl_billing_detail.draftNumber='$draftNumber' and bill_type=101 order by draftNumber,description) as tbl group by description";
								
					$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";			
				}
				else
				{
					// $bill_sql="select bill_name as invoiceDesc,if(cnt_code='BD',concat('JL/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1)),
								// concat('JF/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1))) as draftNumber,
								// vsl_name as vesselName,rotation as ibVoyageNbr,master_name as captain,atd as ATD,ata as ATA,agent_name as customerName,
								// concat(agent_code,'(',ifnull(agent_alias_id,''),')') as payeecustomerkey,agent_address,grt as grossRevenueTons,
								// exchangeRate as exchangeRate,date(billing_date) as created,berth as berth,flag as flagcountry,deck_cargo as cargo,date(oa_date) as ffd,
								// description as description,gl_code as glcode,rate as rateBilled,bas as quantityUnit,
								// IF(description LIKE 'BERTH_HIRE_1%',mis_vsl_billing_detail.unit,mis_vsl_billing_sub_detail.unit_for_pilot) as quantityBilled,
								// if(description LIKE 'BERTH_HIRE_1%',((grt+ifnull(deck_cargo,0))*rate*unit),(rate*mis_vsl_billing_sub_detail.unit_for_pilot)) as totusd,
								// creator,if(description LIKE 'BERTH_HIRE_1%',((grt+ifnull(deck_cargo,0))*rate*unit*exchangeRate),
								// (rate*mis_vsl_billing_sub_detail.unit_for_pilot*exchangeRate)) as totbsd,  
								// 'DRAFT' as status from ctmsmis.mis_vsl_billing_detail
								// inner join ctmsmis.mis_vsl_billing_sub_detail on ctmsmis.mis_vsl_billing_sub_detail.draftNumber=ctmsmis.mis_vsl_billing_detail.draftNumber 
								// where ctmsmis.mis_vsl_billing_detail.draftNumber='$draftNumber' and bill_type=101 order by draftNumber,description";
								
					$bill_sql="select invoiceDesc,draftNumber,vesselName,ibVoyageNbr,captain,ATD,ATA,customerName,payeecustomerkey,agent_address,grossRevenueTons,
								exchangeRate,created,berth,flagcountry,cargo,ffd,description,glcode,rateBilled,quantityUnit,sum(quantityBilled) as quantityBilled,
								creator,round(sum(totusd),4) as totusd,round(sum(totbsd),2) as totbsd,round(sum(vatbd),2) as vatbd,status
								from(
								select bill_name as invoiceDesc,if(cnt_code='BD',concat('JL/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1)),concat('JF/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1))) as draftNumber,vsl_name as vesselName,rotation as ibVoyageNbr,master_name as captain,atd as ATD,ata as ATA,agent_name as customerName,concat(agent_code,'(',ifnull(agent_alias_id,''),')') as payeecustomerkey,agent_address,grt as grossRevenueTons,exchangeRate as exchangeRate,billing_date as created,berth as berth,flag as flagcountry,deck_cargo as cargo,oa_date as ffd,description as description,gl_code as glcode,rate as rateBilled,bas as quantityUnit,
								IF(description LIKE 'BERTH_HIRE_1%',mis_vsl_billing_detail.unit,mis_vsl_billing_sub_detail.unit_for_pilot) as quantityBilled,if(description LIKE 'BERTH_HIRE_1%',((grt+ifnull(deck_cargo,0))*rate*unit),(rate*mis_vsl_billing_sub_detail.unit_for_pilot)) as totusd,creator,
								if(description LIKE 'BERTH_HIRE_1%',((grt+ifnull(deck_cargo,0))*rate*unit*exchangeRate),(rate*mis_vsl_billing_sub_detail.unit_for_pilot*exchangeRate)) as totbsd,(select if(date(ata)>='2017-12-27',(totbsd*15)/100,'0')) as vatbd,'DRAFT' as status from ctmsmis.mis_vsl_billing_detail
								inner join ctmsmis.mis_vsl_billing_sub_detail on ctmsmis.mis_vsl_billing_sub_detail.draftNumber=ctmsmis.mis_vsl_billing_detail.draftNumber where ctmsmis.mis_vsl_billing_detail.draftNumber='$draftNumber' and bill_type=101 order by draftNumber,description) as tbl group by description";
								
					$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";			

				}
			}
			else if($bill_type==102)
			{
				if($cnt_code=='PBD')
				{
					$bill_sql="select invoiceDesc,draftNumber,vesselName,ibVoyageNbr,captain,ATD,ATA,customerName,payeecustomerkey,agent_address,
					grossRevenueTons,exchangeRate,created,flagcountry,cargo,ffd,onboundpiloton,onboundpilotoff,inboundpiloton,inboundpilotoff,description,
					glcode,rateBilled,quantityUnit,quantityBilled,sum(move) as move,sum(bdChraged) as bdChraged,
					if((description='BERTHING' or description='SHIFT VESSEL BERTH'),((bdChraged*15)/100),0) as bdVat,status,
					creator from 
					(
					select bill_name as invoiceDesc,ifnull(finalNumber,if(cnt_code='BD' or cnt_code='PBD',
					concat('PL/',mis_vsl_billing_detail.draftNumber,'-',substr(billing_date,4,1)),concat('PF/',mis_vsl_billing_detail.draftNumber,'-',substr(billing_date,4,1)))) as draftNumber,
					vsl_name as vesselName,rotation as ibVoyageNbr,master_name as captain,date(atd) as ATD,date(ata) as ATA,agent_name as customerName,concat(agent_code,'(',ifnull(agent_alias_id,''),')') as payeecustomerkey,
					agent_address,grt as grossRevenueTons,exchangeRate as exchangeRate,billing_date as created,flag as flagcountry,deck_cargo as cargo,date(oa_date) as ffd, DATE_FORMAT(pilot_ob_onboard,'%H:%i') as onboundpiloton,
					DATE_FORMAT(pilot_ob_offboard,'%H:%i') as onboundpilotoff,
					DATE_FORMAT(pilot_ib_onboard,'%H:%i') as inboundpiloton, DATE_FORMAT(pilot_ib_offboard,'%H:%i')  as inboundpilotoff,if(description='Port Dues for Sea-going Vessel',
					substr(description,1,9),description) as description,concat(gl_code,'0') as glcode,rate as rateBilled,bas as quantityUnit,unit_for_pilot as quantityBilled,move,(rate*unit_for_pilot*move*exchangeRate) as bdChraged,
					'DRAFT' as status,if(finalNumber is null,creator,drft_update_by) as creator
					from ctmsmis.mis_vsl_billing_detail inner join ctmsmis.mis_vsl_billing_sub_detail on ctmsmis.mis_vsl_billing_sub_detail.draftNumber=ctmsmis.mis_vsl_billing_detail.draftNumber 
					where mis_vsl_billing_detail.draftNumber='$draftNumber' 
					and bill_type=102 and description not like '%BIWTA%') as tbl group by description";
					$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";			
			
				}
				else
				{
					// $bill_sql="select invoiceDesc,draftNumber,vesselName,ibVoyageNbr,captain,ATD,ATA,customerName,payeecustomerkey,agent_address,grossRevenueTons,
								// exchangeRate,created,flagcountry,cargo,ffd,DATE_FORMAT(onboundpiloton,'%H:%i')as onboundpiloton,DATE_FORMAT(onboundpilotoff,'%H:%i')as  onboundpilotoff,
								// DATE_FORMAT(inboundpiloton,'%H:%i') as inboundpiloton,DATE_FORMAT(inboundpilotoff,'%H:%i') as inboundpilotoff,description,glcode,rateBilled,quantityUnit,
								// if(description like 'Tug%',sum(quantityBilled),quantityBilled) as quantityBilled,if(description='PILOTAGE FEE',sum(move),move) as move,sum(totusd) as totusd,
								// sum(bdChraged) as bdChraged,if((description='BERTHING' or description='SHIFT VESSEL BERTH'),((totusd*15)/100),0) as vatusd, 
								// (select vatusd*exchangeRate) as bdVat,status,creator from (
								// select bill_name as invoiceDesc,if(cnt_code='BD',concat('PL/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1)),
								// concat('PF/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1))) as draftNumber,vsl_name as vesselName,
								// rotation as ibVoyageNbr,master_name as captain,date(atd) as ATD,date(ata) as ATA,agent_name as customerName,
								// concat(agent_code,'(',ifnull(agent_alias_id,''),')') as payeecustomerkey,agent_address,grt as grossRevenueTons,exchangeRate as exchangeRate,
								// date(billing_date) as created,flag as flagcountry,deck_cargo as cargo,oa_date as ffd,pilot_ob_onboard as onboundpiloton,pilot_ob_offboard as onboundpilotoff,
								// pilot_ib_onboard as inboundpiloton,pilot_ib_offboard as inboundpilotoff,description as description,concat(gl_code,'0') as glcode,
								// rate as rateBilled,bas as quantityUnit,
								// unit_for_pilot as quantityBilled,move,(rate*unit_for_pilot*move) as totusd,
								// (rate*unit_for_pilot*move*exchangeRate) as bdChraged,
								// 'DRAFT' as status,creator
								// from ctmsmis.mis_vsl_billing_detail inner join ctmsmis.mis_vsl_billing_sub_detail on ctmsmis.mis_vsl_billing_sub_detail.draftNumber=ctmsmis.mis_vsl_billing_detail.draftNumber 
								// where ctmsmis.mis_vsl_billing_detail.draftNumber='$draftNumber'  and bill_type=102) as tbl group by description";
								
					$bill_sql="select invoiceDesc,draftNumber,vesselName,ibVoyageNbr,captain,ATD,ATA,customerName,payeecustomerkey,agent_address,grossRevenueTons,exchangeRate,created,flagcountry,cargo,ffd,onboundpiloton,onboundpilotoff,inboundpiloton,inboundpilotoff,description,glcode,rateBilled,quantityUnit,if(description like 'Tug%' or description='Additional Tug Charge for Unberthing',sum(quantityBilled),quantityBilled) as quantityBilled,if(description ='PILOTAGE FEE' or description ='Night Navigation Fee' or description like 'SHIFT%',sum(move),move) as move,round(sum(totusd),4) as totusd,round(sum(bdChraged),2) as bdChraged,
					round(sum(vatusd),4) as vatusd,
					round((sum(bdChraged)*15/100),2) as bdVat,status,creator 
					from (
					select bill_name as invoiceDesc,if(cnt_code='BD',concat('PL/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1)),concat('PF/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1))) as draftNumber,vsl_name as vesselName,rotation as ibVoyageNbr,master_name as captain,atd as ATD,ata as ATA,agent_name as customerName,concat(agent_code,'(',ifnull(agent_alias_id,''),')') as payeecustomerkey,agent_address,grt as grossRevenueTons,exchangeRate as exchangeRate,billing_date as created,flag as flagcountry,deck_cargo as cargo,oa_date as ffd,pilot_ob_onboard as onboundpiloton,pilot_ob_offboard as onboundpilotoff,
					pilot_ib_onboard as inboundpiloton,pilot_ib_offboard as inboundpilotoff,description as description,concat(gl_code,'0') as glcode,rate as rateBilled,bas as quantityUnit,
					unit_for_pilot as quantityBilled,move,(rate*unit_for_pilot*move) as totusd,
					(rate*unit_for_pilot*move*exchangeRate) as bdChraged,
					'DRAFT' as status,creator,if(date(ata)>='2017-12-27',1,0) as vtdt,
					(select if(vtdt=1,((totusd*15)/100),if((description='BERTHING' or description='SHIFT VESSEL BERTH'),((totusd*15)/100),0)))  as vatusd
					from ctmsmis.mis_vsl_billing_detail inner join ctmsmis.mis_vsl_billing_sub_detail on ctmsmis.mis_vsl_billing_sub_detail.draftNumber=ctmsmis.mis_vsl_billing_detail.draftNumber where ctmsmis.mis_vsl_billing_detail.draftNumber='$draftNumber'  and bill_type=102) as tbl group by description";
					
					$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";			

					//echo $bill_sql;
					//return;
				}
			}
			else if($bill_type==103)
			{
				//rptJettyChargeDraftInvoice
				
				$bill_sql="select 'DRAFT' as status,bill_name as invoiceDesc,if(cnt_code='BD',concat('JL/',mis_vsl_billing_detail.draftNumber,'-5'),
					concat('JF/',mis_vsl_billing_detail.draftNumber,'-5')) as draftNumber,vsl_name as ibCarrierName,rotation as ibVisitId,
					master_name as captain,DATE_FORMAT(atd,'%Y-%m-%d %H:%i')as ibCarrierATD,DATE_FORMAT(ata,'%Y-%m-%d %H:%i') as ibCarrierATA,agent_name as customerName,
					concat(agent_code,'(',ifnull(agent_alias_id,''),')') as payeecustomerkey, agent_address, grt as grt,exchangeRate as exchangeRate,
					date(billing_date) as created,berth as berth,flag as flagcountry,ifnull(deck_cargo,0) as cargo,date(oa_date) as ffd,description as description,
					gl_code as glcode,rate as rateBilled,bas as bas,unit_for_pilot as quantityBilled,(rate*unit_for_pilot)as totusd,
					(rate*unit_for_pilot*exchangeRate)as totbsd,creator, now() as printTime from
					ctmsmis.mis_vsl_billing_detail inner join ctmsmis.mis_vsl_billing_sub_detail on
					ctmsmis.mis_vsl_billing_sub_detail.draftNumber=ctmsmis.mis_vsl_billing_detail.draftNumber 
					where ctmsmis.mis_vsl_billing_detail.draftNumber='$draftNumber' and bill_type=103 and unit_for_pilot>0 
					order by substring(description,9,3) desc,substring(description,13,2) asc";
					
				$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";			
	
			}
			else if($bill_type==104)
			{
				//rptJettyMiscChargeDraftInvoice
				$bill_sql="select 'DRAFT' as status,bill_name as invoiceDesc,if(cnt_code='BD',concat('JL/',mis_vsl_billing_detail.draftNumber,'-5'),
					concat('JF/',mis_vsl_billing_detail.draftNumber,'-5')) as draftNumber,vsl_name as ibCarrierName,rotation as ibVisitId,master_name as captain,
					DATE_FORMAT(atd,'%Y-%m-%d %H:%i') as ibCarrierATD,DATE_FORMAT(ata,'%Y-%m-%d %H:%i') as ibCarrierATA,agent_name as customerName,agent_code as payeecustomerkey,grt as grt,exchangeRate as exchangeRate,
					date(billing_date) as created,berth as berth,flag as flagcountry,ifnull(deck_cargo,0) as cargo,oa_date as ffd,description as description,gl_code as glcode,
					rate as rateBilled,bas as bas,unit_for_pilot as quantityBilled,(rate*unit_for_pilot)as totusd,(rate*unit_for_pilot*exchangeRate)as totbsd,creator from
                    ctmsmis.mis_vsl_billing_detail inner join ctmsmis.mis_vsl_billing_sub_detail on ctmsmis.mis_vsl_billing_sub_detail.draftNumber=ctmsmis.mis_vsl_billing_detail.draftNumber 
					where ctmsmis.mis_vsl_billing_detail.draftNumber='$draftNumber' and bill_type=104";
					
				$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";			
	
			}		
		
			$bill_rslt=$this->bm->dataSelect($bill_sql);	
			$print_time=$this->bm->dataSelect($bill_print_time);
			
			//$this->data['bill_rslt']=$bill_rslt;
			//$this->data['print_time']=$print_time;
			
			$data['bill_rslt']=$bill_rslt;
			$data['print_time']=$print_time;
			
			$data['draftNumber']=$draftNumber;
			$data['cnt_code']=$cnt_code;
			$data['bill_type']=$bill_type;
			
			if($bill_type==101)
			{
				if($cnt_code=='PBD')
				{
					$this->load->view('cssAssetsList');
					$this->load->view('rptJettyOccupancyDraftInvoicePan_vslBill',$data);
					$this->load->view('jsAssetsList');
					
				}
				else
				{
					$this->load->view('cssAssetsList');
					$this->load->view('rptJettyOccupancyDraftInvoice',$data);
					$this->load->view('jsAssetsList');
				}
			}
			else if($bill_type==102)
			{
				if($cnt_code=='PBD')
				{
					$this->load->view('cssAssetsList');
					$this->load->view('rptNonJettyDraftInvoicePan',$data);
					$this->load->view('jsAssetsList');
				}
				else
				{
					$this->load->view('cssAssetsList');
					$this->load->view('rptNonJettyDraftInvoice',$data);
					$this->load->view('jsAssetsList');
				}
			}
			else if($bill_type==103)
			{
				$this->load->view('cssAssetsList');
				$this->load->view('rptJettyChargeDraftInvoice',$data);
				$this->load->view('jsAssetsList');
			}
			else if($bill_type==104)
			{	
				//$html=$this->load->view('rptJettyMiscChargeDraftInvoice.php',$this->data, true); //load the pdf_output.php by passing our data and get all data in $html varriable.
				//$pdfFilePath ="VesselBill-".time()."-download.pdf";

				$this->load->view('cssAssetsList');
				$this->load->view('rptJettyMiscChargeDraftInvoice',$data);
				$this->load->view('jsAssetsList');
			}
		}
	}
	
	function viewBillPrint()
	{
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$draftNumber=$this->input->post('draftNumber');				
			$cnt_code=$this->input->post('cnt_code');				
			$bill_type=$this->input->post('bill_type');				
			
			//echo "Draft no-".$draftNumber."<br/>";
			//echo "cont no-".$cnt_code."<br/>";
			//echo "bill type-".$bill_type."<br/>";
			
			
			if($bill_type==101)
			{
				if($cnt_code=='PBD')
				{
					$bill_sql="select invoiceDesc,draftNumber,vesselName,ibVoyageNbr,captain,date(ATD) as ATD,date(ATA) as ATA,customerName,payeecustomerkey,agent_address,grossRevenueTons,
								exchangeRate,date(created) as created,berth,flagcountry,cargo,ffd,description,glcode,rateBilled,quantityUnit,sum(quantityBilled) as quantityBilled,
								creator,sum(totbsd) as totbsd,status
								from(
								select bill_name as invoiceDesc,ifnull(finalNumber,if(cnt_code='BD' or cnt_code='PBD',
								concat('JL/',mis_vsl_billing_detail.draftNumber,'-',substr(billing_date,4,1)),
								concat('JF/',mis_vsl_billing_detail.draftNumber,'-',substr(billing_date,4,1)))) as draftNumber,
								vsl_name as vesselName,rotation as ibVoyageNbr,master_name as captain,atd as ATD,ata as ATA,agent_name as customerName,
								concat(agent_code,'(',ifnull(agent_alias_id,''),')') as payeecustomerkey,agent_address,grt as grossRevenueTons,exchangeRate as exchangeRate,
								date(billing_date) as created,berth as berth,flag as flagcountry,deck_cargo as cargo,date(oa_date) as ffd,
								description as description,if(description like 'PCT HARBOUR CRANE%','5000',concat(gl_code,'0')) as glcode,rate as rateBilled,bas as quantityUnit,
								IF(description LIKE 'BERTH_HIRE_1%',mis_vsl_billing_detail.unit,mis_vsl_billing_sub_detail.unit_for_pilot) as quantityBilled,
								if(finalNumber is null,creator,drft_update_by) as creator,
								if(description LIKE 'BERTH_HIRE_1%',(rate*unit),(rate*mis_vsl_billing_sub_detail.unit_for_pilot*exchangeRate)) as totbsd, 'DRAFT' as status
								from ctmsmis.mis_vsl_billing_detail
								inner join ctmsmis.mis_vsl_billing_sub_detail on mis_vsl_billing_sub_detail.draftNumber=mis_vsl_billing_detail.draftNumber 
								where mis_vsl_billing_detail.draftNumber='$draftNumber' and bill_type=101 order by draftNumber,description) as tbl group by description";
								
					$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";			
				}
				else
				{
					// $bill_sql="select bill_name as invoiceDesc,if(cnt_code='BD',concat('JL/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1)),
								// concat('JF/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1))) as draftNumber,
								// vsl_name as vesselName,rotation as ibVoyageNbr,master_name as captain,atd as ATD,ata as ATA,agent_name as customerName,
								// concat(agent_code,'(',ifnull(agent_alias_id,''),')') as payeecustomerkey,agent_address,grt as grossRevenueTons,
								// exchangeRate as exchangeRate,date(billing_date) as created,berth as berth,flag as flagcountry,deck_cargo as cargo,date(oa_date) as ffd,
								// description as description,gl_code as glcode,rate as rateBilled,bas as quantityUnit,
								// IF(description LIKE 'BERTH_HIRE_1%',mis_vsl_billing_detail.unit,mis_vsl_billing_sub_detail.unit_for_pilot) as quantityBilled,
								// if(description LIKE 'BERTH_HIRE_1%',((grt+ifnull(deck_cargo,0))*rate*unit),(rate*mis_vsl_billing_sub_detail.unit_for_pilot)) as totusd,
								// creator,if(description LIKE 'BERTH_HIRE_1%',((grt+ifnull(deck_cargo,0))*rate*unit*exchangeRate),
								// (rate*mis_vsl_billing_sub_detail.unit_for_pilot*exchangeRate)) as totbsd,  
								// 'DRAFT' as status from ctmsmis.mis_vsl_billing_detail
								// inner join ctmsmis.mis_vsl_billing_sub_detail on ctmsmis.mis_vsl_billing_sub_detail.draftNumber=ctmsmis.mis_vsl_billing_detail.draftNumber 
								// where ctmsmis.mis_vsl_billing_detail.draftNumber='$draftNumber' and bill_type=101 order by draftNumber,description";
								
					$bill_sql="select invoiceDesc,draftNumber,vesselName,ibVoyageNbr,captain,ATD,ATA,customerName,payeecustomerkey,agent_address,grossRevenueTons,
								exchangeRate,created,berth,flagcountry,cargo,ffd,description,glcode,rateBilled,quantityUnit,sum(quantityBilled) as quantityBilled,
								creator,round(sum(totusd),4) as totusd,round(sum(totbsd),2) as totbsd,round(sum(vatbd),2) as vatbd,status
								from(
								select bill_name as invoiceDesc,if(cnt_code='BD',concat('JL/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1)),concat('JF/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1))) as draftNumber,vsl_name as vesselName,rotation as ibVoyageNbr,master_name as captain,atd as ATD,ata as ATA,agent_name as customerName,concat(agent_code,'(',ifnull(agent_alias_id,''),')') as payeecustomerkey,agent_address,grt as grossRevenueTons,exchangeRate as exchangeRate,billing_date as created,berth as berth,flag as flagcountry,deck_cargo as cargo,oa_date as ffd,description as description,gl_code as glcode,rate as rateBilled,bas as quantityUnit,
								IF(description LIKE 'BERTH_HIRE_1%',mis_vsl_billing_detail.unit,mis_vsl_billing_sub_detail.unit_for_pilot) as quantityBilled,if(description LIKE 'BERTH_HIRE_1%',((grt+ifnull(deck_cargo,0))*rate*unit),(rate*mis_vsl_billing_sub_detail.unit_for_pilot)) as totusd,creator,
								if(description LIKE 'BERTH_HIRE_1%',((grt+ifnull(deck_cargo,0))*rate*unit*exchangeRate),(rate*mis_vsl_billing_sub_detail.unit_for_pilot*exchangeRate)) as totbsd,(select if(date(ata)>='2017-12-27',(totbsd*15)/100,'0')) as vatbd,'DRAFT' as status from ctmsmis.mis_vsl_billing_detail
								inner join ctmsmis.mis_vsl_billing_sub_detail on ctmsmis.mis_vsl_billing_sub_detail.draftNumber=ctmsmis.mis_vsl_billing_detail.draftNumber where ctmsmis.mis_vsl_billing_detail.draftNumber='$draftNumber' and bill_type=101 order by draftNumber,description) as tbl group by description";
								
					$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";			

				}
			}
			else if($bill_type==102)
			{
				if($cnt_code=='PBD')
				{
					$bill_sql="select invoiceDesc,draftNumber,vesselName,ibVoyageNbr,captain,ATD,ATA,customerName,payeecustomerkey,agent_address,
					grossRevenueTons,exchangeRate,created,flagcountry,cargo,ffd,onboundpiloton,onboundpilotoff,inboundpiloton,inboundpilotoff,description,
					glcode,rateBilled,quantityUnit,quantityBilled,sum(move) as move,sum(bdChraged) as bdChraged,
					if((description='BERTHING' or description='SHIFT VESSEL BERTH'),((bdChraged*15)/100),0) as bdVat,status,
					creator from 
					(
					select bill_name as invoiceDesc,ifnull(finalNumber,if(cnt_code='BD' or cnt_code='PBD',
					concat('PL/',mis_vsl_billing_detail.draftNumber,'-',substr(billing_date,4,1)),concat('PF/',mis_vsl_billing_detail.draftNumber,'-',substr(billing_date,4,1)))) as draftNumber,
					vsl_name as vesselName,rotation as ibVoyageNbr,master_name as captain,date(atd) as ATD,date(ata) as ATA,agent_name as customerName,concat(agent_code,'(',ifnull(agent_alias_id,''),')') as payeecustomerkey,
					agent_address,grt as grossRevenueTons,exchangeRate as exchangeRate,billing_date as created,flag as flagcountry,deck_cargo as cargo,date(oa_date) as ffd, DATE_FORMAT(pilot_ob_onboard,'%H:%i') as onboundpiloton,
					DATE_FORMAT(pilot_ob_offboard,'%H:%i') as onboundpilotoff,
					DATE_FORMAT(pilot_ib_onboard,'%H:%i') as inboundpiloton, DATE_FORMAT(pilot_ib_offboard,'%H:%i')  as inboundpilotoff,if(description='Port Dues for Sea-going Vessel',
					substr(description,1,9),description) as description,concat(gl_code,'0') as glcode,rate as rateBilled,bas as quantityUnit,unit_for_pilot as quantityBilled,move,(rate*unit_for_pilot*move*exchangeRate) as bdChraged,
					'DRAFT' as status,if(finalNumber is null,creator,drft_update_by) as creator
					from ctmsmis.mis_vsl_billing_detail inner join ctmsmis.mis_vsl_billing_sub_detail on ctmsmis.mis_vsl_billing_sub_detail.draftNumber=ctmsmis.mis_vsl_billing_detail.draftNumber 
					where mis_vsl_billing_detail.draftNumber='$draftNumber' 
					and bill_type=102 and description not like '%BIWTA%') as tbl group by description";
					$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";			
			
				}
				else
				{
					// $bill_sql="select invoiceDesc,draftNumber,vesselName,ibVoyageNbr,captain,ATD,ATA,customerName,payeecustomerkey,agent_address,grossRevenueTons,
								// exchangeRate,created,flagcountry,cargo,ffd,DATE_FORMAT(onboundpiloton,'%H:%i')as onboundpiloton,DATE_FORMAT(onboundpilotoff,'%H:%i')as  onboundpilotoff,
								// DATE_FORMAT(inboundpiloton,'%H:%i') as inboundpiloton,DATE_FORMAT(inboundpilotoff,'%H:%i') as inboundpilotoff,description,glcode,rateBilled,quantityUnit,
								// if(description like 'Tug%',sum(quantityBilled),quantityBilled) as quantityBilled,if(description='PILOTAGE FEE',sum(move),move) as move,sum(totusd) as totusd,
								// sum(bdChraged) as bdChraged,if((description='BERTHING' or description='SHIFT VESSEL BERTH'),((totusd*15)/100),0) as vatusd, 
								// (select vatusd*exchangeRate) as bdVat,status,creator from (
								// select bill_name as invoiceDesc,if(cnt_code='BD',concat('PL/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1)),
								// concat('PF/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1))) as draftNumber,vsl_name as vesselName,
								// rotation as ibVoyageNbr,master_name as captain,date(atd) as ATD,date(ata) as ATA,agent_name as customerName,
								// concat(agent_code,'(',ifnull(agent_alias_id,''),')') as payeecustomerkey,agent_address,grt as grossRevenueTons,exchangeRate as exchangeRate,
								// date(billing_date) as created,flag as flagcountry,deck_cargo as cargo,oa_date as ffd,pilot_ob_onboard as onboundpiloton,pilot_ob_offboard as onboundpilotoff,
								// pilot_ib_onboard as inboundpiloton,pilot_ib_offboard as inboundpilotoff,description as description,concat(gl_code,'0') as glcode,
								// rate as rateBilled,bas as quantityUnit,
								// unit_for_pilot as quantityBilled,move,(rate*unit_for_pilot*move) as totusd,
								// (rate*unit_for_pilot*move*exchangeRate) as bdChraged,
								// 'DRAFT' as status,creator
								// from ctmsmis.mis_vsl_billing_detail inner join ctmsmis.mis_vsl_billing_sub_detail on ctmsmis.mis_vsl_billing_sub_detail.draftNumber=ctmsmis.mis_vsl_billing_detail.draftNumber 
								// where ctmsmis.mis_vsl_billing_detail.draftNumber='$draftNumber'  and bill_type=102) as tbl group by description";
								
					$bill_sql="select invoiceDesc,draftNumber,vesselName,ibVoyageNbr,captain,ATD,ATA,customerName,payeecustomerkey,agent_address,grossRevenueTons,exchangeRate,created,flagcountry,cargo,ffd,onboundpiloton,onboundpilotoff,inboundpiloton,inboundpilotoff,description,glcode,rateBilled,quantityUnit,if(description like 'Tug%' or description='Additional Tug Charge for Unberthing',sum(quantityBilled),quantityBilled) as quantityBilled,if(description ='PILOTAGE FEE' or description ='Night Navigation Fee' or description like 'SHIFT%',sum(move),move) as move,round(sum(totusd),4) as totusd,round(sum(bdChraged),2) as bdChraged,
					round(sum(vatusd),4) as vatusd,
					round((sum(bdChraged)*15/100),2) as bdVat,status,creator 
					from (
					select bill_name as invoiceDesc,if(cnt_code='BD',concat('PL/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1)),concat('PF/',mis_vsl_billing_detail.draftNumber,'-',substring(billing_date,4,1))) as draftNumber,vsl_name as vesselName,rotation as ibVoyageNbr,master_name as captain,atd as ATD,ata as ATA,agent_name as customerName,concat(agent_code,'(',ifnull(agent_alias_id,''),')') as payeecustomerkey,agent_address,grt as grossRevenueTons,exchangeRate as exchangeRate,billing_date as created,flag as flagcountry,deck_cargo as cargo,oa_date as ffd,pilot_ob_onboard as onboundpiloton,pilot_ob_offboard as onboundpilotoff,
					pilot_ib_onboard as inboundpiloton,pilot_ib_offboard as inboundpilotoff,description as description,concat(gl_code,'0') as glcode,rate as rateBilled,bas as quantityUnit,
					unit_for_pilot as quantityBilled,move,(rate*unit_for_pilot*move) as totusd,
					(rate*unit_for_pilot*move*exchangeRate) as bdChraged,
					'DRAFT' as status,creator,if(date(ata)>='2017-12-27',1,0) as vtdt,
					(select if(vtdt=1,((totusd*15)/100),if((description='BERTHING' or description='SHIFT VESSEL BERTH'),((totusd*15)/100),0)))  as vatusd
					from ctmsmis.mis_vsl_billing_detail inner join ctmsmis.mis_vsl_billing_sub_detail on ctmsmis.mis_vsl_billing_sub_detail.draftNumber=ctmsmis.mis_vsl_billing_detail.draftNumber where ctmsmis.mis_vsl_billing_detail.draftNumber='$draftNumber'  and bill_type=102) as tbl group by description";
					
					$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";			

					//echo $bill_sql;
					//return;
				}
			}
			else if($bill_type==103)
			{
				//rptJettyChargeDraftInvoice
				
				$bill_sql="select 'DRAFT' as status,bill_name as invoiceDesc,if(cnt_code='BD',concat('JL/',mis_vsl_billing_detail.draftNumber,'-5'),
					concat('JF/',mis_vsl_billing_detail.draftNumber,'-5')) as draftNumber,vsl_name as ibCarrierName,rotation as ibVisitId,
					master_name as captain,DATE_FORMAT(atd,'%Y-%m-%d %H:%i')as ibCarrierATD,DATE_FORMAT(ata,'%Y-%m-%d %H:%i') as ibCarrierATA,agent_name as customerName,
					concat(agent_code,'(',ifnull(agent_alias_id,''),')') as payeecustomerkey, agent_address, grt as grt,exchangeRate as exchangeRate,
					date(billing_date) as created,berth as berth,flag as flagcountry,ifnull(deck_cargo,0) as cargo,date(oa_date) as ffd,description as description,
					gl_code as glcode,rate as rateBilled,bas as bas,unit_for_pilot as quantityBilled,(rate*unit_for_pilot)as totusd,
					(rate*unit_for_pilot*exchangeRate)as totbsd,creator, now() as printTime from
					ctmsmis.mis_vsl_billing_detail inner join ctmsmis.mis_vsl_billing_sub_detail on
					ctmsmis.mis_vsl_billing_sub_detail.draftNumber=ctmsmis.mis_vsl_billing_detail.draftNumber 
					where ctmsmis.mis_vsl_billing_detail.draftNumber='$draftNumber' and bill_type=103 and unit_for_pilot>0 
					order by substring(description,9,3) desc,substring(description,13,2) asc";
					
				$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";			
	
			}
			else if($bill_type==104)
			{
				//rptJettyMiscChargeDraftInvoice
				$bill_sql="select 'DRAFT' as status,bill_name as invoiceDesc,if(cnt_code='BD',concat('JL/',mis_vsl_billing_detail.draftNumber,'-5'),
					concat('JF/',mis_vsl_billing_detail.draftNumber,'-5')) as draftNumber,vsl_name as ibCarrierName,rotation as ibVisitId,master_name as captain,
					DATE_FORMAT(atd,'%Y-%m-%d %H:%i') as ibCarrierATD,DATE_FORMAT(ata,'%Y-%m-%d %H:%i') as ibCarrierATA,agent_name as customerName,agent_code as payeecustomerkey,grt as grt,exchangeRate as exchangeRate,
					date(billing_date) as created,berth as berth,flag as flagcountry,ifnull(deck_cargo,0) as cargo,oa_date as ffd,description as description,gl_code as glcode,
					rate as rateBilled,bas as bas,unit_for_pilot as quantityBilled,(rate*unit_for_pilot)as totusd,(rate*unit_for_pilot*exchangeRate)as totbsd,creator from
                    ctmsmis.mis_vsl_billing_detail inner join ctmsmis.mis_vsl_billing_sub_detail on ctmsmis.mis_vsl_billing_sub_detail.draftNumber=ctmsmis.mis_vsl_billing_detail.draftNumber 
					where ctmsmis.mis_vsl_billing_detail.draftNumber='$draftNumber' and bill_type=104";
					
				$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";			
	
			}		
		
			$bill_rslt=$this->bm->dataSelect($bill_sql);	
			$print_time=$this->bm->dataSelect($bill_print_time);
			
			//$this->data['bill_rslt']=$bill_rslt;
			//$this->data['print_time']=$print_time;
			
			$data['bill_rslt']=$bill_rslt;
			$data['print_time']=$print_time;
			
			$data['draftNumber']=$draftNumber;
			$data['cnt_code']=$cnt_code;
			$data['bill_type']=$bill_type;
			
			if($bill_type==101)
			{
				if($cnt_code=='PBD')
				{
					$this->load->view('cssAssetsList');
					$this->load->view('rptJettyOccupancyDraftInvoicePan_vslBillPrint',$data);
					$this->load->view('jsAssetsList');
				}
				else
				{
					
					$this->load->view('cssAssetsList');
					$this->load->view('rptJettyOccupancyDraftInvoicePrint',$data);
					$this->load->view('jsAssetsList');
				}
			}
			else if($bill_type==102)
			{
				if($cnt_code=='PBD')
				{					
					$this->load->view('cssAssetsList');
					$this->load->view('rptNonJettyDraftInvoicePanPrint',$data);
					$this->load->view('jsAssetsList');
				}
				else
				{					
					$this->load->view('cssAssetsList');
					$this->load->view('rptNonJettyDraftInvoicePrint',$data);
					$this->load->view('jsAssetsList');
				}
			}
			else if($bill_type==103)
			{				
				$this->load->view('cssAssetsList');
				$this->load->view('rptJettyChargeDraftInvoicePrint',$data);
				$this->load->view('jsAssetsList');
			}
			else if($bill_type==104)
			{					
				$this->load->view('cssAssetsList');
				$this->load->view('rptJettyMiscChargeDraftInvoicePrint',$data);
				$this->load->view('jsAssetsList');
			}
		}
	}
	
	//Vessel Bill List end
	
	// Container Billing List Start
	function containerBillList()
	{
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{	
			$login_id = $this->session->userdata('login_id');
			$data['title']="CONTAINER BILL LIST...";
			
			$sql_row_num="SELECT count(id) as rtnValue FROM  ctmsmis.mis_billing  INNER JOIN ctmsmis.billingreport
							ON ctmsmis.billingreport.id = ctmsmis.mis_billing.bill_type ";
			$config["total_rows"] = $this->bm->dataReturnDb2($sql_row_num);
			//$r = $this->bm->dataReturn($sql_row_num);
			//echo $r;
			$segment_three = $this->uri->segment(3);
			
			$config = array();
			$config["base_url"] = site_url("Report/containerBillList/$segment_three");
			$config["total_rows"] = $this->bm->dataReturn($sql_row_num);
			$config["per_page"] = 20;
			$offset = $this->uri->segment(4, 0);
			$config["uri_segment"] = 4;
			$limit=$config["per_page"];
			
			$this->pagination->initialize($config);
			$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;
			$start=$page;
			//echo "t";
			//return;
			$sql_bill_list="SELECT imp_rot,exp_rot,bill_type,mlo_code,draft_id,IFNULL(created_user,'') AS created_user, draft_final_status,pdf_draft_view_name,pdf_detail_view_name, DATE(billing_date) AS billing_date, billingreport.billtype
							FROM ctmsmis.mis_billing INNER JOIN ctmsmis.billingreport ON ctmsmis.billingreport.id = ctmsmis.mis_billing.bill_type ORDER BY mis_billing.draft_id DESC limit $start,$limit";
			//echo $sql_bill_list;
			//return;

			$rslt_bill_list=$this->bm->dataSelectDb2($sql_bill_list);
			$data['rslt_bill_list']=$rslt_bill_list;
			$data['start']=$start;
			$data["links"] = $this->pagination->create_links();
			
			$this->load->view('cssAssetsList');
			$this->load->view('containerBillList',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	function searchBillofContainer()
	{
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id = $this->session->userdata('login_id');
			$data['title']="CONTAINER BILL LIST...";
			
			$search_by=$this->input->post('search_by');
			
			if($search_by=="bill_type")
			{
				$bill_type=$this->input->post('bill_type');
				$cond="WHERE billtype='$bill_type'";
			}
			else if($search_by=="draft_no")
			{
				$draft_no=$this->input->post('draft_no');
				$cond="WHERE draft_id='$draft_no'";
			}
			else if($search_by=="imp_rotation_no")
			{
				$rotation_no=$this->input->post('rotation_no');
				$cond="WHERE imp_rot='$rotation_no'";
			}
			else if($search_by=="exp_rotation_no")
			{
				$rotation_no=$this->input->post('rotation_no');
				$cond="WHERE exp_rot='$rotation_no'";
			}
			
			$sql_bill_list="SELECT imp_rot,exp_rot,bill_type,mlo_code,draft_id,IFNULL(created_user,'') AS created_user, draft_final_status,pdf_draft_view_name,pdf_detail_view_name,DATE(billing_date) AS billing_date, billingreport.billtype
			FROM ctmsmis.mis_billing 
			INNER JOIN ctmsmis.billingreport ON ctmsmis.billingreport.id = ctmsmis.mis_billing.bill_type ".$cond." ORDER BY mis_billing.draft_id DESC ";
	
			$rslt_bill_list=$this->bm->dataSelect($sql_bill_list);
			
			$data['rslt_bill_list']=$rslt_bill_list; 
			$this->load->view('cssAssetsList');
			$this->load->view('containerBillList',$data);
			$this->load->view('jsAssetsList');
			
		}
	}
	
	function viewContainerBill()
	{
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$draftNumber=$this->input->post('draftNumber');
			$draft_view=$this->input->post('draft_view');
						
			$this->load->library('m_pdf');
			$pdf->use_kwt = true;
			//echo $draftNumber."".$bill_type."".$cnt_code;
			//return;
			if($draft_view=='pdfPangoanDischargeInvoice')
			{
				$bill_sql="select * from (
						select mlo as payCustomerId,mlo_name as payCustomername,agent_code as customerId,agent as customerName,
						vsl_name as ibCarrierName,rotation as ibVisitId,berth,wpn,draftNumber,
						description as Particulars,size,height,count(description) as qty,sum(amt) as amt,
						IFNULL(sum(vat),0) as vat,(SELECT billing_date FROM ctmsmis.mis_billing WHERE draft_id='$draftNumber') as billingDate,argo_visist_dtls_eta as eta ,argo_visist_dtls_etd as etd,
						if(currency_gkey=2,'$','') as usd,
						'Container Discharging Bill (PCT)' as invoiceDesc,
						'DRAFT' as status,
						'' as comments,
						cast((
							CASE
								WHEN
									currency_gkey=2
								THEN
									CAST(Tarif_rate AS DECIMAL(10,4))
								ELSE
									substring(cast(Tarif_rate as DECIMAL(10,4)),1,length(cast(Tarif_rate as DECIMAL(10,4)))-2)
							END)as CHAR) AS rateBilled,
						exchangeRate,
						(select count(distinct id) from ctmsmis.mis_billing_details dtl
						where draftNumber='$draftNumber'
						and size=20) as qtytot20,
						(select count(distinct id) from ctmsmis.mis_billing_details dtl
						where draftNumber='$draftNumber' and size=40) as qtytot40,
						(select count(distinct id) from ctmsmis.mis_billing_details dtl
						where draftNumber='$draftNumber' and size=45) as qtytot45,
						vatperc,
						(SELECT created_user FROM ctmsmis.mis_billing WHERE draft_id='$draftNumber') AS created_user
						from
						(select * from ctmsmis.mis_billing_details 
						where draftNumber='$draftNumber') as tmp
						group by payCustomerId,Particulars,vatperc order by payCustomerId,Particulars asc,WPN desc) as tbl";

					$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";			
			}
			else if($draft_view=='pdfReeferInvoice')
			{
				$bill_sql="select 'Reefer Charges Bill' as invoiceDesc,draftNumber as draftNumber,mlo as payCustomerId,mlo_name as payCustomername,agent_code as customerId,agent as customerName,CAST((select max(exchangeRate) from ctmsmis.mis_billing_details dtl where draftNumber='$draftNumber') AS DECIMAL(10,4)) AS exchangeRate,description as Particulars,height,size,
				if(currency_gkey=2,'$','') as usd,
				cast((
				CASE
					WHEN
					currency_gkey=2
					THEN
					CAST(Tarif_rate AS DECIMAL(10,4))
					ELSE
					substring(cast(Tarif_rate as DECIMAL(10,4)),1,length(cast(Tarif_rate as DECIMAL(10,4)))-2)
					END
				)as CHAR) AS rateBilled,count(id) as qtyUnit,sum(storage_days)as qty,sum(amt) as amt,sum(vat) as vat,(sum(amt)+vat) as netTotal,'' as comments,'DRAFT' as status,rfr_disconnect as eventTo,
				(select count(distinct id) from ctmsmis.mis_billing_details dtl
				where draftNumber='$draftNumber'
				and size=20 and dtl.mlo=tbl.mlo
				and fcy_time_in is not null
				) as qtytot20,
				(select count(distinct id) from ctmsmis. mis_billing_details dtl
				where draftNumber='$draftNumber'
				and size=40 and dtl.mlo=tbl.mlo
				and fcy_time_in is not null
				) as qtytot40,
				(select count(distinct id) from ctmsmis.mis_billing_details dtl
				where draftNumber='$draftNumber'
				and size=45 and dtl.mlo=tbl.mlo
				and fcy_time_in is not null
				) as qtytot45
				from
				(select * from ctmsmis.mis_billing_details where draftNumber='$draftNumber' order by id) as tbl
				group by description,size";
					
				$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";						
			}
			else if($draft_view=='pdfLoadingInvoice')
			{
				$bill_sql="select 'Container Loading Bill' as invoiceDesc,draftNumber as draftNumber,mlo as payCustomerId,mlo_name as payCustomerName,agent_code as conCustomerId,agent as conCustomerName,CAST((select max(exchangeRate) from ctmsmis.mis_billing_details dtl where draftNumber='$draftNumber') AS DECIMAL(10,4)) AS exchangeRate,date(billingDate) as created,rotation as vslId,vsl_name as obCarrierName,ata as eta, atd as etd,berth as berth,description as description,height,size,
				if(currency_gkey=2,'$','') as usd,
				cast((
				CASE
				  WHEN
				   currency_gkey=2
				  THEN
				   CAST(Tarif_rate AS DECIMAL(10,4))
				  ELSE
				   substring(cast(Tarif_rate as DECIMAL(10,4)),1,length(cast(Tarif_rate as DECIMAL(10,4)))-2)

				  END
				)as CHAR) AS rateBilled,count(description) as quantityBilled,sum(amt) as totalCharged,SUM(vat) as totalvatamount,(sum(amt)+SUM(vat)) as netTotal,'' as comments,'DRAFT' as status,
				(select count(distinct id) from ctmsmis.mis_billing_details dtl
				where draftNumber='$draftNumber'
				and size=20 and dtl.mlo=tbl.mlo
				and fcy_time_in is not null
				) as qtytot20,
				(select count(distinct id) from ctmsmis.mis_billing_details dtl
				where draftNumber='$draftNumber'
				and size=40 and dtl.mlo=tbl.mlo
				and fcy_time_in is not null
				) as qtytot40,
				(select count(distinct id) from ctmsmis.mis_billing_details dtl
				where draftNumber='$draftNumber'
				and size=45 and dtl.mlo=tbl.mlo
				and fcy_time_in is not null
				) as qtytot45,
				(SELECT created_user FROM ctmsmis.mis_billing WHERE draft_id='$draftNumber') AS created_user
				from
				(select * from ctmsmis.mis_billing_details where draftNumber='$draftNumber' order by id) as tbl group by description";
					
				$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";						
			}
			else if($draft_view=='pdfDischargeInvoice')
			{
				$bill_sql="select * from (
				select mlo as payCustomerId,mlo_name as payCustomername,agent_code as customerId,agent as customerName,
				vsl_name as ibCarrierName,rotation as ibVisitId,berth,wpn,draftNumber,
				concat(description,'(',wpn,')') as Particulars,size,height,count(description) as qty,sum(amt) as amt,
				IFNULL(sum(vat),0) as vat,date(billingDate) as billingDate,argo_visist_dtls_eta as eta ,argo_visist_dtls_etd as etd,
				if(currency_gkey=2,'$','') as usd,
				'Container Discharging Bill' as invoiceDesc,
				'DRAFT' as status,
				'' as comments,
				cast((
					CASE
						WHEN
							currency_gkey=2
						THEN
							CAST(Tarif_rate AS DECIMAL(10,4))
						ELSE
							substring(cast(Tarif_rate as DECIMAL(10,4)),1,length(cast(Tarif_rate as DECIMAL(10,4)))-2)
					END
				)as CHAR) AS rateBilled,
				exchangeRate,
				(select count(distinct id) from ctmsmis.mis_billing_details dtl
				where draftNumber='$draftNumber'
				and size=20
				and fcy_time_in is not null
				) as qtytot20,
				(select count(distinct id) from ctmsmis.mis_billing_details dtl
				where draftNumber='$draftNumber'
				and size=40
				and fcy_time_in is not null
				) as qtytot40,
				(select count(distinct id) from ctmsmis.mis_billing_details dtl
				where draftNumber='$draftNumber'
				and size=45
				and fcy_time_in is not null
				) as qtytot45,
				vatperc,
				(SELECT created_user FROM ctmsmis.mis_billing WHERE draft_id='$draftNumber') AS created_user
				from
				(select * from ctmsmis.mis_billing_details 
				where draftNumber='$draftNumber') as tmp group by payCustomerId,Particulars,vatperc order by payCustomerId,Particulars asc,WPN desc
				) as tbl
				union all
				select mlo as payCustomerId,mlo_name as payCustomername,agent_code as customerId,agent as customerName,
				vsl_name as ibCarrierName,rotation as ibVisitId,berth,wpn,draftNumber,
				'LABOUR FUND' as Particulars,size,height,concat(sum(tues),'(Tues)') as qty,sum(tues)*4.5 as amt,
				0 as vat,date(billingDate) as billingDate,argo_visist_dtls_eta as eta ,argo_visist_dtls_etd as etd,
				'' as usd,
				'Container Discharging Bill' as invoiceDesc,'DRAFT' as status,'' as comments,
				4.5 AS rateBilled,exchangeRate,
				(select count(distinct id) from ctmsmis.mis_billing_details dtl
				where draftNumber='$draftNumber'
				and size=20
				and fcy_time_in is not null
				) as qtytot20,
				(select count(distinct id) from ctmsmis.mis_billing_details dtl
				where draftNumber='$draftNumber'
				and size=40
				and fcy_time_in is not null
				) as qtytot40,
				(select count(distinct id) from ctmsmis.mis_billing_details dtl
				where draftNumber='$draftNumber'
				and size=45
				and fcy_time_in is not null
				) as qtytot45,
				0 AS vatperc,
				(SELECT created_user FROM ctmsmis.mis_billing WHERE draft_id='$draftNumber') AS created_user
				from
				(
				select * from ctmsmis.mis_billing_details 
				where draftNumber='$draftNumber'
				) as tmp
				group by payCustomerId,Particulars";
					
				$bill_print_time="SELECT DATE_FORMAT(now(), '%W %M %e %Y %H:%i') as Time";						
			}
			
			$bill_rslt=$this->bm->dataSelectDb2($bill_sql);	
			$print_time=$this->bm->dataSelectDb2($bill_print_time);	
			$this->data['bill_rslt']=$bill_rslt;			
			$this->data['print_time']=$print_time;			
			
			if($draft_view=='pdfPangoanDischargeInvoice')
			{
				$html=$this->load->view('container_rptPangoanDischargingDraftInvoice.php',$this->data, true); 
				$pdfFilePath ="containerBill-".time()."-download.pdf";
			}
			else if($draft_view=='pdfReeferInvoice')
			{
				$html=$this->load->view('reeferbill',$this->data, true); 
				$pdfFilePath ="reeferbill-".time()."-download.pdf";
			}
			else if($draft_view=='pdfLoadingInvoice')
			{
				$html=$this->load->view('loadingbill',$this->data, true); 
				$pdfFilePath ="loadingbill-".time()."-download.pdf";
			}
			else if($draft_view=='pdfDischargeInvoice')
			{
				$html=$this->load->view('dischargebill',$this->data, true); 
				$pdfFilePath ="dischargebill-".time()."-download.pdf";
			}
				
			$pdf = $this->m_pdf->load();
			//$pdf->SetWatermarkText('CPA CTMS');
			$pdf->showWatermarkText = true;	
			$pdf->useSubstitutions = true; 
			
			$stylesheet = file_get_contents('resources/styles/test.css');

			$pdf->setFooter('||Page {PAGENO} of {nb}');
			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);

			$pdf->Output($pdfFilePath, "I"); // For Show Pdf
		}
	}
	
	function viewContainerDetail()
	{
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$draftNumber=$this->input->post('draftNumberDetail');
			$draft_detail_view=$this->input->post('draft_detail_view');
						
			$this->load->library('m_pdf');
			$pdf->use_kwt = true;
		
		
		
			if($draft_detail_view=='pdfReeferInvoice')
			{
				$sql_detail="select 'Reefer Charges Bill' as invoiceDesc,draftNumber as draftNumber,billingDate as created,mlo as customerId,mlo_name as customerName,agent_code as concustomerid,agent as concustomername,id as unitId,rotation as ibVisitId,vsl_name as ibCarrierName, size as isoLength,height as isoHeight,freight_kind as freightKind,rfr_connect as eventFrom,rfr_disconnect as eventTo,ceil((TIMESTAMPDIFF(SECOND, rfr_connect,rfr_disconnect))/3600) as hours,storage_days as quantity,vatperc as vatperc,'DRAFT' as status,yard
				from ctmsmis.mis_billing_details 
				where draftNumber='$draftNumber' 
				order by draftNumber";
			}
			
			else if($draft_detail_view=='pdfLoadingInvoice')
			{
				$sql_detail="select draftNumber as draftNumber,rotation as obVisitId,billingDate as created,vsl_name as obCarrierName,mlo as customerId,mlo_name as customerName,agent_code as concustomerid,agent as concustomername,id as unitId,size as isoLength,height as isoHeight,freight_kind as freightKind,vatperc as vatperc, atd as landingDate,description,'DRAFT' as status
				from ctmsmis.mis_billing_details 
				where draftNumber='$draftNumber' and description like 'Load%' 
				order by draftNumber";
			}
			else if($draft_detail_view=='pdfDischargeInvoice')
			{
				

				$sql_detail="select id as unitId,gkey,freight_kind as freightKind,'DRAFT' as status,'Container Discharging Bill' as invoiceDesc,draftNumber,vsl_name as ibCarrierName,
				mlo as customerId,mlo_name as customerName,agent_code as concustomerid,agent as concustomername,
				rotation as ibVisitId,date(billingDate) as created,size as isoLength,height as isoHeight,fcy_time_in as timeIn,
				wpn as equipment,
				vatperc,iso_grp,
				(CASE
						WHEN iso_grp = 'UT' THEN 'OPEN TOP'
						WHEN iso_grp IN ('RE','RT') THEN 'REEFER'
						WHEN iso_grp IN ('PL','PC','PC') THEN 'F-RACK'
						WHEN iso_grp IN ('TN','TD','TG') THEN 'TANK'
						ELSE NULL
				END) AS cnttype
				from ctmsmis.mis_billing_details
				where draftNumber='$draftNumber' and description like'DISCH%'
				order by draftNumber";
				
				$sql_detail_summary="SELECT
				COUNT(fcl_20_85) AS  fcl_20_85,
				COUNT(fcl_20_95) AS  fcl_20_95,
				COUNT(fcl_40_85) AS  fcl_40_85,
				COUNT(fcl_40_95) AS  fcl_40_95,
				COUNT(fcl_45_85) AS  fcl_45_85,
				COUNT(fcl_45_95) AS  fcl_45_95,

				COUNT(lcl_20_85) AS  lcl_20_85,
				COUNT(lcl_20_95) AS  lcl_20_95,
				COUNT(lcl_40_85) AS  lcl_40_85,
				COUNT(lcl_40_95) AS  lcl_40_95,
				COUNT(lcl_45_85) AS  lcl_45_85,
				COUNT(lcl_45_95) AS  lcl_45_95,

				COUNT(mty_20_85) AS  mty_20_85,
				COUNT(mty_20_95) AS  mty_20_95,
				COUNT(mty_40_85) AS  mty_40_85,
				COUNT(mty_40_95) AS  mty_40_95,
				COUNT(mty_45_85) AS  mty_45_85,
				COUNT(mty_45_95) AS  mty_45_95,
				COUNT(nonvat) AS  nonvat,
				COUNT(vat) AS  vat,
				COUNT(chargeEntityId) AS tot,
				COUNT(fcl) AS  fcl,
				COUNT(lcl) AS  lcl,
				COUNT(mty) AS  mty,
				COUNT(tot_20_85) AS  tot_20_85,
				COUNT(tot_20_95) AS  tot_20_95,
				COUNT(tot_40_85) AS  tot_40_85,
				COUNT(tot_40_95) AS  tot_40_95,
				COUNT(tot_45_85) AS  tot_45_85,
				COUNT(tot_45_95) AS  tot_45_95,
				COUNT(equipmentW) AS equipmentW,
				COUNT(equipmentP) AS equipmentP,
				COUNT(equipmentN) AS equipmentN,
				COUNT(LON) AS LON,
				(select (COUNT(chargeEntityId)-COUNT(LON))) AS NLON
				from
				(
				SELECT DISTINCT id as chargeEntityId,

				(CASE WHEN height='8.6' AND size = 20 AND freight_kind = 'FCL' THEN 1
				ELSE NULL END) AS fcl_20_85,

				(CASE WHEN height='9.6' AND size = 20 AND freight_kind = 'FCL' THEN 1
				ELSE NULL END) AS fcl_20_95,

				(CASE WHEN height='8.6' AND size = 40 AND freight_kind = 'FCL' THEN 1
				ELSE NULL END) AS fcl_40_85,

				(CASE WHEN height='9.6' AND size = 40 AND freight_kind = 'FCL' THEN 1
				ELSE NULL END) AS fcl_40_95,

				(CASE WHEN height='8.6' AND size = 45 AND freight_kind = 'FCL' THEN 1
				ELSE NULL END) AS fcl_45_85,

				(CASE WHEN height='9.6' AND size = 45 AND freight_kind = 'FCL' THEN 1
				ELSE NULL END) AS fcl_45_95,

				(CASE WHEN height='8.6' AND size = 20 AND freight_kind = 'LCL' THEN 1
				ELSE NULL END) AS lcl_20_85,

				(CASE WHEN height='9.6' AND size = 20 AND freight_kind = 'LCL' THEN 1
				ELSE NULL END) AS lcl_20_95,

				(CASE WHEN height='8.6' AND size = 40 AND freight_kind = 'LCL' THEN 1
				ELSE NULL END) AS lcl_40_85,

				(CASE WHEN height='9.6' AND size = 40 AND freight_kind = 'LCL' THEN 1
				ELSE NULL END) AS lcl_40_95,

				(CASE WHEN height='8.6' AND size = 45 AND freight_kind = 'LCL' THEN 1
				ELSE NULL END) AS lcl_45_85,

				(CASE WHEN height='9.6' AND size = 45 AND freight_kind = 'LCL' THEN 1
				ELSE NULL END) AS lcl_45_95,

				(CASE WHEN height='8.6' AND size = 20 AND freight_kind = 'MTY' THEN 1
				ELSE NULL END) AS mty_20_85,

				(CASE WHEN height='9.6' AND size = 20 AND freight_kind = 'MTY' THEN 1
				ELSE NULL END) AS mty_20_95,

				(CASE WHEN height='8.6' AND size = 40 AND freight_kind = 'MTY' THEN 1
				ELSE NULL END) AS mty_40_85,

				(CASE WHEN height='9.6' AND size = 40 AND freight_kind = 'MTY' THEN 1
				ELSE NULL END) AS mty_40_95,

				(CASE WHEN height='8.6' AND size = 45 AND freight_kind = 'MTY' THEN 1
				ELSE NULL END) AS mty_45_85,

				(CASE WHEN height='9.6' AND size = 45 AND freight_kind = 'MTY' THEN 1
				ELSE NULL END) AS mty_45_95,

				(CASE WHEN vatperc =0 THEN 1
				ELSE NULL END) AS nonvat,

				(CASE WHEN vatperc !=0 THEN 1
				ELSE NULL END) AS vat,

				(CASE WHEN freight_kind = 'FCL' THEN 1
				ELSE NULL END) AS fcl,

				(CASE WHEN freight_kind = 'LCL' THEN 1
				ELSE NULL END) AS lcl,

				(CASE WHEN freight_kind = 'MTY' THEN 1
				ELSE NULL END) AS mty,

				(CASE WHEN height='8.6' AND size = 20  THEN 1
				ELSE NULL END) AS tot_20_85,

				(CASE WHEN height='9.6' AND size = 20 THEN 1
				ELSE NULL END) AS tot_20_95,

				(CASE WHEN height='8.6' AND size = 40  THEN 1
				ELSE NULL END) AS tot_40_85,

				(CASE WHEN height='9.6' AND size = 40  THEN 1
				ELSE NULL END) AS tot_40_95,

				(CASE WHEN height='8.6' AND size = 45  THEN 1
				ELSE NULL END) AS tot_45_85,

				(CASE WHEN height='9.6' AND size = 45  THEN 1
				ELSE NULL END) AS tot_45_95,

				(CASE WHEN wpn='W'   THEN 1
				ELSE NULL END) AS equipmentW,

				(CASE WHEN wpn='P'   THEN 1
				ELSE NULL END) AS equipmentP,

				(CASE WHEN wpn='N'   THEN 1
				ELSE NULL END) AS equipmentN,
				if(destination not in('2591','2592','5230','5231','5232','5233','5234','5235','5236','5237','5238') and freight_kind !='MTY',1,NULL) as LON
				from
				(
				select * from ctmsmis.mis_billing_details where draftNumber='$draftNumber' and description like'DISCH%'
				) tbl
				) final";
				
				/*$rslt_detail_summary=$this->bm->dataSelect($sql_detail_summary);*/
				$rslt_detail_summary=$this->bm->dataSelectDb2($sql_detail_summary);
				$this->data['rslt_detail_summary']=$rslt_detail_summary;
			}
			
			 /*$rslt_detail=$this->bm->dataSelect($sql_detail);*/
			 $rslt_detail=$this->bm->dataSelectDb2($sql_detail);	
			
			
			$this->data['rslt_detail']=$rslt_detail;			  
							
			
		
			if($draft_detail_view=='pdfReeferInvoice')
			{
				$html=$this->load->view('reeferdetail',$this->data, true); 
				$pdfFilePath ="reeferdetail-".time()."-download.pdf";
			}
			else if($draft_detail_view=='pdfLoadingInvoice')
			{
				$html=$this->load->view('loadingdetail',$this->data, true); 
				$pdfFilePath ="loadingdetail-".time()."-download.pdf";
			}
			else if($draft_detail_view=='pdfDischargeInvoice')
			{
				$html=$this->load->view('dischargedetail',$this->data, true); 
				$pdfFilePath ="dischargedetail-".time()."-download.pdf";
			}
				
			$pdf = $this->m_pdf->load();
			
			$pdf->showWatermarkText = true;	
			$pdf->useSubstitutions = true; 
			
			$stylesheet = file_get_contents('resources/styles/test.css'); 
			
			$pdf->setFooter('||Page {PAGENO} of {nb}');
			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);

			$pdf->Output($pdfFilePath, "I"); // For Show Pdf
		}
	}
	
	
	
	// Container Billing List End
	
	// Vat Status Start
	function checkVatStatusForm()
	{
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id = $this->session->userdata('login_id');
			$data['title']="Vat Status Check...";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('checkVatStatusForm',$data);
			$this->load->view('jsAssets');
			
		}
	}
	
	function vatStatusList()
	{
		$rotation_no=$this->input->post('rotation_no');
		$mloName=$this->input->post('mloName');
		$countVat=0;
		$countNonVat=0;
		
		if($mloName=="")
		{
			$countVatQry="select count(igm_detail_container.cont_number) as rtnValue
								from igm_detail_container 
								inner join igm_details on igm_details.id=igm_detail_container.igm_detail_id  
								where igm_details.Import_Rotation_No='$rotation_no' and cont_vat='VAT'";
								
			$countNonVatQry="select count(igm_detail_container.cont_number) as rtnValue
								from igm_detail_container 
								inner join igm_details on igm_details.id=igm_detail_container.igm_detail_id  
								where igm_details.Import_Rotation_No='$rotation_no' and cont_vat!='VAT'";
								
			$sql_search_vat_stat="select igm_detail_container.cont_number,igm_detail_container.cont_size,igm_detail_container.cont_height,cont_status,igm_detail_container.cont_vat as vat_novat,igm_details.mlocode
								from igm_detail_container 
								inner join igm_details on igm_details.id=igm_detail_container.igm_detail_id  
								where igm_details.Import_Rotation_No='$rotation_no' 
								order by igm_detail_container.cont_vat desc ";
			
		}
		else
		{
			$countVatQry="select count(igm_detail_container.cont_number) as rtnValue
								from igm_detail_container 
								inner join igm_details on igm_details.id=igm_detail_container.igm_detail_id  
								where igm_details.Import_Rotation_No='$rotation_no' and cont_vat='VAT' and igm_details.mlocode='$mloName'";
								
			$countNonVatQry="select count(igm_detail_container.cont_number) as rtnValue
								from igm_detail_container 
								inner join igm_details on igm_details.id=igm_detail_container.igm_detail_id  
								where igm_details.Import_Rotation_No='$rotation_no' and cont_vat!='VAT' and igm_details.mlocode='$mloName'";
								
			$sql_search_vat_stat="select igm_detail_container.cont_number,igm_detail_container.cont_size,igm_detail_container.cont_height,cont_status,igm_detail_container.cont_vat as vat_novat,igm_details.mlocode
								from igm_detail_container 
								inner join igm_details on igm_details.id=igm_detail_container.igm_detail_id  
								where igm_details.Import_Rotation_No='$rotation_no' and igm_details.mlocode='$mloName'
								order by igm_detail_container.cont_vat desc ";
		}
		
		
		$countVat=$this->bm->dataReturnDb1($countVatQry);

		$countNonVat=$this->bm->dataReturnDb1($countNonVatQry);

		$rslt_vat_stat_list=$this->bm->dataSelectDb1($sql_search_vat_stat);
			
		$data['rslt_vat_stat_list']=$rslt_vat_stat_list; 
		$data['rotation_no']=$rotation_no; 
		$data['countVat']=$countVat; 
		$data['countNonVat']=$countNonVat; 
		$data['mloName']=$mloName; 
		
		$this->load->view('vatStatusList',$data);
	}
	// Vat Status End
	
	
		
	
	function countryWiseImportReport()
	{

		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="Country Wise Import Report";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('countryWiseImportReport',$data);
			$this->load->view('jsAssets');
		}
	}

		
    function countryWiseImportReportView()
	{
		$session_id = $this->session->userdata('value');
		$login_id = $this->session->userdata('login_id');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$countryName=$this->input->post('countryName');
			$fromdate=$this->input->post('fromdate');
			$todate=$this->input->post('todate');
			
			$sqlQuery="select cnty,yr,sum(box) as box,sum(teus) as teus,(sum(cont_gross_weight)/1000) as tonnage
					from (
					select year(file_clearence_date) as yr,'$countryName' as cnty,1 as box,if(cont_size=20,1,2) as teus,cont_gross_weight 
					from igm_details
					inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where date(file_clearence_date) between '$fromdate' and '$todate' and Exporter_address like '%$countryName%'
					) as tbl group by cnty,yr";
					
			$reslt = $this->bm->dataSelectDb1($sqlQuery);		
			//echo $sqlQuery;
			//return;
		$data['reslt']=$reslt;
		$data['countryName']=$countryName;
		$data['fromdate']=$fromdate;
		$data['todate']=$todate;
		$data['title']="Country Wise Import Report";
		//$this->load->view('header2');

		$this->load->view('cssAssets');
		$this->load->view('countryWiseImportReportView',$data);
		$this->load->view('jsAssets');
		//$this->load->view('footer');
		}
	}
	


//Year Wise Import Report

	function yearWiseImportReport()
	{

		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="Year Wise Import Report";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('yearWiseImportReport',$data);
			$this->load->view('jsAssets');
		}
	}
		
		
	function yearWiseImportReportView()
	{
		$session_id = $this->session->userdata('value');
		$login_id = $this->session->userdata('login_id');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$type=$this->input->post('options1');
			$fileType=$this->input->post('fileOptions');
							
			$fromdate=$this->input->post('fromdate');
			$todate=$this->input->post('todate');
			$sqlQuery="SELECT 
			sum(tot) as tot,
			sum(fcl_cont) as fcl_cont,
			sum(lcl_cont) as lcl_cont,
			sum(mty_cont) as mty_cont,
			sum(cont_20) as cont_20,
			sum(cont_40) as cont_40,
			sum(cont_45) as cont_45
			from(
			select
			'1' as tot,
			(case when freight_kind='FCL' then '1' else '0' end)  fcl_cont,
			(case when freight_kind='LCL' then '1' else '0' end)  lcl_cont,
			(case when freight_kind='MTY' then '1' else '0' end)  mty_cont,
			(case when siz='20' then '1' else '0' end)  cont_20,
			(case when siz='40' then '1' else '0' end)  cont_40,
			(case when siz='45' then '1' else '0' end)  cont_45
			from (
			SELECT inv_unit.freight_kind,
			(select SUBSTR(nominal_length,-2) from inv_unit
			inner join ref_equipment on inv_unit.eq_gkey=ref_equipment.gkey
			inner join ref_equip_type on ref_equipment.eqtyp_gkey=ref_equip_type.gkey
			where inv_unit_fcy_visit.unit_gkey=inv_unit.gkey fetch first 1 rows only) as siz 
			from inv_unit  
			inner join inv_unit_fcy_visit on inv_unit_fcy_visit.unit_gkey=inv_unit.gkey 
			WHERE cast(inv_unit_fcy_visit.time_in as date) BETWEEN to_date('$fromdate','yyyy-mm-dd') AND 
			to_date('$todate','yyyy-mm-dd') AND  inv_unit.category='IMPRT'
			)  tbl)  final";
				
			$reslt = $this->bm->dataSelect($sqlQuery);		
			//echo $sqlQuery;
			//return;
			
			//$this->load->view('footer');
				
				if($fileType!="pdf" )
				{  
				$data['reslt']=$reslt;
				$data['fromdate']=$fromdate;
				$data['todate']=$todate;
				//$data['title']="Country Wise Import Report";
				//$this->load->view('header2');

				$this->load->view('cssAssets');
				$this->load->view('yearWiseImportReportView',$data);
				$this->load->view('jsAssets');
			
					/* $fromdate=$this->input->post('fromdate1');
					$yard_no=$this->input->post('yard_no1'); 
					$data['fromdate']=$fromdate;
					$data['yard_no']=$yard_no;
					$data['type']=$type;
					$this->load->view('myReportEmtyContainerFoundListAssignment',$data); */
				} 
				
				else if($fileType=="pdf")
				{  
				
					$this->load->library('m_pdf');
					//$mpdf->use_kwt = true;
					$this->data['reslt']=$reslt;	
					$this->data['fromdate']=$fromdate;
					$this->data['todate']=$todate; 
					//$this->data['title']="Country Wise Import Report";

					$html=$this->load->view('yearWiseImportReportView',$this->data, true); 
					$pdfFilePath ="yearWiseImportReportViewPdf_".time().".pdf";

						//actually, you can pass mPDF parameter on this load() function
					$pdf = $this->m_pdf->load();
					//$pdf->SetWatermarkText('CPA CTMS');
					$pdf->showWatermarkText = true;		
					//$stylesheet = file_get_contents('resources/styles/test.css'); // external css
					//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO}|Date {DATE j-m-Y}');
					$pdf->WriteHTML($html,2);
					$pdf->Output($pdfFilePath, "I"); // For Show Pdf					
				}

		}
	}
		
	function exportContainerLoadingList()
	{
		$session_id = $this->session->userdata('value');
		$sql_export_container_loading_list="";		
		if($this->input->post('Search'))
		{
			$rotation = trim($this->input->post('rotation'));		
			$vvdGkeyQuery="SELECT  vvd_gkey as rtnValue FROM sparcsn4.vsl_vessel_visit_details WHERE  sparcsn4.vsl_vessel_visit_details.ib_vyg='$rotation'";
			$vvdGkey=$this->bm->dataReturnDb2($vvdGkeyQuery);
			$sql_export_container_loading_list="SELECT gkey,vvd_gkey,stowage_pos,seal_no,mis_exp_unit.last_update,
			user_id,mis_exp_unit.goods_and_ctr_wt_kg,pod,truck_no,re_status,cont_status
			 FROM ctmsmis.mis_exp_unit 
			WHERE vvd_gkey='$vvdGkey' AND preAddStat=0 AND snx_type!=2 AND HOUR(TIMEDIFF(NOW(),last_update))<75 
			ORDER BY ctmsmis.mis_exp_unit.last_update DESC,ctmsmis.mis_exp_unit.vvd_gkey";

			
		}
		
		else{ 
		
			$sql_export_container_loading_list="SELECT gkey,vvd_gkey,stowage_pos,seal_no,mis_exp_unit.last_update,
			user_id,mis_exp_unit.goods_and_ctr_wt_kg,pod,truck_no,re_status,cont_status
			 FROM ctmsmis.mis_exp_unit 
			WHERE  preAddStat=0 AND snx_type!=2 AND HOUR(TIMEDIFF(NOW(),last_update))<75 
			ORDER BY ctmsmis.mis_exp_unit.last_update DESC,ctmsmis.mis_exp_unit.vvd_gkey";
			}
			//echo $sql_export_container_loading_list; return;		
		$rslt_export_container_loading_list=$this->bm->dataSelectDb2($sql_export_container_loading_list);
			
		$data['rslt_export_container_loading_list']=$rslt_export_container_loading_list;
		$data['tableTitle'] = "Export Container Loading List";
		
		$this->load->view('cssAssets');
		$this->load->view('exportContainerLoadingList',$data);
		$this->load->view('myclosebar');
		$this->load->view('jsAssets');
	}
	//24 Hours Discharge Container List Start
	function getLast24HourDischargeImportContainerList()
	{
		$cont_size = $this->uri->segment(3);
		$fromdate = $this->uri->segment(4);
		$vvdGkey = $this->uri->segment(5);
		$impContType = $this->uri->segment(6);
		$qryCond="";
		$qryCondExtra="";
		$qryCondFcyTime="";
		$qryCondFcyTimeOnBoard="";
		
		// Discharge 
		if($impContType=='discharge_done_LD_20')
		{
			$qryCond="SELECT 
						(CASE WHEN size = $cont_size
						AND fcy_time_in >CONCAT(DATE_ADD('$fromdate', INTERVAL -1 DAY),' 08:00:00')
						AND fcy_time_in <CONCAT('$fromdate',' 08:00:01') 
						AND freight_kind IN ('FCL','LCL')  THEN id 
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondFcyTime=" WHERE fcy_time_in IS NOT NULL";
		}
		else if($impContType=='discharge_done_LD_40')
		{
			$qryCond="SELECT 
						(CASE WHEN size !=$cont_size
						AND fcy_time_in >CONCAT(DATE_ADD('$fromdate', INTERVAL -1 DAY),' 08:00:00')
						AND fcy_time_in <CONCAT('$fromdate',' 08:00:01') 
						AND freight_kind IN ('FCL','LCL')  THEN id   
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondFcyTime=" WHERE fcy_time_in IS NOT NULL";
		}
		else if($impContType=='discharge_done_MT_20')
		{
			$qryCond="SELECT 
						(CASE WHEN size = $cont_size
							AND fcy_time_in >CONCAT(DATE_ADD('$fromdate', INTERVAL -1 DAY),' 08:00:00')
							AND fcy_time_in <CONCAT('$fromdate',' 08:00:01') 
							AND freight_kind ='MTY'  THEN id  
							ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondFcyTime=" WHERE fcy_time_in IS NOT NULL";
		}
		else if($impContType=='discharge_done_MT_40')
		{
			$qryCond="SELECT 
						(CASE WHEN size !=$cont_size
							AND fcy_time_in >CONCAT(DATE_ADD('$fromdate', INTERVAL -1 DAY),' 08:00:00')
							AND fcy_time_in <CONCAT('$fromdate',' 08:00:01') 
							AND freight_kind ='MTY'  THEN id  
							ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondFcyTime=" WHERE fcy_time_in IS NOT NULL";
		}
		
		// Discharge Total
		else if($impContType=='balance_LD_20')
		{
			$qryCond="SELECT 
						(CASE WHEN size = $cont_size AND freight_kind IN ('FCL','LCL')  THEN id  
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state NOT IN ('S20_INBOUND')";
		}
		else if($impContType=='balance_LD_40')
		{
			$qryCond="SELECT 
						(CASE WHEN size > $cont_size AND freight_kind IN ('FCL','LCL')  THEN id  
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state NOT IN ('S20_INBOUND')";
		}
		else if($impContType=='balance_MT_20')
		{
			$qryCond="SELECT 
						(CASE WHEN size = $cont_size AND freight_kind ='MTY'  THEN id  
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state NOT IN ('S20_INBOUND')";
		}
		else if($impContType=='balance_MT_40')
		{
			$qryCond="SELECT 
						(CASE WHEN size > $cont_size AND freight_kind ='MTY'  THEN id  
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state NOT IN ('S20_INBOUND')";
		}
		
		// Discharge Balance
		
		else if($impContType=='onboard_LD_20')
		{
			$qryCond="SELECT 
						(CASE WHEN size = $cont_size AND freight_kind IN ('FCL','LCL')  THEN id  
							ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state='S20_INBOUND'";
			$qryCondFcyTimeOnBoard=" WHERE  fcy_time_in IS NULL";
		}
		else if($impContType=='onboard_LD_40')
		{
			$qryCond="SELECT 
						(CASE WHEN size > $cont_size AND freight_kind IN ('FCL','LCL')  THEN id  
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state='S20_INBOUND'";
			$qryCondFcyTimeOnBoard=" WHERE  fcy_time_in IS NULL";
		}
		else if($impContType=='onboard_MT_20')
		{
			$qryCond="SELECT 
						(CASE WHEN size = $cont_size AND freight_kind ='MTY'  THEN id  
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state='S20_INBOUND'";
			$qryCondFcyTimeOnBoard=" WHERE  fcy_time_in IS NULL";
		}
		else if($impContType=='onboard_MT_40')
		{
			$qryCond="SELECT 
						(CASE WHEN size > $cont_size AND freight_kind ='MTY'  THEN id  
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state='S20_INBOUND'";
			$qryCondFcyTimeOnBoard=" WHERE  fcy_time_in IS NULL";
		}
		
		$query="SELECT
				*
				FROM 
				(
				".
				$qryCond.				
				"
				(
				SELECT id, size,height,IFNULL((SELECT disch_dt FROM ctmsmis.mis_disch_cont WHERE ctmsmis.mis_disch_cont.gkey=ctmsmis.mis_inv_unit.gkey),fcy_time_in) AS fcy_time_in,freight_kind
				FROM ctmsmis.mis_inv_unit 
				WHERE  mis_inv_unit.vvd_gkey=$vvdGkey AND category='IMPRT'".$qryCondExtra."
				) AS tmp ".$qryCondFcyTime.$qryCondFcyTimeOnBoard."
				) AS final WHERE discharge_container!=''";
		//echo $query;
		
		$getVesselInfoQry="select vsl_vessels.name as vsl_name,ifnull(sparcsn4.vsl_vessel_visit_details.flex_string02,
							ifnull(sparcsn4.vsl_vessel_visit_details.flex_string03,'')) as berth_op,ifnull(sparcsn4.argo_quay.id,'') as berth,
							sparcsn4.argo_carrier_visit.ata,sparcsn4.argo_carrier_visit.atd,sparcsn4.vsl_vessel_visit_details.ib_vyg 
							from vsl_vessel_visit_details
							inner join sparcsn4.argo_carrier_visit on sparcsn4.argo_carrier_visit.cvcvd_gkey=sparcsn4.vsl_vessel_visit_details.vvd_gkey
							inner join sparcsn4.vsl_vessel_berthings on sparcsn4.vsl_vessel_berthings.vvd_gkey=sparcsn4.vsl_vessel_visit_details.vvd_gkey
							inner join sparcsn4.vsl_vessels on sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
							inner join sparcsn4.argo_quay on sparcsn4.argo_quay.gkey=sparcsn4.vsl_vessel_berthings.quay
							where vsl_vessel_visit_details.vvd_gkey=$vvdGkey";
		
		$disChargeListContainer=$this->bm->dataSelect($query);
		$getVesselInfo=$this->bm->dataSelect($getVesselInfoQry);
		
		$data['disChargeListContainer']=$disChargeListContainer; 
		$data['getVesselInfo']=$getVesselInfo; 
		$this->load->view('getLast24HourDischargeContainerList',$data);
	}
	
	// Discharge Export  
	function getLast24HourDischargeExportContainerList()
	{
		$cont_size = $this->uri->segment(3);
		$fromdate = $this->uri->segment(4);
		$vvdGkey = $this->uri->segment(5);
		$impContType = $this->uri->segment(6);
		$qryCond="";
		$qryCondExtra="";
		$qryCondFcyTime="";
		
		// Discharge 
		if($impContType=='discharge_done_LD_20')
		{
			$qryCond="SELECT 
						(CASE WHEN size = $cont_size
						AND fcy_time_in >CONCAT(DATE_ADD('$fromdate', INTERVAL -1 DAY),' 08:00:00')
						AND fcy_time_in <CONCAT('$fromdate',' 08:00:01') 
						AND freight_kind IN ('FCL','LCL')  THEN id 
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondFcyTime=" WHERE fcy_time_in IS NOT NULL";
		}
		else if($impContType=='discharge_done_LD_40')
		{
			$qryCond="SELECT 
						(CASE WHEN size !=$cont_size
						AND fcy_time_in >CONCAT(DATE_ADD('$fromdate', INTERVAL -1 DAY),' 08:00:00')
						AND fcy_time_in <CONCAT('$fromdate',' 08:00:01') 
						AND freight_kind IN ('FCL','LCL')  THEN id   
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondFcyTime=" WHERE fcy_time_in IS NOT NULL";
		}
		else if($impContType=='discharge_done_MT_20')
		{
			$qryCond="SELECT 
						(CASE WHEN size = $cont_size
							AND fcy_time_in >CONCAT(DATE_ADD('$fromdate', INTERVAL -1 DAY),' 08:00:00')
							AND fcy_time_in <CONCAT('$fromdate',' 08:00:01') 
							AND freight_kind ='MTY'  THEN id  
							ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondFcyTime=" WHERE fcy_time_in IS NOT NULL";
		}
		else if($impContType=='discharge_done_MT_40')
		{
			$qryCond="SELECT 
						(CASE WHEN size !=$cont_size
							AND fcy_time_in >CONCAT(DATE_ADD('$fromdate', INTERVAL -1 DAY),' 08:00:00')
							AND fcy_time_in <CONCAT('$fromdate',' 08:00:01') 
							AND freight_kind ='MTY'  THEN id  
							ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondFcyTime=" WHERE fcy_time_in IS NOT NULL";
		}
		
		// Discharge Total
		else if($impContType=='balance_LD_20')
		{
			$qryCond="SELECT 
						(CASE WHEN size = $cont_size AND freight_kind IN ('FCL','LCL')  THEN id  
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state NOT IN ('S20_INBOUND')";
		}
		else if($impContType=='balance_LD_40')
		{
			$qryCond="SELECT 
						(CASE WHEN size > $cont_size AND freight_kind IN ('FCL','LCL')  THEN id  
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state NOT IN ('S20_INBOUND')";
		}
		else if($impContType=='balance_MT_20')
		{
			$qryCond="SELECT 
						(CASE WHEN size = $cont_size AND freight_kind ='MTY'  THEN id  
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state NOT IN ('S20_INBOUND')";
		}
		else if($impContType=='balance_MT_40')
		{
			$qryCond="SELECT 
						(CASE WHEN size > $cont_size AND freight_kind ='MTY'  THEN id  
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state NOT IN ('S20_INBOUND')";
		}
		
		// Discharge Balance
		
		else if($impContType=='onboard_LD_20')
		{
			$qryCond="SELECT 
						(CASE WHEN size = $cont_size AND freight_kind IN ('FCL','LCL')  THEN id  
							ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state='S20_INBOUND'";
		}
		else if($impContType=='onboard_LD_40')
		{
			$qryCond="SELECT 
						(CASE WHEN size > $cont_size AND freight_kind IN ('FCL','LCL')  THEN id  
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state='S20_INBOUND'";
		}
		else if($impContType=='onboard_MT_20')
		{
			$qryCond="SELECT 
						(CASE WHEN size = $cont_size AND freight_kind ='MTY'  THEN id  
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state='S20_INBOUND'";
		}
		else if($impContType=='onboard_MT_40')
		{
			$qryCond="SELECT 
						(CASE WHEN size > $cont_size AND freight_kind ='MTY'  THEN id  
						ELSE '' END) AS discharge_container,size,height,freight_kind,fcy_time_in
						FROM";
			$qryCondExtra=" AND fcy_transit_state='S20_INBOUND'";
		}
		
		$query="SELECT
				*
				FROM 
				(
				".
				$qryCond.				
				"
				(
				SELECT id, size,height,IFNULL((SELECT disch_dt FROM ctmsmis.mis_disch_cont WHERE ctmsmis.mis_disch_cont.gkey=ctmsmis.mis_inv_unit.gkey),fcy_time_in) AS fcy_time_in,freight_kind
				FROM ctmsmis.mis_inv_unit 
				WHERE  mis_inv_unit.vvd_gkey=$vvdGkey AND category='EXPRT'".$qryCondExtra."
				) AS tmp ".$qryCondFcyTime."
				) AS final WHERE discharge_container!=''";
		//echo $query;
		
		$getVesselInfoQry="select vsl_vessels.name as vsl_name,ifnull(sparcsn4.vsl_vessel_visit_details.flex_string02,
							ifnull(sparcsn4.vsl_vessel_visit_details.flex_string03,'')) as berth_op,ifnull(sparcsn4.argo_quay.id,'') as berth,
							sparcsn4.argo_carrier_visit.ata,sparcsn4.argo_carrier_visit.atd,sparcsn4.vsl_vessel_visit_details.ib_vyg 
							from vsl_vessel_visit_details
							inner join sparcsn4.argo_carrier_visit on sparcsn4.argo_carrier_visit.cvcvd_gkey=sparcsn4.vsl_vessel_visit_details.vvd_gkey
							inner join sparcsn4.vsl_vessel_berthings on sparcsn4.vsl_vessel_berthings.vvd_gkey=sparcsn4.vsl_vessel_visit_details.vvd_gkey
							inner join sparcsn4.vsl_vessels on sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
							inner join sparcsn4.argo_quay on sparcsn4.argo_quay.gkey=sparcsn4.vsl_vessel_berthings.quay
							where vsl_vessel_visit_details.vvd_gkey=$vvdGkey";
		
		$disChargeListContainer=$this->bm->dataSelect($query);
		$getVesselInfo=$this->bm->dataSelect($getVesselInfoQry);
		
		$data['disChargeListContainer']=$disChargeListContainer; 
		$data['getVesselInfo']=$getVesselInfo; 
		$this->load->view('getLast24HourDischargeContainerList',$data);
	}
	//24 Hours Discharge Container List End
	
	//Sumon attached--berth report view
	function berthReportView()
	{
			//$this->load->library('m_pdf');
			//$mpdf->use_kwt = true;
		if($this->uri->segment(3))
		{
			$fromdate = $this->uri->segment(4);
			$todate = $this->uri->segment(5);
			

							
			$sql = "SELECT vsl_vessel_berthings.ata,vsl_vessels.id AS VesselID,vsl_vessels.name AS
			VesselName,(vsl_vessel_classes.loa_cm)/10 AS LENGTH,vsl_vessel_classes.beam_cm AS Draft,argo_quay.id AS JettyNo,
			(SELECT ref_routing_point.id FROM argo_visit_details INNER JOIN ref_point_calls ON argo_visit_details.itinereray=ref_point_calls.itin_gkey
            INNER JOIN ref_routing_point ON ref_point_calls.point_gkey=ref_routing_point.gkey 
            WHERE argo_visit_details.gkey=vsl_vessel_visit_details.vvd_gkey AND ref_point_calls.calling_order=0) AS LoadPortCall,
            r.id AS LineOperator,r.name AS LocalAgent,vsl_vessels.country_code AS Flag,
            NVL(vsl_vessel_berthings.eta,(SELECT eta FROM argo_visit_details WHERE argo_visit_details.gkey=vsl_vessel_visit_details.vvd_gkey)) AS estBerthDate,vsl_vessel_berthings.ata AS BerthDate
			FROM vsl_vessel_visit_details
			INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
			INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
			INNER JOIN vsl_vessel_berthings ON vsl_vessel_berthings.vvd_gkey=vsl_vessel_visit_details.vvd_gkey
			INNER JOIN argo_quay ON argo_quay.gkey=vsl_vessel_berthings.quay
			INNER JOIN  ( ref_bizunit_scoped r 
			LEFT JOIN ( ref_agent_representation X  
			LEFT JOIN ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey )              
			ON r.gkey=X.bzu_gkey)  ON r.gkey = vsl_vessel_visit_details.bizu_gkey
			WHERE to_char(vsl_vessel_berthings.ata,'yyyy-mm-dd') BETWEEN '$fromdate' AND '$todate'";
							
			$resultList = $this->bm->dataSelect($sql);	
			$data['resultList']=$resultList;
			$data['fromdate']=$fromdate;
			$data['todate']=$todate;
			
			$this->load->view('cssAssetsList');
			$this->load->view('FrontEnd/berthReportViewFormPrint',$data);
			$this->load->view('jsAssetsList.php');
		}
		else
		{			
			$data['fromdate']=$fromdate=$this->input->post('fromdate');
			$data['todate']=$todate=$this->input->post('todate');
		/* 	print($fromdate);
			print($todate);
			return; */
			
			$sql = "           
            SELECT vsl_vessels.id AS VesselID,vsl_vessels.name AS
			VesselName,(vsl_vessel_classes.loa_cm)/10 AS LENGTH,vsl_vessel_classes.beam_cm AS Draft,argo_quay.id AS JettyNo,
			(SELECT ref_routing_point.id FROM argo_visit_details
            INNER JOIN ref_point_calls ON argo_visit_details.itinereray=ref_point_calls.itin_gkey
            INNER JOIN ref_routing_point ON ref_point_calls.point_gkey=ref_routing_point.gkey
            WHERE argo_visit_details.gkey=vsl_vessel_visit_details.vvd_gkey AND ref_point_calls.calling_order=0) AS LoadPortCall,
            r.id AS LineOperator,r.name AS LocalAgent,vsl_vessels.country_code AS Flag,NVL(vsl_vessel_berthings.eta,
            (SELECT eta FROM argo_visit_details WHERE argo_visit_details.gkey=vsl_vessel_visit_details.vvd_gkey)) AS estBerthDate,
            vsl_vessel_berthings.ata AS BerthDate
			FROM vsl_vessel_visit_details
			INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
			INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
			INNER JOIN vsl_vessel_berthings ON vsl_vessel_berthings.vvd_gkey=vsl_vessel_visit_details.vvd_gkey
			INNER JOIN argo_quay ON argo_quay.gkey=vsl_vessel_berthings.quay
			INNER JOIN  ( ref_bizunit_scoped r 
			LEFT JOIN ( ref_agent_representation X  
			LEFT JOIN ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey )              
			ON r.gkey=X.bzu_gkey)  ON r.gkey = vsl_vessel_visit_details.bizu_gkey
            	WHERE to_char(vsl_vessel_berthings.ata,'yyyy-mm-dd')  BETWEEN '$fromdate' AND '$todate'";	
							
			$resultList = $this->bm->dataSelect($sql);	
			$data['resultList']=$resultList;
			
			$this->load->view('cssAssetsList');
			$this->load->view('FrontEnd/berthReportViewForm',$data);
			$this->load->view('jsAssetsList.php');
		} 
	}
	//Sourav
	
	function mloWiseFinalDischargingExportFormForCPA()
	{
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="MLO WISE FINAL LOADING EXPORT REPORT APPS...";
			//echo $data['title'];
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myReportExportContainerLoadedFormForCPA',$data);
			$this->load->view('jsAssets');
		}	
	}

	public function chkMloWiseFinalDischargingExport()
	{
		if (isset($_POST['detail'])) {
  
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');		
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$fromdate=$this->input->post('fromdate');
			$fromTime=$this->input->post('fromTime');
			$todate=$this->input->post('todate');
			$toTime=$this->input->post('toTime');
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;
			$data['fromdate']=$fromdate;
			$data['fromTime']=$fromTime;
			$data['todate']=$todate;
			$data['toTime']=$toTime;
			
			$this->load->view('myReportExportContainerLoadingListViewForCPA',$data);
		}
		elseif (isset($_POST['summary'])) {
			
			if($_POST['options'] == 'xl'){
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$fromdate=$this->input->post('fromdate');
				$fromTime=$this->input->post('fromTime');
				$todate=$this->input->post('todate');
				$toTime=$this->input->post('toTime');
				$this->load->model('ci_auth', 'bm', TRUE);
				$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
				$data['voysNo']=$getVoyNo;		
				$data['ddl_imp_rot_no']=$ddl_imp_rot_no;		
				$data['fromdate']=$fromdate;
				$data['fromTime']=$fromTime;
				$data['todate']=$todate;
				$data['toTime']=$toTime;
				
				$this->load->view('myReportExportSummaryMloWisexl',$data);
				$this->load->view('myclosebar');
			}
			
			
			
			else if($_POST['options'] == 'html'){
			
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$fromdate=$this->input->post('fromdate');
				$fromTime=$this->input->post('fromTime');
				$todate=$this->input->post('todate');
				$toTime=$this->input->post('toTime');
				$this->load->model('ci_auth', 'bm', TRUE);
				$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
				$data['voysNo']=$getVoyNo;		
				$data['ddl_imp_rot_no']=$ddl_imp_rot_no;		
				$data['fromdate']=$fromdate;
				$data['fromTime']=$fromTime;
				$data['todate']=$todate;
				$data['toTime']=$toTime;
			
				$this->load->view('cssAssets');
				$this->load->view('myReportExportSummaryMloWisehtml',$data);
				$this->load->view('jsAssets');
				$this->load->view('myclosebar');
			}
		}
	}
	
	function mloWiseFinalDischargingExportFormForCPAN4()
	{
		
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		
		else
		{
			$data['title']="MLO WISE FINAL LOADING EXPORT REPORT...";
			//echo $data['title'];
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myReportExportContainerLoadedFormForCPAN4',$data);
			$this->load->view('jsAssets');
		}	
	}

	public function chkMloWiseFinalDischargingExportN4()
	{
		if (isset($_POST['detail'])) {
        	# detail-button was clicked
			//$this->myExportContainerLoadedReportView();
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');		
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			//$fromdate=$this->input->post('fromdate');
			//$fromTime=$this->input->post('fromTime');
			//$todate=$this->input->post('todate');
			//$toTime=$this->input->post('toTime');
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;
			//$data['fromdate']=$fromdate;
			//$data['fromTime']=$fromTime;
			//$data['todate']=$todate;
			//$data['toTime']=$toTime;
			
			$this->load->view('myReportExportContainerLoadingListViewForCPAN4',$data);
		}
		elseif (isset($_POST['summary'])) {
			if($_POST['options'] == 'html'){
				# summary-button was clicked
				//$this->myExportImExSummeryView();
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				//$fromdate=$this->input->post('fromdate');
				//$fromTime=$this->input->post('fromTime');
				//$todate=$this->input->post('todate');
				//$toTime=$this->input->post('toTime');
				$this->load->model('ci_auth', 'bm', TRUE);
				$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
				$data['voysNo']=$getVoyNo;		
				$data['ddl_imp_rot_no']=$ddl_imp_rot_no;		
				//$data['fromdate']=$fromdate;
				//$data['fromTime']=$fromTime;
				//$data['todate']=$todate;
				//$data['toTime']=$toTime;
				//echo $data['voysNo'];
				$this->load->view('cssAssets');
				$this->load->view('myReportExportSummaryMloWiseN4html',$data);
				$this->load->view('myclosebar');
				$this->load->view('jsAssets');
			}else if($_POST['options'] == 'xl'){
				# summary-button was clicked
				//$this->myExportImExSummeryView();
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				
				$this->load->model('ci_auth', 'bm', TRUE);
				$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
				$data['voysNo']=$getVoyNo;		
				$data['ddl_imp_rot_no']=$ddl_imp_rot_no;		
				//$data['fromdate']=$fromdate;
				//$data['fromTime']=$fromTime;
				//$data['todate']=$todate;
				//$data['toTime']=$toTime;
				//echo $data['voysNo'];
				$this->load->view('myReportExportSummaryMloWiseN4xl',$data);
				$this->load->view('myclosebar');
			}
		}
	}
	
	function mloWiseFinalDischargingImportFormForCPA()
	{
			//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="MLO WISE FINAL DISCHARGING IMPORT REPORT...";
			//echo $data['title'];

			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myReportImportContainerLoadedFormForCPA',@$data);
			$this->load->view('jsAssetsList');
		}	
	}
	   
	public function chkMloWiseFinalDischargingImport()
	{
		if (isset($_POST['detail'])) 
		{
        # detail-button was clicked
			//$this->myExportContainerLoadedReportView();
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');		
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$fromdate=$this->input->post('fromdate');
			$fromTime=$this->input->post('fromTime');
			$todate=$this->input->post('todate');
			$toTime=$this->input->post('toTime');
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;
			$data['fromdate']=$fromdate;
			$data['fromTime']=$fromTime;
			$data['todate']=$todate;
			$data['toTime']=$toTime;

            $this->load->view('cssAssetsList');
			$this->load->view('myReportImportContainerLoadingListViewForCPA',$data);
            $this->load->view('jsAssetsList');
		}
		elseif (isset($_POST['summary'])) 
		{
			# summary-button was clicked
			//$this->myExportImExSummeryView();
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$fromdate=$this->input->post('fromdate');
			$fromTime=$this->input->post('fromTime');
			$todate=$this->input->post('todate');
			$toTime=$this->input->post('toTime');
			$this->load->model('ci_auth', 'bm', TRUE);
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;		
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;		
			$data['fromdate']=$fromdate;
			$data['fromTime']=$fromTime;
			$data['todate']=$todate;
			$data['toTime']=$toTime;
			//echo $data['voysNo'];

            $this->load->view('cssAssetsList');
			$this->load->view('mloWiseLoadingSummaryList',$data);
			$this->load->view('myclosebar');
            $this->load->view('jsAssetsList');
		}
	}

	public function chkImportLoadedContainerMloWise()
	{
		if (isset($_POST['detail'])) 
		{
        # detail-button was clicked
			//$this->myImportContainerLoadedReportView();
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$this->load->model('ci_auth', 'bm', TRUE);
			
			$fromdate=$this->input->post('fromdate');
			$fromTime=$this->input->post('fromTime');
			$todate=$this->input->post('todate');
			$toTime=$this->input->post('toTime');
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$data['fromdate']=$fromdate;
			$data['fromTime']=$fromTime;
			$data['todate']=$todate;
			$data['toTime']=$toTime;
			
			
			//echo $data['toTime'];
			//return;
			$this->load->view('myReportImportContainerLoadingListViewForCPA',$data);
		}
		elseif (isset($_POST['summary'])) 
		{
			# summary-button was clicked
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');		
			$fromdate=$this->input->post('fromdate');
			$fromTime=$this->input->post('fromTime');
			$todate=$this->input->post('todate');
			$toTime=$this->input->post('toTime');
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$data['fromdate']=$fromdate;
			$data['fromTime']=$fromTime;
			$data['todate']=$todate;
			$data['toTime']=$toTime;
			
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
						
			$this->load->view('mloWiseLoadingSummaryList',$data);

		}
	}

	public function chkExportLoadedContainerMloWise()
	{
		if (isset($_POST['detail'])) 
		{
        # detail-button was clicked
			$this->myExportContainerLoadedReportView();
		}
		elseif (isset($_POST['summary'])) 
		{
			# summary-button was clicked
			//$this->myExportImExSummeryView();
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$fromdate=$this->input->post('fromdate');
			$fromTime=$this->input->post('fromTime');
			$todate=$this->input->post('todate');
			$toTime=$this->input->post('toTime');
			$this->load->model('ci_auth', 'bm', TRUE);
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;		
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;		
			$data['fromdate']=$fromdate;
			$data['fromTime']=$fromTime;
			$data['todate']=$todate;
			$data['toTime']=$toTime;
			//echo $data['voysNo'];
			$this->load->view('myReportExportSummaryMloWise',$data);
			//$this->load->view('myclosebar');
		}
	}
	
	// Pangoan Discahrge Report----Sumon Roy-------
	
	function pangoanDischargeForm()
	{
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="PANGAON DISCHARGING  REPORT...";
			//echo $data['title'];

			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('pangoanDischargeFormView',@$data);
			$this->load->view('jsAssetsList');
		}	
		
	}
        
	function pangoanDischargeReportPerform()
	{
		if (isset($_POST['detail'])) {
			# detail-button was clicked
			//$this->myExportContainerLoadedReportView();
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');		
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$fromdate=$this->input->post('fromdate');
			$fromTime=$this->input->post('fromTime');
			$todate=$this->input->post('todate');
			$toTime=$this->input->post('toTime');
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
						//return $getVoyNo;
			$data['voysNo']=$getVoyNo;
			$data['fromdate']=$fromdate;
			$data['fromTime']=$fromTime;
			$data['todate']=$todate;
			$data['toTime']=$toTime;

			$this->load->view('cssAssetsList');
			$this->load->view('pangoanDischargeReportPerformDetailView',$data);
			$this->load->view('jsAssetsList');
		}elseif (isset($_POST['summary'])) {
			# summary-button was clicked
			//$this->myExportImExSummeryView();
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$fromdate=$this->input->post('fromdate');
			$fromTime=$this->input->post('fromTime');
			$todate=$this->input->post('todate');
			$toTime=$this->input->post('toTime');
			$this->load->model('ci_auth', 'bm', TRUE);
			$getVoyNo = $this->bm->myExportImExSummeryView($ddl_imp_rot_no);
			$data['voysNo']=$getVoyNo;		
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;		
			$data['fromdate']=$fromdate;
			$data['fromTime']=$fromTime;
			$data['todate']=$todate;
			$data['toTime']=$toTime;
			//echo $data['voysNo'];

			$this->load->view('cssAssetsList');
			$this->load->view('pangoanDischargeReportPerformSummaryView',$data);
			$this->load->view('myclosebar');
			$this->load->view('jsAssetsList');
		} 
	}
		
	//Pangoan Loading start
	function pangoanLoadingExportForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="PANGOAN LOADING EXPORT FORM";
			//echo $data['title'];
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('pangoanLoadingExportForm',$data);
			$this->load->view('jsAssets');
		}	
	}
	
	public function pangoanLoadingExportSummaryDetails()
	{
		if(isset($_POST['detail'])) 
		{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');		
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$fromdate=$this->input->post('fromdate');
			$fromTime=$this->input->post('fromTime');
			$todate=$this->input->post('todate');
			$toTime=$this->input->post('toTime');
			
			$sql_voyNo="SELECT argo_carrier_visit.id AS rtnValue 
			FROM vsl_vessel_visit_details   
			INNER JOIN argo_carrier_visit ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
			WHERE ib_vyg='$ddl_imp_rot_no'";
			
			$getVoyNo = $this->bm->dataReturn($sql_voyNo);
			
			$data['voysNo']=$getVoyNo;
			$data['fromdate']=$fromdate;
			$data['fromTime']=$fromTime;
			$data['todate']=$todate;
			$data['toTime']=$toTime;
			
			$this->load->view('pangoanLoadingExportDetailsView',$data);
		}
		elseif (isset($_POST['summary'])) 
		{
			if($_POST['options'] == 'html'){
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$fromdate=$this->input->post('fromdate');
				$fromTime=$this->input->post('fromTime');
				$todate=$this->input->post('todate');
				$toTime=$this->input->post('toTime');
				$this->load->model('ci_auth', 'bm', TRUE);
				
				$sql_voyNo="SELECT argo_carrier_visit.id AS rtnValue 
				FROM vsl_vessel_visit_details   
				INNER JOIN argo_carrier_visit ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
				WHERE ib_vyg='$ddl_imp_rot_no'";
				
				$getVoyNo = $this->bm->dataReturn($sql_voyNo);
				
				$data['voysNo']=$getVoyNo;		
				$data['ddl_imp_rot_no']=$ddl_imp_rot_no;		
				$data['fromdate']=$fromdate;
				$data['fromTime']=$fromTime;
				$data['todate']=$todate;
				$data['toTime']=$toTime;
				
				$this->load->view('cssAssets');
				$this->load->view('pangoanLoadingExportSummaryViewhtml',$data);
				$this->load->view('myclosebar');
				$this->load->view('jsAssets');

			}else if($_POST['options'] == 'xl'){
				$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
				$fromdate=$this->input->post('fromdate');
				$fromTime=$this->input->post('fromTime');
				$todate=$this->input->post('todate');
				$toTime=$this->input->post('toTime');
				$this->load->model('ci_auth', 'bm', TRUE);
				
				$sql_voyNo="SELECT argo_carrier_visit.id AS rtnValue 
				FROM vsl_vessel_visit_details   
				INNER JOIN argo_carrier_visit ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
				WHERE ib_vyg='$ddl_imp_rot_no'";
				
				$getVoyNo = $this->bm->dataReturn($sql_voyNo);
				
				$data['voysNo']=$getVoyNo;		
				$data['ddl_imp_rot_no']=$ddl_imp_rot_no;		
				$data['fromdate']=$fromdate;
				$data['fromTime']=$fromTime;
				$data['todate']=$todate;
				$data['toTime']=$toTime;
				
				$this->load->view('cssAssets');
				$this->load->view('pangoanLoadingExportSummaryViewxl',$data);
				$this->load->view('myclosebar');
				$this->load->view('jsAssets');
			}
		}
	}
	//Pangoan Loading end
	
	//Offhire Summary and Details start
	
	function offhireSummaryAndDetails()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="OFFHIRE SUMMARY AND DETAILS";
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('offhireSummaryAndDetailsForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function offhireSummaryAndDetailsView()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$offhire_date=$this->input->post('offhire_date');
			$type=$this->input->post('submit');
			$options=$this->input->post('options');

			if($type=="Summary")
			{
				$sql_offhire_summary="SELECT mlo,NAME,
				COUNT(mty_20_85) AS mty_20_85, 
				COUNT(mty_20_95) AS mty_20_95, 
				COUNT(mty_40_85) AS mty_40_85,
				COUNT(mty_40_95) AS mty_40_95,
				COUNT(mty_45_85) AS mty_45_85,
				COUNT(mty_45_95) AS mty_45_95 
				FROM 
				(SELECT inv.gkey,r.id AS mlo,Y.name AS NAME, 
				(CASE 
				WHEN 
				((SELECT substr(ref_equip_type.nominal_height,-2) FROM ref_equip_type
				INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
				INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				WHERE inv_unit_fcy_visit.unit_gkey=inv.gkey fetch first 1 rows only)) IN (86,80,40) AND (SELECT substr(ref_equip_type.nominal_length,-2) FROM ref_equip_type
				INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
				INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				WHERE inv_unit_fcy_visit.unit_gkey=inv.gkey fetch first 1 rows only) = 20 AND road_truck_transactions.ctr_freight_kind = 'MTY' 
				THEN 1 
				ELSE NULL 
				END) AS mty_20_85, 
				(CASE 
				WHEN 
				((SELECT substr(ref_equip_type.nominal_height,-2) FROM ref_equip_type
				INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
				INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				WHERE inv_unit_fcy_visit.unit_gkey=inv.gkey fetch first 1 rows only)) IN (96,90) AND (SELECT substr(ref_equip_type.nominal_length,-2) FROM ref_equip_type
				INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
				INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				WHERE inv_unit_fcy_visit.unit_gkey=inv.gkey fetch first 1 rows only) = 20 AND road_truck_transactions.ctr_freight_kind = 'MTY' 
				THEN 1 
				ELSE NULL 
				END) AS mty_20_95, 
				(CASE 
				WHEN ((SELECT substr(ref_equip_type.nominal_height,-2) FROM ref_equip_type
				INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
				INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				WHERE inv_unit_fcy_visit.unit_gkey=inv.gkey fetch first 1 rows only)) IN (86, 80,40) AND (SELECT substr(ref_equip_type.nominal_length,-2) FROM ref_equip_type
				INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
				INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				WHERE inv_unit_fcy_visit.unit_gkey=inv.gkey fetch first 1 rows only) = 40 AND road_truck_transactions.ctr_freight_kind = 'MTY' 
				THEN 1 
				ELSE NULL 
				END) AS mty_40_85, 
				(CASE 
				WHEN ((SELECT substr(ref_equip_type.nominal_height,-2) FROM ref_equip_type
				INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
				INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				WHERE inv_unit_fcy_visit.unit_gkey=inv.gkey fetch first 1 rows only)) IN (96,90) AND (SELECT substr(ref_equip_type.nominal_length,-2) FROM ref_equip_type
				INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
				INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				WHERE inv_unit_fcy_visit.unit_gkey=inv.gkey fetch first 1 rows only) = 40 AND road_truck_transactions.ctr_freight_kind = 'MTY' 
				THEN 1 
				ELSE NULL 
				END) AS mty_40_95, 
				(CASE 
				WHEN ((SELECT substr(ref_equip_type.nominal_height,-2) FROM ref_equip_type
				INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
				INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				WHERE inv_unit_fcy_visit.unit_gkey=inv.gkey fetch first 1 rows only)) IN (86, 80,40) AND (SELECT substr(ref_equip_type.nominal_length,-2) FROM ref_equip_type
				INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
				INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				WHERE inv_unit_fcy_visit.unit_gkey=inv.gkey fetch first 1 rows only)>40 AND road_truck_transactions.ctr_freight_kind = 'MTY' 
				THEN 1 
				ELSE NULL 
				END) AS mty_45_85, 
				(CASE 
				WHEN ((SELECT substr(ref_equip_type.nominal_height,-2) FROM ref_equip_type
				INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
				INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				WHERE inv_unit_fcy_visit.unit_gkey=inv.gkey fetch first 1 rows only)) IN (96,90) AND (SELECT substr(ref_equip_type.nominal_length,-2) FROM ref_equip_type
				INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
				INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				WHERE inv_unit_fcy_visit.unit_gkey=inv.gkey fetch first 1 rows only)>40 AND road_truck_transactions.ctr_freight_kind = 'MTY' 
				THEN 1 
				ELSE NULL 
				END) AS mty_45_95 
				FROM inv_unit inv
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv.gkey 
				INNER JOIN road_truck_transactions ON road_truck_transactions.unit_gkey=inv.gkey 
				INNER JOIN road_truck_visit_details ON road_truck_transactions.truck_visit_gkey=road_truck_visit_details.tvdtls_gkey 
				INNER JOIN ( ref_bizunit_scoped r LEFT JOIN ( ref_agent_representation X 
				LEFT JOIN ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey ) ON r.gkey=X.bzu_gkey) ON r.gkey = inv.line_op 
				WHERE road_truck_visit_details.created >= to_date(CONCAT('$offhire_date',' 08:00:00'),'yyyy-mm-dd hh24-mi-ss')
				AND road_truck_visit_details.created <= to_date(CONCAT('$offhire_date',' 08:00:00'),'yyyy-mm-dd hh24-mi-ss')+1  
				AND road_truck_transactions.stage_id='Out Gate' AND road_truck_transactions.status !='CANCEL' 
				AND road_truck_transactions.ctr_freight_kind='MTY'
				
				ORDER BY line_id)  detail 
				GROUP BY mlo,NAME";
				
				if($options=="pdf")
				{
					$this->load->library('m_pdf');
					//$pdf->use_kwt = true;

					$pdf = $this->m_pdf->load();
					//$pdf->SetWatermarkText('CPA CTMS');
					$pdf->showWatermarkText = true;	
					$rslt_offhire_summary=$this->bm->dataSelect($sql_offhire_summary);

					$this->data['rslt_offhire_summary']=$rslt_offhire_summary;
					
				//	$stylesheet = file_get_contents('resources/styles/truckReport.css'); // external css
					$html=$this->load->view('offhireSummaryPDF',$this->data, true); 

					// $pdf->AddPage('P', // L - landscape, P - portrait
					// 			'', '', '', '',
					// 			5, // margin_left
					// 			5, // margin right
					// 			5, // margin top
					// 			5, // margin bottom
					// 			5, // margin header
					// 			5); // margin footer

					//$pdf->setFooter('|Page {PAGENO} of {nb}|');   

					$pdf->WriteHTML($stylesheet,1);
					$pdf->WriteHTML($html,2);

					$pdf->Output($pdfFilePath, "I");
				}
				else if($options=="html" or $options=="xl")
				{
					$rslt_offhire_summary=$this->bm->dataSelect($sql_offhire_summary);
				
					$data['rslt_offhire_summary']=$rslt_offhire_summary;
					$data['offhire_date']=$offhire_date;

					if($options=="xl"){
						$this->load->view('offhireSummaryView',$data);
					}else{
						$this->load->view('cssAssets');
						$this->load->view('offhireSummaryView',$data);
						$this->load->view('jsAssets');
					}
				}
			}
			else if($type=="Details")
			{
				$sql_get_mlo="SELECT DISTINCT r.id AS mlo,Y.name AS concustomername
				FROM inv_unit
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				INNER JOIN road_truck_transactions ON road_truck_transactions.unit_gkey=inv_unit.gkey
				INNER JOIN road_truck_visit_details ON road_truck_transactions.truck_visit_gkey=road_truck_visit_details.tvdtls_gkey
				INNER JOIN  ( ref_bizunit_scoped r   
				LEFT JOIN ( ref_agent_representation X   
				LEFT JOIN ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey )                
				ON r.gkey=X.bzu_gkey)  ON r.gkey = inv_unit.line_op
				WHERE road_truck_visit_details.created >= to_date(CONCAT('$offhire_date',' 08:00:00'),'yyyy-mm-dd hh24-mi-ss') 
				AND road_truck_visit_details.created <= to_date(CONCAT('$offhire_date',' 08:00:00'),'yyyy-mm-dd hh24-mi-ss')+1
				AND road_truck_transactions.stage_id='Out Gate' AND road_truck_transactions.status !='CANCEL'
				AND road_truck_transactions.ctr_freight_kind='MTY'
				ORDER BY r.id";
				
				if($options=="pdf")
				{
					$this->load->library('m_pdf');
					//$pdf->use_kwt = true;

					$pdf = $this->m_pdf->load();
					//$pdf->SetWatermarkText('CPA CTMS');
					$pdf->showWatermarkText = true;	
					$rslt_get_mlo=$this->bm->dataSelect($sql_get_mlo);
					
					$this->data['rslt_get_mlo']=$rslt_get_mlo;
					$this->data['offhire_date']=$offhire_date;
					
					$stylesheet = file_get_contents('assets/stylesheets/truckReport.css'); // external css
					$html=$this->load->view('offhireDetailsPDF',$this->data, true); 

					// $pdf->AddPage('P', // L - landscape, P - portrait
					// 			'', '', '', '',
					// 			5, // margin_left
					// 			5, // margin right
					// 			5, // margin top
					// 			5, // margin bottom
					// 			5, // margin header
					// 			5); // margin footer

					//$pdf->setFooter('|Page {PAGENO} of {nb}|');   

					$pdf->WriteHTML($stylesheet,1);
					$pdf->WriteHTML($html,2);

					$pdf->Output($pdfFilePath, "I");
				}
				else if($options=="html" or $options=="xl")
				{
					$rslt_get_mlo=$this->bm->dataSelect($sql_get_mlo);
										
					$data['rslt_get_mlo']=$rslt_get_mlo;
					$data['offhire_date']=$offhire_date;
					
					$this->load->view('offhireDetailsView',$data);
				}	
			}	
		}
	}
	//Offhire Summary and Details end
	
	
	//Offdoc information entry form start
	function myoffDocEntryForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			//$UserName = $this->session->userdata('User_Name');
			//$data['UserName']=$UserName;
			$data['msg']="";
			$data['title']="OFFDOC INFORMATION ENTRY FORM";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myoffDocEntryFormView',$data);
			$this->load->view('jsAssets');
		}	
	} 

	function myoffDocEntryFormPerform()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$offdoc_id=$this->input->post('offdoc_id');
			$offdoc_code=$this->input->post('offdoc_code');
			$offdoc_name=$this->input->post('offdoc_name');


			$insertQuery="insert into ctmsmis.offdoc(id, code, code_ctms, name)values('$offdoc_id','$offdoc_code','$offdoc_code','$offdoc_name')";
			// ECHO $insertQuery;
			//return;
			$offdocInsertStat=$this->bm->dataInsertDb2($insertQuery);
			if($offdocInsertStat==1)
				{
				$data['msg']="<font color=green size='2'><nobr>OffDoc Information Inserted Successfully</nobr></font>";
				}
			else
				$data['msg']="<font color=red size='2'><nobr>OffDoc Information Insert Failed</nobr></font>";

			$UserName = $this->session->userdata('User_Name');
			$data['title']="OFFDOC INFORMATION ENTRY FORM";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myoffDocEntryFormView',$data);
			$this->load->view('jsAssets');
		}
	} 
        
	function sh_agent_assignment_Form()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="ALL ASSIGNMENT DETAILS FORM...";
			//echo $data['title'];
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('sh_agent_assignment_Form',$data);
			$this->load->view('jsAssets');
		}	
	}

	function sh_agent_assignment_ReportView()
	{
		$fromdate=$this->input->post('fromdate');
		$login_id = $this->session->userdata('login_id'); 
		$agentCode = $this->session->userdata('agentCode'); // For MLO Panel 
		
		$data['fromdate']=$fromdate;
		$data['login_id']=$login_id;
		$data['agentCode']=$agentCode;
				
		$this->load->view('cssAssetsList');
		$this->load->view('sh_agent_assignment_ReportView',$data);
		$this->load->view('jsAssetsList');
	}
	
	/*PILOTAGE CERTIFICATE START*/

	
	
	function vesselListForPilotage()		
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$query="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name,vsl_vessel_visit_details.ib_vyg,vsl_vessel_visit_details.ob_vyg,
			substr(argo_carrier_visit.phase,1,2) AS phase_num,SUBSTR(argo_carrier_visit.phase,3) AS phase_str,
			ref_bizunit_scoped.id AS agent
			FROM argo_carrier_visit
			INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
			INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
			INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
			INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessel_visit_details.bizu_gkey
			WHERE argo_carrier_visit.phase IN ('20INBOUND','30ARRIVED','40WORKING')
			ORDER BY argo_carrier_visit.phase";
				
			$rtnVesselList = $this->bm->dataSelect($query);
			$data['rtnVesselList']=$rtnVesselList;
				
			$data['title']="VESSEL LIST WITH STATUS";
			$data['msg']="";				
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('viewVesselStatusForPilotage',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	

	
	
	function viewVesselStatusSearchList()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$rot_num=trim($this->input->post('rot_num'));

			$query="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name,vsl_vessel_visit_details.ib_vyg,
					vsl_vessel_visit_details.ob_vyg,substr(argo_carrier_visit.phase,1,2) AS phase_num,
					SUBSTR(argo_carrier_visit.phase,3) AS phase_str,ref_bizunit_scoped.id AS agent
					FROM argo_carrier_visit
					INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
					INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
					INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
					INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessel_visit_details.bizu_gkey
					WHERE UPPER(vsl_vessel_visit_details.ib_vyg)=UPPER('$rot_num')
					ORDER BY argo_carrier_visit.phase";
				
			$rtnVesselList = $this->bm->dataSelect($query);
			$data['rtnVesselList']=$rtnVesselList;
			
			$data['title']="VESSEL LIST WITH STATUS...";
			$data['msg']="";
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('viewVesselStatusForPilotage',$data);
			$this->load->view('jsAssets');
		}
	}
	
	
	// apps	- 2021-09-07 - intakhab
	function departureReportOfVessel_apps()		// 2021-06-17
	{
		
		$from_stat=$this->uri->segment(3);
		$data['chk_igm_id']="";

		$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(4));
		$data['rotation']=$ddl_imp_rot_no;
		$query_igm="SELECT id as igm_mst_id,Vessel_Name,Name_of_Master,Deck_cargo,Port_of_Destination,flag
		FROM igm_masters 
		WHERE Import_Rotation_No='$ddl_imp_rot_no'";
		
		//---
		$sql_vvdGkey = "SELECT sparcsn4.vsl_vessel_visit_details.vvd_gkey AS rtnValue
		FROM sparcsn4.vsl_vessel_visit_details
		WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
		$getVvdGkey = $this->bm->dataReturn($sql_vvdGkey);
		//---

		$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query_igm);
		$data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
		
		$query_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
		vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name as flag,
		vsl_vessel_classes.beam_cm
		FROM sparcsn4.vsl_vessels
		INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
		INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
		INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
		INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
		WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
					
		$rtnVesselDetails_n4 = $this->bm->dataSelect($query_n4);
		$data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
		
		//$this->load->view('header5');
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		if($from_stat=="A")
		{
			$data['title'] = "ARRIVAL REPORT OF VESSEL AND PILOTAGE CERTIFICATE";
			$this->load->view('arrivalReportVesselandPilotageCertificateView',$data);
		}
		else if($from_stat=="S")
		{				
			$data['title'] = "PILOTAGE CERTIFICATE FOR SHIFTING";
			$this->load->view('shiftingForm',$data);
		}
		else if($from_stat=="D")
		{
			$igm_id = 0;

			$chk_depart_query = "SELECT igm_id AS igm_id  FROM igm_masters
			INNER JOIN doc_vsl_depart ON  igm_masters.id=doc_vsl_depart.igm_id
			WHERE Import_Rotation_No = '$ddl_imp_rot_no'";

			$chkDepart = $this->bm->dataSelectDb1($chk_depart_query);
			if(count($chkDepart)>0){
				$igm_id=$chkDepart[0]['igm_id'];
			}
											
			if($igm_id>0)				
			{						
				$query_depart="SELECT igm_id,vvd_gkey,pilot_name,pilot_on_board,pilot_off_board,pilot_frm,pilot_to,mooring_frm_time,
				mooring_to_time,tug_name,assit_frm,assit_to,atd 
				FROM doc_vsl_depart
				WHERE igm_id=$igm_id";

				//---
				// $query_depart="SELECT igm_id,vvd_gkey,pilot_name,pilot_on_board,pilot_off_board,pilot_frm,pilot_to,mooring_frm_time,
				// mooring_to_time,tug_name,assit_frm,assit_to,atd 
				// FROM doc_vsl_depart
				// WHERE vvd_gkey='$getVvdGkey'";
				//---
				
				$rtnVesselDetails_depart = $this->bm->dataSelectDb1($query_depart);
				$getArraivalDt="select IFNULL(ata,'00:00:00') as ata from doc_vsl_arrival where igm_id=$igm_id";
				//---
				// $getArraivalDt="select IFNULL(ata,'00:00:00') as ata from doc_vsl_arrival where vvd_gkey='$getVvdGkey'";
				//---
				$rtnArrivalDt = $this->bm->dataSelectDb1($getArraivalDt);
				
				$data['rtnVesselDetails_depart']=$rtnVesselDetails_depart;
				$data['chk_igm_id']=$igm_id;
				$data['ata']=$rtnArrivalDt[0]['ata'];
			}
			$data['title'] = "DEPARTURE REPORT OF VESSEL";
			$this->load->view('viewPilotageCertificateDeparture',$data);
		}
		else if($from_stat=="R")
		{						
			$igm_id_arraival=0;
			$igm_id_depart=0;
			$igm_id_shift=0;
						
			$this->load->library('m_pdf');
			//$pdf->use_kwt = true;
			$this->data['title']="Pilotage Certificate";
			$this->data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$pdfFilePath ="PilotageCertificate-".time()."-download.pdf";
			$pdf = $this->m_pdf->load();
			// //$pdf->SetWatermarkText('CPA CTMS');
			$pdf->showWatermarkText = true;	
		
			// $chk_depart_query = "SELECT igm_id AS igm_id  FROM igm_masters
			// INNER JOIN doc_vsl_depart ON  igm_masters.id=doc_vsl_depart.igm_id
			// WHERE Import_Rotation_No = '$ddl_imp_rot_no'";

			// ---
			$chk_depart_query = "SELECT vvd_gkey FROM doc_vsl_depart WHERE vvd_gkey='$getVvdGkey'";
			// ---

			$chkDepart = $this->bm->dataSelectDb1($chk_depart_query);				
			
			$igm_id_depart=$chkDepart[0]['vvd_gkey'];
			
			// $chk_arrival_query = "SELECT igm_id AS igm_id  FROM igm_masters
			// INNER JOIN doc_vsl_arrival ON  igm_masters.id=doc_vsl_arrival.igm_id
			// WHERE Import_Rotation_No = '$ddl_imp_rot_no'";
			
			// ---
			$chk_arrival_query = "SELECT vvd_gkey FROM doc_vsl_arrival
			WHERE vvd_gkey='$getVvdGkey'";
			// ---
			
			$chkArrival = $this->bm->dataSelectDb1($chk_arrival_query);
			
			$igm_id_arraival=$chkArrival[0]['vvd_gkey'];
			
			// $chk_shift_query = "SELECT igm_id AS igm_id  FROM igm_masters
			// INNER JOIN doc_vsl_shift ON  igm_masters.id=doc_vsl_shift.igm_id
			// WHERE Import_Rotation_No = '$ddl_imp_rot_no'";
			
			// ---
			$chk_shift_query = "SELECT vvd_gkey FROM doc_vsl_shift
			WHERE vvd_gkey='$getVvdGkey'";
			// ---
			
			$chkShift = $this->bm->dataSelectDb1($chk_shift_query);
				
			$igm_id_shift=$chkShift[0]['vvd_gkey'];
				// $igm_id_depart=1;		// ---		// comment later, now for test
				// $igm_id_arraival=1;		// ---		// comment later, now for test
			if($igm_id_depart>0)
			{
				$query_igm="SELECT id as igm_mst_id,Vessel_Name,Name_of_Master,Deck_cargo,Port_of_Destination,flag
				FROM igm_masters 
				WHERE Import_Rotation_No='$ddl_imp_rot_no'";

				$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query_igm);
				$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;

				$query_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
				vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name as flag,
				vsl_vessel_classes.beam_cm
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
				INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
				INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
				WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
								
				$rtnVesselDetails_n4 = $this->bm->dataSelect($query_n4);
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
				
				// $query_depart="SELECT igm_id,vvd_gkey,pilot_name,pilot_on_board,pilot_off_board,pilot_frm,pilot_to,mooring_frm_time,
				// mooring_to_time,tug_name,assit_frm,assit_to,atd,DATE(pilot_on_board) as sign_depart,aditional_tug+1 as aditional_tug 
				// FROM doc_vsl_depart
				// WHERE igm_id=$igm_id_depart";
				
				$query_depart="SELECT igm_id,vvd_gkey,pilot_name,pilot_on_board,pilot_off_board,pilot_frm,pilot_to,mooring_frm_time,
				mooring_to_time,tug_name,assit_frm,assit_to,atd,DATE(pilot_on_board) as sign_depart,aditional_tug+1 as aditional_tug,photo_base_64 
				FROM doc_vsl_depart
				WHERE vvd_gkey=$getVvdGkey";
				
				$rtnVesselDetails_depart = $this->bm->dataSelectDb1($query_depart);
				$getArraivalDt="select IFNULL(ata,'00:00:00') as ata from doc_vsl_arrival where igm_id=$igm_id_depart";

				$rtnArrivalDt = $this->bm->dataSelectDb1($getArraivalDt);						
				$this->data['rtnVesselDetails_depart']=$rtnVesselDetails_depart;						
				$this->data['ata']=$rtnArrivalDt[0]['ata'];
				$this->data['chk_igm_id']=$igm_id_depart;
			}
			if($igm_id_arraival>0)
			{
				$query42="SELECT id,Vessel_Name,Name_of_Master,grt,nrt,Deck_cargo,loa_cm,Port_of_Destination,radio_call_sign,flag FROM igm_masters 
				WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				 
				$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query42);
				$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm ;

				$query21="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
				INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
				INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
				WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
				 
				$rtnVesselDetails_n4 = $this->bm->dataSelect($query21);       
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
									
				$vvdGkey=$rtnVesselDetails_n4[0]['vvd_gkey'];
				
				$vsl_arrival_str="select igm_id, vvd_gkey, pilot_name, pilot_on_board, pilot_off_board, pilot_frm, pilot_to, 
				mooring_frm_time, mooring_to_time, tug_name, assit_frm, assit_to, oa_dt, oa_dt, ata, photo_base_64,
				DATE(pilot_on_board) as sign_arraival,aditional_tug+1 as aditional_tug from 
				cchaportdb.doc_vsl_arrival where vvd_gkey='$vvdGkey'";
				
				$rtn_vsl_arrival_info = $this->bm->dataSelectDb1($vsl_arrival_str);
				$this->data['rtn_vsl_arrival_info']=$rtn_vsl_arrival_info ;
			}
			if($igm_id_shift>0)
			{
				//igm start
				$sql_shifting_one="SELECT id,Vessel_Name,Name_of_Master,grt,nrt,Deck_cargo,loa_cm,Port_of_Destination,radio_call_sign,flag 
				FROM igm_masters 
				WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				
				$rtnVesselDetails_igm=$this->bm->dataSelectDb1($sql_shifting_one);
				//igm end
				
				//inserted data start
				$shift_igm_id=$rtnVesselDetails_igm[0]['id'];
				
				$sql_show_current_data="SELECT pilot_name,pilot_on_board,pilot_off_board,shift_frm,shift_to,mooring_frm_time,
				mooring_to_time,tug_name,assit_frm,assit_to,shift_dt,DATE(pilot_on_board) as sign_shift,aditional_tug+1 as aditional_tug,photo_base_64 
				FROM doc_vsl_shift 
				WHERE igm_id='$shift_igm_id'";
				
				$rslt_show_current_data=$this->bm->dataSelectDb1($sql_show_current_data);
			
				//inserted data end
				
				//get n4 data - start
				$sql_shifting_two="SELECT sparcsn4.vsl_vessel_visit_details.vvd_gkey,sparcsn4.vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
				vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN sparcsn4.vsl_vessel_classes ON sparcsn4.vsl_vessel_classes.gkey=sparcsn4.vsl_vessels.vesclass_gkey
				INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.vsl_vessels.owner_gkey
				WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
				
				$rtnVesselDetails_n4=$this->bm->dataSelect($sql_shifting_two);

				//get n4 data - end
				
				$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
				$this->data['rslt_show_current_data']=$rslt_show_current_data;
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
			}								
			
			$this->data['igm_id_arraival']=$igm_id_arraival;
			$this->data['igm_id_shift']=$igm_id_shift;					
			$this->data['igm_id_depart']=$igm_id_depart;
			
			$html=$this->load->view('pilotageCertificateReport',$this->data, true);
			$stylesheet = file_get_contents('resources/styles/test.css'); // external css
			$pdf->useSubstitutions = true; // optional - just as an example
					
			// $pdf->AddPage('P', // L - landscape, P - portrait
			// 					'', '', '', '',
			// 					5, // margin_left
			// 					5, // margin right
			// 					5, // margin top
			// 					5, // margin bottom
			// 					5, // margin header
			// 					5); // margin footer
			//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
					
			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);
					//$pdf->WriteHTML($scriptSheet,3);
			$pdf->Output($pdfFilePath, "I"); // For Show Pdf				
		}
		//$this->load->view('footer_1');
		$this->load->view('jsAssets');							
	}
		












	
		
	/* PANGAON CERTIFICATE*/
		
	function departureReportOfVessel()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$from_stat=$this->uri->segment(3);
			$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(4));
			$getVvdGkey = $this->uri->segment(5);
			
			$data['rotation']=$ddl_imp_rot_no;			
			$data['shift_rotation']=$ddl_imp_rot_no;			
			$data['chk_igm_id']="";
			
			$query_igm="SELECT id as igm_mst_id,Vessel_Name,Name_of_Master,Deck_cargo,Port_of_Destination,flag
						FROM igm_masters 
						WHERE Import_Rotation_No='$ddl_imp_rot_no'";			
			$rtnVesselDetails_igm = $this->bm->dataSelectDB1($query_igm);
			$data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
			//Vessel_Name
			$igm_mst_id = "";
			$Vessel_Name = "";
			$Name_of_Master = "";
			$Deck_cargo = "";
			$Port_of_Destination = "";
			for($vdigm=0;$vdigm<count($rtnVesselDetails_igm);$vdigm++)
				{
					$igm_mst_id=$rtnVesselDetails_igm[$vdigm]['igm_mst_id'];
					$Vessel_Name=$rtnVesselDetails_igm[$vdigm]['Vessel_Name'];
					$Name_of_Master=$rtnVesselDetails_igm[$vdigm]['Name_of_Master'];
					$Deck_cargo=$rtnVesselDetails_igm[$vdigm]['Deck_cargo'];
					$Port_of_Destination=$rtnVesselDetails_igm[$vdigm]['Port_of_Destination'];
				}
			$data['igm_mst_id']=$igm_mst_id;
			$data['Vessel_Name']=$Vessel_Name;
			$data['Name_of_Master']=$Name_of_Master;
			$data['Deck_cargo']=$Deck_cargo;
			$data['Port_of_Destination']=$Port_of_Destination;
			
			
			if($getVvdGkey == "")	
			{			
				$sql_vvdGkey = "SELECT vsl_vessel_visit_details.vvd_gkey AS rtnValue
				FROM vsl_vessel_visit_details
				WHERE vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
		
				$getVvdGkey = $this->bm->dataReturn($sql_vvdGkey);
			}
			
			$query_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,
						vsl_vessel_classes.gross_registered_ton,vsl_vessel_classes.net_registered_ton,
						r.id AS owner_id,r.name AS owner_name,Y.name AS localagent,
						ref_country.cntry_name as flag,vsl_vessel_classes.beam_cm,vsl_vessels.name as vname_navis
						FROM vsl_vessels
						INNER JOIN vsl_vessel_visit_details ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
						INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
						INNER JOIN  ( ref_bizunit_scoped r  
						LEFT JOIN ( ref_agent_representation X  
						LEFT JOIN ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey )               
						ON r.gkey=X.bzu_gkey)  ON r.gkey = vsl_vessel_visit_details.bizu_gkey
						INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
						WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";						
			$rtnVesselDetails_n4 = $this->bm->dataselect($query_n4);
			$data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
			
			$vname_navis = "";
			$vvd_gkey = "";
			$radio_call_sign = "";
			$cntry_name = "";
			$gross_registered_ton = "";
			$net_registered_ton = "";
			$loa_cm = "";
			$owner_name = "";
			$localagent = "";
			$beam_cm = "";
			for($vdnavis=0;$vdnavis<count($rtnVesselDetails_n4);$vdnavis++)
				{
					$vname_navis=$rtnVesselDetails_n4[$vdnavis]['VNAME_NAVIS'];
					$vvd_gkey=$rtnVesselDetails_n4[$vdnavis]['VVD_GKEY'];
					$radio_call_sign=$rtnVesselDetails_n4[$vdnavis]['RADIO_CALL_SIGN'];
					$cntry_name=$rtnVesselDetails_n4[$vdnavis]['FLAG'];
					$gross_registered_ton=$rtnVesselDetails_n4[$vdnavis]['GROSS_REGISTERED_TON'];
					$net_registered_ton=$rtnVesselDetails_n4[$vdnavis]['NET_REGISTERED_TON'];
					$loa_cm=$rtnVesselDetails_n4[$vdnavis]['LOA_CM'];
					$owner_name=$rtnVesselDetails_n4[$vdnavis]['OWNER_NAME'];
					$localagent=$rtnVesselDetails_n4[$vdnavis]['LOCALAGENT'];
					$beam_cm=$rtnVesselDetails_n4[$vdnavis]['BEAM_CM'];
				}
			$data['vname_navis']=$vname_navis;
			$data['vvd_gkey']=$vvd_gkey;
			$data['radio_call_sign']=$radio_call_sign;
			$data['cntry_name']=$cntry_name;
			$data['gross_registered_ton']=$gross_registered_ton;
			$data['net_registered_ton']=$net_registered_ton;
			$data['loa_cm']=$loa_cm;
			$data['owner_name']=$owner_name;
			$data['localagent']=$localagent;
			$data['beam_cm']=$beam_cm;
			
			$vvdGkey = "";					
			if($getVvdGkey == "")
			{
				$vvdGkey=$vvd_gkey;						
			}
			else
			{
				$vvdGkey=$getVvdGkey;		
			}
			$vvdGkey=$getVvdGkey;
			$vsl_arrival_str="select igm_id, vvd_gkey, doc_vsl_arrival.pilot_name as pilot_login,
							(SELECT u_name FROM users WHERE users.login_id=pilot_name) AS pilot_name,pilot_on_board,pilot_off_board, 
							pilot_frm, pilot_to,mooring_frm_time, mooring_to_time,tug_name,assit_frm,assit_to,oa_dt,oa_dt,ata,
							draught,remarks,
							photo_base_64,DATE(pilot_on_board) as sign_arraival,aditional_tug+1 as aditional_tug,is_night,is_holiday,
							is_main_engine_ok,is_acnchors_ok,is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,
							is_complying_soal_convention
							from cchaportdb.doc_vsl_arrival where vvd_gkey='$vvdGkey'";
			$rtn_vsl_arrival_info = $this->bm->dataSelectDB1($vsl_arrival_str);
			$this->data['rtn_vsl_arrival_info']=$rtn_vsl_arrival_info ;
			
			$pilot_name = "";
			$pilot_on_board = "";
			$pilot_off_board = "";
			$pilot_frm = "";
			$pilot_to = "";
			$mooring_frm_time = "";
			$mooring_to_time = "";
			$tug_name = "";
			$assit_frm = "";
			$assit_to = "";
			$oa_dt = "";
			$ata = "";
			$draught = "";
			$remarks = "";
			$is_main_engine_ok = "";
			$is_acnchors_ok = "";
			$is_rudder_indicator_ok = "";
			$is_rpm_indicator_ok = "";
			$is_bow_therster_available = "";
			$is_complying_soal_convention = "";
			$is_night = "";
			$is_holiday = "";
			$pilot_login = "";
			for($vslarrivalinfo=0;$vslarrivalinfo<count($rtn_vsl_arrival_info);$vslarrivalinfo++)
				{
					$pilot_name=$rtn_vsl_arrival_info[$vslarrivalinfo]['pilot_name'];
					$pilot_on_board=$rtn_vsl_arrival_info[$vslarrivalinfo]['pilot_on_board'];
					$pilot_off_board=$rtn_vsl_arrival_info[$vslarrivalinfo]['pilot_off_board'];
					$pilot_frm=$rtn_vsl_arrival_info[$vslarrivalinfo]['pilot_frm'];
					$pilot_to=$rtn_vsl_arrival_info[$vslarrivalinfo]['pilot_to'];
					$mooring_frm_time=$rtn_vsl_arrival_info[$vslarrivalinfo]['mooring_frm_time'];
					$mooring_to_time=$rtn_vsl_arrival_info[$vslarrivalinfo]['mooring_to_time'];
					$tug_name=$rtn_vsl_arrival_info[$vslarrivalinfo]['tug_name'];
					$assit_frm=$rtn_vsl_arrival_info[$vslarrivalinfo]['assit_frm'];
					$assit_to=$rtn_vsl_arrival_info[$vslarrivalinfo]['assit_to'];
					$oa_dt=$rtn_vsl_arrival_info[$vslarrivalinfo]['oa_dt'];
					$ata=$rtn_vsl_arrival_info[$vslarrivalinfo]['ata'];
					$draught=$rtn_vsl_arrival_info[$vslarrivalinfo]['draught'];
					$remarks=$rtn_vsl_arrival_info[$vslarrivalinfo]['remarks'];
					$is_main_engine_ok=$rtn_vsl_arrival_info[$vslarrivalinfo]['is_main_engine_ok'];
					$is_acnchors_ok=$rtn_vsl_arrival_info[$vslarrivalinfo]['is_acnchors_ok'];
					$is_rudder_indicator_ok=$rtn_vsl_arrival_info[$vslarrivalinfo]['is_rudder_indicator_ok'];
					$is_rpm_indicator_ok=$rtn_vsl_arrival_info[$vslarrivalinfo]['is_rpm_indicator_ok'];
					$is_bow_therster_available=$rtn_vsl_arrival_info[$vslarrivalinfo]['is_bow_therster_available'];
					$is_complying_soal_convention=$rtn_vsl_arrival_info[$vslarrivalinfo]['is_complying_soal_convention'];
					$is_night=$rtn_vsl_arrival_info[$vslarrivalinfo]['is_night'];
					$is_holiday=$rtn_vsl_arrival_info[$vslarrivalinfo]['is_holiday'];
					$pilot_login=$rtn_vsl_arrival_info[$vslarrivalinfo]['pilot_login'];
				}
			$data['pilot_name']=$pilot_name;
			$data['pilot_on_board']=$pilot_on_board;
			$data['pilot_off_board']=$pilot_off_board;
			$data['pilot_frm']=$pilot_frm;
			$data['pilot_to']=$pilot_to;
			$data['mooring_frm_time']=$mooring_frm_time;
			$data['mooring_to_time']=$mooring_to_time;
			$data['tug_name']=$tug_name;
			$data['assit_frm']=$assit_frm;
			$data['assit_to']=$assit_to;
			$data['oa_dt']=$oa_dt;
			$data['ata']=$ata;
			$data['draught']=$draught;
			$data['remarks']=$remarks;
			$data['is_main_engine_ok']=$is_main_engine_ok;
			$data['is_acnchors_ok']=$is_acnchors_ok;
			$data['is_rudder_indicator_ok']=$is_rudder_indicator_ok;
			$data['is_rpm_indicator_ok']=$is_rpm_indicator_ok;
			$data['is_bow_therster_available']=$is_bow_therster_available;
			$data['is_complying_soal_convention']=$is_complying_soal_convention;
			$data['is_night']=$is_night;
			$data['is_holiday']=$is_holiday;
			$data['pilot_login']=$pilot_login;
			
			$mooring_frm_time_arrival = $mooring_frm_time;
			
			$data['vvd_gkey']=$vvdGkey;
			
			$query_pilot_list="SELECT u_name,login_id FROM users WHERE users.login_id IN (
							'p239001','p239002','p239003','p239004','p239005','p282','p298','p326','p368','p427',
							'p456','p497','p501','p505','p510','p516','p546','p549','p239007')";
			$pilot_list = $this->bm->dataSelectDB1($query_pilot_list);
			$data['pilot_list']=$pilot_list;
			
			$query_doc_vsl_info="SELECT * FROM doc_vsl_info WHERE rotation='$ddl_imp_rot_no' AND vvd_gkey='$vvdGkey'";
			$rtn_doc_vsl_info = $this->bm->dataSelectDB1($query_doc_vsl_info);
			$data['rtn_doc_vsl_info']=$rtn_doc_vsl_info ;
			
			$vsl_name_doc_vsl_info = "";
			$master_name_doc_vsl_info = "";
			$channel_doc_vsl_info = "";
			$flag_doc_vsl_info = "";
			$grt_doc_vsl_info = "";
			$nrt_doc_vsl_info = "";
			$deck_cargo_doc_vsl_info = "";
			$loa_doc_vsl_info = "";
			$local_agent_doc_vsl_info = "";
			$last_port_doc_vsl_info = "";
			$next_port_doc_vsl_info = "";
			for($docVslInfo=0;$docVslInfo<count($rtn_doc_vsl_info);$docVslInfo++)
				{
					$vsl_name_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['vsl_name'];
					$master_name_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['master_name'];
					$channel_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['channel'];
					$flag_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['flag'];
					$grt_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['grt'];
					$nrt_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['nrt'];
					$deck_cargo_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['deck_cargo'];
					$loa_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['loa'];
					$local_agent_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['local_agent'];
					$last_port_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['last_port'];
					$next_port_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['next_port'];
				}
				
			if($vsl_name_doc_vsl_info==""){
				$Vessel_Name = $Vessel_Name;
			} else {
				$Vessel_Name = $vsl_name_doc_vsl_info;
			}
			
			// if($Vessel_Name==""){
				// $Vessel_Name = $vsl_name_doc_vsl_info;
			// }
			if($cntry_name==""){
				$cntry_name = $flag_doc_vsl_info;
			}
			if($Name_of_Master==""){
				$Name_of_Master = $master_name_doc_vsl_info;
			}
			if($gross_registered_ton==""){
				$gross_registered_ton = $grt_doc_vsl_info;
			}
			if($net_registered_ton==""){
				$net_registered_ton = $nrt_doc_vsl_info;
			}
			if($Deck_cargo==""){
				$Deck_cargo = $deck_cargo_doc_vsl_info;
			}
			if($loa_cm==""){
				$loa_cm = $loa_doc_vsl_info;
			}
			if($localagent==""){
				$localagent = $local_agent_doc_vsl_info;
			}
			
			$str_n4ForVsl="SELECT vsl_vessels.name AS rtnValue
					FROM  vsl_vessels
					INNER JOIN vsl_vessel_visit_details ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
					WHERE vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
			$rsltn4ForVsl = $this->bm->dataReturn($str_n4ForVsl);
			if($rsltn4ForVsl == ""){
				$rsltn4ForVsl = $vesselName;
			} else {
				$rsltn4ForVsl = $rsltn4ForVsl;
			}
			$this->data['rsltn4ForVsl']=$rsltn4ForVsl;
			
			if($from_stat=="A") //Arrival
			{
				$data['Vessel_Name']=$Vessel_Name;
				$data['Name_of_Master']=$Name_of_Master;
				$data['Deck_cargo']=$Deck_cargo;
				$data['cntry_name']=$cntry_name;
				$data['gross_registered_ton']=$gross_registered_ton;
				$data['net_registered_ton']=$net_registered_ton;
				$data['loa_cm']=$loa_cm;
				$data['localagent']=$localagent;
				$data['last_port_doc_vsl_info']=$last_port_doc_vsl_info;
				$data['next_port_doc_vsl_info']=$next_port_doc_vsl_info;
			
				$data['title'] = "ARRIVAL REPORT OF VESSEL AND PILOTAGE CERTIFICATE";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('arrivalReportVesselandPilotageCertificateView',$data);
				$this->load->view('jsAssets');	
			}
			else if($from_stat=="S") //Shifting Deck_cargo
			{	
				$agent = $this->uri->segment(6);
				$data['agent']=$agent;
				
				if(count($rtnVesselDetails_igm)==0)
				{
					$sql_show_current_data = "SELECT doc_vsl_shift.pilot_name as pilot_login, 
					(SELECT u_name FROM users WHERE users.login_id=pilot_name) AS pilot_name,
					pilot_on_board,pilot_off_board,shift_frm,shift_to,mooring_frm_time,
					mooring_to_time,tug_name,assit_frm,assit_to,shift_dt,DATE(pilot_on_board) as sign_shift,aditional_tug+1 as aditional_tug,photo_base_64,draught,
					is_main_engine_ok,is_acnchors_ok,
					is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,is_complying_soal_convention,
					is_night,is_holiday 
					FROM doc_vsl_shift 
					WHERE vvd_gkey='$getVvdGkey'";
				}
				else
				{
					$shift_igm_id=$igm_mst_id;
				
					$sql_show_current_data="SELECT doc_vsl_shift.pilot_name as pilot_login, 
					(SELECT u_name FROM users WHERE users.login_id=pilot_name) AS pilot_name,
					pilot_on_board,pilot_off_board,shift_frm,
					shift_to,mooring_frm_time,mooring_to_time,tug_name,assit_frm,assit_to,shift_dt,
					DATE(pilot_on_board) as sign_shift,aditional_tug+1 as aditional_tug,photo_base_64,draught,
					is_main_engine_ok,is_acnchors_ok,
					is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,is_complying_soal_convention,
					is_night,is_holiday 
					FROM doc_vsl_shift 
					WHERE igm_id='$shift_igm_id'";
				}
				$rslt_show_current_data=$this->bm->dataSelectDB1($sql_show_current_data);
				$data['rslt_show_current_data']=$rslt_show_current_data;
				
				$crnt_pilot_name = "";
				$pilot_login = "";
				$crnt_pilot_on_board = "";
				$crnt_pilot_off_board = "";
				$crnt_shift_frm = "";
				$crnt_shift_to = "";
				$crnt_mooring_frm_time = "";
				$crnt_mooring_to_time = "";
				$crnt_shift_dt = "";
				$crnt_tug_name = "";
				$crnt_assit_frm = "";
				$crnt_assit_to = "";
				$crnt_shift_dt = "";
				$is_main_engine_ok = "";
				$is_acnchors_ok = "";
				$is_rudder_indicator_ok = "";
				$is_rpm_indicator_ok = "";
				$is_bow_therster_available = "";
				$is_complying_soal_convention = "";
				$is_night = "";
				$is_holiday = "";
				$draught = "";
				for($crntdata=0;$crntdata<count($rslt_show_current_data);$crntdata++)
					{
						$crnt_pilot_name=$rslt_show_current_data[$crntdata]['pilot_name'];
						$pilot_login=$rslt_show_current_data[$crntdata]['pilot_login'];
						$crnt_pilot_on_board=$rslt_show_current_data[$crntdata]['pilot_on_board'];
						$crnt_pilot_off_board=$rslt_show_current_data[$crntdata]['pilot_off_board'];
						$crnt_shift_frm=$rslt_show_current_data[$crntdata]['shift_frm'];
						$crnt_shift_to=$rslt_show_current_data[$crntdata]['shift_to'];
						$crnt_mooring_frm_time=$rslt_show_current_data[$crntdata]['mooring_frm_time'];
						$crnt_mooring_to_time=$rslt_show_current_data[$crntdata]['mooring_to_time'];
						$crnt_shift_dt=$rslt_show_current_data[$crntdata]['shift_dt'];
						$crnt_tug_name=$rslt_show_current_data[$crntdata]['tug_name'];
						$crnt_assit_frm=$rslt_show_current_data[$crntdata]['assit_frm'];
						$crnt_assit_to=$rslt_show_current_data[$crntdata]['assit_to'];
						$draught=$rslt_show_current_data[$crntdata]['draught'];
						$is_main_engine_ok=$rslt_show_current_data[$crntdata]['is_main_engine_ok'];
						$is_acnchors_ok=$rslt_show_current_data[$crntdata]['is_acnchors_ok'];
						$is_rudder_indicator_ok=$rslt_show_current_data[$crntdata]['is_rudder_indicator_ok'];
						$is_rpm_indicator_ok=$rslt_show_current_data[$crntdata]['is_rpm_indicator_ok'];
						$is_bow_therster_available=$rslt_show_current_data[$crntdata]['is_bow_therster_available'];
						$is_complying_soal_convention=$rslt_show_current_data[$crntdata]['is_complying_soal_convention'];
						$is_night=$rslt_show_current_data[$crntdata]['is_night'];
						$is_holiday=$rslt_show_current_data[$crntdata]['is_holiday'];
					}
				$data['crnt_pilot_name']=$crnt_pilot_name;
				$data['pilot_login']=$pilot_login;
				$data['crnt_pilot_on_board']=$crnt_pilot_on_board;
				$data['crnt_pilot_off_board']=$crnt_pilot_off_board;
				$data['crnt_shift_frm']=$crnt_shift_frm;
				$data['crnt_shift_to']=$crnt_shift_to;
				$data['crnt_mooring_frm_time']=$crnt_mooring_frm_time;
				$data['crnt_mooring_to_time']=$crnt_mooring_to_time;
				$data['crnt_shift_dt']=$crnt_shift_dt;
				$data['crnt_tug_name']=$crnt_tug_name;
				$data['crnt_assit_frm']=$crnt_assit_frm;
				$data['crnt_assit_to']=$crnt_assit_to;
				$data['draught']=$draught;
				$data['is_main_engine_ok']=$is_main_engine_ok;
				$data['is_acnchors_ok']=$is_acnchors_ok;
				$data['is_rudder_indicator_ok']=$is_rudder_indicator_ok;
				$data['is_rpm_indicator_ok']=$is_rpm_indicator_ok;
				$data['is_bow_therster_available']=$is_bow_therster_available;
				$data['is_complying_soal_convention']=$is_complying_soal_convention;
				$data['is_night']=$is_night;
				$data['is_holiday']=$is_holiday;
				
				$data['Vessel_Name']=$Vessel_Name;
				$data['Name_of_Master']=$Name_of_Master;
				$data['Deck_cargo']=$Deck_cargo;
				$data['cntry_name']=$cntry_name;
				$data['gross_registered_ton']=$gross_registered_ton;
				$data['net_registered_ton']=$net_registered_ton;
				$data['loa_cm']=$loa_cm;
				$data['localagent']=$localagent;
				$data['last_port_doc_vsl_info']=$last_port_doc_vsl_info;
				$data['next_port_doc_vsl_info']=$next_port_doc_vsl_info;
				//vname_navis
				$data['title'] = "PILOTAGE CERTIFICATE FOR SHIFTING";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('shiftingEntryForm',$data);
				$this->load->view('jsAssets');
			}
			else if($from_stat=="D") //Departure 
			{
				$igm_id = 0;
				$data['Deck_cargo']=$Deck_cargo;
				//==================================================================
				$vessel_info_from_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessel_visit_details.pilot_on_board,
					vsl_vessel_visit_details.pilot_off_board,vsl_vessels.name,vsl_vessels.radio_call_sign,
					vsl_vessel_classes.loa_cm,vsl_vessel_classes.beam_cm,vsl_vessel_classes.gross_registered_ton,
					vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name AS flag
					FROM vsl_vessels
					INNER JOIN vsl_vessel_visit_details ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
					INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
					INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
					INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
					WHERE vsl_vessel_visit_details.vvd_gkey='$getVvdGkey'";
				$rtn_vessel_info_from_n4 = $this->bm->dataselect($vessel_info_from_n4);
				$this->data['rtn_vessel_info_from_n4']=$rtn_vessel_info_from_n4;
				
				$vesselName = "";
				$radioCallSign = "";
				$flagValue = "";
				$grtValue = "";
				$nrtValue = "";
				$loaCm = "";
				$beamCm = "";
				$localAgent = "";
				$pilotOnBoard = "";
				$pilotOffBoard = "";
				for($n=0;$n<count($rtn_vessel_info_from_n4);$n++)
				{
					$vesselName=$rtn_vessel_info_from_n4[$n]['NAME'];
					$radioCallSign=$rtn_vessel_info_from_n4[$n]['RADIO_CALL_SIGN'];
					$flagValue=$rtn_vessel_info_from_n4[$n]['FLAG'];
					$grtValue=$rtn_vessel_info_from_n4[$n]['GROSS_REGISTERED_TON'];
					$nrtValue=$rtn_vessel_info_from_n4[$n]['NET_REGISTERED_TON'];
					$loaCm=$rtn_vessel_info_from_n4[$n]['LOA_CM'];
					$beamCm=$rtn_vessel_info_from_n4[$n]['BEAM_CM'];
					$localAgent=$rtn_vessel_info_from_n4[$n]['LOCALAGENT'];
					$pilotOnBoard=$rtn_vessel_info_from_n4[$n]['PILOT_ON_BOARD'];
					$pilotOffBoard=$rtn_vessel_info_from_n4[$n]['PILOT_OFF_BOARD'];
				}
				$data['Vessel_Name']=$vesselName;
				$data['radioCallSign']=$radioCallSign;
				$data['flagValue']=$flagValue;
				$data['grtValue']=$grtValue;
				$data['nrtValue']=$nrtValue;
				$data['loaCm']=$loaCm;
				$data['beamCm']=$beamCm;
				$data['localAgent']=$localAgent;
				$data['pilotOnBoard']=$pilotOnBoard;
				$data['pilotOffBoard']=$pilotOffBoard;

				
				
				//=====================================================================
				//=====================================================================
				$doc_vsl_info_data="SELECT u_name AS pilotName
									FROM doc_vsl_info
									INNER JOIN users ON doc_vsl_info.entry_by=users.login_id
									WHERE vvd_gkey='$getVvdGkey'";
				$res_doc_vsl_info_data = $this->bm->dataSelectDb1($doc_vsl_info_data);
				$pilotName = "";
				
				for($d=0;$d<count($res_doc_vsl_info_data);$d++)
				{
					$pilotName=$res_doc_vsl_info_data[$d]['pilotName'];
				}
				$this->data['pilotName']=$pilotName; //
				//======================================================================
				
				$vesselName = "";
				$radioCallSign = "";
				for($n=0;$n<count($rtn_vessel_info_from_n4);$n++)
				{
					$vesselName=$rtn_vessel_info_from_n4[$n]['NAME'];
					$radioCallSign=$rtn_vessel_info_from_n4[$n]['RADIO_CALL_SIGN'];
				}
				$this->data['vesselName']=$vesselName;
				$this->data['radioCallSign']=$radioCallSign;

				$chk_depart_query = "SELECT igm_id AS igm_id  FROM igm_masters
				INNER JOIN doc_vsl_depart ON  igm_masters.id=doc_vsl_depart.igm_id
				WHERE Import_Rotation_No = '$ddl_imp_rot_no'";

				$chkDepart = $this->bm->dataSelectDb1($chk_depart_query);
				if(count($chkDepart)>0){
					$igm_id=$chkDepart[0]['igm_id'];
				}
				// echo $getVvdGkey;
				// return;
										
					$query_depart="SELECT igm_id,vvd_gkey, doc_vsl_depart.pilot_name as pilot_login, 
								(SELECT u_name FROM users WHERE users.login_id=pilot_name) AS pilot_name,pilot_on_board,pilot_off_board,
								pilot_frm,pilot_to,mooring_frm_time,mooring_to_time,tug_name,assit_frm,assit_to,atd,draught,
								is_main_engine_ok,is_acnchors_ok,is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,
								is_complying_soal_convention,is_night,is_holiday
								FROM doc_vsl_depart
								WHERE vvd_gkey='$getVvdGkey'";
					$rtnVesselDetails_depart = $this->bm->dataSelectDb1($query_depart);
					$data['rtnVesselDetails_depart']=$rtnVesselDetails_depart;
					
					$depart_pilot_name = "";
					$depart_pilot_on_board = "";
					$depart_pilot_off_board = "";
					$depart_pilot_frm = "";
					$depart_pilot_to = "";
					$depart_atd = "";
					$depart_mooring_frm_time = "";
					$depart_mooring_to_time = "";
					$depart_tug_name = "";
					$depart_assit_frm = "";
					$depart_assit_to = "";
					$depart_pilot_login_id = "";
					$is_main_engine_ok = "";
					$is_acnchors_ok = "";
					$is_rudder_indicator_ok = "";
					$is_rpm_indicator_ok = "";
					$is_bow_therster_available = "";
					$is_complying_soal_convention = "";
					$is_night = "";
					$is_holiday = "";
					$draught = "";
					for($vsl_depart=0;$vsl_depart<count($rtnVesselDetails_depart);$vsl_depart++)
					{
						$depart_pilot_name=$rtnVesselDetails_depart[$vsl_depart]['pilot_name'];
						$depart_pilot_login_id=$rtnVesselDetails_depart[$vsl_depart]['pilot_login'];
						$depart_pilot_on_board=$rtnVesselDetails_depart[$vsl_depart]['pilot_on_board'];
						$depart_pilot_off_board=$rtnVesselDetails_depart[$vsl_depart]['pilot_off_board'];
						$depart_pilot_frm=$rtnVesselDetails_depart[$vsl_depart]['pilot_frm'];
						$depart_pilot_to=$rtnVesselDetails_depart[$vsl_depart]['pilot_to'];
						$depart_atd=$rtnVesselDetails_depart[$vsl_depart]['atd'];
						$depart_mooring_frm_time=$rtnVesselDetails_depart[$vsl_depart]['mooring_frm_time'];
						$depart_mooring_to_time=$rtnVesselDetails_depart[$vsl_depart]['mooring_to_time'];
						$depart_tug_name=$rtnVesselDetails_depart[$vsl_depart]['tug_name'];
						$depart_assit_frm=$rtnVesselDetails_depart[$vsl_depart]['assit_frm'];
						$depart_assit_to=$rtnVesselDetails_depart[$vsl_depart]['assit_to'];
						$is_main_engine_ok=$rtnVesselDetails_depart[$vsl_depart]['is_main_engine_ok'];
						$is_acnchors_ok=$rtnVesselDetails_depart[$vsl_depart]['is_acnchors_ok'];
						$is_rudder_indicator_ok=$rtnVesselDetails_depart[$vsl_depart]['is_rudder_indicator_ok'];
						$is_rpm_indicator_ok=$rtnVesselDetails_depart[$vsl_depart]['is_rpm_indicator_ok'];
						$is_bow_therster_available=$rtnVesselDetails_depart[$vsl_depart]['is_bow_therster_available'];
						$is_complying_soal_convention=$rtnVesselDetails_depart[$vsl_depart]['is_complying_soal_convention'];
						$is_night=$rtnVesselDetails_depart[$vsl_depart]['is_night'];
						$is_holiday=$rtnVesselDetails_depart[$vsl_depart]['is_holiday'];
						$draught=$rtnVesselDetails_depart[$vsl_depart]['draught'];
					}
					
					$data['depart_pilot_name']=$depart_pilot_name;
					$data['depart_pilot_login_id']=$depart_pilot_login_id;
					$data['depart_pilot_on_board']=$depart_pilot_on_board;
					$data['depart_pilot_off_board']=$depart_pilot_off_board;
					$data['depart_pilot_frm']=$depart_pilot_frm;
					$data['depart_pilot_to']=$depart_pilot_to;
					$data['depart_atd']=$depart_atd;
					$data['depart_mooring_frm_time']=$depart_mooring_frm_time;
					$data['depart_mooring_to_time']=$depart_mooring_to_time;
					$data['depart_tug_name']=$depart_tug_name;
					$data['depart_assit_frm']=$depart_assit_frm;
					$data['depart_assit_to']=$depart_assit_to;
					$data['is_main_engine_ok']=$is_main_engine_ok;
					$data['is_acnchors_ok']=$is_acnchors_ok;
					$data['is_rudder_indicator_ok']=$is_rudder_indicator_ok;
					$data['is_rpm_indicator_ok']=$is_rpm_indicator_ok;
					$data['is_bow_therster_available']=$is_bow_therster_available;
					$data['is_complying_soal_convention']=$is_complying_soal_convention;
					$data['is_night']=$is_night;
					$data['is_holiday']=$is_holiday;
					$data['draught']=$draught;
					
					
					$getArraivalDt="select IFNULL(ata,'00:00:00') as ata from doc_vsl_arrival where igm_id=$igm_id";
					$rtnArrivalDt = $this->bm->dataSelectDb1($getArraivalDt);
					
					$data['chk_igm_id']=$igm_id;
					$data['ata']=$mooring_frm_time_arrival;
					
					//---
					// $query_depart="SELECT igm_id,vvd_gkey,pilot_name,pilot_on_board,pilot_off_board,pilot_frm,pilot_to,mooring_frm_time,
					// mooring_to_time,tug_name,assit_frm,assit_to,atd 
					// FROM doc_vsl_depart
					// WHERE vvd_gkey='$getVvdGkey'";rtnVesselDetails_depart
					//---
					//---
					// $getArraivalDt="select IFNULL(ata,'00:00:00') as ata from doc_vsl_arrival where vvd_gkey='$getVvdGkey'";
					//---igm_mst_id
				
				$data['title'] = "DEPARTURE REPORT OF VESSEL";
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('viewPilotageCertificateDeparture',$data);
				$this->load->view('jsAssets');
			}
			else if($from_stat=="R")
			{	
				$igm_id_arraival=0;
				$igm_id_depart=0;
				$igm_id_shift=0;
				
				$this->load->library('m_pdf');
				//$pdf->use_kwt = true;
				$this->data['title']="Pilotage Certificate";
				$this->data['ddl_imp_rot_no']=$ddl_imp_rot_no;
				$pdfFilePath ="PilotageCertificate-".time()."-download.pdf";
				$pdf = $this->m_pdf->load();
				// //$pdf->SetWatermarkText('CPA CTMS');
				//$pdf->showWatermarkText = true;rtn_vsl_arrival_info

				$query_doc_vsl_info="SELECT * FROM doc_vsl_info WHERE vvd_gkey='$getVvdGkey'";
				$rtn_doc_vsl_info = $this->bm->dataSelectDb1($query_doc_vsl_info);
				$this->data['rtn_doc_vsl_info']=$rtn_doc_vsl_info ;
				
				$vsl_name_doc_vsl_info = "";
				$master_name_doc_vsl_info = "";
				$channel_doc_vsl_info = "";
				$flag_doc_vsl_info = "";
				$grt_doc_vsl_info = "";
				$nrt_doc_vsl_info = "";
				$deck_cargo_doc_vsl_info = "";
				$loa_doc_vsl_info = "";
				$local_agent_doc_vsl_info = "";
				$last_port_doc_vsl_info = "";
				$next_port_doc_vsl_info = "";
				for($docVslInfo=0;$docVslInfo<count($rtn_doc_vsl_info);$docVslInfo++)
					{
						$vsl_name_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['vsl_name'];
						$master_name_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['master_name'];
						$channel_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['channel'];
						$flag_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['flag'];
						$grt_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['grt'];
						$nrt_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['nrt'];
						$deck_cargo_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['deck_cargo'];
						$loa_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['loa'];
						$local_agent_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['local_agent'];
						$last_port_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['last_port'];
						$next_port_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['next_port'];
					}
				$this->data['vsl_name_doc_vsl_info']=$vsl_name_doc_vsl_info ;
				$this->data['master_name_doc_vsl_info']=$master_name_doc_vsl_info ;
				$this->data['channel_doc_vsl_info']=$channel_doc_vsl_info ;
				$this->data['flag_doc_vsl_info']=$flag_doc_vsl_info ;
				$this->data['grt_doc_vsl_info']=$grt_doc_vsl_info ;
				$this->data['nrt_doc_vsl_info']=$nrt_doc_vsl_info ;
				$this->data['deck_cargo_doc_vsl_info']=$deck_cargo_doc_vsl_info ;
				$this->data['loa_doc_vsl_info']=$loa_doc_vsl_info ;
				$this->data['local_agent_doc_vsl_info']=$local_agent_doc_vsl_info ;
				$this->data['last_port_doc_vsl_info']=$last_port_doc_vsl_info ;
				$this->data['next_port_doc_vsl_info']=$next_port_doc_vsl_info ;
				
				$chk_depart_query = "SELECT vvd_gkey FROM doc_vsl_depart WHERE vvd_gkey='$getVvdGkey'";
				$chkDepart = $this->bm->dataSelectDb1($chk_depart_query);			
				
				$igm_id_depart=$chkDepart[0]['vvd_gkey'];	
				
				$vessel_info_from_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessel_visit_details.pilot_on_board,
					vsl_vessel_visit_details.pilot_off_board,vsl_vessels.name,vsl_vessels.radio_call_sign,
					vsl_vessel_classes.loa_cm,vsl_vessel_classes.beam_cm,vsl_vessel_classes.gross_registered_ton,
					vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name AS flag
					FROM vsl_vessels
					INNER JOIN vsl_vessel_visit_details ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
					INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
					INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
					INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
					WHERE vsl_vessel_visit_details.vvd_gkey='$getVvdGkey'";
				$rtn_vessel_info_from_n4 = $this->bm->dataSelect($vessel_info_from_n4);
				$this->data['rtn_vessel_info_from_n4']=$rtn_vessel_info_from_n4;
				
				$vesselName = "";
				$radioCallSign = "";
				$flagValue = "";
				$grtValue = "";
				$nrtValue = "";
				$loaCm = "";
				$beamCm = "";
				$localAgent = "";
				$pilotOnBoard = "";
				$pilotOffBoard = "";
				for($n=0;$n<count($rtn_vessel_info_from_n4);$n++)
				{
					$vesselName=$rtn_vessel_info_from_n4[$n]['NAME'];
					$radioCallSign=$rtn_vessel_info_from_n4[$n]['RADIO_CALL_SIGN'];
					$flagValue=$rtn_vessel_info_from_n4[$n]['FLAG'];
					$grtValue=$rtn_vessel_info_from_n4[$n]['GROSS_REGISTERED_TON'];
					$nrtValue=$rtn_vessel_info_from_n4[$n]['NET_REGISTERED_TON'];
					$loaCm=$rtn_vessel_info_from_n4[$n]['LOA_CM'];
					$beamCm=$rtn_vessel_info_from_n4[$n]['BEAM_CM'];
					$localAgent=$rtn_vessel_info_from_n4[$n]['LOCALAGENT'];
					$pilotOnBoard=$rtn_vessel_info_from_n4[$n]['PILOT_ON_BOARD'];
					$pilotOffBoard=$rtn_vessel_info_from_n4[$n]['PILOT_OFF_BOARD'];
				}
				$this->data['vesselName']=$vesselName;
				$this->data['radioCallSign']=$radioCallSign;
				$this->data['flagValue']=$flagValue;
				$this->data['grtValue']=$grtValue;
				$this->data['nrtValue']=$nrtValue;
				$this->data['loaCm']=$loaCm;
				$this->data['beamCm']=$beamCm;
				$this->data['localAgent']=$localAgent;
				$this->data['pilotOnBoard']=$pilotOnBoard;
				$this->data['pilotOffBoard']=$pilotOffBoard;				
				
				$doc_vsl_info_data="SELECT u_name AS pilotName FROM doc_vsl_info
									INNER JOIN users ON doc_vsl_info.entry_by=users.login_id
									WHERE vvd_gkey='$getVvdGkey'";
				$res_doc_vsl_info_data = $this->bm->dataSelectDb1($doc_vsl_info_data);
				$pilotName = "";
				for($d=0;$d<count($res_doc_vsl_info_data);$d++)
				{
					$pilotName=$res_doc_vsl_info_data[$n]['pilotName'];
				}
				$this->data['pilotName']=$pilotName;
								
				$vesselName = "";
				$radioCallSign = "";
				$flagValue = "";
				$grtValue = "";
				$nrtValue = "";
				$loaCm = "";
				$beamCm = "";
				$localAgent = "";
				for($n=0;$n<count($rtn_vessel_info_from_n4);$n++)
				{
					$vesselName=$rtn_vessel_info_from_n4[$n]['NAME'];
					$radioCallSign=$rtn_vessel_info_from_n4[$n]['RADIO_CALL_SIGN'];
					$flagValue=$rtn_vessel_info_from_n4[$n]['FLAG'];
					$grtValue=$rtn_vessel_info_from_n4[$n]['GROSS_REGISTERED_TON'];
					$nrtValue=$rtn_vessel_info_from_n4[$n]['NET_REGISTERED_TON'];
					$loaCm=$rtn_vessel_info_from_n4[$n]['LOA_CM'];
					$beamCm=$rtn_vessel_info_from_n4[$n]['BEAM_CM'];
					$localAgent=$rtn_vessel_info_from_n4[$n]['LOCALAGENT'];
				}
				$this->data['vesselName']=$vesselName;
				$this->data['radioCallSign']=$radioCallSign;
				$this->data['flagValue']=$flagValue;
				$this->data['grtValue']=$grtValue;
				$this->data['nrtValue']=$nrtValue;
				$this->data['loaCm']=$loaCm;
				$this->data['beamCm']=$beamCm;
				$this->data['localAgent']=$localAgent;
							
				$chk_arrival_query = "SELECT vvd_gkey FROM doc_vsl_arrival WHERE vvd_gkey='$getVvdGkey'"; //	
				$chkArrival = $this->bm->dataSelectDb1($chk_arrival_query);
				
				$igm_id_arraival=$chkArrival[0]['vvd_gkey'];
				
				
				$chk_shift_query = "SELECT vvd_gkey FROM doc_vsl_shift WHERE vvd_gkey='$getVvdGkey'";
				$chkShift = $this->bm->dataSelectDb1($chk_shift_query);					
				$igm_id_shift=$chkShift[0]['vvd_gkey'];
				
				$cnt_shift_query = "SELECT COUNT(*) AS rtnValue FROM doc_vsl_shift WHERE vvd_gkey='$getVvdGkey'";				
				$cntShift = $this->bm->dataReturnDb1($cnt_shift_query);

				if($igm_id_depart>0)
				{
					$query_igm="SELECT id as igm_mst_id,Vessel_Name,Name_of_Master,Deck_cargo,Port_of_Destination,flag
								FROM igm_masters 
								WHERE Import_Rotation_No='$ddl_imp_rot_no'";
					$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query_igm);
					
					$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
					
					$str_n4ForVsl="SELECT vsl_vessels.name AS rtnValue
							FROM  vsl_vessels
							INNER JOIN vsl_vessel_visit_details ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
							WHERE vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
					$rsltn4ForVsl = $this->bm->dataReturn($str_n4ForVsl);
					$this->data['rsltn4ForVsl']=$rsltn4ForVsl;

					$query_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,
								vsl_vessel_classes.gross_registered_ton,vsl_vessel_classes.net_registered_ton,
								ref_bizunit_scoped.name AS localagent,ref_country.cntry_name as flag,vsl_vessel_classes.beam_cm
								FROM vsl_vessels
								INNER JOIN vsl_vessel_visit_details ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
								INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
								INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
								INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
								WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";									
					$rtnVesselDetails_n4 = $this->bm->dataSelect($query_n4);
					$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
									
					$query_depart="SELECT igm_id,vvd_gkey, doc_vsl_depart.pilot_name as pilot_login, 
								(SELECT u_name FROM users WHERE users.login_id=pilot_name) AS pilot_name,
								pilot_on_board,pilot_off_board,pilot_frm,pilot_to,mooring_frm_time,
								mooring_to_time,tug_name,assit_frm,assit_to,atd,DATE(pilot_on_board) as sign_depart,
								aditional_tug+1 as aditional_tug,photo_base_64,is_night,is_holiday 
								FROM doc_vsl_depart
								WHERE vvd_gkey=$getVvdGkey";
					$rtnVesselDetails_depart = $this->bm->dataSelectDb1($query_depart);
					
					$getArraivalDt="select IFNULL(ata,'00:00:00') as ata from doc_vsl_arrival where igm_id=$igm_id_depart";
					$rtnArrivalDt = $this->bm->dataSelectDb1($getArraivalDt);						
					$this->data['rtnVesselDetails_depart']=$rtnVesselDetails_depart;						
					$this->data['ata']=$rtnArrivalDt[0]['ata'];
					$this->data['chk_igm_id']=$igm_id_depart;
					//atd
					
					//doc_vsl_depart...
					$query_doc_vsl_depart="SELECT *, (SELECT u_name FROM users WHERE users.login_id=pilot_name) AS pilot_name_depart
											FROM doc_vsl_depart WHERE vvd_gkey='$getVvdGkey'";
					$rtn_doc_vsl_depart = $this->bm->dataSelectDb1($query_doc_vsl_depart);
					$this->data['rtn_doc_vsl_depart']=$rtn_doc_vsl_depart ;
					
					$pilot_name_depart = "";
					$pilot_on_board_depart = "";
					$pilot_off_board_depart = "";
					$pilot_frm_depart = "";
					$pilot_to_depart = "";
					$mooring_frm_time_depart = "";
					$mooring_to_time_depart = "";
					$tug_name_depart = "";
					$assit_frm_depart = "";
					$assit_to_depart = "";
					$atd_depart = "";
					$aditional_pilot_depart = "";
					$aditional_tug_depart = "";
					$remarks_depart = "";
					$berth_depart = "";
					$draught_depart = "";
					$is_main_engine_ok_depart = "";
					$is_acnchors_ok_depart = "";
					$is_rudder_indicator_ok_depart = "";
					$is_rpm_indicator_ok_depart = "";
					$is_bow_therster_available_depart = "";
					$is_complying_soal_convention_depart = "";
					$is_night_depart = "";
					$is_holiday_depart = "";
					for($docVslDepartInfo=0;$docVslDepartInfo<count($rtn_doc_vsl_depart);$docVslDepartInfo++)
						{
							$pilot_name_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['pilot_name_depart'];
							$pilot_on_board_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['pilot_on_board'];
							$pilot_off_board_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['pilot_off_board'];
							$pilot_frm_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['pilot_frm'];
							$pilot_to_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['pilot_to'];
							$mooring_frm_time_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['mooring_frm_time'];
							$mooring_to_time_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['mooring_to_time'];
							$tug_name_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['tug_name'];
							$assit_frm_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['assit_frm'];
							$assit_to_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['assit_to'];
							$atd_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['atd'];
							$aditional_pilot_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['aditional_pilot'];
							$aditional_tug_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['aditional_tug'];
							$remarks_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['remarks'];
							$berth_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['berth'];
							$draught_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['draught'];
							$is_main_engine_ok_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['is_main_engine_ok'];
							$is_acnchors_ok_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['is_acnchors_ok'];
							$is_rudder_indicator_ok_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['is_rudder_indicator_ok'];
							$is_rpm_indicator_ok_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['is_rpm_indicator_ok'];
							$is_bow_therster_available_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['is_bow_therster_available'];
							$is_complying_soal_convention_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['is_complying_soal_convention'];
							$is_night_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['is_night'];
							$is_holiday_depart=$rtn_doc_vsl_depart[$docVslDepartInfo]['is_holiday'];
						}
					$this->data['pilot_name_depart']=$pilot_name_depart ;
					$this->data['pilot_on_board_depart']=$pilot_on_board_depart ;
					$this->data['pilot_off_board_depart']=$pilot_off_board_depart ;
					$this->data['pilot_frm_depart']=$pilot_frm_depart ;
					$this->data['pilot_to_depart']=$pilot_to_depart ;
					$this->data['mooring_frm_time_depart']=$mooring_frm_time_depart ;
					$this->data['mooring_to_time_depart']=$mooring_to_time_depart ;
					$this->data['tug_name_depart']=$tug_name_depart ; 
					$this->data['assit_frm_depart']=$assit_frm_depart ;
					$this->data['assit_to_depart']=$assit_to_depart ;
					$this->data['atd_depart']=$atd_depart ;
					$this->data['aditional_pilot_depart']=$aditional_pilot_depart ;
					$this->data['aditional_tug_depart']=$aditional_tug_depart ;
					$this->data['remarks_depart']=$remarks_depart ;
					$this->data['berth_depart']=$berth_depart ;
					$this->data['draught_depart']=$draught_depart ;
					$this->data['is_main_engine_ok_depart']=$is_main_engine_ok_depart ;
					$this->data['is_acnchors_ok_depart']=$is_acnchors_ok_depart ;
					$this->data['is_rudder_indicator_ok_depart']=$is_rudder_indicator_ok_depart ;
					$this->data['is_rpm_indicator_ok_depart']=$is_rpm_indicator_ok_depart ;
					$this->data['is_bow_therster_available_depart']=$is_bow_therster_available_depart ;
					$this->data['is_complying_soal_convention_depart']=$is_complying_soal_convention_depart ;
					$this->data['is_night_depart']=$is_night_depart ;
					$this->data['is_holiday_depart']=$is_holiday_depart ;
					//doc_vsl_depart...
				}
				if($igm_id_arraival>0)
				{
					$query42="SELECT id,Vessel_Name,Name_of_Master,grt,nrt,Deck_cargo,loa_cm,Port_of_Destination,radio_call_sign,flag 
						FROM igm_masters 
						WHERE Import_Rotation_No='$ddl_imp_rot_no'";					 
					$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query42);
					$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm ;
					
					$str_n4ForVsl="SELECT vsl_vessels.name AS rtnValue
							FROM  vsl_vessels
							INNER JOIN vsl_vessel_visit_details ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
							WHERE vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
					$rsltn4ForVsl = $this->bm->dataReturn($str_n4ForVsl);
					if($rsltn4ForVsl == ""){
						$rsltn4ForVsl = $vesselName;
					} else {
						$rsltn4ForVsl = $rsltn4ForVsl;
					}
					$this->data['rsltn4ForVsl']=$rsltn4ForVsl;

					//...
					$query21="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name,vsl_vessels.radio_call_sign,
					vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,vsl_vessel_classes.net_registered_ton,
					ref_bizunit_scoped.name AS localagent,ref_country.cntry_name
					FROM vsl_vessels
					INNER JOIN vsl_vessel_visit_details ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
					INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
					INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
					INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
					WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
					$rtnVesselDetails_n4 = $this->bm->dataselect($query21); 					
					$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
					
					$vvdGkey = "";					
					if($getVvdGkey == "")	
					{
						$vvdGkey=$rtnVesselDetails_n4[0]['VVD_GKEY'];						
					}
					else
					{
						$vvdGkey=$getVvdGkey;		
					}
					
					$vsl_arrival_str="select igm_id, vvd_gkey, doc_vsl_arrival.pilot_name as pilot_login,  
						(SELECT u_name FROM users WHERE users.login_id=pilot_name) AS pilot_name, pilot_on_board,pilot_off_board,pilot_frm,
						pilot_to,mooring_frm_time,mooring_to_time,tug_name,assit_frm,assit_to,oa_dt,oa_dt,ata,photo_base_64,
						DATE(pilot_on_board) as sign_arraival,aditional_tug+1 as aditional_tug,is_night,is_holiday
						from cchaportdb.doc_vsl_arrival 
						where vvd_gkey='$vvdGkey'";										
					$rtn_vsl_arrival_info = $this->bm->dataSelectDb1($vsl_arrival_str);
					$this->data['rtn_vsl_arrival_info']=$rtn_vsl_arrival_info ;

					//doc_vsl_arrival...Vessel_Name
					$query_doc_vsl_arrival="SELECT *, (SELECT u_name FROM users WHERE users.login_id=pilot_name) AS pilot_name_arrival
											FROM doc_vsl_arrival WHERE vvd_gkey='$getVvdGkey'";
					$rtn_doc_vsl_arrival = $this->bm->dataSelectDb1($query_doc_vsl_arrival);
					$this->data['rtn_doc_vsl_arrival']=$rtn_doc_vsl_arrival ;
					
					$pilot_name_arrival = "";
					$pilot_on_board_arrival = "";
					$pilot_off_board_arrival = "";
					$pilot_frm_arrival = "";
					$pilot_to_arrival = "";
					$mooring_frm_time_arrival = "";
					$mooring_to_time_arrival = "";
					$cancel_from_arrival = "";
					$cancel_to_arrival = "";
					$cancel_at_arrival = "";
					$tug_name_arrival = "";
					$assit_frm_arrival = "";
					$assit_to_arrival = "";
					$oa_dt_arrival = "";
					$ata_arrival = "";
					$aditional_pilot_arrival = "";
					$aditional_tug_arrival = "";
					$remarks_arrival = "";
					$berth_arrival = "";
					$draught_arrival = "";
					$photo_base_64_arrival = "";
					$is_main_engine_ok_arrival = "";
					$is_acnchors_ok_arrival = "";
					$is_rudder_indicator_ok_arrival = "";
					$is_rpm_indicator_ok_arrival = "";
					$is_bow_therster_available_arrival = "";
					$is_complying_soal_convention_arrival = "";
					$is_night_arrival = "";
					$is_holiday_arrival = "";
					$final_submit_arrival = "";
					$date_modified_arrival = "";
					for($docVslArrivalInfo=0;$docVslArrivalInfo<count($rtn_doc_vsl_arrival);$docVslArrivalInfo++)
						{
							$pilot_name_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['pilot_name_arrival'];
							$pilot_on_board_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['pilot_on_board'];
							$pilot_off_board_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['pilot_off_board'];
							$pilot_frm_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['pilot_frm'];
							$pilot_to_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['pilot_to'];
							$mooring_frm_time_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['mooring_frm_time'];
							$mooring_to_time_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['mooring_to_time'];
							$cancel_from_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['cancel_from'];
							$cancel_to_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['cancel_to'];
							$cancel_at_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['cancel_at'];
							$tug_name_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['tug_name'];
							$assit_frm_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['assit_frm'];
							$assit_to_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['assit_to'];
							$oa_dt_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['oa_dt'];
							$ata_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['ata'];
							$aditional_pilot_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['aditional_pilot'];
							$aditional_tug_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['aditional_tug'];
							$remarks_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['remarks'];
							$berth_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['berth'];
							$draught_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['draught'];
							$photo_base_64_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['photo_base_64'];
							$is_main_engine_ok_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['is_main_engine_ok'];
							$is_acnchors_ok_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['is_acnchors_ok'];
							$is_rudder_indicator_ok_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['is_rudder_indicator_ok'];
							$is_rpm_indicator_ok_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['is_rpm_indicator_ok'];
							$is_bow_therster_available_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['is_bow_therster_available'];
							$is_complying_soal_convention_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['is_complying_soal_convention'];
							$is_night_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['is_night'];
							$is_holiday_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['is_holiday'];
							$final_submit_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['final_submit'];
							$date_modified_arrival=$rtn_doc_vsl_arrival[$docVslArrivalInfo]['date_modified'];
						}
					$this->data['pilot_name_arrival']=$pilot_name_arrival ;
					$this->data['pilot_on_board_arrival']=$pilot_on_board_arrival ;
					$this->data['pilot_off_board_arrival']=$pilot_off_board_arrival ;
					$this->data['pilot_frm_arrival']=$pilot_frm_arrival ;
					$this->data['pilot_to_arrival']=$pilot_to_arrival ;
					$this->data['mooring_frm_time_arrival']=$mooring_frm_time_arrival ;
					$this->data['mooring_to_time_arrival']=$mooring_to_time_arrival ;
					$this->data['cancel_from_arrival']=$cancel_from_arrival ;
					$this->data['cancel_to_arrival']=$cancel_to_arrival ;
					$this->data['cancel_at_arrival']=$cancel_at_arrival ;
					$this->data['tug_name_arrival']=$tug_name_arrival ;
					$this->data['assit_frm_arrival']=$assit_frm_arrival ;
					$this->data['assit_to_arrival']=$assit_to_arrival ;
					$this->data['oa_dt_arrival']=$oa_dt_arrival ;
					$this->data['ata_arrival']=$ata_arrival ;
					$this->data['aditional_pilot_arrival']=$aditional_pilot_arrival ;
					$this->data['aditional_tug_arrival']=$aditional_tug_arrival ;
					$this->data['remarks_arrival']=$remarks_arrival ;
					$this->data['berth_arrival']=$berth_arrival ;
					$this->data['draught_arrival']=$draught_arrival ;
					$this->data['photo_base_64_arrival']=$photo_base_64_arrival ;
					$this->data['is_main_engine_ok_arrival']=$is_main_engine_ok_arrival ;
					$this->data['is_acnchors_ok_arrival']=$is_acnchors_ok_arrival ;
					$this->data['is_rudder_indicator_ok_arrival']=$is_rudder_indicator_ok_arrival ;
					$this->data['is_rpm_indicator_ok_arrival']=$is_rpm_indicator_ok_arrival ;
					$this->data['is_bow_therster_available_arrival']=$is_bow_therster_available_arrival ;
					$this->data['is_complying_soal_convention_arrival']=$is_complying_soal_convention_arrival ;
					$this->data['is_night_arrival']=$is_night_arrival ;
					$this->data['is_holiday_arrival']=$is_holiday_arrival ;
					$this->data['final_submit_arrival']=$final_submit_arrival ;
					$this->data['date_modified_arrival']=$date_modified_arrival ;
					//doc_vsl_arrival...
					
				}
				if($cntShift>0)
				{
					//igm start
					$sql_shifting_one="SELECT id,Vessel_Name,Name_of_Master,grt,nrt,Deck_cargo,loa_cm,
										Port_of_Destination,radio_call_sign,flag
										FROM igm_masters 
										WHERE Import_Rotation_No='$ddl_imp_rot_no'";
					$rtnVesselDetails_igm=$this->bm->dataSelectDb1($sql_shifting_one);
					
					$str_n4ForVsl="SELECT vsl_vessels.name AS rtnValue
					FROM  vsl_vessels
					INNER JOIN vsl_vessel_visit_details ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
					WHERE vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
					$rsltn4ForVsl = $this->bm->dataReturn($str_n4ForVsl);
					$this->data['rsltn4ForVsl']=$rsltn4ForVsl;
					//igm end
					
					//inserted data start
					
					// if no data in igm - start
					$sql_show_current_data = "";
					if(count($rtnVesselDetails_igm)==0)
					{
						$sql_show_current_data = "SELECT doc_vsl_shift.pilot_name as pilot_login, (SELECT u_name FROM users WHERE users.login_id=pilot_name) AS pilot_name,pilot_on_board,pilot_off_board,shift_frm,shift_to,mooring_frm_time,
						mooring_to_time,tug_name,assit_frm,assit_to,shift_dt,DATE(pilot_on_board) as sign_shift,aditional_tug+1 as aditional_tug,photo_base_64,is_night,is_holiday 
						FROM doc_vsl_shift 
						WHERE vvd_gkey='$getVvdGkey'";
					}
					else
					{
						$shift_igm_id=$rtnVesselDetails_igm[0]['id'];
					
						$sql_show_current_data="SELECT doc_vsl_shift.pilot_name as pilot_login, (SELECT u_name FROM users WHERE users.login_id=pilot_name) AS pilot_name,pilot_on_board,pilot_off_board,shift_frm,shift_to,mooring_frm_time,
						mooring_to_time,tug_name,assit_frm,assit_to,shift_dt,DATE(pilot_on_board) as sign_shift,aditional_tug+1 as aditional_tug,photo_base_64,is_night,is_holiday 
						FROM doc_vsl_shift 
						WHERE igm_id='$shift_igm_id'";
					}
					$rslt_show_current_data=$this->bm->dataSelectDb1($sql_show_current_data);
					// if no data in igm - end
					
					//inserted data end
					
					//get n4 data - start
					$sql_shifting_two="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.radio_call_sign,
						vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,vsl_vessel_classes.net_registered_ton,
						ref_bizunit_scoped.name AS localagent
						FROM vsl_vessels
						INNER JOIN vsl_vessel_visit_details ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
						INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
						INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
						WHERE vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";					
					$rtnVesselDetails_n4=$this->bm->dataselect($sql_shifting_two);
					
					//get n4 data - end cntry_name
					
					$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
					$this->data['rslt_show_current_data']=$rslt_show_current_data;
					$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
					$this->data['getVvdGkey']=$getVvdGkey;
					
					//doc_vsl_shift...
					$query_doc_vsl_shifting="SELECT *, (SELECT u_name FROM users WHERE users.login_id=pilot_name) AS pilot_name_shifting
											FROM doc_vsl_shift WHERE vvd_gkey='$getVvdGkey'";
					$rtn_doc_vsl_shifting = $this->bm->dataSelectDb1($query_doc_vsl_shifting);
					$this->data['rtn_doc_vsl_shifting']=$rtn_doc_vsl_shifting ;
					
					$pilot_name_shifting = "";
					$pilot_on_board_shifting = "";
					$pilot_off_board_shifting = "";
					$shift_frm_shifting = "";
					$shift_to_shifting = "";
					$mooring_frm_time_shifting = "";
					$mooring_to_time_shifting = "";
					$tug_name_shifting = "";
					$assit_frm_shifting = "";
					$assit_to_shifting = "";
					$shift_dt_shifting = "";
					$aditional_pilot_shifting = "";
					$aditional_tug_shifting = "";
					$remarks_shifting = "";
					$berth_shifting = "";
					$draught_shifting = "";
					$is_main_engine_ok_shifting = "";
					$is_acnchors_ok_shifting = "";
					$is_rudder_indicator_ok_shifting = "";
					$is_rpm_indicator_ok_shifting = "";
					$is_bow_therster_available_shifting = "";
					$is_complying_soal_convention_shifting = "";
					$is_night_shifting = "";
					$is_holiday_shifting = "";
					$final_submit_shifting = "";
					for($docVslShiftingInfo=0;$docVslShiftingInfo<count($rtn_doc_vsl_shifting);$docVslShiftingInfo++)
						{
							$pilot_name_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['pilot_name_shifting'];
							$pilot_on_board_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['pilot_on_board'];
							$pilot_off_board_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['pilot_off_board'];
							$shift_frm_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['shift_frm'];
							$shift_to_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['shift_to'];
							$mooring_frm_time_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['mooring_frm_time'];
							$mooring_to_time_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['mooring_to_time'];
							$tug_name_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['tug_name'];
							$assit_frm_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['assit_frm'];
							$assit_to_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['assit_to'];
							$shift_dt_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['shift_dt'];
							$aditional_pilot_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['aditional_pilot'];
							$aditional_tug_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['aditional_tug'];
							$remarks_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['remarks'];
							$berth_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['berth'];
							$draught_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['draught'];
							$is_main_engine_ok_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['is_main_engine_ok'];
							$is_acnchors_ok_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['is_acnchors_ok'];
							$is_rudder_indicator_ok_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['is_rudder_indicator_ok'];
							$is_rpm_indicator_ok_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['is_rpm_indicator_ok'];
							$is_bow_therster_available_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['is_bow_therster_available'];
							$is_complying_soal_convention_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['is_complying_soal_convention'];
							$is_night_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['is_night'];
							$is_holiday_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['is_holiday'];
							$final_submit_shifting=$rtn_doc_vsl_shifting[$docVslShiftingInfo]['final_submit'];
						}
					$this->data['pilot_name_shifting']=$pilot_name_shifting ;
					$this->data['pilot_on_board_shifting']=$pilot_on_board_shifting ;
					$this->data['pilot_off_board_shifting']=$pilot_off_board_shifting ;
					$this->data['shift_frm_shifting']=$shift_frm_shifting ;
					$this->data['shift_to_shifting']=$shift_to_shifting ;
					$this->data['mooring_frm_time_shifting']=$mooring_frm_time_shifting ;
					$this->data['mooring_to_time_shifting']=$mooring_to_time_shifting ;
					$this->data['tug_name_shifting']=$tug_name_shifting ;
					$this->data['assit_frm_shifting']=$assit_frm_shifting ;
					$this->data['assit_to_shifting']=$assit_to_shifting ;
					$this->data['shift_dt_shifting']=$shift_dt_shifting ;
					$this->data['aditional_pilot_shifting']=$aditional_pilot_shifting ;
					$this->data['aditional_tug_shifting']=$aditional_tug_shifting ;
					$this->data['remarks_shifting']=$remarks_shifting ;
					$this->data['berth_shifting']=$berth_shifting ;
					$this->data['draught_shifting']=$draught_shifting ;
					$this->data['is_main_engine_ok_shifting']=$is_main_engine_ok_shifting ;
					$this->data['is_acnchors_ok_shifting']=$is_acnchors_ok_shifting ;
					$this->data['is_rudder_indicator_ok_shifting']=$is_rudder_indicator_ok_shifting ;
					$this->data['is_rpm_indicator_ok_shifting']=$is_rpm_indicator_ok_shifting ;
					$this->data['is_bow_therster_available_shifting']=$is_bow_therster_available_shifting ;
					$this->data['is_complying_soal_convention_shifting']=$is_complying_soal_convention_shifting ;
					$this->data['is_night_shifting']=$is_night_shifting ;
					$this->data['is_holiday_shifting']=$is_holiday_shifting ;
					$this->data['final_submit_shifting']=$final_submit_shifting ;
					//doc_vsl_shift...
				}
				
				$this->data['Vessel_Name']=$Vessel_Name;
				$this->data['igm_id_arraival']=$igm_id_arraival;
				$this->data['igm_id_shift']=$igm_id_shift;					
				$this->data['igm_id_depart']=$igm_id_depart;
				
				$html=$this->load->view('pilotageCertificateReport',$this->data, true);
				$stylesheet = file_get_contents('resources/styles/test.css'); // external css
				$pdf->useSubstitutions = true; // optional - just as an example
						
				// $pdf->AddPage('P', // L - landscape, P - portrait
				// 					'', '', '', '',
				// 					5, // margin_left
				// 					5, // margin right
				// 					5, // margin top
				// 					5, // margin bottom
				// 					5, // margin header
				// 					5); // margin footer
				//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
						
				$pdf->WriteHTML($stylesheet,1);
				$pdf->WriteHTML($html,2);
				//$pdf->WriteHTML($scriptSheet,3);
				$pdf->Output($pdfFilePath, "I"); // For Show Pdf	
				//rtnVesselDetails_n4
			}
			else if($from_stat=="C")
			{	
				$igm_id_arraival=0;
				$igm_id_depart=0;
				$igm_id_shift=0;
				$igm_id_cancel=0;
				
				$this->load->library('m_pdf');
				//$pdf->use_kwt = true;
				$this->data['title']="Pilotage Certificate";
				$this->data['ddl_imp_rot_no']=$ddl_imp_rot_no;
				$pdfFilePath ="PilotageCertificate-".time()."-download.pdf";
				$pdf = $this->m_pdf->load();
				// //$pdf->SetWatermarkText('CPA CTMS');
				//$pdf->showWatermarkText = true;	
			
				// $chk_depart_query = "SELECT igm_id AS igm_id  FROM igm_masters
				// INNER JOIN doc_vsl_depart ON  igm_masters.id=doc_vsl_depart.igm_id
				// WHERE Import_Rotation_No = '$ddl_imp_rot_no'";

				// ---
				$chk_cancel_query = "SELECT vvd_gkey
				FROM doc_vsl_cancel
				WHERE vvd_gkey='$getVvdGkey'";
				// ---

				$chkCancel = $this->bm->dataSelectDb1($chk_cancel_query);				
				
				$igm_id_cancel=$chkCancel[0]['vvd_gkey'];
				
				//==========================================================================================================================================
				$vessel_info_from_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessel_visit_details.pilot_on_board,
					vsl_vessel_visit_details.pilot_off_board,vsl_vessels.name,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,
					vsl_vessel_classes.beam_cm,vsl_vessel_classes.gross_registered_ton,vsl_vessel_classes.net_registered_ton,
					ref_bizunit_scoped.name AS localagent,ref_country.cntry_name AS flag
					FROM vsl_vessels
					INNER JOIN vsl_vessel_visit_details ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
					INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
					INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
					INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
					WHERE vsl_vessel_visit_details.vvd_gkey='$getVvdGkey'";
				// echo $vessel_info_from_n4;return;
				$rtn_vessel_info_from_n4 = $this->bm->dataSelect($vessel_info_from_n4);
				$this->data['rtn_vessel_info_from_n4']=$rtn_vessel_info_from_n4;
				
				$vesselName = "";
				$radioCallSign = "";
				$flagValue = "";
				$grtValue = "";
				$nrtValue = "";
				$loaCm = "";
				$beamCm = "";
				$localAgent = "";
				$pilotOnBoard = "";
				$pilotOffBoard = "";
				for($n=0;$n<count($rtn_vessel_info_from_n4);$n++)
				{
					$vesselName=$rtn_vessel_info_from_n4[$n]['NAME'];
					$radioCallSign=$rtn_vessel_info_from_n4[$n]['RADIO_CALL_SIGN'];
					$flagValue=$rtn_vessel_info_from_n4[$n]['FLAG'];
					$grtValue=$rtn_vessel_info_from_n4[$n]['GROSS_REGISTERED_TON'];
					$nrtValue=$rtn_vessel_info_from_n4[$n]['NET_REGISTERED_TON'];
					$loaCm=$rtn_vessel_info_from_n4[$n]['LOA_CM'];
					$beamCm=$rtn_vessel_info_from_n4[$n]['BEAM_CM'];
					$localAgent=$rtn_vessel_info_from_n4[$n]['LOCALAGENT'];
					$pilotOnBoard=$rtn_vessel_info_from_n4[$n]['PILOT_ON_BOARD'];
					$pilotOffBoard=$rtn_vessel_info_from_n4[$n]['PILOT_OFF_BOARD'];
				}
				$this->data['vesselName']=$vesselName;
				$this->data['radioCallSign']=$radioCallSign;
				$this->data['flagValue']=$flagValue;
				$this->data['grtValue']=$grtValue;
				$this->data['nrtValue']=$nrtValue;
				$this->data['loaCm']=$loaCm;
				$this->data['beamCm']=$beamCm;
				$this->data['localAgent']=$localAgent;
				$this->data['pilotOnBoard']=$pilotOnBoard;
				$this->data['pilotOffBoard']=$pilotOffBoard;				
				//========================================================================================================================================
				//========================================================================================================================================
				$doc_vsl_info_data="SELECT u_name AS pilotName FROM doc_vsl_info
									INNER JOIN users ON doc_vsl_info.entry_by=users.login_id
									WHERE vvd_gkey='$getVvdGkey'";
				$res_doc_vsl_info_data = $this->bm->dataSelectDb1($doc_vsl_info_data);
				$pilotName = "";
				for($d=0;$d<count($res_doc_vsl_info_data);$d++)
				{
					$pilotName=$res_doc_vsl_info_data[$n]['pilotName'];
				}
				$this->data['pilotName']=$pilotName;
				
				
				if($igm_id_cancel>0)
				{
					$query_igm="SELECT id as igm_mst_id,Vessel_Name,Name_of_Master,Deck_cargo,Port_of_Destination,flag
					FROM igm_masters 
					WHERE Import_Rotation_No='$ddl_imp_rot_no'";
					
					$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query_igm);
					$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
					
					$str_n4ForVsl="SELECT vsl_vessels.name AS rtnValue
							FROM  vsl_vessels
							INNER JOIN vsl_vessel_visit_details ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
							WHERE vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
					$rsltn4ForVsl = $this->bm->dataReturn($str_n4ForVsl);
					$this->data['rsltn4ForVsl']=$rsltn4ForVsl;


					$query_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
					vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name as flag,
					vsl_vessel_classes.beam_cm
					FROM vsl_vessels
					INNER JOIN vsl_vessel_visit_details ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
					INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
					INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
					INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
					WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
									
					$rtnVesselDetails_n4 = $this->bm->dataSelect($query_n4);
					$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
					
					
					$query_cancel="SELECT igm_id,vvd_gkey, pilot_name as pilot_login, (SELECT u_name FROM users WHERE users.login_id=pilot_name) AS pilot_name,pilot_on_board,pilot_off_board,pilot_frm,pilot_to,cancel_from,cancel_to,cancel_at, TIME(cancel_at) AS cancel_at_time,DATE(cancel_at) AS cancel_at_date,mooring_frm_time,
					mooring_to_time,tug_name,assit_frm,assit_to,atd,DATE(pilot_on_board) as sign_cancel,aditional_tug+1 as aditional_tug,photo_base_64,is_night,is_holiday,remarks
					FROM doc_vsl_cancel
					WHERE vvd_gkey='$getVvdGkey'";
					// echo $query_cancel;return;
					$rtnVesselDetails_cancel = $this->bm->dataSelectDb1($query_cancel);
					$getArraivalDt="select IFNULL(ata,'00:00:00') as ata from doc_vsl_arrival where igm_id=$igm_id_cancel";

					$rtnArrivalDt = $this->bm->dataSelectDb1($getArraivalDt);						
					$this->data['rtnVesselDetails_cancel']=$rtnVesselDetails_cancel;						
					$this->data['ata']=$rtnArrivalDt[0]['ata'];
					$this->data['chk_igm_id']=$igm_id_cancel;
				}
				
				$this->data['igm_id_arraival']=$igm_id_arraival;
				$this->data['igm_id_shift']=$igm_id_shift;					
				$this->data['igm_id_depart']=$igm_id_depart;
				$this->data['igm_id_cancel']=$igm_id_cancel;
				
				$html=$this->load->view('pilotageCertificateReport',$this->data, true);
				$stylesheet = file_get_contents('resources/styles/test.css'); // external css
				$pdf->useSubstitutions = true; // optional - just as an example
						
				$pdf->AddPage('P', // L - landscape, P - portrait
									'', '', '', '',
									0, // margin_left
									0, // margin right
									0, // margin top
									0, // margin bottom
									0, // margin header
									0); // margin footer
				//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
						
				$pdf->WriteHTML($stylesheet,1);
				$pdf->WriteHTML($html,2);
				//$pdf->WriteHTML($scriptSheet,3);
				$pdf->Output($pdfFilePath, "I"); // For Show Pdf				
			}
			
		}
	}

		
	function departureReportOfVessel_apps_test()		// 2021-06-17
	{
		
		$from_stat=$this->uri->segment(3);
		$getVvdGkey=$this->uri->segment(5);
		$activity_for=$this->uri->segment(6);
		$data['chk_igm_id']="";

		$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(4));
		$data['rotation']=$ddl_imp_rot_no;
		$query_igm="SELECT id as igm_mst_id,Vessel_Name,Name_of_Master,Deck_cargo,Port_of_Destination,flag
		FROM igm_masters 
		WHERE Import_Rotation_No='$ddl_imp_rot_no'";
		
		//---
		/*$sql_vvdGkey = "SELECT sparcsn4.vsl_vessel_visit_details.vvd_gkey AS rtnValue
		FROM sparcsn4.vsl_vessel_visit_details
		WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
		$getVvdGkey = $this->bm->dataReturn($sql_vvdGkey);*/
		//---

		$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query_igm);
		$data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
		
		$query_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
		vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name as flag,
		vsl_vessel_classes.beam_cm
		FROM sparcsn4.vsl_vessels
		INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
		INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
		INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
		INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
		WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
					
		$rtnVesselDetails_n4 = $this->bm->dataSelect($query_n4);
		$data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
		
		//$this->load->view('header5');
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		if($from_stat=="R")
		{						
			$igm_id_arraival=0;
			$igm_id_depart=0;
			$igm_id_shift=0;
						
			$this->load->library('m_pdf');
			//$pdf->use_kwt = true;
			$this->data['title']="Pilotage Certificate";
			$this->data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$pdfFilePath ="PilotageCertificate-".time()."-download.pdf";
			$pdf = $this->m_pdf->load();
			// //$pdf->SetWatermarkText('CPA CTMS');
			$pdf->showWatermarkText = true;	
		
			// $chk_depart_query = "SELECT igm_id AS igm_id  FROM igm_masters
			// INNER JOIN doc_vsl_depart ON  igm_masters.id=doc_vsl_depart.igm_id
			// WHERE Import_Rotation_No = '$ddl_imp_rot_no'";

			// ---
			$chk_depart_query = "SELECT vvd_gkey FROM doc_vsl_depart WHERE vvd_gkey='$getVvdGkey'";
			// ---

			$chkDepart = $this->bm->dataSelectDb1($chk_depart_query);				
			
			$igm_id_depart=$chkDepart[0]['vvd_gkey'];
			
			// $chk_arrival_query = "SELECT igm_id AS igm_id  FROM igm_masters
			// INNER JOIN doc_vsl_arrival ON  igm_masters.id=doc_vsl_arrival.igm_id
			// WHERE Import_Rotation_No = '$ddl_imp_rot_no'";
			
			// ---
			$chk_arrival_query = "SELECT vvd_gkey FROM doc_vsl_arrival
			WHERE vvd_gkey='$getVvdGkey'";
			// ---
			
			$chkArrival = $this->bm->dataSelectDb1($chk_arrival_query);
			
			$igm_id_arraival=$chkArrival[0]['vvd_gkey'];
			
			// $chk_shift_query = "SELECT igm_id AS igm_id  FROM igm_masters
			// INNER JOIN doc_vsl_shift ON  igm_masters.id=doc_vsl_shift.igm_id
			// WHERE Import_Rotation_No = '$ddl_imp_rot_no'";
			
			// ---
			$chk_shift_query = "SELECT vvd_gkey FROM doc_vsl_shift
			WHERE vvd_gkey='$getVvdGkey'";
			// ---
			
			$chkShift = $this->bm->dataSelectDb1($chk_shift_query);
				
			$igm_id_shift=$chkShift[0]['vvd_gkey'];
				// $igm_id_depart=1;		// ---		// comment later, now for test
				// $igm_id_arraival=1;		// ---		// comment later, now for test
			if($activity_for=="outgoing")
			{
				$query_igm="SELECT id as igm_mst_id,Vessel_Name,Name_of_Master,Deck_cargo,Port_of_Destination,flag
				FROM igm_masters 
				WHERE Import_Rotation_No='$ddl_imp_rot_no'";

				$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query_igm);
				$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;

				$query_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
				vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name as flag,
				vsl_vessel_classes.beam_cm
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
				INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
				INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
				WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
								
				$rtnVesselDetails_n4 = $this->bm->dataSelect($query_n4);
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
				
				// $query_depart="SELECT igm_id,vvd_gkey,pilot_name,pilot_on_board,pilot_off_board,pilot_frm,pilot_to,mooring_frm_time,
				// mooring_to_time,tug_name,assit_frm,assit_to,atd,DATE(pilot_on_board) as sign_depart,aditional_tug+1 as aditional_tug 
				// FROM doc_vsl_depart
				// WHERE igm_id=$igm_id_depart";
				
				$query_depart="SELECT igm_id,vvd_gkey,pilot_name,pilot_on_board,pilot_off_board,pilot_frm,pilot_to,mooring_frm_time,
				mooring_to_time,tug_name,assit_frm,assit_to,atd,DATE(pilot_on_board) as sign_depart,aditional_tug+1 as aditional_tug,photo_base_64 
				FROM doc_vsl_depart
				WHERE vvd_gkey=$getVvdGkey  LIMIT 1" ;
				
				$rtnVesselDetails_depart = $this->bm->dataSelectDb1($query_depart);
	
				$getArraivalDt="select IFNULL(ata,'00:00:00') as ata from doc_vsl_arrival where igm_id=$igm_id_depart";
				$rtnArrivalDt = $this->bm->dataSelectDb1($getArraivalDt);		
				
				$pilot_user_id = $rtnVesselDetails_depart[0]['pilot_name'];
				$getUserNameQuery="SELECT u_name FROM users WHERE login_id = '$pilot_user_id' LIMIT 1";
				$rtnUserNameResult = $this->bm->dataSelectDb1($getUserNameQuery);
				$this->data['pilot_name']=$rtnUserNameResult[0]['u_name'];
				
				$this->data['rtnVesselDetails_depart']=$rtnVesselDetails_depart;						
				$this->data['ata']=$rtnArrivalDt[0]['ata'];
				$this->data['chk_igm_id']=$igm_id_depart;
				
			}
			if($activity_for=="incoming")
			{
				$query42="SELECT id,Vessel_Name,Name_of_Master,grt,nrt,Deck_cargo,loa_cm,Port_of_Destination,radio_call_sign,flag FROM igm_masters 
				WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				 
				$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query42);
				$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm ;

				$query21="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
				INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
				INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
				WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
				 
				$rtnVesselDetails_n4 = $this->bm->dataSelect($query21);       
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
									
				$vvdGkey=$rtnVesselDetails_n4[0]['vvd_gkey'];
				
				$vsl_arrival_str="select igm_id, vvd_gkey, pilot_name, pilot_on_board, pilot_off_board, pilot_frm, pilot_to, 
				mooring_frm_time, mooring_to_time, tug_name, assit_frm, assit_to, oa_dt, oa_dt, ata, photo_base_64,
				DATE(pilot_on_board) as sign_arraival,aditional_tug+1 as aditional_tug from 
				cchaportdb.doc_vsl_arrival where vvd_gkey='$vvdGkey' LIMIT 1";
				
				$rtn_vsl_arrival_info = $this->bm->dataSelectDb1($vsl_arrival_str);
				
				$pilot_user_id = $rtn_vsl_arrival_info[0]['pilot_name'];
				$getUserNameQuery="SELECT u_name FROM users WHERE login_id = '$pilot_user_id' LIMIT 1";
				$rtnUserNameResult = $this->bm->dataSelectDb1($getUserNameQuery);
				$this->data['pilot_name']=$rtnUserNameResult[0]['u_name'];
				
				$this->data['rtn_vsl_arrival_info']=$rtn_vsl_arrival_info ;
				
				
				
			}
			if($activity_for=="shifting")
			{
				//igm start
				$sql_shifting_one="SELECT id,Vessel_Name,Name_of_Master,grt,nrt,Deck_cargo,loa_cm,Port_of_Destination,radio_call_sign,flag 
				FROM igm_masters 
				WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				
				$rtnVesselDetails_igm=$this->bm->dataSelectDb1($sql_shifting_one);
				//igm end
				
				//inserted data start
				$shift_igm_id=$rtnVesselDetails_igm[0]['id'];
				
				$sql_show_current_data="SELECT pilot_name,pilot_on_board,pilot_off_board,shift_frm,shift_to,mooring_frm_time,
				mooring_to_time,tug_name,assit_frm,assit_to,shift_dt,DATE(pilot_on_board) as sign_shift,aditional_tug+1 as aditional_tug,photo_base_64 
				FROM doc_vsl_shift 
				WHERE igm_id='$shift_igm_id'";
				
				$rslt_show_current_data=$this->bm->dataSelectDb1($sql_show_current_data);
			
				//inserted data end
				
				//get n4 data - start
				$sql_shifting_two="SELECT sparcsn4.vsl_vessel_visit_details.vvd_gkey,sparcsn4.vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
				vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN sparcsn4.vsl_vessel_classes ON sparcsn4.vsl_vessel_classes.gkey=sparcsn4.vsl_vessels.vesclass_gkey
				INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.vsl_vessels.owner_gkey
				WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
				
				$rtnVesselDetails_n4=$this->bm->dataSelect($sql_shifting_two);

				//get n4 data - end
				
				$pilot_user_id = $rslt_show_current_data[0]['pilot_name'];
				$getUserNameQuery="SELECT u_name FROM users WHERE login_id = '$pilot_user_id' LIMIT 1";
				$rtnUserNameResult = $this->bm->dataSelectDb1($getUserNameQuery);
				$this->data['pilot_name']=$rtnUserNameResult[0]['u_name'];
				
				
				$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
				$this->data['rslt_show_current_data']=$rslt_show_current_data;
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
			}								
			
			$this->data['activity_for']=$activity_for;
			
			
			$html=$this->load->view('pilotageCertificateReport_test',$this->data, true);
			$stylesheet = file_get_contents('resources/styles/test.css'); // external css
			$pdf->useSubstitutions = true; // optional - just as an example
					
			// $pdf->AddPage('P', // L - landscape, P - portrait
			// 					'', '', '', '',
			// 					5, // margin_left
			// 					5, // margin right
			// 					5, // margin top
			// 					5, // margin bottom
			// 					5, // margin header
			// 					5); // margin footer
			//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
			$pdf->setAutoTopMargin = false;	
			$pdf->setAutoBottomMargin = false;		
			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);
					//$pdf->WriteHTML($scriptSheet,3);
			$pdf->Output($pdfFilePath, "I"); // For Show Pdf				
		}
		//$this->load->view('footer_1');
		$this->load->view('jsAssets');							
	}
		
	//TOS Mobile App
	function PilotageReportOfVessel_TosApp_old()		// 2021-06-17
	{

		$from_stat=$this->uri->segment(3);
		$getVvdGkey=$this->uri->segment(5);
		$activity_for=$this->uri->segment(6);
		$data['chk_igm_id']="";
		$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(4));
		$data['rotation']=$ddl_imp_rot_no;
		
		
		$query_igm="SELECT id as igm_mst_id,Vessel_Name,Name_of_Master,Deck_cargo,Port_of_Destination,flag
		FROM igm_masters 
		WHERE Import_Rotation_No='$ddl_imp_rot_no'";
		
	
		$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query_igm);
		$data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
		
		$query_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
		vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name as flag,
		vsl_vessel_classes.beam_cm
		FROM sparcsn4.vsl_vessels
		INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
		INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
		INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
		INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
		WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
					
		$rtnVesselDetails_n4 = $this->bm->dataSelect($query_n4);
		$data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
		
		//$this->load->view('header5');
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		if($from_stat=="R")
		{						
			$igm_id_arraival=0;
			$igm_id_depart=0;
			$igm_id_shift=0;
						
			$this->load->library('m_pdf');
			//$pdf->use_kwt = true;
			$this->data['title']="Pilotage Certificate";
			$this->data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$pdfFilePath ="PilotageCertificate-".time()."-download.pdf";
			$pdf = $this->m_pdf->load();
			$pdf->showWatermarkText = true;	

			$chk_depart_query = "SELECT vvd_gkey FROM doc_vsl_depart WHERE vvd_gkey='$getVvdGkey'";
			$chkDepart = $this->bm->dataSelectDb1($chk_depart_query);				
			$igm_id_depart=$chkDepart[0]['vvd_gkey'];
			// ---
			$chk_arrival_query = "SELECT vvd_gkey FROM doc_vsl_arrival WHERE vvd_gkey='$getVvdGkey'";
			$chkArrival = $this->bm->dataSelectDb1($chk_arrival_query);
			$igm_id_arraival=$chkArrival[0]['vvd_gkey'];
			//			
			$chk_shift_query = "SELECT vvd_gkey FROM doc_vsl_shift WHERE vvd_gkey='$getVvdGkey'";
			$chkShift = $this->bm->dataSelectDb1($chk_shift_query);
			$igm_id_shift=$chkShift[0]['vvd_gkey'];
			
			$chk_cancel_query = "SELECT vvd_gkey FROM doc_vsl_cancel WHERE vvd_gkey='$getVvdGkey'";
			$chkCancel = $this->bm->dataSelectDb1($chk_cancel_query);
			$igm_id_Cancel=$chkCancel[0]['vvd_gkey'];

			if($activity_for=="incoming")
			{
				$query42="SELECT id,Vessel_Name,Name_of_Master,grt,nrt,Deck_cargo,loa_cm,Port_of_Destination,radio_call_sign,flag FROM igm_masters 
				WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				 
				$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query42);
				$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm ;

				$query21="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
				INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
				INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
				WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
				 
				$rtnVesselDetails_n4 = $this->bm->dataSelect($query21);       
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
									
				$vvdGkey=$rtnVesselDetails_n4[0]['vvd_gkey'];
				
				$vsl_arrival_str="select igm_id, vvd_gkey, pilot_name, pilot_on_board, pilot_off_board, pilot_frm, pilot_to, 
				mooring_frm_time, mooring_to_time, tug_name, assit_frm, assit_to, oa_dt, oa_dt, ata, photo_base_64,
				DATE(pilot_on_board) as sign_arraival,aditional_tug+1 as aditional_tug,
				is_main_engine_ok,is_acnchors_ok,is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,is_complying_soal_convention,
				is_night,is_holiday from cchaportdb.doc_vsl_arrival where vvd_gkey='$vvdGkey' LIMIT 1";
				
				$rtn_vsl_arrival_info = $this->bm->dataSelectDb1($vsl_arrival_str);
				
				$pilot_user_id = $rtn_vsl_arrival_info[0]['pilot_name'];
				$getUserNameQuery="SELECT u_name FROM users WHERE login_id = '$pilot_user_id' LIMIT 1";
				$rtnUserNameResult = $this->bm->dataSelectDb1($getUserNameQuery);
				$this->data['pilot_name']=$rtnUserNameResult[0]['u_name'];
				$this->data['rtn_vsl_arrival_info']=$rtn_vsl_arrival_info ;
				
				
			}
			if($activity_for=="shifting")
			{
				//igm start
				$sql_shifting_one="SELECT id,Vessel_Name,Name_of_Master,grt,nrt,Deck_cargo,loa_cm,Port_of_Destination,radio_call_sign,flag 
				FROM igm_masters 
				WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				
				$rtnVesselDetails_igm=$this->bm->dataSelectDb1($sql_shifting_one);
				//igm end
				
				//inserted data start
				$shift_igm_id=$rtnVesselDetails_igm[0]['id'];
				
				$sql_show_current_data="SELECT pilot_name,pilot_on_board,pilot_off_board,shift_frm,shift_to,mooring_frm_time,
				mooring_to_time,tug_name,assit_frm,assit_to,shift_dt,DATE(pilot_on_board) as sign_shift,aditional_tug+1 as aditional_tug,photo_base_64,
				is_main_engine_ok,is_acnchors_ok,is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,is_complying_soal_convention,
				is_night,is_holiday	FROM doc_vsl_shift WHERE  vvd_gkey='$vvdGkey' LIMIT 1";
				
				$rslt_show_current_data=$this->bm->dataSelectDb1($sql_show_current_data);
			
				//inserted data end
				
				//get n4 data - start
				$sql_shifting_two="SELECT sparcsn4.vsl_vessel_visit_details.vvd_gkey,sparcsn4.vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
				vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN sparcsn4.vsl_vessel_classes ON sparcsn4.vsl_vessel_classes.gkey=sparcsn4.vsl_vessels.vesclass_gkey
				INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.vsl_vessels.owner_gkey
				WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
				
				$rtnVesselDetails_n4=$this->bm->dataSelect($sql_shifting_two);

				//get n4 data - end
				
				$pilot_user_id = $rslt_show_current_data[0]['pilot_name'];
				$getUserNameQuery="SELECT u_name FROM users WHERE login_id = '$pilot_user_id' LIMIT 1";
				$rtnUserNameResult = $this->bm->dataSelectDb1($getUserNameQuery);
				
				$this->data['pilot_name']=$rtnUserNameResult[0]['u_name'];
				$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
				$this->data['rslt_show_current_data']=$rslt_show_current_data;
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
			}	
			
			if($activity_for=="outgoing")
			{
				$query_igm="SELECT id as igm_mst_id,Vessel_Name,Name_of_Master,Deck_cargo,Port_of_Destination,flag
				FROM igm_masters 
				WHERE Import_Rotation_No='$ddl_imp_rot_no'";

				$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query_igm);
				$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;

				$query_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
				vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name as flag,
				vsl_vessel_classes.beam_cm
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
				INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
				INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
				WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
								
				$rtnVesselDetails_n4 = $this->bm->dataSelect($query_n4);
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
				
				
				
				$query_depart="SELECT igm_id,vvd_gkey,pilot_name,pilot_on_board,pilot_off_board,pilot_frm,pilot_to,mooring_frm_time,
				mooring_to_time,tug_name,assit_frm,assit_to,atd,DATE(pilot_on_board) AS sign_depart,aditional_tug+1 AS aditional_tug,photo_base_64,
				is_main_engine_ok,is_acnchors_ok,is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,is_complying_soal_convention,
				is_night,is_holiday
				FROM doc_vsl_depart
				WHERE vvd_gkey='$getVvdGkey'  LIMIT 1" ;
				
				$rtnVesselDetails_depart = $this->bm->dataSelectDb1($query_depart);
	
				$getArraivalDt="select IFNULL(ata,'00:00:00') as ata from doc_vsl_arrival where igm_id=$igm_id_depart";
				$rtnArrivalDt = $this->bm->dataSelectDb1($getArraivalDt);		
				
				$pilot_user_id = $rtnVesselDetails_depart[0]['pilot_name'];
				$getUserNameQuery="SELECT u_name FROM users WHERE login_id = '$pilot_user_id' LIMIT 1";
				$rtnUserNameResult = $this->bm->dataSelectDb1($getUserNameQuery);
				$this->data['pilot_name']=$rtnUserNameResult[0]['u_name'];
				
				$this->data['rtnVesselDetails_depart']=$rtnVesselDetails_depart;						
				$this->data['ata']=$rtnArrivalDt[0]['ata'];
				$this->data['chk_igm_id']=$igm_id_depart;
				
			}
			//Cancel report Add on 31/5/22
			if($activity_for=="cancel")
			{
				//igm start
				$sql_Cancel_info="SELECT id,vvd_gkey,vsl_name,master_name,grt,nrt,deck_cargo,loa,next_port,flag FROM doc_vsl_info WHERE rotation= '$ddl_imp_rot_no'	";
				$sql_Cancel_info_array=$this->bm->dataSelectDb1($sql_Cancel_info);
				//igm end
				
				//inserted data start
				$cancel_id=$sql_Cancel_info_array[0]['vvd_gkey'];
				
				$sql_show_current_data="SELECT users.u_name AS pilot_name,pilot_on_board,pilot_off_board,cancel_from,cancel_to,cancel_at,remarks
				FROM doc_vsl_cancel 
				INNER JOIN users ON users.login_id = doc_vsl_cancel.pilot_name 
				WHERE vvd_gkey='$cancel_id'";
				
				$rslt_show_current_data=$this->bm->dataSelectDb1($sql_show_current_data);
			
				//inserted data end
				
				//get n4 data - start
				$sql_shifting_two="SELECT sparcsn4.vsl_vessel_visit_details.vvd_gkey,sparcsn4.vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
				vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN sparcsn4.vsl_vessel_classes ON sparcsn4.vsl_vessel_classes.gkey=sparcsn4.vsl_vessels.vesclass_gkey
				INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.vsl_vessels.owner_gkey
				WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
				
				$rtnVesselDetails_n4=$this->bm->dataSelect($sql_shifting_two);

				//get n4 data - end
				
				$pilot_user_id = $rslt_show_current_data[0]['pilot_name'];
				$getUserNameQuery="SELECT u_name FROM users WHERE login_id = '$pilot_user_id' LIMIT 1";
				$rtnUserNameResult = $this->bm->dataSelectDb1($getUserNameQuery);
				$this->data['pilot_name']=$rtnUserNameResult[0]['u_name'];
				
				
				$this->data['rtnVesselDetails_igm']=$sql_Cancel_info_array;
				$this->data['rslt_show_current_data']=$rslt_show_current_data;
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
			}

			
			
			$this->data['activity_for']=$activity_for;
			
			
			$html=$this->load->view('pilotageCertificateReport_TosApp',$this->data, true);
			$stylesheet = file_get_contents('resources/styles/test.css'); // external css
			$pdf->useSubstitutions = true; // optional - just as an example
			$pdf->setAutoTopMargin = false;	
			$pdf->setAutoBottomMargin = false;		
			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);
			$pdf->Output($pdfFilePath, "I"); // For Show Pdf				
		}
		$this->load->view('jsAssets');							
	}	
	//2022/08/24
	function PilotageReportOfVessel_TosApp()		// 2021-06-17
	{
		$from_stat=$this->uri->segment(3);
		$getVvdGkey=$this->uri->segment(5);
		$activity_for=$this->uri->segment(6);
		$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(4));
		$data['rotation']=$ddl_imp_rot_no;
       
		
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		if($from_stat=="R")
		{						
			$igm_id_arraival=0;
			$igm_id_depart=0;
			$igm_id_shift=0;
						
			$this->load->library('m_pdf');
			$this->data['title']="Pilotage Certificate";
			$this->data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$pdfFilePath ="PilotageCertificate-".time()."-download.pdf";
			$pdf = $this->m_pdf->load();
			$pdf->showWatermarkText = true;	
				
			if($activity_for=="incoming"){
				$query42="SELECT Name_of_Master,Deck_cargo FROM igm_masters WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query42);
				
				$query21="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name as Vessel_Name,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,
				vsl_vessel_classes.gross_registered_ton,vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
				INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
				INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
				WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no' ORDER BY vsl_vessel_visit_details.vvd_gkey DESC LIMIT 1" ;
				 
				$rtnVesselDetails_n4 = $this->bm->dataSelect($query21);       
									
				
				$vsl_arrival_str="select igm_id, vvd_gkey, pilot_name, pilot_on_board, pilot_off_board, pilot_frm, pilot_to, 
				mooring_frm_time, mooring_to_time, tug_name, assit_frm, assit_to, oa_dt, oa_dt, ata, photo_base_64,
				DATE(pilot_off_board) as sign_arraival,aditional_tug+1 as aditional_tug,
				is_main_engine_ok,is_acnchors_ok,is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,is_complying_soal_convention,
				remarks,is_night,is_holiday from cchaportdb.doc_vsl_arrival where vvd_gkey='$getVvdGkey' LIMIT 1";
				
				$rtn_vsl_arrival_info = $this->bm->dataSelectDb1($vsl_arrival_str);
				
				$pilot_user_id = $rtn_vsl_arrival_info[0]['pilot_name'];
				$getUserNameQuery="SELECT u_name FROM users WHERE login_id = '$pilot_user_id' LIMIT 1";
				$rtnUserNameResult = $this->bm->dataSelectDb1($getUserNameQuery);
				
				$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm ;
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
				$this->data['pilot_name']=$rtnUserNameResult[0]['u_name'];
				$this->data['rtn_vsl_arrival_info']=$rtn_vsl_arrival_info ;
				
				
			}else if($activity_for=="shifting"){
				//igm start
				$sql_shifting_one="SELECT Name_of_Master,Deck_cargo FROM igm_masters WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				$rtnVesselDetails_igm=$this->bm->dataSelectDb1($sql_shifting_one);
				//igm end
				
				$sql_show_current_data="SELECT pilot_name,pilot_on_board,pilot_off_board,shift_frm,shift_to,mooring_frm_time,
				mooring_to_time,tug_name,assit_frm,assit_to,shift_dt,DATE(pilot_off_board) as sign_shift,aditional_tug+1 as aditional_tug,photo_base_64,
				is_main_engine_ok,is_acnchors_ok,is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,is_complying_soal_convention,
				remarks,is_night,is_holiday				
				FROM doc_vsl_shift 
				WHERE vvd_gkey='$getVvdGkey' LIMIT 1";
				$rslt_show_current_data=$this->bm->dataSelectDb1($sql_show_current_data);
				//inserted data end
				
			
				//get n4 data - start
				$sql_shifting_two="SELECT sparcsn4.vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name as Vessel_Name,sparcsn4.vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
				vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN sparcsn4.vsl_vessel_classes ON sparcsn4.vsl_vessel_classes.gkey=sparcsn4.vsl_vessels.vesclass_gkey
				INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.vsl_vessels.owner_gkey
				WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no' ORDER BY vsl_vessel_visit_details.vvd_gkey DESC LIMIT 1";
				
				$rtnVesselDetails_n4=$this->bm->dataSelect($sql_shifting_two);

				//get n4 data - end
				
				$pilot_user_id = $rslt_show_current_data[0]['pilot_name'];
				$getUserNameQuery="SELECT u_name FROM users WHERE login_id = '$pilot_user_id' LIMIT 1";
				$rtnUserNameResult = $this->bm->dataSelectDb1($getUserNameQuery);
				
				$this->data['pilot_name']=$rtnUserNameResult[0]['u_name'];
				$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
				$this->data['rslt_show_current_data']=$rslt_show_current_data;
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
				
				
			}else if($activity_for=="outgoing"){
				$query_igm="SELECT Name_of_Master,Deck_cargo FROM igm_masters WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query_igm);
				
				$query_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name as Vessel_Name,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
				vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name as flag,
				vsl_vessel_classes.beam_cm FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
				INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
				INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
				WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no' ORDER BY vsl_vessel_visit_details.vvd_gkey DESC LIMIT 1";
				$rtnVesselDetails_n4 = $this->bm->dataSelect($query_n4);
				
				$query_depart="SELECT igm_id,vvd_gkey,pilot_name,pilot_on_board,pilot_off_board,pilot_frm,pilot_to,mooring_frm_time,
				mooring_to_time,tug_name,assit_frm,assit_to,atd,DATE(pilot_off_board) AS sign_depart,aditional_tug+1 AS aditional_tug,photo_base_64,
				is_main_engine_ok,is_acnchors_ok,is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,is_complying_soal_convention,
				remarks,is_night,is_holiday
				FROM doc_vsl_depart
				WHERE  vvd_gkey='$getVvdGkey' LIMIT 1" ;
				$rtnVesselDetails_depart = $this->bm->dataSelectDb1($query_depart);
	
			
				$pilot_user_id = $rtnVesselDetails_depart[0]['pilot_name'];
				$getUserNameQuery="SELECT u_name FROM users WHERE login_id = '$pilot_user_id' LIMIT 1";
				$rtnUserNameResult = $this->bm->dataSelectDb1($getUserNameQuery);
				
				$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
				$this->data['pilot_name']=$rtnUserNameResult[0]['u_name'];
				$this->data['rtnVesselDetails_depart']=$rtnVesselDetails_depart;						
					
			}else if($activity_for=="cancel"){
				//igm start
				$sql_Cancel_info="SELECT Name_of_Master,Deck_cargo FROM igm_masters WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				$sql_Cancel_info_array=$this->bm->dataSelectDb1($sql_Cancel_info);
				//igm end
			
				
				$sql_show_current_data="SELECT users.u_name AS pilot_name,pilot_on_board,pilot_off_board,DATE(pilot_off_board) AS sign_cancel,cancel_from,cancel_to,cancel_at,remarks
				FROM doc_vsl_cancel 
				INNER JOIN users ON users.login_id = doc_vsl_cancel.pilot_name 
				WHERE vvd_gkey='$getVvdGkey'";
				
				$rslt_show_current_data=$this->bm->dataSelectDb1($sql_show_current_data);
			
				//inserted data end
				
				//get n4 data - start
				$sql_shifting_two="SELECT sparcsn4.vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name as Vessel_Name,sparcsn4.vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
				vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN sparcsn4.vsl_vessel_classes ON sparcsn4.vsl_vessel_classes.gkey=sparcsn4.vsl_vessels.vesclass_gkey
				INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.vsl_vessels.owner_gkey
				WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no' ORDER BY vsl_vessel_visit_details.vvd_gkey DESC LIMIT 1";
				
				$rtnVesselDetails_n4=$this->bm->dataSelect($sql_shifting_two);

				//get n4 data - end
				
				$pilot_user_id = $rslt_show_current_data[0]['pilot_name'];
				$getUserNameQuery="SELECT u_name FROM users WHERE login_id = '$pilot_user_id' LIMIT 1";
				$rtnUserNameResult = $this->bm->dataSelectDb1($getUserNameQuery);
				$this->data['pilot_name']=$rtnUserNameResult[0]['u_name'];
				$this->data['rtnVesselDetails_igm']=$sql_Cancel_info_array;
				$this->data['rslt_show_current_data']=$rslt_show_current_data;
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
			}else{
				
			}

			
			
			$this->data['activity_for']=$activity_for;
			$html=$this->load->view('pilotageCertificateReport_TosApp',$this->data, true);
			$stylesheet = file_get_contents('resources/styles/test.css'); // external css
			$pdf->useSubstitutions = true; // optional - just as an example
			$pdf->setAutoTopMargin = false;	
			$pdf->setAutoBottomMargin = false;		
			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);
			$pdf->Output($pdfFilePath, "I"); // For Show Pdf				
		}
		$this->load->view('jsAssets');							
	}	

	function PilotageReportOfVesselTosApps()		// 2022-09-20
	{
		$from_stat=$this->uri->segment(3);
		$getVvdGkey=$this->uri->segment(5);
		$activity_for=$this->uri->segment(6);
		$user=$this->uri->segment(7);
		$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(4));
		$data['rotation']=$ddl_imp_rot_no;
       
		
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		if($from_stat=="R")
		{						
			$igm_id_arraival=0;
			$igm_id_depart=0;
			$igm_id_shift=0;
						
			$this->load->library('m_pdf');
			$this->data['title']="Pilotage Certificate";
			$this->data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			$pdfFilePath ="PilotageCertificate-".time()."-download.pdf";
			$pdf = $this->m_pdf->load();
			$pdf->showWatermarkText = true;	
				
			if($activity_for=="incoming"){
				$query42="SELECT Name_of_Master,Deck_cargo FROM igm_masters WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query42);
				
				$query21="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name as Vessel_Name,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,
				vsl_vessel_classes.gross_registered_ton,vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
				INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
				INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
				WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no' ORDER BY vsl_vessel_visit_details.vvd_gkey DESC LIMIT 1" ;
				 
				$rtnVesselDetails_n4 = $this->bm->dataSelect($query21);       
									
				
				$vsl_arrival_str="select igm_id, vvd_gkey, pilot_name, pilot_on_board, pilot_off_board, pilot_frm, pilot_to, 
				mooring_frm_time, mooring_to_time, tug_name, assit_frm, assit_to, oa_dt, oa_dt, ata, photo_base_64,
				DATE(pilot_off_board) as sign_arraival,aditional_tug+1 as aditional_tug,
				is_main_engine_ok,is_acnchors_ok,is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,is_complying_soal_convention,
				remarks,is_night,is_holiday from cchaportdb.doc_vsl_arrival where vvd_gkey='$getVvdGkey' LIMIT 1";
				
				$rtn_vsl_arrival_info = $this->bm->dataSelectDb1($vsl_arrival_str);
				
				$pilot_user_id = $rtn_vsl_arrival_info[0]['pilot_name'];
				$getUserNameQuery="SELECT u_name FROM users WHERE login_id = '$pilot_user_id' LIMIT 1";
				$rtnUserNameResult = $this->bm->dataSelectDb1($getUserNameQuery);
				
				$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm ;
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
				$this->data['pilot_name']=$rtnUserNameResult[0]['u_name'];
				$this->data['rtn_vsl_arrival_info']=$rtn_vsl_arrival_info ;
				
				
			}else if($activity_for=="shifting"){
				//igm start
				$sql_shifting_one="SELECT Name_of_Master,Deck_cargo FROM igm_masters WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				$rtnVesselDetails_igm=$this->bm->dataSelectDb1($sql_shifting_one);
				//igm end
				
				$sql_show_current_data="SELECT pilot_name,pilot_on_board,pilot_off_board,shift_frm,shift_to,mooring_frm_time,
				mooring_to_time,tug_name,assit_frm,assit_to,shift_dt,DATE(pilot_off_board) as sign_shift,aditional_tug+1 as aditional_tug,photo_base_64,
				is_main_engine_ok,is_acnchors_ok,is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,is_complying_soal_convention,
				remarks,is_night,is_holiday				
				FROM doc_vsl_shift 
				WHERE vvd_gkey='$getVvdGkey' and pilot_name='$user' DESC LIMIT 1 ";
				$rslt_show_current_data=$this->bm->dataSelectDb1($sql_show_current_data);
				//inserted data end
				
			
				//get n4 data - start
				$sql_shifting_two="SELECT vsl_vessels.name,sparcsn4.vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name as Vessel_Name,sparcsn4.vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
				vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN sparcsn4.vsl_vessel_classes ON sparcsn4.vsl_vessel_classes.gkey=sparcsn4.vsl_vessels.vesclass_gkey
				INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.vsl_vessels.owner_gkey
				WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no' ORDER BY vsl_vessel_visit_details.vvd_gkey DESC LIMIT 1";
				
				$rtnVesselDetails_n4=$this->bm->dataSelect($sql_shifting_two);

				//get n4 data - end
				
				$pilot_user_id = $rslt_show_current_data[0]['pilot_name'];
				$getUserNameQuery="SELECT u_name FROM users WHERE login_id = '$pilot_user_id' LIMIT 1";
				$rtnUserNameResult = $this->bm->dataSelectDb1($getUserNameQuery);
				
				$this->data['pilot_name']=$rtnUserNameResult[0]['u_name'];
				$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
				$this->data['rslt_show_current_data']=$rslt_show_current_data;
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
				
				
			}else if($activity_for=="outgoing"){
				$query_igm="SELECT Name_of_Master,Deck_cargo FROM igm_masters WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query_igm);
				
				$query_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name as Vessel_Name,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
				vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name as flag,
				vsl_vessel_classes.beam_cm FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
				INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
				INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
				WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no' ORDER BY vsl_vessel_visit_details.vvd_gkey DESC LIMIT 1";
				$rtnVesselDetails_n4 = $this->bm->dataSelect($query_n4);
				
				$query_depart="SELECT igm_id,vvd_gkey,pilot_name,pilot_on_board,pilot_off_board,pilot_frm,pilot_to,mooring_frm_time,
				mooring_to_time,tug_name,assit_frm,assit_to,atd,DATE(pilot_off_board) AS sign_depart,aditional_tug+1 AS aditional_tug,photo_base_64,
				is_main_engine_ok,is_acnchors_ok,is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,is_complying_soal_convention,
				remarks,is_night,is_holiday
				FROM doc_vsl_depart
				WHERE  vvd_gkey='$getVvdGkey' LIMIT 1" ;
				$rtnVesselDetails_depart = $this->bm->dataSelectDb1($query_depart);
	
			
				$pilot_user_id = $rtnVesselDetails_depart[0]['pilot_name'];
				$getUserNameQuery="SELECT u_name FROM users WHERE login_id = '$pilot_user_id' LIMIT 1";
				$rtnUserNameResult = $this->bm->dataSelectDb1($getUserNameQuery);
				
				$this->data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
				$this->data['pilot_name']=$rtnUserNameResult[0]['u_name'];
				$this->data['rtnVesselDetails_depart']=$rtnVesselDetails_depart;						
					
			}else if($activity_for=="cancel"){
				//igm start
				$sql_Cancel_info="SELECT Name_of_Master,Deck_cargo FROM igm_masters WHERE Import_Rotation_No='$ddl_imp_rot_no'";
				$sql_Cancel_info_array=$this->bm->dataSelectDb1($sql_Cancel_info);
				//igm end
			
				
				$sql_show_current_data="SELECT users.u_name AS pilot_name,pilot_on_board,pilot_off_board,DATE(pilot_off_board) AS sign_cancel,cancel_from,cancel_to,cancel_at,remarks
				FROM doc_vsl_cancel 
				INNER JOIN users ON users.login_id = doc_vsl_cancel.pilot_name 
				WHERE vvd_gkey='$getVvdGkey'";
				
				$rslt_show_current_data=$this->bm->dataSelectDb1($sql_show_current_data);
			
				//inserted data end
				
				//get n4 data - start
				$sql_shifting_two="SELECT vsl_vessels.name,sparcsn4.vsl_vessel_visit_details.vvd_gkey,vsl_vessels.name as Vessel_Name,sparcsn4.vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
				vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN sparcsn4.vsl_vessel_classes ON sparcsn4.vsl_vessel_classes.gkey=sparcsn4.vsl_vessels.vesclass_gkey
				INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.vsl_vessels.owner_gkey
				WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no' ORDER BY vsl_vessel_visit_details.vvd_gkey DESC LIMIT 1";
				
				$rtnVesselDetails_n4=$this->bm->dataSelect($sql_shifting_two);

				//get n4 data - end
				
				$pilot_user_id = $rslt_show_current_data[0]['pilot_name'];
				$getUserNameQuery="SELECT u_name FROM users WHERE login_id = '$pilot_user_id' LIMIT 1";
				$rtnUserNameResult = $this->bm->dataSelectDb1($getUserNameQuery);
				$this->data['pilot_name']=$rtnUserNameResult[0]['u_name'];
				$this->data['rtnVesselDetails_igm']=$sql_Cancel_info_array;
				$this->data['rslt_show_current_data']=$rslt_show_current_data;
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
			}else{
				
			}

			
			
			$this->data['activity_for']=$activity_for;
			$html=$this->load->view('pilotageCertificateReport_TosApp',$this->data, true);
			$stylesheet = file_get_contents('resources/styles/test.css'); // external css
			$pdf->useSubstitutions = true; // optional - just as an example
			$pdf->setAutoTopMargin = false;	
			$pdf->setAutoBottomMargin = false;		
			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);
			$pdf->Output($pdfFilePath, "I"); // For Show Pdf				
		}
		$this->load->view('jsAssets');							
	}	


	function shiftingListOfVessel()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$rotation=trim(str_replace("_","/",$this->uri->segment(3)));
			$vvd_gkey=trim($this->uri->segment(4));
			$vessel_name=trim(str_replace("%20"," ",$this->uri->segment(5)));
			$agent=trim(str_replace("%20"," ",$this->uri->segment(6)));
			$msgStatus=trim($this->uri->segment(7));
			$msg = "";
			
			if($msgStatus=="1"){
				$msg = "<b><font color='blue'>Data Updated Succesfully</font></b>";
			} else if($msgStatus=="0"){
				$msg = "<b><font color='blue'>Failed to Update Data</font></b>";
			} else {
				$msg = "";
			}
			
			$str="SELECT id,pilot_name AS pilot_login_id,pilot_on_board,pilot_off_board,shift_frm,shift_to,mooring_frm_time,
				mooring_to_time,vvd_gkey,
				(SELECT u_name FROM users WHERE users.login_id=pilot_name) AS pilot_name 
				FROM doc_vsl_shift WHERE vvd_gkey='$vvd_gkey'";
			$shiftingList = $this->bm->dataSelectDB1($str);
			$data['shiftingList']=$shiftingList;			
			
			$frmType="";
			$data['frmType']=$frmType;
			$data['rotation']=$rotation;
			$data['vvd_gkey']=$vvd_gkey;
			$data['vessel_name']=$vessel_name;
			$data['agent']=$agent;
			$data['msg']=$msg;
			$data['title']="Shifting List of Vessel";
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('shiftingList',$data);
			$this->load->view('jsAssetsList');
		}
	}



	function editShiftingInformation()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$shifting_id=$this->input->post('shifting_id');
			$ddl_imp_rot_no=$this->input->post('rotation');
			$vvdGkey=$this->input->post('vvd_gkey');
			$agent=$this->input->post('agent');
			
			$data['rotation']=$ddl_imp_rot_no;			
			$data['shift_rotation']=$ddl_imp_rot_no;			
			$data['chk_igm_id']="";
			
			$query_igm="SELECT id as igm_mst_id,Vessel_Name,Name_of_Master,Deck_cargo,Port_of_Destination,flag
						FROM igm_masters 
						WHERE Import_Rotation_No='$ddl_imp_rot_no'";			
			$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query_igm);
			$data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
			
			$igm_mst_id = "";
			$Vessel_Name = "";
			$Name_of_Master = "";
			$Deck_cargo = "";
			$Port_of_Destination = "";
			for($vdigm=0;$vdigm<count($rtnVesselDetails_igm);$vdigm++)
				{
					$igm_mst_id=$rtnVesselDetails_igm[$vdigm]['igm_mst_id'];
					$Vessel_Name=$rtnVesselDetails_igm[$vdigm]['Vessel_Name'];
					$Name_of_Master=$rtnVesselDetails_igm[$vdigm]['Name_of_Master'];
					$Deck_cargo=$rtnVesselDetails_igm[$vdigm]['Deck_cargo'];
					$Port_of_Destination=$rtnVesselDetails_igm[$vdigm]['Port_of_Destination'];
				}
			$data['igm_mst_id']=$igm_mst_id;
			$data['Vessel_Name']=$Vessel_Name;
			$data['Name_of_Master']=$Name_of_Master;
			$data['Deck_cargo']=$Deck_cargo;
			$data['Port_of_Destination']=$Port_of_Destination;
			
			$query_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,
						vsl_vessel_classes.gross_registered_ton,vsl_vessel_classes.net_registered_ton,
						r.id AS owner_id,r.name AS owner_name,Y.name AS localagent,
						ref_country.cntry_name as flag,vsl_vessel_classes.beam_cm,vsl_vessels.name as vname_navis
						FROM vsl_vessels
						INNER JOIN vsl_vessel_visit_details ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
						INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
						INNER JOIN  ( ref_bizunit_scoped r  
						LEFT JOIN ( ref_agent_representation X  
						LEFT JOIN ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey )               
						ON r.gkey=X.bzu_gkey)  ON r.gkey = vsl_vessel_visit_details.bizu_gkey
						INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
						WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";						
			$rtnVesselDetails_n4 = $this->bm->dataSelect($query_n4);
			$data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
			
			$vname_navis = "";
			$vvd_gkey = "";
			$radio_call_sign = "";
			$cntry_name = "";
			$gross_registered_ton = "";
			$net_registered_ton = "";
			$loa_cm = "";
			$owner_name = "";
			$localagent = "";
			$beam_cm = "";
			for($vdnavis=0;$vdnavis<count($rtnVesselDetails_n4);$vdnavis++)
				{
					$vname_navis=$rtnVesselDetails_n4[$vdnavis]['VNAME_NAVIS'];
					$vvd_gkey=$rtnVesselDetails_n4[$vdnavis]['VVD_GKEY'];
					$radio_call_sign=$rtnVesselDetails_n4[$vdnavis]['RADIO_CALL_SIGN'];
					$cntry_name=$rtnVesselDetails_n4[$vdnavis]['FLAG'];
					$gross_registered_ton=$rtnVesselDetails_n4[$vdnavis]['GROSS_REGISTERED_TON'];
					$net_registered_ton=$rtnVesselDetails_n4[$vdnavis]['NET_REGISTERED_TON'];
					$loa_cm=$rtnVesselDetails_n4[$vdnavis]['LOA_CM'];
					$owner_name=$rtnVesselDetails_n4[$vdnavis]['OWNER_NAME'];
					$localagent=$rtnVesselDetails_n4[$vdnavis]['LOCALAGENT'];
					$beam_cm=$rtnVesselDetails_n4[$vdnavis]['BEAM_CM'];
				}
			$data['vname_navis']=$vname_navis;
			$data['vvd_gkey']=$vvd_gkey;
			$data['radio_call_sign']=$radio_call_sign;
			$data['cntry_name']=$cntry_name;
			$data['gross_registered_ton']=$gross_registered_ton;
			$data['net_registered_ton']=$net_registered_ton;
			$data['loa_cm']=$loa_cm;
			$data['owner_name']=$owner_name;
			$data['localagent']=$localagent;
			$data['beam_cm']=$beam_cm;
			
			$data['vvd_gkey']=$vvdGkey;
			
			$query_pilot_list="SELECT u_name,login_id FROM users WHERE users.login_id IN (
							'p239001','p239002','p239003','p239004','p239005','p282','p298','p326','p368','p427',
							'p456','p497','p501','p505','p510','p516','p546','p549','p239007')";
			$pilot_list = $this->bm->dataSelectDB1($query_pilot_list);
			$data['pilot_list']=$pilot_list;
			
			$query_doc_vsl_info="SELECT * FROM doc_vsl_info WHERE rotation='$ddl_imp_rot_no' AND vvd_gkey='$vvdGkey'";
			$rtn_doc_vsl_info = $this->bm->dataSelectDB1($query_doc_vsl_info);
			$data['rtn_doc_vsl_info']=$rtn_doc_vsl_info ;
			
			$vsl_name_doc_vsl_info = "";
			$master_name_doc_vsl_info = "";
			$channel_doc_vsl_info = "";
			$flag_doc_vsl_info = "";
			$grt_doc_vsl_info = "";
			$nrt_doc_vsl_info = "";
			$deck_cargo_doc_vsl_info = "";
			$loa_doc_vsl_info = "";
			$local_agent_doc_vsl_info = "";
			$last_port_doc_vsl_info = "";
			$next_port_doc_vsl_info = "";
			for($docVslInfo=0;$docVslInfo<count($rtn_doc_vsl_info);$docVslInfo++)
				{
					$vsl_name_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['vsl_name'];
					$master_name_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['master_name'];
					$channel_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['channel'];
					$flag_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['flag'];
					$grt_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['grt'];
					$nrt_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['nrt'];
					$deck_cargo_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['deck_cargo'];
					$loa_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['loa'];
					$local_agent_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['local_agent'];
					$last_port_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['last_port'];
					$next_port_doc_vsl_info=$rtn_doc_vsl_info[$docVslInfo]['next_port'];
				}
				
			if($vsl_name_doc_vsl_info==""){
				$Vessel_Name = $Vessel_Name;
			} else {
				$Vessel_Name = $vsl_name_doc_vsl_info;
			}
			
			// if($Vessel_Name==""){
				// $Vessel_Name = $vsl_name_doc_vsl_info;
			// }
			if($cntry_name==""){
				$cntry_name = $flag_doc_vsl_info;
			}
			if($Name_of_Master==""){
				$Name_of_Master = $master_name_doc_vsl_info;
			}
			if($gross_registered_ton==""){
				$gross_registered_ton = $grt_doc_vsl_info;
			}
			if($net_registered_ton==""){
				$net_registered_ton = $nrt_doc_vsl_info;
			}
			if($Deck_cargo==""){
				$Deck_cargo = $deck_cargo_doc_vsl_info;
			}
			if($loa_cm==""){
				$loa_cm = $loa_doc_vsl_info;
			}
			if($localagent==""){
				$localagent = $local_agent_doc_vsl_info;
			}			
			
			$sql_show_current_data = "SELECT doc_vsl_shift.pilot_name as pilot_login, 
			(SELECT u_name FROM users WHERE users.login_id=pilot_name) AS pilot_name,
			pilot_on_board,pilot_off_board,shift_frm,shift_to,mooring_frm_time,mooring_to_time,tug_name,assit_frm,
			assit_to,shift_dt,DATE(pilot_on_board) as sign_shift,aditional_tug+1 as aditional_tug,photo_base_64,draught,
			is_main_engine_ok,is_acnchors_ok,is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,
			is_complying_soal_convention,is_night,is_holiday 
			FROM doc_vsl_shift 
			WHERE id='$shifting_id'";		
			$rslt_show_current_data=$this->bm->dataSelectDb1($sql_show_current_data);
			$data['rslt_show_current_data']=$rslt_show_current_data;
			
			$crnt_pilot_name = "";
			$pilot_login = "";
			$crnt_pilot_on_board = "";
			$crnt_pilot_off_board = "";
			$crnt_shift_frm = "";
			$crnt_shift_to = "";
			$crnt_mooring_frm_time = "";
			$crnt_mooring_to_time = "";
			$crnt_shift_dt = "";
			$crnt_tug_name = "";
			$crnt_assit_frm = "";
			$crnt_assit_to = "";
			$crnt_shift_dt = "";
			$is_main_engine_ok = "";
			$is_acnchors_ok = "";
			$is_rudder_indicator_ok = "";
			$is_rpm_indicator_ok = "";
			$is_bow_therster_available = "";
			$is_complying_soal_convention = "";
			$is_night = "";
			$is_holiday = "";
			$draught = "";
			for($crntdata=0;$crntdata<count($rslt_show_current_data);$crntdata++)
				{
					$crnt_pilot_name=$rslt_show_current_data[$crntdata]['pilot_name'];
					$pilot_login=$rslt_show_current_data[$crntdata]['pilot_login'];
					$crnt_pilot_on_board=$rslt_show_current_data[$crntdata]['pilot_on_board'];
					$crnt_pilot_off_board=$rslt_show_current_data[$crntdata]['pilot_off_board'];
					$crnt_shift_frm=$rslt_show_current_data[$crntdata]['shift_frm'];
					$crnt_shift_to=$rslt_show_current_data[$crntdata]['shift_to'];
					$crnt_mooring_frm_time=$rslt_show_current_data[$crntdata]['mooring_frm_time'];
					$crnt_mooring_to_time=$rslt_show_current_data[$crntdata]['mooring_to_time'];
					$crnt_shift_dt=$rslt_show_current_data[$crntdata]['shift_dt'];
					$crnt_tug_name=$rslt_show_current_data[$crntdata]['tug_name'];
					$crnt_assit_frm=$rslt_show_current_data[$crntdata]['assit_frm'];
					$crnt_assit_to=$rslt_show_current_data[$crntdata]['assit_to'];
					$draught=$rslt_show_current_data[$crntdata]['draught'];
					$is_main_engine_ok=$rslt_show_current_data[$crntdata]['is_main_engine_ok'];
					$is_acnchors_ok=$rslt_show_current_data[$crntdata]['is_acnchors_ok'];
					$is_rudder_indicator_ok=$rslt_show_current_data[$crntdata]['is_rudder_indicator_ok'];
					$is_rpm_indicator_ok=$rslt_show_current_data[$crntdata]['is_rpm_indicator_ok'];
					$is_bow_therster_available=$rslt_show_current_data[$crntdata]['is_bow_therster_available'];
					$is_complying_soal_convention=$rslt_show_current_data[$crntdata]['is_complying_soal_convention'];
					$is_night=$rslt_show_current_data[$crntdata]['is_night'];
					$is_holiday=$rslt_show_current_data[$crntdata]['is_holiday'];
				}
			$data['crnt_pilot_name']=$crnt_pilot_name;
			$data['pilot_login']=$pilot_login;
			$data['crnt_pilot_on_board']=$crnt_pilot_on_board;
			$data['crnt_pilot_off_board']=$crnt_pilot_off_board;
			$data['crnt_shift_frm']=$crnt_shift_frm;
			$data['crnt_shift_to']=$crnt_shift_to;
			$data['crnt_mooring_frm_time']=$crnt_mooring_frm_time;
			$data['crnt_mooring_to_time']=$crnt_mooring_to_time;
			$data['crnt_shift_dt']=$crnt_shift_dt;
			$data['crnt_tug_name']=$crnt_tug_name;
			$data['crnt_assit_frm']=$crnt_assit_frm;
			$data['crnt_assit_to']=$crnt_assit_to;
			$data['draught']=$draught;
			$data['is_main_engine_ok']=$is_main_engine_ok;
			$data['is_acnchors_ok']=$is_acnchors_ok;
			$data['is_rudder_indicator_ok']=$is_rudder_indicator_ok;
			$data['is_rpm_indicator_ok']=$is_rpm_indicator_ok;
			$data['is_bow_therster_available']=$is_bow_therster_available;
			$data['is_complying_soal_convention']=$is_complying_soal_convention;
			$data['is_night']=$is_night;
			$data['is_holiday']=$is_holiday;
			
			$data['Vessel_Name']=$Vessel_Name;
			$data['Name_of_Master']=$Name_of_Master;
			$data['Deck_cargo']=$Deck_cargo;
			$data['cntry_name']=$cntry_name;
			$data['gross_registered_ton']=$gross_registered_ton;
			$data['net_registered_ton']=$net_registered_ton;
			$data['loa_cm']=$loa_cm;
			$data['localagent']=$localagent;
			$data['last_port_doc_vsl_info']=$last_port_doc_vsl_info;
			$data['next_port_doc_vsl_info']=$next_port_doc_vsl_info;
			
			$data['shifting_id']=$shifting_id;
			$data['agent']=$agent;
			
			$data['title'] = "PILOTAGE CERTIFICATE FOR SHIFTING";
				
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('shiftingUpdateForm',$data);
			$this->load->view('jsAssets');
		}
	}


	function shifting_update()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$login_id = $this->session->userdata('login_id');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$shift_id=$this->input->post('shift_id');	//	doc_vsl_info	
			$agent=$this->input->post('agent');	//	doc_vsl_info	
			$shift_rotation=$this->input->post('shift_rotation');	//	doc_vsl_info	
			$shift_igm_id=$this->input->post('shift_igm_id');
			$shift_vvd_gkey=$this->input->post('shift_vvd_gkey');			
			$shift_name_of_pilot=$this->input->post('shift_name_of_pilot');
			$shift_boarded_at=$this->input->post('shift_boarded_at');
			$shift_left_at=$this->input->post('shift_left_at');			
			$shift_shifted_from=$this->input->post('shift_shifted_from');		
			$shift_shifted_to=$this->input->post('shift_shifted_to');			
			$shift_mooring_unmooring_from=$this->input->post('shift_mooring_unmooring_from');
			$shift_mooring_unmooring_to=$this->input->post('shift_mooring_unmooring_to');		
			$shift_mooring_unmooring_date=$this->input->post('shift_mooring_unmooring_date');			
			$shift_cpa_tug=$this->input->post('shift_cpa_tug');
			$shift_assistance_from=$this->input->post('shift_assistance_from');		
			$shift_assistance_to=$this->input->post('shift_assistance_to');
			$shift_assistance_date=$this->input->post('shift_assistance_date');//
			
			//...
			$shift_vsl_name=$this->input->post('shift_vsl_name');//	doc_vsl_info
			$shift_cal_sign=$this->input->post('shift_cal_sign');
			$shift_vsl_flag=$this->input->post('shift_vsl_flag');//doc_vsl_info
			$shift_master_name=$this->input->post('shift_master_name');//doc_vsl_info
			$shift_grt=$this->input->post('shift_grt');//doc_vsl_info
			$shift_nrt=$this->input->post('shift_nrt');//doc_vsl_info
			$shift_deck_cargo=$this->input->post('shift_deck_cargo');//doc_vsl_info
			$shift_loa=$this->input->post('shift_loa');//doc_vsl_info
			$shift_max=$this->input->post('shift_max');//doc_vsl_shift
			$shift_address_of_owners=$this->input->post('shift_address_of_owners');
			$localAgent=$this->input->post('localAgent');//doc_vsl_info
			$is_main_engine_ok=$this->input->post('is_main_engine_ok'); //doc_vsl_shift
			$is_acnchors_ok=$this->input->post('is_acnchors_ok'); //doc_vsl_shift
			$is_rudder_indicator_ok=$this->input->post('is_rudder_indicator_ok');//doc_vsl_shift
			$is_rpm_indicator_ok=$this->input->post('is_rpm_indicator_ok');//doc_vsl_shift
			$is_bow_therster_available=$this->input->post('is_bow_therster_available');//doc_vsl_shift
			$is_complying_soal_convention=$this->input->post('is_complying_soal_convention');//doc_vsl_shift
			$is_night=$this->input->post('is_night');//doc_vsl_shift
			$is_holiday=$this->input->post('is_holiday');//doc_vsl_shift
			$shift_no_of_good_mooring=$this->input->post('shift_no_of_good_mooring');
			$shift_aft=$this->input->post('shift_aft');
			$shift_stern_power=$this->input->post('shift_stern_power');
			$shift_immediately=$this->input->post('shift_immediately');			
			
			$insert_update_msg="";
			$updateStatus="";
						
			//update - doc_vsl_shift starts...
			$sql_shifting_update="UPDATE doc_vsl_shift
			SET vvd_gkey='$shift_vvd_gkey',pilot_name='$shift_name_of_pilot',pilot_on_board='$shift_boarded_at',
			pilot_off_board='$shift_left_at',shift_frm='$shift_shifted_from',shift_to='$shift_shifted_to',
			mooring_frm_time='$shift_mooring_unmooring_from',mooring_to_time='$shift_mooring_unmooring_to',
			tug_name='$shift_cpa_tug',assit_frm='$shift_assistance_from',assit_to='$shift_assistance_to',
			shift_dt='$shift_mooring_unmooring_date',draught='$shift_max',is_main_engine_ok='$is_main_engine_ok',
			is_acnchors_ok='$is_acnchors_ok',is_rudder_indicator_ok='$is_rudder_indicator_ok',
			is_rpm_indicator_ok='$is_rpm_indicator_ok',is_bow_therster_available='$is_bow_therster_available',
			is_complying_soal_convention='$is_complying_soal_convention',is_night='$is_night',is_holiday='$is_holiday'
			WHERE id='$shift_id'";				
			$rslt_shifting_update=$this->bm->dataUpdateDB1($sql_shifting_update);			
			if($rslt_shifting_update==1){
				$updateStatus="1";
			} else {
				$updateStatus="0";
			}
				
			//update - doc_vsl_shift ends.....
			
			// update - doc_vsl_inft starts...			
			$searchVvvgkeyInDocVslInfo="Select id as rtnValue from doc_vsl_info 
										where rotation='$shift_rotation' AND vvd_gkey='$shift_vvd_gkey'";
			$docVslInfoId=$this->bm->dataReturnDb1($searchVvvgkeyInDocVslInfo);
			
			if($docVslInfoId!=""){
				$strUpdateDocVslInfo="UPDATE doc_vsl_info SET deck_cargo='$shift_deck_cargo' WHERE id='$docVslInfoId'";
				$updateDocVslInfoStat = $this->bm->dataUpdateDB1($strUpdateDocVslInfo);
			} else {
				$strInsertIntoDocVslInfo = "insert into doc_vsl_info(vvd_gkey,rotation,vsl_name,master_name,flag,grt,nrt,
													deck_cargo,loa,local_agent,entry_by,entry_time,entry_ip)
									values('$shift_vvd_gkey','$shift_rotation','$shift_vsl_name','$shift_master_name','$shift_vsl_flag',
									'$shift_grt','$shift_nrt','$shift_deck_cargo','$shift_loa','$localAgent','$login_id',NOW(),'$ipaddr')";

				$insertRsltDocVslInfo = $this->bm->dataInsertDB1($strInsertIntoDocVslInfo);
			}
			// update - doc_vsl_inft ends...
			
			redirect('report/shiftingListOfVessel/'.str_replace("/","_",$shift_rotation).'/'.$shift_vvd_gkey.'/'.$shift_vsl_name.'/'.$agent.'/'.$updateStatus);			
		}
	}

	function saveArrivalReportVesselandPilotageCertificateInfo()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$login_id = $this->session->userdata('login_id');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			
			$igmId=$this->input->post('igmId');
			$vvdGkey=$this->input->post('vvdGkey');
			$pilotName=$this->input->post('pilotName');
			$boardedTime=$this->input->post('boardedTime');	
			$leftTime=$this->input->post('leftTime');	
			$pilotageFrom=$this->input->post('pilotageFrom');	
			$pilotageTo=$this->input->post('pilotageTo');	
			$mooringTimeFrm=$this->input->post('mooringTimeFrm');	
			$mooringTimeTo=$this->input->post('mooringTimeTo');	
			$cpaTugName=$this->input->post('cpaTugName');	
			$cpaTugAssisFrm=$this->input->post('cpaTugAssisFrm');	
			$cpaTugAssisTo=$this->input->post('cpaTugAssisTo');	
			$arrivalOuterAnchorageDate=$this->input->post('arrivalOuterAnchorageDate');
			$arrivalDate=$this->input->post('arrivalDate');
			$vesselName=$this->input->post('vesselName');
			$masterName=$this->input->post('masterName');
			$flag=$this->input->post('flag');
			$grt=$this->input->post('grt');
			$nrt=$this->input->post('nrt');
			$loa=$this->input->post('loa');
			$localAgent=$this->input->post('localAgent');
			
			$fwDraftMax=$this->input->post('fwDraftMax'); //??	
			$motherVesselName=$this->input->post('motherVesselName'); //??	
			$anchoaragePortLimit=$this->input->post('anchoaragePortLimit');	 //??
			$dangerCargo=$this->input->post('dangerCargo');	//??
			
			//...
			$deckCargo=$this->input->post('deckCargo');	//doc_vsl_info
			$maxFWdraught=$this->input->post('maxFWdraught'); //doc_vsl_arrival	
			$crewNumber=$this->input->post('crewNumber'); //??	
			$ownerInfo=$this->input->post('ownerInfo');	 //??	
			$lastPort=$this->input->post('lastPort');	//doc_vsl_info	
			$nextPort=$this->input->post('nextPort'); //doc_vsl_info
			$is_main_engine_ok=$this->input->post('is_main_engine_ok'); //doc_vsl_arrival
			$is_acnchors_ok=$this->input->post('is_acnchors_ok'); //doc_vsl_arrival
			$is_rudder_indicator_ok=$this->input->post('is_rudder_indicator_ok'); //doc_vsl_arrival
			$is_rpm_indicator_ok=$this->input->post('is_rpm_indicator_ok'); //doc_vsl_arrival
			$is_bow_therster_available=$this->input->post('is_bow_therster_available'); //doc_vsl_arrival
			$is_complying_soal_convention=$this->input->post('is_complying_soal_convention'); //doc_vsl_arrival
			$is_night=$this->input->post('is_night'); //doc_vsl_arrival
			$is_holiday=$this->input->post('is_holiday'); //doc_vsl_arrival
			$nosGoodMooringLinesFord=$this->input->post('nosGoodMooringLinesFord'); //??
			$nosGoodMooringLinesAFT=$this->input->post('nosGoodMooringLinesAFT'); //??
			$sternPowerAvailable=$this->input->post('sternPowerAvailable'); //??
			$sternImmediately=$this->input->post('sternImmediately'); //??
			$arrivalRemarks=$this->input->post('arrivalRemarks'); //doc_vsl_arrival
			//...
			
			$ddl_imp_rot_no=$this->input->post('rotation');	
			$data['rotation']=$ddl_imp_rot_no;
						
			$findQuery="Select igm_id as rtnValue from doc_vsl_arrival where vvd_gkey='$vvdGkey'";
			$find_IGM=$this->bm->dataReturnDb1($findQuery);
		
			if($find_IGM!="")
			{
				$strUpdate="UPDATE doc_vsl_arrival SET pilot_name='$pilotName', pilot_on_board='$boardedTime',pilot_off_board='$leftTime',
						pilot_frm='$pilotageFrom', pilot_to='$pilotageTo', mooring_frm_time='$mooringTimeFrm', 
						mooring_to_time='$mooringTimeTo', tug_name='$cpaTugName', assit_frm='$cpaTugAssisFrm', assit_to='$cpaTugAssisTo',
						draught='$maxFWdraught',remarks='$arrivalRemarks',
						oa_dt='$arrivalOuterAnchorageDate', ata='$arrivalDate',
						is_main_engine_ok='$is_main_engine_ok',is_acnchors_ok='$is_acnchors_ok',
						is_rudder_indicator_ok='$is_rudder_indicator_ok',is_rpm_indicator_ok='$is_rpm_indicator_ok',
						is_bow_therster_available='$is_bow_therster_available',
						is_complying_soal_convention='$is_complying_soal_convention',is_night='$is_night',is_holiday='$is_holiday'
						WHERE vvd_gkey='$vvdGkey'";
				$updateStat = $this->bm->dataUpdateDB1($strUpdate);
				
				if($updateStat==1){
					$data['msg']="<font color=green>Information Updated Successfully</font>";
				}
				else{
					$data['msg']="<font color=red>Information not Updated.</font>";
				}					       
			}
			else
			{
				$str = "insert into doc_vsl_arrival(igm_id, vvd_gkey, pilot_name, pilot_on_board, pilot_off_board, pilot_frm,
					pilot_to, mooring_frm_time, mooring_to_time, tug_name, assit_frm, assit_to, oa_dt, ata,draught,remarks,
					is_main_engine_ok,is_acnchors_ok,is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,
					is_complying_soal_convention,is_night,is_holiday)
					values('$igmId','$vvdGkey','$pilotName','$boardedTime','$leftTime','$pilotageFrom','$pilotageTo','$mooringTimeFrm',
						'$mooringTimeTo','$cpaTugName','$cpaTugAssisFrm','$cpaTugAssisTo','$arrivalOuterAnchorageDate','$arrivalDate',
						'$maxFWdraught','$arrivalRemarks',
						'$is_main_engine_ok','$is_acnchors_ok','$is_rudder_indicator_ok','$is_rpm_indicator_ok',
						'$is_bow_therster_available','$is_complying_soal_convention','$is_night','$is_holiday')";

				$stat = $this->bm->dataInsertDB1($str);
				if($stat==1)
				{
					$data['msg']="<font color=green>Information Saved Successfully</font>";
				}
				else
					$data['msg']="<font color=red>Information not Saved.</font>";
				
			}
			
		 	$searchVvvgkeyInDocVslInfo="Select id from doc_vsl_info 
								where rotation='$ddl_imp_rot_no' AND vvd_gkey='$vvdGkey'";
			$docVslInfoId=$this->bm->dataSelectDB1($searchVvvgkeyInDocVslInfo);
			
			if(count($docVslInfoId) > 0){
				
				$doc_vsl_info_id = "";
				for($infoid=0;$infoid<count($docVslInfoId);$infoid++)
				{
					$doc_vsl_info_id=$docVslInfoId[$infoid]['id'];
				}
				
				$strUpdateDocVslInfo="UPDATE doc_vsl_info SET deck_cargo='$deckCargo', last_port='$lastPort',next_port='$nextPort'
							WHERE id='$doc_vsl_info_id'";
				$updateDocVslInfoStat = $this->bm->dataUpdateDB1($strUpdateDocVslInfo);
				
			} else {
				$strInsertIntoDocVslInfo = "insert into doc_vsl_info(vvd_gkey,rotation,vsl_name,master_name,flag,grt,nrt,
				deck_cargo,loa,local_agent,last_port,next_port,entry_by,entry_time,entry_ip)
					values('$vvdGkey','$ddl_imp_rot_no','$vesselName','$masterName','$flag','$grt','$nrt','$deckCargo','$loa',
					'$localAgent','$lastPort','$nextPort','$login_id',NOW(),'$ipaddr')";

				$insertRsltDocVslInfo = $this->bm->dataInsertDB1($strInsertIntoDocVslInfo);
			}
			
			redirect('report/departureReportOfVessel/A/'.str_replace("/","_",$ddl_imp_rot_no));
		}
  	}
	/*PILOTAGE CERTIFICATE END*/




	// web - 2021-09-07 - intakhab
	//4/18/2023


		
		/* PANGAON CERTIFICATE*/

	function vesselListForPangaon()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$query="SELECT sparcsn4.vsl_vessel_visit_details.vvd_gkey,sparcsn4.vsl_vessels.name,sparcsn4.vsl_vessel_visit_details.ib_vyg,sparcsn4.vsl_vessel_visit_details.ob_vyg,
				LEFT(sparcsn4.argo_carrier_visit.phase,2) AS phase_num,SUBSTR(sparcsn4.argo_carrier_visit.phase,3) AS phase_str,
				sparcsn4.ref_bizunit_scoped.id AS agent
				FROM sparcsn4.argo_carrier_visit
				INNER JOIN sparcsn4.argo_visit_details ON sparcsn4.argo_visit_details.gkey=sparcsn4.argo_carrier_visit.cvcvd_gkey
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessel_visit_details.vvd_gkey=sparcsn4.argo_visit_details.gkey
				INNER JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.vsl_vessel_visit_details.bizu_gkey
				WHERE sparcsn4.argo_carrier_visit.phase IN ('20INBOUND','30ARRIVED','40WORKING') and sparcsn4.vsl_vessel_visit_details.ib_vyg like '%P%'
				ORDER BY sparcsn4.argo_carrier_visit.phase";
				
			$rtnVesselList = $this->bm->dataSelect($query);
			$data['rtnVesselList']=$rtnVesselList;
				
			$data['title']="PANGAON VESSEL LIST WITH STATUS...";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('viewVesselStatusForPangaon',$data);
			$this->load->view('jsAssets');
		}
	}

	function viewVesselStatusPangaonSearchList()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$rot_num=trim($this->input->post('rot_num'));
			$query="SELECT sparcsn4.vsl_vessel_visit_details.vvd_gkey,sparcsn4.vsl_vessels.name,sparcsn4.vsl_vessel_visit_details.ib_vyg,sparcsn4.vsl_vessel_visit_details.ob_vyg,
				LEFT(sparcsn4.argo_carrier_visit.phase,2) AS phase_num,SUBSTR(sparcsn4.argo_carrier_visit.phase,3) AS phase_str,
				sparcsn4.ref_bizunit_scoped.id AS agent
				FROM sparcsn4.argo_carrier_visit
				INNER JOIN sparcsn4.argo_visit_details ON sparcsn4.argo_visit_details.gkey=sparcsn4.argo_carrier_visit.cvcvd_gkey
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessel_visit_details.vvd_gkey=sparcsn4.argo_visit_details.gkey
				INNER JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.vsl_vessel_visit_details.bizu_gkey
				WHERE 
				sparcsn4.vsl_vessel_visit_details.ib_vyg='$rot_num' and sparcsn4.vsl_vessel_visit_details.ib_vyg like '%P%'
				ORDER BY sparcsn4.argo_carrier_visit.phase";
				
			$rtnVesselList = $this->bm->dataSelect($query);
			$data['rtnVesselList']=$rtnVesselList;
				
			$data['title']="PANGAON VESSEL LIST WITH STATUS...";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('viewVesselStatusForPangaon',$data);
			$this->load->view('jsAssets');
		}
	}

	function departureReportOfVesselPangaon()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$from_stat=$this->uri->segment(3);
			$data['chk_igm_id']="";
			$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(4));
			$query_igm="SELECT id as igm_mst_id,Vessel_Name,Name_of_Master,Deck_cargo,Port_of_Destination,flag FROM igm_masters 
					WHERE Import_Rotation_No='$ddl_imp_rot_no'";
			$rtnVesselDetails_igm = $this->bm->dataSelectDb1($query_igm);
			$data['rtnVesselDetails_igm']=$rtnVesselDetails_igm;
			
			$query_n4="SELECT vsl_vessel_visit_details.vvd_gkey,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
						vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name as flag,
						vsl_vessel_classes.beam_cm
						FROM sparcsn4.vsl_vessels
						INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
						INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
						INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
						INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
						WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
						
			$rtnVesselDetails_n4 = $this->bm->dataSelect($query_n4);
			$data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
			
			// $this->load->view('header5');
			if($from_stat=="A")
			{
				$this->load->view('arrivalReportVesselandPilotageCertificateView',$data);
			}
			else if($from_stat=="S")
			{
				
				$this->load->view('shiftingForm',$data);
			}
			else if($from_stat=="D")
			{
				$chk_depart_query = "SELECT igm_id AS igm_id  FROM igm_masters
									INNER JOIN doc_vsl_depart ON  igm_masters.id=doc_vsl_depart.igm_id
									WHERE Import_Rotation_No = '$ddl_imp_rot_no'";
				//echo $chk_depart_query;
				$chkDepart = $this->bm->dataSelectDb1($chk_depart_query);
				$igm_id=$chkDepart[0]['igm_id'];
				if($igm_id>0)
				{						
					$query_depart="SELECT igm_id,vvd_gkey,pilot_name,pilot_on_board,pilot_off_board,pilot_frm,pilot_to,mooring_frm_time,
									mooring_to_time,tug_name,assit_frm,assit_to,atd 
									FROM doc_vsl_depart
									WHERE igm_id=$igm_id";
					
					$rtnVesselDetails_depart = $this->bm->dataSelectDb1($query_depart);
					$getArraivalDt="select IFNULL(ata,'00:00:00') as ata from doc_vsl_arrival where igm_id=$igm_id";
					//echo $getArraivalDt;
					$rtnArrivalDt = $this->bm->dataSelectDb1($getArraivalDt);
					
					$data['rtnVesselDetails_depart']=$rtnVesselDetails_depart;
					$data['chk_igm_id']=$igm_id;
					$data['ata']=$rtnArrivalDt[0]['ata'];
				}
					$this->load->view('viewPilotageCertificateDeparture',$data);
			}
			else if($from_stat=="R")
			{
				
				
				//$ddl_imp_rot_no=str_replace("_","/",$this->uri->segment(4));;
				$this->load->library('m_pdf');
				// $pdf->use_kwt = true;
				$this->data['title']="Pilotage Certificate";
				$this->data['ddl_imp_rot_no']=$ddl_imp_rot_no;
				$pdfFilePath ="PilotageCertificate-".time()."-download.pdf";
				$pdf = $this->m_pdf->load();
				$pdf->SetWatermarkText('CPA CTMS',0.1);
				$pdf->showWatermarkText = true;	
				
				$igm_id_arraival=1;
				$igm_id_shift=1;
				$igm_id_depart=1;
				
				
				$query_n4="SELECT vsl_vessels.name as Vessel_Name,vsl_vessels.ves_captain as Name_of_Master, vsl_vessel_visit_details.vvd_gkey,vsl_vessels.radio_call_sign,vsl_vessel_classes.loa_cm,vsl_vessel_classes.gross_registered_ton,
							vsl_vessel_classes.net_registered_ton,ref_bizunit_scoped.name AS localagent,ref_country.cntry_name as flag,
							vsl_vessel_classes.beam_cm
							FROM sparcsn4.vsl_vessels
							INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
							INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
							INNER JOIN ref_bizunit_scoped  ON ref_bizunit_scoped.gkey=vsl_vessels.owner_gkey
							INNER JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
							WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
							
				$rtnVesselDetails_n4 = $this->bm->dataSelect($query_n4);
				$this->data['rtnVesselDetails_n4']=$rtnVesselDetails_n4;
				
				/*$query_depart="SELECT igm_id,vvd_gkey,pilot_name,pilot_on_board,pilot_off_board,pilot_frm,pilot_to,mooring_frm_time,
									mooring_to_time,tug_name,assit_frm,assit_to,atd,DATE(pilot_on_board) as sign_depart,aditional_tug+1 as aditional_tug 
									FROM doc_vsl_depart
									WHERE igm_id=$igm_id_depart";*/
									
										
				 $query_arraival="SELECT vsl_vessel_visit_details.vvd_gkey,flex_date01 as pilot_on_board,flex_date02 as pilot_off_board,
								start_work AS pilot_frm,end_work AS pilot_to, ata as mooring_frm_time,atd as mooring_to_time,
								start_work as assit_frm,end_work as assit_to,ata,atd,DATE(flex_date01) as sign_arraival
								FROM sparcsn4.vsl_vessel_visit_details
								INNER JOIN sparcsn4.argo_carrier_visit ON sparcsn4.argo_carrier_visit.cvcvd_gkey=sparcsn4.vsl_vessel_visit_details.vvd_gkey
								WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
								
													
					
				$rtn_vsl_arrival_info = $this->bm->dataSelect($query_arraival);
				$this->data['rtn_vsl_arrival_info']=$rtn_vsl_arrival_info;
				
				if($rtn_vsl_arrival_info[0]['pilot_on_board']=='NULL' or $rtn_vsl_arrival_info[0]['pilot_on_board']=='')
				{
					$igm_id_arraival=0;
				}
				
				
				
				 $query_depart="SELECT vsl_vessel_visit_details.vvd_gkey,flex_date03 as pilot_on_board,flex_date04 as pilot_off_board,
								start_work AS pilot_frm,end_work AS pilot_to, ata as mooring_frm_time,atd as mooring_to_time,
								start_work as assit_frm,end_work as assit_to,ata,atd,DATE(flex_date03) as sign_depart
								FROM sparcsn4.vsl_vessel_visit_details
								INNER JOIN sparcsn4.argo_carrier_visit ON sparcsn4.argo_carrier_visit.cvcvd_gkey=sparcsn4.vsl_vessel_visit_details.vvd_gkey
								WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";  				
							
					
				$rtnVesselDetails_depart = $this->bm->dataSelect($query_depart);
				$this->data['rtnVesselDetails_depart']=$rtnVesselDetails_depart;
				$this->data['chk_igm_id']=1;
				if($rtnVesselDetails_depart[0]['pilot_on_board']=='NULL' or $rtnVesselDetails_depart[0]['pilot_on_board']=='')
				{
					$igm_id_depart=0;
				}
				
				$query_shift="SELECT vsl_vessel_visit_details.vvd_gkey,flex_date05 as pilot_on_board,flex_date06 as pilot_off_board,
								start_work AS pilot_frm,end_work AS pilot_to, ata as mooring_frm_time,atd as mooring_to_time,
								start_work as assit_frm,end_work as assit_to,ata,atd,DATE(flex_date05) as sign_shift
								FROM sparcsn4.vsl_vessel_visit_details
								INNER JOIN sparcsn4.argo_carrier_visit ON sparcsn4.argo_carrier_visit.cvcvd_gkey=sparcsn4.vsl_vessel_visit_details.vvd_gkey
								WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
					
				$rslt_show_current_data = $this->bm->dataSelect($query_shift);
				$this->data['rslt_show_current_data']=$rslt_show_current_data;
				
				if($rslt_show_current_data[0]['pilot_on_board']=='NULL' or $rslt_show_current_data[0]['pilot_on_board']=='')
				{
					$igm_id_shift=0;
				}
				
				$getArraivalDt="SELECT ata
								FROM sparcsn4.vsl_vessel_visit_details
								INNER JOIN sparcsn4.argo_carrier_visit ON sparcsn4.argo_carrier_visit.cvcvd_gkey=sparcsn4.vsl_vessel_visit_details.vvd_gkey
								WHERE  vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
					//echo $getArraivalDt;
				$rtnArrivalDt = $this->bm->dataSelect($getArraivalDt);												
				$this->data['ata']=$rtnArrivalDt[0]['ata'];

				$this->data['igm_id_arraival']=$igm_id_arraival;
				$this->data['igm_id_shift']=$igm_id_shift;					
				$this->data['igm_id_depart']=$igm_id_depart;
				
				$html=$this->load->view('pilotageCertificatePangaonReport',$this->data, true);
				$stylesheet = file_get_contents('resources/styles/test.css'); // external css
				$pdf->useSubstitutions = true; // optional - just as an example
						
				// $pdf->AddPage('P', // L - landscape, P - portrait
				// 					'', '', '', '',
				// 					5, // margin_left
				// 					5, // margin right
				// 					5, // margin top
				// 					5, // margin bottom
				// 					5, // margin header
				// 					5); // margin footer
				// $pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
						
				$pdf->WriteHTML($stylesheet,1);
				$pdf->WriteHTML($html,2);
						//$pdf->WriteHTML($scriptSheet,3);
				$pdf->Output($pdfFilePath, "I"); // For Show Pdf
				
			}
			// $this->load->view('footer_1');
			
			//echo $ddl_imp_rot_no;
		}
	}
		
	
	function shifting_insert()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$login_id = $this->session->userdata('login_id');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$shift_rotation=$this->input->post('shift_rotation');	//	doc_vsl_info	
			$shift_igm_id=$this->input->post('shift_igm_id');
			$shift_vvd_gkey=$this->input->post('shift_vvd_gkey');			
			
			$shift_name_of_pilot=$this->input->post('shift_name_of_pilot');
			$shift_boarded_at=$this->input->post('shift_boarded_at');
			$shift_left_at=$this->input->post('shift_left_at');			
			$shift_shifted_from=$this->input->post('shift_shifted_from');		
			$shift_shifted_to=$this->input->post('shift_shifted_to');			
			$shift_mooring_unmooring_from=$this->input->post('shift_mooring_unmooring_from');
			$shift_mooring_unmooring_to=$this->input->post('shift_mooring_unmooring_to');		
			$shift_mooring_unmooring_date=$this->input->post('shift_mooring_unmooring_date');			
			$shift_cpa_tug=$this->input->post('shift_cpa_tug');
			$shift_assistance_from=$this->input->post('shift_assistance_from');		
			$shift_assistance_to=$this->input->post('shift_assistance_to');
			$shift_assistance_date=$this->input->post('shift_assistance_date');//
			
			//...
			$shift_vsl_name=$this->input->post('shift_vsl_name');//	doc_vsl_info
			$agent=$this->input->post('agent');//	doc_vsl_info
			$shift_cal_sign=$this->input->post('shift_cal_sign');
			$shift_vsl_flag=$this->input->post('shift_vsl_flag');//doc_vsl_info
			$shift_master_name=$this->input->post('shift_master_name');//doc_vsl_info
			$shift_grt=$this->input->post('shift_grt');//doc_vsl_info
			$shift_nrt=$this->input->post('shift_nrt');//doc_vsl_info
			$shift_deck_cargo=$this->input->post('shift_deck_cargo');//doc_vsl_info
			$shift_loa=$this->input->post('shift_loa');//doc_vsl_info
			$shift_max=$this->input->post('shift_max');//doc_vsl_shift
			$shift_address_of_owners=$this->input->post('shift_address_of_owners');
			$localAgent=$this->input->post('localAgent');//doc_vsl_info
			$is_main_engine_ok=$this->input->post('is_main_engine_ok'); //doc_vsl_shift
			$is_acnchors_ok=$this->input->post('is_acnchors_ok'); //doc_vsl_shift
			$is_rudder_indicator_ok=$this->input->post('is_rudder_indicator_ok');//doc_vsl_shift
			$is_rpm_indicator_ok=$this->input->post('is_rpm_indicator_ok');//doc_vsl_shift
			$is_bow_therster_available=$this->input->post('is_bow_therster_available');//doc_vsl_shift
			$is_complying_soal_convention=$this->input->post('is_complying_soal_convention');//doc_vsl_shift
			$is_night=$this->input->post('is_night');//doc_vsl_shift
			$is_holiday=$this->input->post('is_holiday');//doc_vsl_shift
			$shift_no_of_good_mooring=$this->input->post('shift_no_of_good_mooring');
			$shift_aft=$this->input->post('shift_aft');
			$shift_stern_power=$this->input->post('shift_stern_power');
			$shift_immediately=$this->input->post('shift_immediately');			
			
			//...
			//update - start
			$insert_update_msg="";
			
			$sql_cnt_show_current_data="SELECT COUNT(*) AS rtnValue FROM doc_vsl_shift 
			WHERE vvd_gkey='$shift_vvd_gkey' AND shift_frm='$shift_shifted_from' AND shift_to='$shift_shifted_to'";
			$cnt_show_current_data=$this->bm->dataReturnDb1($sql_cnt_show_current_data);
			
			if($cnt_show_current_data==0){
				$sql_shifting_insert="INSERT INTO doc_vsl_shift(igm_id,vvd_gkey,pilot_name,pilot_on_board,pilot_off_board,shift_frm,shift_to,mooring_frm_time,
				mooring_to_time,tug_name,assit_frm,assit_to,shift_dt,draught,is_main_engine_ok,is_acnchors_ok,is_rudder_indicator_ok,
				is_rpm_indicator_ok,is_bow_therster_available,is_complying_soal_convention,is_night,is_holiday)
				VALUES('$shift_igm_id','$shift_vvd_gkey','$shift_name_of_pilot','$shift_boarded_at','$shift_left_at',
				'$shift_shifted_from','$shift_shifted_to','$shift_mooring_unmooring_from','$shift_mooring_unmooring_to','$shift_cpa_tug',
				'$shift_assistance_from','$shift_assistance_to','$shift_mooring_unmooring_date','$shift_max','$is_main_engine_ok',
				'$is_acnchors_ok','$is_rudder_indicator_ok','$is_rpm_indicator_ok','$is_bow_therster_available',
				'$is_complying_soal_convention','$is_night','$is_holiday')";
				
				$rslt_shifting_insert=$this->bm->dataInsertDB1($sql_shifting_insert);
				
				if($rslt_shifting_insert==1){
					$insert_update_msg="Data successfully inserted";
					//insert - doc_vsl_info starts...
					$searchVvvgkeyInDocVslInfo="Select id as rtnValue from doc_vsl_info 
												where rotation='$shift_rotation' AND vvd_gkey='$shift_vvd_gkey'";
					$docVslInfoId=$this->bm->dataReturnDb1($searchVvvgkeyInDocVslInfo);
					
					if($docVslInfoId!=""){
						$strUpdateDocVslInfo="UPDATE doc_vsl_info SET deck_cargo='$shift_deck_cargo' WHERE id='$docVslInfoId'";
						$updateDocVslInfoStat = $this->bm->dataUpdateDB1($strUpdateDocVslInfo);
						$updateStatus = $this->bm->dataUpdateDB1($updateDocVslInfoStat);
					} else {
						$strInsertIntoDocVslInfo = "insert into doc_vsl_info(vvd_gkey,rotation,vsl_name,master_name,flag,grt,nrt,
															deck_cargo,loa,local_agent,entry_by,entry_time,entry_ip)
											values('$shift_vvd_gkey','$shift_rotation','$shift_vsl_name','$shift_master_name','$shift_vsl_flag',
											'$shift_grt','$shift_nrt','$shift_deck_cargo','$shift_loa','$localAgent','$login_id',NOW(),'$ipaddr')";

						$insertRsltDocVslInfo = $this->bm->dataInsertDB1($strInsertIntoDocVslInfo);
					}
					//insert - doc_vsl_info ends.....
				}
					
			} else {
				$insert_update_msg="Already added shifting data with same berth information";
			}
			
			redirect('report/shiftingListOfVessel/'.str_replace("/","_",$shift_rotation).'/'.$shift_vvd_gkey.'/'.$shift_vsl_name.'/'.$agent.'/1');	
			
			//redirect('report/departureReportOfVessel/S/'.str_replace("/","_",$shift_rotation));
			
		}
	}

	function departureOfVesselEntry()
	{		
		$login_id = $this->session->userdata('login_id');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		
		$d_igm_mst_id=trim($this->input->post('d_igm_mst_id'));//doc_vsl_depart
		$d_vvd_gkey=trim($this->input->post('d_vvd_gkey'));//doc_vsl_depart, doc_vsl_info
		$d_name_pilot=trim($this->input->post('d_name_pilot'));//doc_vsl_depart
		$d_board_at=trim($this->input->post('d_board_at'));//doc_vsl_depart
		$d_left_at=trim($this->input->post('d_left_at'));//doc_vsl_depart
		$d_pilotage_from=trim($this->input->post('d_pilotage_from'));//doc_vsl_depart
		$d_pilotage_to=trim($this->input->post('d_pilotage_to'));//doc_vsl_depart
		$d_time_unmoor_from=trim($this->input->post('d_time_unmoor_from'));//doc_vsl_depart
		$d_time_unmoor_to=trim($this->input->post('d_time_unmoor_to'));//doc_vsl_depart
		$d_cpa_tug=trim($this->input->post('d_cpa_tug'));//doc_vsl_depart
		$d_assist_from=trim($this->input->post('d_assist_from'));//doc_vsl_depart
		$d_assist_to=trim($this->input->post('d_assist_to'));//doc_vsl_depart
		$d_dt_of_depart=trim($this->input->post('d_dt_of_depart'));//doc_vsl_depart
		//d_time_unmoor_from
		$rotation=trim($this->input->post('rotation'));//doc_vsl_info
		$Vessel_Name=trim($this->input->post('d_vsl_name'));//doc_vsl_info
		$d_cal_sign=trim($this->input->post('d_cal_sign'));
		$cntry_name=trim($this->input->post('d_vsl_flag'));//doc_vsl_info - flag
		$Name_of_Master=trim($this->input->post('d_master_name'));//doc_vsl_info
		$gross_registered_ton=trim($this->input->post('d_grt'));//doc_vsl_info
		$net_registered_ton=trim($this->input->post('d_nrt'));//doc_vsl_info
		$Deck_cargo=trim($this->input->post('d_deck_cargo'));//doc_vsl_info		
		$loa_cm=trim($this->input->post('d_loa'));//doc_vsl_info
		$draught=trim($this->input->post('d_max_fw'));//doc_vsl_depart - draught
		$d_name_addr_owner=trim($this->input->post('d_name_addr_owner'));
		$d_loc_agent=trim($this->input->post('d_loc_agent'));//doc_vsl_info
		$left_dt=trim($this->input->post('left_dt')); // BOARDING LEFT
		$d_pilotage_dt=trim($this->input->post('d_pilotage_dt'));
		$d_dt_arraival=trim($this->input->post('d_dt_arraival'));
		$d_dt_hrs_berth=trim($this->input->post('d_dt_hrs_berth'));
		$d_dept_draft=trim($this->input->post('d_dept_draft'));
		$time_unmoor_dt=trim($this->input->post('time_unmoor_dt'));
		$d_assist_dt=trim($this->input->post('d_assist_dt'));
		$d_pc_no=trim($this->input->post('d_pc_no'));
		$d_pc_dt=trim($this->input->post('d_pc_dt'));
		$d_tons_of_crgo=trim($this->input->post('d_tons_of_crgo'));
		$is_main_engine_ok=trim($this->input->post('is_main_engine_ok'));//doc_vsl_depart
		$is_acnchors_ok=trim($this->input->post('is_acnchors_ok'));//doc_vsl_depart
		$is_rudder_indicator_ok=trim($this->input->post('is_rudder_indicator_ok'));//doc_vsl_depart
		$is_rpm_indicator_ok=trim($this->input->post('is_rpm_indicator_ok'));//doc_vsl_depart
		$is_bow_therster_available=trim($this->input->post('is_bow_therster_available'));//doc_vsl_depart
		$is_complying_soal_convention=trim($this->input->post('is_complying_soal_convention'));//doc_vsl_depart
		$is_night=trim($this->input->post('is_night'));//doc_vsl_depart
		$is_holiday=trim($this->input->post('is_holiday'));//doc_vsl_depart
		$d_no_good_mor_line=trim($this->input->post('d_no_good_mor_line'));
		$d_aft=trim($this->input->post('d_aft'));
		$d_st_power_avbl=trim($this->input->post('d_st_power_avbl'));
		$d_immediate=trim($this->input->post('d_immediate'));
		//
		
		if($d_name_pilot!="")
		{				
			$findQuery="Select igm_id as rtnValue from doc_vsl_depart where vvd_gkey='$d_vvd_gkey'";
			$find_IGM=$this->bm->dataReturnDb1($findQuery);
			
			if($find_IGM!="")
			{				
				$depart_query="UPDATE doc_vsl_depart
								SET pilot_name='$d_name_pilot',pilot_on_board='$d_board_at',
								pilot_off_board='$d_left_at',pilot_frm='$d_pilotage_from',pilot_to='$d_pilotage_to',
								mooring_frm_time='$d_time_unmoor_from',
								mooring_to_time='$d_time_unmoor_to',tug_name='$d_cpa_tug',assit_frm='$d_assist_from',
								assit_to='$d_assist_to',atd='$d_dt_of_depart',
								is_main_engine_ok='$is_main_engine_ok',is_acnchors_ok='$is_acnchors_ok',
								is_rudder_indicator_ok='$is_rudder_indicator_ok',is_rpm_indicator_ok='$is_rpm_indicator_ok',
								is_bow_therster_available='$is_bow_therster_available',
								is_complying_soal_convention='$is_complying_soal_convention',
								is_night='$is_night',is_holiday='$is_holiday',draught='$draught'
								WHERE vvd_gkey='$d_vvd_gkey'";
				$rslt_departure = $this->bm->dataUpdateDB1($depart_query);
				$data['msg']="<b><font color='green'>Successfully Updated.</font></b>";
			}
			else
			{
				$depart_query="INSERT INTO doc_vsl_depart(igm_id,vvd_gkey,pilot_name,pilot_on_board,
							pilot_off_board,pilot_frm,pilot_to,mooring_frm_time,
							mooring_to_time,tug_name,assit_frm,assit_to,atd,								is_main_engine_ok,is_rudder_indicator_ok,is_rpm_indicator_ok,is_bow_therster_available,
							is_complying_soal_convention,is_night,is_holiday,draught) 
							VALUES ('$d_igm_mst_id','$d_vvd_gkey','$d_name_pilot','$d_board_at','$d_left_at','$d_pilotage_from',
							'$d_pilotage_to','$d_time_unmoor_from','$d_time_unmoor_to','$d_cpa_tug','$d_assist_from','$d_assist_to',
							'$d_dt_of_depart',
							'$is_main_engine_ok','$is_rudder_indicator_ok','$is_rpm_indicator_ok','$is_bow_therster_available',
							'$is_complying_soal_convention','$is_night','$is_holiday','$draught')";
				$rslt_departure=$this->bm->dataInsertDB1($depart_query);
				
				$data['msg']="<b><font color='green'>Successfully Inserted.</font></b>";
			}
			
			
			$searchVvvgkeyInDocVslInfo="Select id as rtnValue from doc_vsl_info 
						where rotation='$rotation' AND vvd_gkey='$d_vvd_gkey'";
			$docVslInfoId=$this->bm->dataReturnDb1($searchVvvgkeyInDocVslInfo);
			
			if($docVslInfoId!=""){
				$strUpdateDocVslInfo="UPDATE doc_vsl_info SET deck_cargo='$Deck_cargo',vsl_name='$Vessel_Name',
										flag='$cntry_name',master_name='$Name_of_Master',grt='$gross_registered_ton',
										nrt='$net_registered_ton',loa='$loa_cm',local_agent='$d_loc_agent'
										WHERE id='$docVslInfoId'";
				$updateDocVslInfoStat = $this->bm->dataUpdateDB1($strUpdateDocVslInfo);
			} else {
				$strInsertIntoDocVslInfo = "insert into doc_vsl_info(vvd_gkey,rotation,vsl_name,master_name,flag,grt,nrt,
						deck_cargo,loa,local_agent,entry_by,entry_time,entry_ip)
					values('$d_vvd_gkey','$rotation','$Vessel_Name','$Name_of_Master','$cntry_name','$gross_registered_ton',
						'$net_registered_ton','$Deck_cargo','$loa_cm','$d_loc_agent','$login_id',NOW(),'$ipaddr')";

				$insertRsltDocVslInfo = $this->bm->dataInsertDB1($strInsertIntoDocVslInfo);
			}
							
		}
		else
		{
			$data['msg']="<b><font color='red'>Pilot Name Required.</font></b>";
		}		
		
		redirect('report/departureReportOfVessel/D/'.str_replace("/","_",$rotation));
	}
	
	/*PILOTAGE CERTIFICATE END*/
	
		/*C & F PANEL ALL ASSIGNMENT  */
	function cf_agent_assignment_Form()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="ALL ASSIGNMENT DETAILS FORM...";

					
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('cf_agent_assignment_Form',$data);
		$this->load->view('jsAssets');
		}	
	}
  
  	function cf_agent_assignment_ReportView()
	{
	  
		$fromdate=$this->input->post('fromdate');
		$login_id = $this->session->userdata('login_id');
		$n4_bizu_gkey = $this->session->userdata('n4_bizu_gkey');
		//$yard_no=$this->input->post('yard_no'); 
		//$block=$this->input->post('block'); 
		
		$data['fromdate']=$fromdate;
		$data['login_id']=$login_id;
		$data['n4_bizu_gkey']=$n4_bizu_gkey;
		//$data['yard_no']=$yard_no;
		//$data['block']=$block;
		
		//$data['type']=$type;
	   $cnfsql="SELECT u_name AS rtnValue FROM users WHERE login_id='$login_id'";
		$cnfName= $this->bm->dataReturnDb1($cnfsql);
		$data['cnfName']=$cnfName;
		$str="SELECT DISTINCT *,
			(CASE 
			WHEN delivery>=CONCAT('$fromdate',' 08:00:00') AND delivery<CONCAT('$fromdate',' 16:00:00') THEN 'Shift A'
			WHEN delivery>=CONCAT('$fromdate',' 16:00:00') AND delivery<CONCAT(DATE_ADD('$fromdate',INTERVAL 1 DAY),' 00:00:00') THEN 'Shift B'
			WHEN delivery>=CONCAT(DATE_ADD('$fromdate',INTERVAL 1 DAY),' 00:00:00') AND delivery<CONCAT(DATE_ADD('$fromdate',INTERVAL 1 DAY),' 08:00:00') THEN 'Shift C'
			END) AS shift,
			(CASE WHEN delivery IS NULL THEN 2 ELSE 1 END) AS sl
			FROM (
			SELECT a.id AS cont_no,
			(SELECT sparcsn4.ref_equip_type.id FROM sparcsn4.inv_unit_equip
			INNER JOIN sparcsn4.ref_equipment ON sparcsn4.ref_equipment.gkey=sparcsn4.inv_unit_equip.eq_gkey
			INNER JOIN sparcsn4.ref_equip_type ON sparcsn4.ref_equip_type.gkey=sparcsn4.ref_equipment.eqtyp_gkey 
			WHERE sparcsn4.inv_unit_equip.unit_gkey=a.gkey) AS iso_code,
			b.flex_string10 AS rot_no,
			b.time_in AS dischargetime,
			b.time_out AS delivery,
			DATE(b.time_out) AS delivery_dt,  TIME(b.time_out) AS delivery_time,
			g.id AS mlo,
			k.name AS cf,
			sparcsn4.config_metafield_lov.mfdch_desc,
			a.freight_kind AS statu,
			a.goods_and_ctr_wt_kg AS weight,
			(SELECT ctmsmis.mis_exp_unit_load_failed.last_update
			FROM ctmsmis.mis_exp_unit_load_failed WHERE ctmsmis.mis_exp_unit_load_failed.gkey=a.gkey) AS last_update,
			(SELECT ctmsmis.mis_exp_unit_load_failed.user_id
			FROM ctmsmis.mis_exp_unit_load_failed WHERE ctmsmis.mis_exp_unit_load_failed.gkey=a.gkey) AS user_id,

			IFNULL((SELECT SUBSTRING(sparcsn4.srv_event_field_changes.new_value,7)
					FROM sparcsn4.srv_event
					INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
					WHERE sparcsn4.srv_event.applied_to_gkey=a.gkey  AND sparcsn4.srv_event.event_type_gkey IN(18,13,16) AND sparcsn4.srv_event_field_changes.new_value IS NOT NULL AND sparcsn4.srv_event_field_changes.new_value !='' AND sparcsn4.srv_event_field_changes.new_value !='Y-CGP-.' AND sparcsn4.srv_event.gkey<(SELECT sparcsn4.srv_event.gkey FROM sparcsn4.srv_event
					INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
					WHERE sparcsn4.srv_event.event_type_gkey=4 AND sparcsn4.srv_event.applied_to_gkey=a.gkey AND metafield_id='unitFlexString01' AND new_value IS NOT NULL ORDER BY sparcsn4.srv_event_field_changes.gkey DESC LIMIT 1) ORDER BY sparcsn4.srv_event.gkey DESC LIMIT 1),(SELECT SUBSTRING(sparcsn4.srv_event_field_changes.new_value,7)
					FROM sparcsn4.srv_event
					INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
					WHERE sparcsn4.srv_event.applied_to_gkey=a.gkey  AND sparcsn4.srv_event.event_type_gkey IN(18,13,16) ORDER BY sparcsn4.srv_event_field_changes.gkey DESC LIMIT 1)) AS carrentPosition,

			(SELECT ctmsmis.cont_yard(carrentPosition)) AS Yard_No,

			(SELECT ctmsmis.cont_block(carrentPosition,Yard_No)) AS Block_No,
			(SELECT creator FROM sparcsn4.srv_event WHERE applied_to_gkey=a.gkey AND event_type_gkey=30 ORDER BY gkey DESC LIMIT 1) AS stripped_by,

			(SELECT sparcsn4.srv_event.created FROM  sparcsn4.srv_event 
			INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
			WHERE applied_to_gkey=a.gkey AND event_type_gkey=4 AND sparcsn4.srv_event_field_changes.new_value='E' LIMIT 1) AS proEmtyDate,
			b.flex_date01 AS assignmentdate, IF(UCASE(a.flex_string15) LIKE '%STAY%',1,0) AS stay,
			Y.id AS shp_id,

							(SELECT RIGHT(sparcsn4.ref_equip_type.nominal_length,2) FROM sparcsn4.inv_unit_equip 
			INNER JOIN sparcsn4.ref_equipment ON sparcsn4.ref_equipment.gkey=sparcsn4.inv_unit_equip.eq_gkey 
			INNER JOIN sparcsn4.ref_equip_type ON sparcsn4.ref_equip_type.gkey=sparcsn4.ref_equipment.eqtyp_gkey 
			WHERE sparcsn4.inv_unit_equip.unit_gkey=a.gkey) AS size,

			((SELECT RIGHT(sparcsn4.ref_equip_type.nominal_height,2) FROM sparcsn4.inv_unit_equip 
			INNER JOIN sparcsn4.ref_equipment ON sparcsn4.ref_equipment.gkey=sparcsn4.inv_unit_equip.eq_gkey 
			INNER JOIN sparcsn4.ref_equip_type ON sparcsn4.ref_equip_type.gkey=sparcsn4.ref_equipment.eqtyp_gkey 
			WHERE sparcsn4.inv_unit_equip.unit_gkey=a.gkey)/10) AS height 


			FROM sparcsn4.inv_unit a
			INNER JOIN sparcsn4.inv_unit_fcy_visit b ON b.unit_gkey=a.gkey
			INNER JOIN  ( sparcsn4.ref_bizunit_scoped g        
			LEFT JOIN ( sparcsn4.ref_agent_representation X        
			LEFT JOIN sparcsn4.ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey )  ON g.gkey=X.bzu_gkey        
			)  ON g.gkey = a.line_op
			INNER JOIN sparcsn4.config_metafield_lov ON a.flex_string01=config_metafield_lov.mfdch_value

			INNER JOIN
					sparcsn4.inv_goods j ON j.gkey = a.goods
			LEFT JOIN
					sparcsn4.ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
			WHERE DATE(b.flex_date01)='$fromdate' AND config_metafield_lov.mfdch_value NOT IN ('CANCEL','OCD','APPCUS','APPOTH','APPREF') AND k.gkey='$n4_bizu_gkey' 
			) AS tmp ORDER BY sl,Yard_No,shift,proEmtyDate";
				//echo $str;
			//	return;
			$rowRslt = $this->bm->dataSelect($str); 
			$data['rowRslt']=$rowRslt;
		
			$this->load->view('cf_agent_assignment_ReportView',$data);
	}
  
	//container handling report monthly - start
	function containerHandlingRptMonthlyForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{  
			$data['title']="MONTHLY CONTAINER HANDLING REPORT...";

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myReportContainerHandlingMonthly',$data);
			$this->load->view('jsAssets');
		}	
	}
	
	function containerHandlingMonthlyView()
	{
		$session_id = $this->session->userdata('value');
		$this->load->library('M_pdf');
		$pdf->use_kwt = true;
		$this->data['title']="CONTAINER HANDLING REPORT";
		
		$search_value=$this->input->post('search_value');
		$from_date=$this->input->post('from_date');
		$to_date=$this->input->post('to_date');
			
		$this->data['search_value']=$search_value;
		$this->data['from_date']=$from_date;
		$this->data['to_date']=$to_date;
			
		$html=$this->load->view('myReportContainerHandlingMonthlyList',$this->data, true); 
					 
		$pdfFilePath ="myReportContainerHandlingMonthlyList_rpt-".time()."-download.pdf";

		$pdf = $this->m_pdf->load();
		//$pdf->SetWatermarkText('CPA CTMS');
		$pdf->showWatermarkText = true;	
			
		//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
		$pdf->WriteHTML($html,2);
						 
		$pdf->Output($pdfFilePath, "I"); // For Show Pdf	
	}
	//container handling report monthly - end
	// Chairman Panel
	function vslDtlForChairmanView()
	{
		
		//$UserName = $this->session->userdata('User_Name');
		//$data['UserName']=$UserName;
		$this->load->view('vslDtlForChairman');
		$this->load->view('myclosebar');
	}

	function gateDtlForChairmanView()
	{
			
		//$UserName = $this->session->userdata('User_Name');
		//$data['UserName']=$UserName;
		$this->load->view('gateDtlForChairmanView');
		$this->load->view('myclosebar');
	}
	
	function jettySarkarEntryForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="JETTY SARKAR ENTRY FORM...";
			$data['msg']="";
			$data['editFlag']=0;
			$data['jettyId']="";			
			$data['updateFlag']="";
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('jettySarkarEntryFormView',$data);
			$this->load->view('jsAssets');
		}	
		
	}							
		
	function jettySarkarEntryFormPerform()
	{
		$login_id = $this->session->userdata('login_id');
		$n4_bizu_gkey = $this->session->userdata('n4_bizu_gkey');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		
		$org_license = $this->session->userdata('org_license');
			
		$jsName=$this->input->post('jsName');
		$jsLicenseNo=$this->input->post('jsLicenseNo');
		$jsContact=$this->input->post('jsContact');
		$jsAddress=$this->input->post('jsAddress');
		
		$license_val_dt=$this->input->post('license_val_dt');
	
		$gate_pass_val_dt=$this->input->post('gate_pass_val_dt');
		
		$upStr=$this->input->post('updateFlag');
		
		if($upStr=="update")
		{
			$jettyId=$this->input->post('jettyId');
			$updateQuery="update vcms_jetty_sirkar set js_name='$jsName', js_lic_no='$jsLicenseNo', cell_no='$jsContact',
							adress='$jsAddress',lic_val_dt='$license_val_dt',gate_pass_val_dt='$gate_pass_val_dt', last_update= now(), update_by='$login_id', user_ip='$ipaddr' where id='$jettyId'";
			
			$updateStat=$this->bm->dataUpdateDB1($updateQuery);		
			if($updateStat==1)
			{
				$data['msg']="<font color=green size='3'><nobr> Information Updated Successfully</nobr></font>";
			}
			else
				$data['msg']="<font color=red size='3'><nobr> Information Update Failed</nobr></font>";
		}		
		else
		{
			$jsSql="select count(*) as rtnValue from ctmsmis.mis_jetty_sirkar where  n4_bizu_gkey='$n4_bizu_gkey' and js_lic_no='$jsLicenseNo'";	
			
			$stat=$this->bm->dataReturn($jsSql);
			
			if($stat==1)
			{
				$data['msg']="<font color=red size='3'><nobr> This Jetty Sarkar Information already entered.</nobr></font>";
			}
			else
			{				
				error_reporting(E_ALL ^ E_NOTICE);   

				$fileName=str_replace('-','',$jsLicenseNo);
				$sign_img=$fileName."_sign.jpg";
				
				$lic_img=$fileName."_lic.jpg";
				$js_img=$fileName."_js.jpg";
				$pass_img=$fileName."_pass.jpg";
				
				$sign=$_POST["sign"];
			
				if($_FILES["sign"]["error"] > 0 or $_FILES["photo_img"]["error"] > 0 or $_FILES["gate_pass_img"]["error"] > 0)
				{
					$data['msg']="<font color='red' size=4>Here is Problem!! To upload this file. Please! Check Again, That file is not Corrupted and ensure correct format</font>";
				}
				else
				{
					move_uploaded_file($_FILES["sign"]["tmp_name"],$_SERVER['DOCUMENT_ROOT']."/resources/images/jetty_sarkar_signature_files/".$_FILES["sign"]["name"]);			
					rename($_SERVER['DOCUMENT_ROOT']."/resources/images/jetty_sarkar_signature_files/".$_FILES["sign"]["name"],$_SERVER['DOCUMENT_ROOT']."/resources/images/jetty_sarkar_signature_files/".$sign_img);
					
					//--
					move_uploaded_file($_FILES["license_img"]["tmp_name"],$_SERVER['DOCUMENT_ROOT']."/resources/images/jetty_sarkar_signature_files/".$_FILES["license_img"]["name"]);			
					rename($_SERVER['DOCUMENT_ROOT']."/resources/images/jetty_sarkar_signature_files/".$_FILES["license_img"]["name"],$_SERVER['DOCUMENT_ROOT']."/resources/images/jetty_sarkar_signature_files/".$lic_img);
					
					move_uploaded_file($_FILES["photo_img"]["tmp_name"],$_SERVER['DOCUMENT_ROOT']."/resources/images/jetty_sarkar_signature_files/".$_FILES["photo_img"]["name"]);			
					rename($_SERVER['DOCUMENT_ROOT']."/resources/images/jetty_sarkar_signature_files/".$_FILES["photo_img"]["name"],$_SERVER['DOCUMENT_ROOT']."/resources/images/jetty_sarkar_signature_files/".$js_img);
					
					move_uploaded_file($_FILES["gate_pass_img"]["tmp_name"],$_SERVER['DOCUMENT_ROOT']."/resources/images/jetty_sarkar_signature_files/".$_FILES["gate_pass_img"]["name"]);			
					rename($_SERVER['DOCUMENT_ROOT']."/resources/images/jetty_sarkar_signature_files/".$_FILES["gate_pass_img"]["name"],$_SERVER['DOCUMENT_ROOT']."/resources/images/jetty_sarkar_signature_files/".$pass_img);
					//--
					 
					// $insertQuery="insert into ctmsmis.mis_jetty_sirkar(n4_bizu_gkey, js_name, signature_path, js_lic_no, cell_no, adress,lic_copy_path,gate_pass_path,js_img_path,lic_val_dt,gate_pass_val_dt, last_update, update_by,user_ip)
					// values('$n4_bizu_gkey','$jsName', '$sign_img', '$jsLicenseNo','$jsContact','$jsAddress','$lic_img','$pass_img','$js_img','$license_val_dt','$gate_pass_val_dt',now(),'$login_id', '$ipaddr')";
					
					$insertQuery="INSERT INTO vcms_jetty_sirkar(cnf_lic_no,n4_bizu_gkey,js_name,signature_path,js_lic_no,cell_no,adress,lic_copy_path,gate_pass_path,js_img_path,lic_val_dt,gate_pass_val_dt,last_update,update_by,user_ip)
					VALUES('$org_license','$n4_bizu_gkey','$jsName', '$sign_img', '$jsLicenseNo','$jsContact','$jsAddress','$lic_img','$pass_img','$js_img','$license_val_dt','$gate_pass_val_dt',now(),'$login_id', '$ipaddr')";
					
					$infoInsertStat=$this->bm->dataInsertDB1($insertQuery);
					
					if($infoInsertStat==1)
					{
						$data['msg']="<font color=green size='3'><nobr> Information Inserted Successfully</nobr></font>";
					}
					else
						$data['msg']="<font color=red size='3'><nobr> Information Insert Failed</nobr></font>";
				}
			}
		}
		
		$data['title']="JETTY SARKAR ENTRY FORM...";

		$data['editFlag']=0;
		$data['jettyId']="";			
		$data['updateFlag']="";
		
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('jettySarkarEntryFormView',$data);
		$this->load->view('jsAssets');
	}
		
		
	function jettySarkarListForm()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			if($login_id !='devcf')
			{
				$selectSQL="select id, n4_bizu_gkey, js_name, js_lic_no, cell_no, adress, last_update, update_by,
				user_ip,lic_copy_path,gate_pass_path,js_img_path,signature_path from ctmsmis.mis_jetty_sirkar  where update_by='$login_id' order by id desc";
			}
			else
			{
				$selectSQL="select id, n4_bizu_gkey, js_name, js_lic_no, cell_no, adress, last_update, update_by,
				user_ip,lic_copy_path,gate_pass_path,js_img_path,signature_path from ctmsmis.mis_jetty_sirkar order by id desc";
			}
		$js=$this->bm->dataSelect($selectSQL);
		$data['js']=$js;
   
		$data['title']="JETTY SARKAR LIST";
		
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('jettySarkarList',$data);
		$this->load->view('jsAssets');
				
		
		}
		
	}
		
				
	function jettySarkarEntryFormEdit()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{			
			$editFlag=$this->input->post('editFlag');
			$jsId=$this->input->post('jsId');
			$selectSQL="select id, n4_bizu_gkey, js_name, js_lic_no, cell_no, adress,lic_val_dt,gate_pass_val_dt, last_update, update_by,user_ip,lic_copy_path,gate_pass_path,js_img_path,signature_path from ctmsmis.mis_jetty_sirkar  where id='$jsId'";
			 
			$jttySr=$this->bm->dataSelect($selectSQL);
			$data['jttySr']=$jttySr;
			$data['editFlag']=$editFlag;
			$data['jettyId']=$jsId;
			
			$data['updateFlag']="update";
			
			
			$data['title']="JETTY SARKAR ENTRY FORM...";
			$data['msg']="";
			
			//echo $data['title'];
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('jettySarkarEntryFormView',$data);
			$this->load->view('jsAssets');
		}	
		
	}
		
	function jettySarkarEntryDelete()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$jsId=$this->input->post('jsId');
			$deleteSQL="Delete from ctmsmis.mis_jetty_sirkar  where id='$jsId'";
			$delStat=$this->bm->dataDelete($deleteSQL);

		if($login_id !='devcf')
		{
			$selectSQL="select id, n4_bizu_gkey, js_name, js_lic_no, cell_no, adress, last_update, update_by,
			user_ip,lic_copy_path,gate_pass_path,js_img_path,signature_path from ctmsmis.mis_jetty_sirkar  where update_by='$login_id' order by id desc";
		}
		else
		{
			$selectSQL="select id, n4_bizu_gkey, js_name, js_lic_no, cell_no, adress, last_update, update_by,
			user_ip,lic_copy_path,gate_pass_path,js_img_path,signature_path from ctmsmis.mis_jetty_sirkar order by id desc";
		}
		$js=$this->bm->dataSelect($selectSQL);
		$data['js']=$js;
	
		$data['title']="JETTY SARKAR LIST";
		
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('jettySarkarList',$data);
		$this->load->view('jsAssets');
		}
		
	}
		
		
		
	function truck_entry_form()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id = $this->session->userdata('login_id');
			$n4_bizu_gkey = $this->session->userdata('n4_bizu_gkey');
			$msg="";
			
			$sql_cnf_info="SELECT u_name,login_id,n4_bizu_gkey FROM users WHERE login_id='$login_id'";
							
			$rslt_cnf_info=$this->bm->dataSelectDb1($sql_cnf_info);
			
			$data['rslt_cnf_info']=$rslt_cnf_info;
			$data['n4_bizu_gkey']=$n4_bizu_gkey;
			$data['msg']=$msg;
			$data['is_edit']=null;
			$rslt_edit_truck=array();
			$data['rslt_edit_truck']=$rslt_edit_truck;
			$data['eflag']=0;
			$data['title']="CONTAINER ASSIGN FOR DELIVERY";
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('truck_entry_form',$data);
			$this->load->view('jsAssets');
			
		/* 	$this->load->view('header2');
			$this->load->view('truck_entry_form',$data);
			$this->load->view('footer'); */
		}
	}
	
	function truck_entry_data()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id = $this->session->userdata('login_id');
			$n4_bizu_gkey = $this->session->userdata('n4_bizu_gkey');
			$msg="";
			$total_truck=0;
			$truck_no="";
			$data['eflag']=1;
			$table_id=$this->input->post('table_id');
			$cnf_name=$this->input->post('cnf_name');
			$container_no=trim($this->input->post('container_no'));
			$unit_gkey=$this->input->post('unit_gkey');
			$assignment_type=trim($this->input->post('assignment_type'));
			//$delivery_time_slot=trim($this->input->post('delivery_time_slot'));
			$jetty_sarkar=$this->input->post('jetty_sarkar');
			//$total_truck=trim($this->input->post('total_truck'));
		//	$truck_no=$this->input->post('truck_no');
			//$all_truck=trim($this->input->post('all_truck'));
			//$be_no=trim($this->input->post('be_no'));
			$truck_assign_by=$this->session->userdata('login_id');
			$user_ip=$_SERVER['REMOTE_ADDR'];
			
			$sql_chk_truck="SELECT COUNT(*) AS rtnValue FROM ctmsmis.mis_cf_assign_truck WHERE id='$table_id'";
			
			$rslt_chk_truck=$this->bm->dataReturn($sql_chk_truck);
			
			if($rslt_chk_truck==1)
			{
				/*$sql_update_truck_data="UPDATE ctmsmis.mis_cf_assign_truck
				SET jetty_sirkar_id='$jetty_sarkar',unit_gkey='$unit_gkey',cont_id='$container_no',assign_type='$assignment_type',dlv_time_slot='$delivery_time_slot',truck_id='$all_truck',BE_No='$be_no',truck_assign_time=NOW(),truck_assign_by='$truck_assign_by',user_ip='$user_ip'
				WHERE id='$table_id'";*/
				
				$sql_update_truck_data="UPDATE ctmsmis.mis_cf_assign_truck
				SET jetty_sirkar_id='$jetty_sarkar',unit_gkey='$unit_gkey',cont_id='$container_no',assign_type='$assignment_type',truck_assign_time=NOW(),truck_assign_by='$truck_assign_by',user_ip='$user_ip'
				WHERE id='$table_id'";
				
				$rslt_update_truck_data=$this->bm->dataUpdate($sql_update_truck_data);
				
				if($rslt_update_truck_data)
					$msg="<font color='blue'>Truck data successfully updated</font>";
				else
					$msg="<font color='red'>Entry failed. Try again.</font>";
			}
			else
			{
				/*$sql_insert_truck_data="INSERT INTO 	ctmsmis.mis_cf_assign_truck(jetty_sirkar_id,unit_gkey,cont_id,assign_type,dlv_time_slot,truck_id,BE_No,truck_assign_time,truck_assign_by,user_ip)
				VALUES('$jetty_sarkar','$unit_gkey','$container_no','$assignment_type','$delivery_time_slot','$all_truck','$be_no',NOW(),'$truck_assign_by','$user_ip')";
				*/
				$sql_insert_truck_data="INSERT INTO ctmsmis.mis_cf_assign_truck(jetty_sirkar_id,unit_gkey,cont_id,assign_type,dlv_time_slot,BE_No,truck_assign_time,truck_assign_by,user_ip)
				VALUES('$jetty_sarkar','$unit_gkey','$container_no','$assignment_type','','',NOW(),'$truck_assign_by','$user_ip')";
				
				//echo $sql_insert_truck_data;
				//return;
				$rslt_insert_truck_data=$this->bm->dataInsert($sql_insert_truck_data);
				
				if($rslt_insert_truck_data)
					$msg="<font color='blue'>Truck data successfully inserted</font>";
				else
					$msg="<font color='red'>Entry failed. Try again.</font>";
			}
			
			$sql_cnf_info="SELECT u_name,login_id,n4_bizu_gkey 
							FROM users 
							WHERE login_id='$login_id'";
							
			$rslt_cnf_info=$this->bm->dataSelectDb1($sql_cnf_info);
			
			$data['title']="CONTAINER ASSIGN FOR DELIVERY";
			$data['msg']=$msg;
			$data['login_id']=$login_id;
			$data['n4_bizu_gkey']=$n4_bizu_gkey;
			$data['rslt_cnf_info']=$rslt_cnf_info;
			
			$this->load->view('header2');
			$this->load->view('truck_entry_form',$data);
			$this->load->view('footer');
		}
	}
	//truck entry form - end
	
	//truck entry list - start
	function truck_entry_list()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{	
			$sql_truck_list="SELECT * FROM ctmsmis.mis_cf_assign_truck";
			
			$rslt_truck_list=$this->bm->dataSelect($sql_truck_list);
			
			$data['title']="Truck List...";
			$data['rslt_truck_list']=$rslt_truck_list;
			$this->load->view('header2');
			$this->load->view('truck_entry_list',$data);
			$this->load->view('footer');
		}
	}
	
	function edit_truck()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
			//initial data - start
			$login_id = $this->session->userdata('login_id');
			$n4_bizu_gkey = $this->session->userdata('n4_bizu_gkey');
			$msg="";
			
			$sql_cnf_info="SELECT u_name,login_id,n4_bizu_gkey 
							FROM users 
							WHERE login_id='$login_id'";
							
			$rslt_cnf_info=$this->bm->dataSelectDb1($sql_cnf_info);
			
			$data['rslt_cnf_info']=$rslt_cnf_info;
			$data['n4_bizu_gkey']=$n4_bizu_gkey;
			$data['msg']=$msg;
			//initial data - end
			
			//previously inserted data - start
			$id_edit=$this->input->post('id_edit');
			
			$sql_edit_truck="SELECT * FROM ctmsmis.mis_cf_assign_truck WHERE id='$id_edit'";
			
			$rslt_edit_truck=$this->bm->dataSelect($sql_edit_truck);
			
			$data['rslt_edit_truck']=$rslt_edit_truck;
			//previously inserted data - end
			
			$data['title']="Truck Entry Form...";
			$data['is_edit']=1;
			
			$this->load->view('header2');
			$this->load->view('truck_entry_form',$data);
			$this->load->view('footer');
		}
	}
	//truck entry list - end
	
	//truck report - start
	function truck_report()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();	
		}
		else
		{
			$this->load->library('m_pdf');
			$pdf->use_kwt = true;
				
			$pdf = $this->m_pdf->load();
			//$pdf->SetWatermarkText('CPA CTMS');
			$pdf->showWatermarkText = true;	

			$login_id=$this->session->userdata('login_id');
			$sql_cnf_info="SELECT u_name,login_id,n4_bizu_gkey 
							FROM users 
							WHERE login_id='$login_id'";
							
			$rslt_cnf_info=$this->bm->dataSelectDb1($sql_cnf_info);
		
			$this->data['rslt_cnf_info']=$rslt_cnf_info;
			
			$id_report=$this->input->post('id_report');
	
			$sql_truck_report="SELECT * FROM ctmsmis.mis_cf_assign_truck WHERE id='$id_report'";
			
			$rslt_truck_report=$this->bm->dataSelect($sql_truck_report);
			
			$this->data['rslt_truck_report']=$rslt_truck_report;
			
			$stylesheet = file_get_contents('resources/styles/truckReport.css'); // external css
			$html=$this->load->view('truck_report',$this->data, true); 
			
			$pdf->AddPage('P', // L - landscape, P - portrait
										'', '', '', '',
										5, // margin_left
										5, // margin right
										5, // margin top
										5, // margin bottom
										5, // margin header
										5); // margin footer
										
			$pdf->setFooter('|Page {PAGENO} of {nb}|');   
				
			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);
					
			$pdf->Output($pdfFilePath, "I");
		}
	}
	//truck report - end
	
	//Removal List of Overflow Yard - start
	
	function removal_list_form()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$modify=$this->uri->segment(3);
			
			if($modify=="overflow")
				$data['title']="REMOVAL LIST OF OVERFLOW YARD...";
			else if($modify=="all")
				$data['title']="LIST OF CTMS ASSIGNMENT...";
			$data['modify']=$modify;

            $this->load->view('cssAssetsList');
            $this->load->view('headerTop');
            $this->load->view('sidebar');
            $this->load->view('removal_list_form',@$data);
            $this->load->view('jsAssetsList');
		}	
	}
	
	// function removal_list_report()
	// {
		// $session_id = $this->session->userdata('value');
		// if($session_id!=$this->session->userdata('session_id'))
		// {
			// $this->logout();
		// }
		// else
		// {
			// $assignment_date=$this->input->post('assignment_date');
			// $modify=$this->input->post('modify');
			
			// $sql_removal_list="SELECT * FROM (SELECT a.id AS cont_no,k.name AS cf,k.sms_number,
			// a.freight_kind AS cont_status,
			// IFNULL((SELECT SUBSTRING(sparcsn4.srv_event_field_changes.new_value,7)
			// FROM sparcsn4.srv_event
			// INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
			// WHERE sparcsn4.srv_event.applied_to_gkey=a.gkey  AND sparcsn4.srv_event.event_type_gkey IN(18,13,16) AND sparcsn4.srv_event_field_changes.new_value IS NOT NULL AND sparcsn4.srv_event_field_changes.new_value !='' AND sparcsn4.srv_event_field_changes.new_value !='Y-CGP-.' AND sparcsn4.srv_event.gkey<(SELECT sparcsn4.srv_event.gkey FROM sparcsn4.srv_event
			// INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
			// WHERE sparcsn4.srv_event.event_type_gkey=4 AND sparcsn4.srv_event.applied_to_gkey=a.gkey AND metafield_id='unitFlexString01' AND new_value IS NOT NULL ORDER BY sparcsn4.srv_event_field_changes.gkey DESC LIMIT 1) ORDER BY sparcsn4.srv_event.gkey DESC LIMIT 1),(SELECT SUBSTRING(sparcsn4.srv_event_field_changes.new_value,7)
			// FROM sparcsn4.srv_event
			// INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
			// WHERE sparcsn4.srv_event.applied_to_gkey=a.gkey  AND sparcsn4.srv_event.event_type_gkey IN(18,13,16) ORDER BY sparcsn4.srv_event_field_changes.gkey DESC LIMIT 1)) AS slot,
			// (SELECT size FROM ctmsmis.mis_inv_unit WHERE gkey=a.gkey) AS size,
			// CAST(((SELECT height FROM ctmsmis.mis_inv_unit WHERE gkey=a.gkey)/10) AS DECIMAL(10,1)) AS height,
			// (SELECT IF(SUBSTR(REPLACE(UPPER(LTRIM(vsl_name)),'.',''),1,2)='MV',SUBSTR(REPLACE(LTRIM(vsl_name),'.',''),3),REPLACE(LTRIM(vsl_name),'.','')) FROM ctmsmis.mis_inv_unit WHERE gkey=a.gkey) AS v_name,
			// (SELECT ctmsmis.mis_inv_unit.vsl_visit_dtls_ib_vyg FROM ctmsmis.mis_inv_unit WHERE gkey=a.gkey) AS rot_no,
			// g.id AS mlo,
			// config_metafield_lov.mfdch_value AS mfdch_value,
					// config_metafield_lov.mfdch_desc AS mfdch_desc,a.seal_nbr1
			// FROM sparcsn4.inv_unit a
			// INNER JOIN sparcsn4.inv_unit_fcy_visit b ON b.unit_gkey=a.gkey
			// INNER JOIN sparcsn4.ref_bizunit_scoped g ON a.line_op = g.gkey
			// INNER JOIN sparcsn4.config_metafield_lov ON a.flex_string01=config_metafield_lov.mfdch_value
			// INNER JOIN
					// sparcsn4.inv_goods j ON j.gkey = a.goods
			// LEFT JOIN
					// sparcsn4.ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
			// WHERE DATE(flex_date01)='$assignment_date' AND config_metafield_lov.mfdch_value NOT IN ('CANCEL')) AS tbl WHERE sms_number IS NULL";
			
			// $rslt_removal_list=$this->bm->dataSelect($sql_removal_list);
			
			// $data['rslt_removal_list']=$rslt_removal_list;
			
			// $this->load->view('removal_list_report_view',$data);
		// }
	// }
	
	function removal_list_report()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id = $this->session->userdata('login_id');
			
		    //$mpdf->use_kwt = true;
				
			$assignment_date=$this->input->post('assignment_date');
			$modify=$this->input->post('modify');
			$options=$this->input->post('options');
			$sql_removal_list = "";	
			if($modify=="overflow")
			{
	
				$sql_removal_list="SELECT cont_no,remark,
				(SELECT ref_bizunit_scoped.name FROM ref_bizunit_scoped
				INNER JOIN inv_goods ON inv_goods.shipper_bzu = ref_bizunit_scoped.gkey
				WHERE  inv_goods.gkey=tbl.goods
				) AS cf,
				(SELECT ref_bizunit_scoped.sms_number FROM ref_bizunit_scoped
				INNER JOIN inv_goods ON inv_goods.shipper_bzu = ref_bizunit_scoped.gkey
				WHERE  inv_goods.gkey=tbl.goods
				) AS sms_number,cont_status,
				NVL((SELECT substr(srv_event_field_changes.new_value,7)
				FROM srv_event 
				INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey 
				WHERE srv_event.applied_to_gkey=tbl.gkey AND srv_event.event_type_gkey IN(31450,31143,31447)
				AND srv_event_field_changes.new_value IS NOT NULL 
				-- AND srv_event_field_changes.new_value !=''
				AND srv_event_field_changes.new_value !='Y-CGP-.' AND srv_event.gkey <
				(SELECT srv_event.gkey
				FROM srv_event INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey
				WHERE srv_event.event_type_gkey=31426 AND srv_event.applied_to_gkey=tbl.gkey AND metafield_id='unitFlexString01'
				AND new_value IS NOT NULL ORDER BY srv_event_field_changes.gkey DESC FETCH FIRST 1 ROWS ONLY) ORDER BY srv_event.gkey 
				DESC FETCH FIRST 1 ROWS ONLY),(SELECT substr(srv_event_field_changes.new_value,7) FROM srv_event 
				INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey 
				WHERE srv_event.applied_to_gkey=tbl.gkey AND srv_event.event_type_gkey IN(31450,31143,31447)
				ORDER BY srv_event_field_changes.gkey DESC FETCH FIRST 1 ROWS ONLY)) AS slot,
				rot_no, v_name,
				
				(SELECT substr(ref_equip_type.nominal_length,-2) FROM ref_equipment
				INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey
				INNER JOIN inv_unit ON ref_equipment.gkey=inv_unit.eq_gkey
				WHERE inv_unit.gkey=tbl.gkey) as siz,
				
				((SELECT substr(ref_equip_type.nominal_height,-2) FROM ref_equipment
				INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey
				INNER JOIN inv_unit ON ref_equipment.gkey=inv_unit.eq_gkey
				WHERE inv_unit.gkey=tbl.gkey)/10) as height,
								
				(SELECT ref_bizunit_scoped.id FROM ref_bizunit_scoped WHERE gkey=tbl.line_op) AS mlo,
				mfdch_value,mfdch_desc,seal_nbr1
				FROM (
				SELECT inv_unit.id AS cont_no,inv_unit.gkey,inv_unit.goods,inv_unit.line_op, inv_unit.freight_kind AS cont_status,
				vsl_vessel_visit_details.ib_vyg as rot_no,
				vsl_vessels.name AS v_name,
				inv_unit.remark,config_metafield_lov.mfdch_value AS mfdch_value,
				config_metafield_lov.mfdch_desc AS mfdch_desc,seal_nbr1
				FROM inv_unit 
				INNER JOIN inv_unit_fcy_visit  ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey 
				INNER JOIN argo_carrier_visit ON inv_unit_fcy_visit.actual_ib_cv = argo_carrier_visit.gkey
				INNER JOIN vsl_vessel_visit_details ON argo_carrier_visit.cvcvd_gkey=vsl_vessel_visit_details.vvd_gkey
				INNER JOIN vsl_vessels ON vsl_vessel_visit_details.vessel_gkey=vsl_vessels.gkey
				INNER JOIN config_metafield_lov ON inv_unit.flex_string01=config_metafield_lov.mfdch_value 
				WHERE TO_CHAR(inv_unit_fcy_visit.flex_date01,'yyyy-mm-dd')='$assignment_date' AND config_metafield_lov.mfdch_value NOT IN ('CANCEL')
				) tbl WHERE remark LIKE '%OVERFLOW%'";
			}
			else
			{			
				$sql_removal_list="SELECT a.id AS cont_no,k.name AS cf,k.sms_number AS sms_number,a.gkey as key,
				a.freight_kind AS cont_status,
				NVL((SELECT substr(srv_event_field_changes.new_value,7)
				FROM srv_event
				INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey
				WHERE srv_event.applied_to_gkey=a.gkey AND srv_event.event_type_gkey IN(31450,31143,31447) AND srv_event_field_changes.new_value IS NOT NULL AND srv_event_field_changes.new_value !='' AND srv_event_field_changes.new_value !='Y-CGP-.' AND srv_event.gkey<(SELECT srv_event.gkey FROM srv_event
				INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey
				WHERE srv_event.event_type_gkey=31426 AND srv_event.applied_to_gkey=a.gkey AND metafield_id='unitFlexString01' AND new_value IS NOT NULL ORDER BY srv_event_field_changes.gkey DESC FETCH FIRST 1 ROWS ONLY) ORDER BY srv_event.gkey DESC FETCH FIRST 1 ROWS ONLY),(SELECT substr(srv_event_field_changes.new_value,7)
				FROM srv_event
				INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey
				WHERE srv_event.applied_to_gkey=a.gkey AND srv_event.event_type_gkey IN(31450,31143,31447) ORDER BY srv_event_field_changes.gkey DESC FETCH FIRST 1 ROWS ONLY)) AS slot,
				(SELECT substr(ref_equip_type.nominal_length,-2) FROM ref_equipment
				INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey
				INNER JOIN inv_unit ON ref_equipment.gkey=inv_unit.eq_gkey
				WHERE inv_unit.gkey=a.gkey) as siz,
				
				((SELECT substr(ref_equip_type.nominal_height,-2) FROM ref_equipment
				INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey
				INNER JOIN inv_unit ON ref_equipment.gkey=inv_unit.eq_gkey
				WHERE inv_unit.gkey=a.gkey)/10) as height,
				
				(SELECT vsl_vessels.name FROM vsl_vessels
				INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vessel_gkey=vsl_vessels.gkey
				WHERE vsl_vessel_visit_details.ib_vyg=b.flex_string10 FETCH FIRST 1 ROWS ONLY) AS v_name,
				b.flex_string10 AS rot_no,
				g.id AS mlo,
				config_metafield_lov.mfdch_value AS mfdch_value,
				config_metafield_lov.mfdch_desc AS mfdch_desc,a.seal_nbr1
				FROM inv_unit a
				INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey=a.gkey
				INNER JOIN ref_bizunit_scoped g ON a.line_op = g.gkey
				
				INNER JOIN config_metafield_lov ON a.flex_string01=config_metafield_lov.mfdch_value
				INNER JOIN
				inv_goods j ON j.gkey = a.goods
				LEFT JOIN
				ref_bizunit_scoped k ON k.gkey = j.shipper_bzu
				WHERE TO_CHAR(inv_unit_fcy_visit.flex_date01,'yyyy-mm-dd')='$assignment_date' AND config_metafield_lov.mfdch_value NOT IN ('CANCEL')";
			}
			// echo $sql_removal_list;return;
			$rslt_removal_list=$this->bm->dataSelect($sql_removal_list);
			
			if($options=="pdf")
			{
				$data['rslt_removal_list']=$rslt_removal_list;
				$data['modify']=$modify;
				$data['options'] = 'pdf';
				
				if($modify=="overflow")
				{
					$data['heading']="Removal Tally of Overflow Yard";
				}
				else
				{
					$data['heading']="List of CTMS Assignment";
				}

				$this->load->view('cssAssets');
				$this->load->view('removal_list_report_view',$data);
				$this->load->view('jsAssets');
			}
			else if($options=="excel")
			{
				$data['rslt_removal_list']=$rslt_removal_list;
				$data['modify']=$modify;
				
				if($modify=="overflow")
				{
					$data['heading']="Removal Tally of Overflow Yard";
				}
				else
				{
					$data['heading']="List of CTMS Assignment";
				}
				$this->load->view('removal_list_report_view_excel',$data); 
			}
			else if($options=="html")
			{
				$data['rslt_removal_list']=$rslt_removal_list;
				$data['modify']=$modify;
				
				if($modify=="overflow")
				{
					$data['heading']="Removal Tally of Overflow Yard";
				}
				else
				{
					$data['heading']="List of CTMS Assignment";
				}
				$this->load->view('removal_list_report_view',$data);
			}
		}
	}
	
	
	//Removal List of Overflow Yard - end
	
		// Bill OF ENTRY Information-- Start
	
		function billOfEntryInfoForm()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="BILL OF INFORMATION ENTRY FORM...";
				$data['msg']="";
				$data['login_id']=$login_id;
				$jetty_list_query="SELECT js_name, js_lic_no FROM ctmsmis.mis_jetty_sirkar WHERE update_by='$login_id'";
			 // echo $jetty_list_query;
				$jttySr_list=$this->bm->dataSelect($jetty_list_query);
				$data['jttySr_list']=$jttySr_list;
						
		
			$this->load->view('billOfEntryInfoFormView',$data);

				
			}
		}
		
		function billOfEntryPerform()
		{  
            $login_id = $this->session->userdata('login_id');
            $session_id = $this->session->userdata('value');
            $LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
            else
			{

			$bl_no=$this->input->post('bl_no');
            $be_no=$this->input->post('be_no');
			$be_date=$this->input->post('be_date');
			$office_code=$this->input->post('office_code');
			$jetty_sarkar_lic_no=$this->input->post('jetty_sarkar');
			$numOfRow=$this->input->post('numOfRow');
            $igmDetailsId=$this->input->post('igmDetailsId');
                        
                        
                      //  echo $bl_no.'-'.$be_no.'-'.$be_date.'-'.$office_code.'-'.$jetty_sarkar_lic_no;
                        
            $sqlUpdate="UPDATE cchaportdb.igm_details set Bill_of_Entry_No='$be_no', Bill_of_Entry_Date='$be_date',
                         office_code='$office_code', jetty_sirkar_lic='$jetty_sarkar_lic_no' where BL_No='$bl_no'";
			$updateStat = $this->bm->dataUpdateDB1($sqlUpdate);
                      //  if($updateStat==1)
            $updateStat==1;
                      //  echo $numOfRow;
                      //  echo '\r\n';
                        
            for($i=0; $i<$numOfRow; $i++)
                {
                    $contNo=$this->input->post('container'.$i);
                    $igmContId=$this->input->post('contId'.$i);
                    $truckNo=$this->input->post('truckNo'.$i); 
                    $findSql="SELECT COUNT(igm_detail_cont_id) AS rtnValue FROM igm_truck_detail WHERE igm_detail_cont_id='$igmContId'";
					$findStat=$this->bm->dataReturnDb1($findSql);
                    if($findStat==1)
                        {
                          $updateSql="UPDATE igm_truck_detail SET igm_detail_id= '$igmDetailsId', truck_no='$truckNo' WHERE igm_detail_cont_id='$igmContId'";
                          $updateStat = $this->bm->dataUpdateDB1($updateSql);
                        }
                    else
                        {
                         $insertSql="INSERT INTO cchaportdb.igm_truck_detail(igm_detail_id, igm_detail_cont_id, truck_no) VALUES($igmDetailsId, $igmContId,'$truckNo')";
                         $insertStat=$this->bm->dataInsertDB1($insertSql);  
                        }
                        //    echo $insertSql;
                         //  echo $contNo.'=='.$truckNo;
                 }
                      //  return;
                    if(($insertStat==1 && $updateStat==1)|| $updateStat==1 )
                            {
                              $data['msg']=  "<font color=green>Data successfully updated and inserted.</font>";
                            }
                    else
                            {
                              $data['msg']=  "<font color=red>Not Updated/Inserted</font>";
                            }
				$data['login_id']=$login_id;
				$data['title']="BILL OF INFORMATION ENTRY FORM...";
                $jetty_list_query="SELECT js_name, js_lic_no FROM ctmsmis.mis_jetty_sirkar WHERE update_by='$login_id'";
				$jttySr_list=$this->bm->dataSelect($jetty_list_query);
				$data['jttySr_list']=$jttySr_list;
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('billOfEntryInfoFormView',$data);
				$this->load->view('jsAssets');
			
		}
    }
		
	
	// Bill OF ENTRY Information-- End
	
	// SMS REPORT Sourav
	function smsRptForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="SMS REPORT FORM...";
			//echo $data['title'];
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('smsRptForm',$data);
			$this->load->view('jsAssets');
		}	
	}
	
	function smsRptView()
		{
		  
			$fromdate=$this->input->post('fromdate');
			
			
			



			$query="

			SELECT  cell_no,sms_sending_time,max_time_limit,
								(CASE
								   WHEN sms_status='0' THEN 'NOT SEND'
								   ELSE 'SEND' END) AS sms_status,
								(CASE
								   WHEN sms_type='overflow' THEN SUBSTRING(sms,12,11)
								   WHEN sms_type='keepdown' THEN SUBSTRING(sms,12,11)
								   ELSE SUBSTRING(sms,33,11) END) AS id,
								   
								(CASE
								   WHEN sms_type='overflow' THEN 'OVERFLOW'
								   WHEN sms_type='keepdown' THEN 'KEEPDOWN'
								   ELSE 'ASSIGNMENT' END) AS sms_type 	
													  
								FROM ctmsmis.sms_transaction st
								
								WHERE DATE(st.max_time_limit)='$fromdate'
								ORDER BY sms_type DESC";
			
			$rtnSmsDetails = $this->bm->dataSelectDb2($query);




			
			$query_tot="SELECT 
						COUNT(id) AS tot,
						SUM(tot_overflow) AS count_tot_overflow,
						SUM(tot_keepdown) AS count_tot_keepdown,
						SUM(tot_assign) AS count_tot_assignment,
						SUM(tot_overflow_send_sms) AS count_tot_overflow_send_sms,
						SUM(tot_keepdown_send_sms) AS count_tot_keepdown_send_sms,
						SUM(tot_assignment_send_sms) AS count_tot_assignment_send_sms,
						(SUM(tot_overflow)-SUM(tot_overflow_send_sms)) AS count_tot_overflow_sms_not_send,
						(SUM(tot_keepdown)-SUM(tot_keepdown_send_sms)) AS count_tot_keepdown_sms_not_send,
						(SUM(tot_assign)-SUM(tot_assignment_send_sms)) AS count_tot_assignment_sms_not_send
						FROM (
						SELECT id,
						(CASE
						   WHEN sms_type='overflow' THEN 1
						   ELSE 0 END) AS tot_overflow,
						(CASE
						   WHEN sms_type='keepdown' THEN 1
						   ELSE 0 END) AS tot_keepdown,
						(CASE
						   WHEN sms_type='overflow' AND sms_status=1 THEN 1
						   ELSE 0 END) AS tot_overflow_send_sms,
						(CASE
						   WHEN sms_type='keepdown' AND sms_status=1 THEN 1
						   ELSE 0 END) AS tot_keepdown_send_sms,
						(CASE
						   WHEN sms_type='notoverflow' OR sms_type IS NULL THEN 1
						   ELSE 0 END) AS tot_assign,
						(CASE
						   WHEN (sms_type='notoverflow' OR sms_type IS NULL) AND sms_status=1 THEN 1
						   ELSE 0 END) AS tot_assignment_send_sms
						FROM ctmsmis.sms_transaction 
						WHERE DATE(max_time_limit)='$fromdate') AS tbl";
			
			$rtnSmsTotInfo = $this->bm->dataSelectDb2($query_tot);
			
			$data['rtnSmsDetails']=$rtnSmsDetails;
			$data['fromdate']=$fromdate;
			$data['rtnSmsTotInfo']=$rtnSmsTotInfo;
			
			$this->load->view('smsRptView',$data);
			
		   
		  
		   
		   
  
		}

	

	function smsRptTypeForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="SMS REPORT TYPE FORM...";
			//echo $data['title'];
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('smsRptTypeForm',$data);
			$this->load->view('jsAssets');
		}	
	}

	function smsRptTypeView() {

		$fromdate=$this->input->post('fromdate');
		$todate=$this->input->post('todate');
		$type=$this->input->post('type');

		// echo $fromdate;
		// return;

		if($type == 'All')
		{
			$type = 'VCMS';
		}
		
		$fromdate .= " 00:00:00";
		$todate .= " 23:59:59";
		
		$query = "SELECT cell_no AS cell_no, sms AS sms, sms_sending_time AS sms_sending_time, sms_type AS sms_type
		FROM ctmsmis.sms_transaction
		WHERE sms_type LIKE '%$type%' AND sms_sending_time BETWEEN '$fromdate' AND '$todate'";

		$rtnSmsRpt = $this->bm->dataSelect($query);
		$data['rtnSmsRpt'] = $rtnSmsRpt;
		$data['fromdate'] = $fromdate;
		$data['todate'] = $todate;
		$data['type'] = $type;

		$this->load->view('smsRptTypeView',$data);

	}


	function mis_assignment_report_search()		
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		$data['title']="MIS ASSIGNMENT REPORT....";
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('mis_assignment_search_rpt_Form',$data);
		$this->load->view('jsAssets');
	}
		
	function mis_assignment_entry_rpt()
	{
		$search_by = $this->input->post('search_by');
		$LoginStat = $this->session->userdata('LoginStat');
		
	
		if($search_by=="all")
		{
			
			$data['login_id']=$login_id;

			$this->load->view('cssAssets');
			$this->load->view('mis_assignment_entry_rpt_view',$data);
			$this->load->view('myclosebar');
			$this->load->view('jsAssets');
		}
		else if($search_by=="date")
		{
			$data['login_id']=$login_id;
			$search_val = $this->input->post('fromdate');
			$data['search_by']=$search_by;
			$data['search_val']=$search_val;
			$this->load->view('cssAssets');
			$this->load->view('mis_assignment_search_rpt_view',$data);
			$this->load->view('jsAssets');
		}
		else
		{
			$data['login_id']=$login_id;
			$search_val_dt = $this->input->post('fromdate');
			$search_val = $this->input->post('search_value');
			$data['search_by']=$search_by;
			$data['search_val']=$search_val;
			$data['search_val_dt']=$search_val_dt;
			$this->load->view('cssAssets');
			$this->load->view('mis_assignment_search_rpt_view',$data);
			$this->load->view('jsAssets');
		}
		
		$this->load->view('myclosebar');

	}
	
	
	
	function downloadAssignmentSnx()
	{			
		$this->load->view('downloadAssignmentSnx');
	}
	
	
	//Product type - start
	function product_type_form()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$msg="";
			$data['title']="PRODUCT TYPE FORM...";
			$data['flag']=0;
			$data['msg']=$msg;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('product_type_form',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function product_type_save()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id = $this->session->userdata('login_id');
			$user_ip=$_SERVER['REMOTE_ADDR'];
			$msg="";
			
			$product_id=$this->input->post('product_id');
			$short_name=$this->input->post('short_name');
			$description=$this->input->post('description');
			
			$sql_chk_duplicate="SELECT COUNT(*) AS rtnValue FROM inventory_product_type WHERE id='$product_id'";
			
			$cnt=$this->bm->dataReturnDb1($sql_chk_duplicate);
			
			if($cnt>0)
			{
				$sql_update_product="UPDATE inventory_product_type
				SET short_name='$short_name',product_desc='$description',created_by='$login_id',created_time=NOW(),user_ip='$user_ip'
				WHERE id='$product_id'";
				
				$rslt_update_product=$this->bm->dataUpdateDB1($sql_update_product);
				
				if($rslt_update_product==1)
					$msg="<font color='green'><b>Succesfully updated</b></font>";
				else
					$msg="<font color='red'><b>Update failed</b></font>";
			}
			else
			{
				$sql_insert_product="INSERT INTO inventory_product_type(short_name,product_desc,created_by,created_time,user_ip) 
				VALUES('$short_name','$description','$login_id',NOW(),'$user_ip')";
				
				$rslt_insert_product=$this->bm->dataInsertDB1($sql_insert_product);
				
				if($rslt_insert_product==1)
					$msg="<font color='green'><b>Succesfully inserted</b></font>";
				else
					$msg="<font color='red'><b>Insertion failed</b></font>";
			}
			
			$data['title']="PRODUCT TYPE FORM...";
			$data['msg']=$msg;
			$data['flag']=0;


			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('product_type_form',$data);
			$this->load->view('jsAssets');
		}
	}
	//Product type - end
	
	//Location - start
	function location_form()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$msg="";
			$data['title']="LOCATION FORM...";
			$data['msg']=$msg;
			$data['flag']=0;

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('location_form',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function location_save()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id = $this->session->userdata('login_id');
			$user_ip=$_SERVER['REMOTE_ADDR'];
			$msg="";
			
			$location_id=$this->input->post('location_id');
			$location_name=$this->input->post('location_name');
			
			$sql_chk_duplicate="SELECT COUNT(*) AS rtnValue FROM inventory_product_location WHERE id='$location_id'";
			
			$cnt=$this->bm->dataReturnDb1($sql_chk_duplicate);
			
			if($cnt>0)
			{
				$sql_update_location="UPDATE inventory_product_location
				SET location_name='$location_name',created_by='$login_id',created_time=NOW(),user_ip='$user_ip'
				WHERE id='$location_id'";
				
				$rslt_update_location=$this->bm->dataUpdateDB1($sql_update_location);
				
				if($rslt_update_location==1)
					$msg="<font color='green'><b>Succesfully updated</b></font>";
				else
					$msg="<font color='red'><b>Update failed</b></font>";
			}
			else
			{
				$sql_insert_location_name="INSERT INTO inventory_product_location(location_name,created_by,created_time,user_ip)
				VALUES('$location_name','$login_id',NOW(),'$user_ip')";
			
				$rslt_insert_location_name=$this->bm->dataInsertDB1($sql_insert_location_name);
			
				if($rslt_insert_location_name==1)
					$msg="<font color='green'><b>Succesfully inserted</b></font>";
				else
					$msg="<font color='red'><b>Insertion failed</b></font>";
			}
			
			$data['title']="LOCATION FORM...";
			$data['msg']=$msg;
			$data['flag']=0;

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('location_form',$data);
			$this->load->view('jsAssets');
			
			
		}
	}
	//Location - end
	
	//Product user - start
	function product_user_form()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$msg="";
			$data['title']="PRODUCT USER FORM...";
			$data['msg']=$msg;
			$data['flag']=0;

			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('product_user_form',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function product_user_save()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id = $this->session->userdata('login_id');
			$user_ip=$_SERVER['REMOTE_ADDR'];
			$msg="";
			
			$user_id=$this->input->post('user_id');
			$company_name=$this->input->post('company_name');
			
			$sql_chk_duplicate="SELECT COUNT(*) AS rtnValue FROM inventory_product_user WHERE id='$user_id'";
			
			$cnt=$this->bm->dataReturnDb1($sql_chk_duplicate);
			
			if($cnt>0)
			{
				$sql_update_user="UPDATE inventory_product_user
				SET company_name='$company_name',created_by='$login_id',created_time=NOW(),user_ip='$user_ip'
				WHERE id='$user_id'";
				
				$rslt_update_user=$this->bm->dataUpdateDB1($sql_update_user);
				
				if($rslt_update_user==1)
					$msg="<font color='green'><b>Succesfully updated</b></font>";
				else
					$msg="<font color='red'><b>Update failed</b></font>";
			}
			else
			{
				$sql_insert_company_name="INSERT INTO inventory_product_user(company_name,created_by,created_time,user_ip)
				VALUES('$company_name','$login_id',NOW(),'$user_ip')";
			
				$rslt_insert_company_name=$this->bm->dataInsertDB1($sql_insert_company_name);
			
				if($rslt_insert_company_name==1)
					$msg="<font color='green'><b>Succesfully inserted</b></font>";
				else
					$msg="<font color='red'><b>Insertion failed</b></font>";
			}
			
			$data['title']="PRODUCT USER FORM...";
			$data['msg']=$msg;
			$data['flag']=0;

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('product_user_form',$data);
			$this->load->view('jsAssets');
		}
	}
	//Product user - end
	
	//Product list - start
	function product_list()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		//$org_Type_id = $this->session->userdata('org_Type_id');
		
		/* if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{ */
                    
		   if($this->input->post('search'))
			{
				$pro_type=$this->input->post('product_type');
				$sql_product_list="SELECT * FROM inventory_product_type where short_name='$pro_type'";
			}
			else
			{
			$sql_product_list="SELECT * FROM inventory_product_type";
            }
		$rslt_product_list=$this->bm->dataSelectDb1($sql_product_list);
		$data['rslt_product_list']=$rslt_product_list;
		
		$data['title']="PRODUCT TYPE LIST...";
					
		$product_type_Sql="SELECT DISTINCT(short_name) AS short_name FROM inventory_product_type";
		$rslt_product_type_list=$this->bm->dataSelectDb1($product_type_Sql);			
		$data['product_type_list']=$rslt_product_type_list;

		
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('product_list',$data);
		$this->load->view('jsAssets');
		//}
	}
	//Product list - end
	
	//Product edit - start
	function product_edit_form()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{ */
			$product_id=$this->input->post('product_id');
			
			$sql_product_info="SELECT id,short_name,product_desc
			FROM inventory_product_type
			WHERE id='$product_id'";
			
			$rslt_product_info=$this->bm->dataSelectDb1($sql_product_info);
			
			$data['rslt_product_info']=$rslt_product_info;
			
			$data['title']="PRODUCT TYPE FORM...";
			$data['msg']=$msg;
			$data['flag']=1;

			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('product_type_form',$data);
			$this->load->view('jsAssets');
		//}
	}
	//Product edit - end
	
	//Product delete - start
	function product_delete_form()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{ */
			$product_id=$this->input->post('product_id');
			
			//-delete start
			$sql_delete_product="DELETE FROM inventory_product_type WHERE id='$product_id'";
			
			$rslt_delete_product=$this->bm->dataDeleteDB1($sql_delete_product);
			//-delete end
			
			//-reload list - start
			$sql_product_list="SELECT * FROM inventory_product_type";
			
			$rslt_product_list=$this->bm->dataSelectDb1($sql_product_list);
			//-reload list - end
			
			$data['title']="PRODUCT TYPE LIST...";
			$data['rslt_product_list']=$rslt_product_list;

			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('product_list',$data);
			$this->load->view('jsAssets');
		//}
	}
	//Product delete - end
	
	//Location List - start
	function location_list()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{ */
			$sql_location_list="SELECT * FROM inventory_product_location";
			
			$rslt_location_list=$this->bm->dataSelectDb1($sql_location_list);
			
			$data['rslt_location_list']=$rslt_location_list;
			
			$data['title']="LOCATION LIST...";

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('location_list',$data);
			$this->load->view('jsAssets');
		//}
	}
	//Location List - end
	
	//Location edit - start
	function location_edit_form()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{ */
			$location_id=$this->input->post('location_id');
			
			$sql_location_info="SELECT id,location_name
			FROM inventory_product_location
			WHERE id='$location_id'";
			
			$rslt_location_info=$this->bm->dataSelectDb1($sql_location_info);
			
			$data['rslt_location_info']=$rslt_location_info;
			
			$data['title']="LOCATION FORM...";
			$data['msg']="";
			$data['flag']=1;

			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('location_form',$data);
			$this->load->view('jsAssets');
		//}
	}
	//Location edit - end
	
	//Location delete - start
	function location_delete_form()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{ */
			$location_id=$this->input->post('location_id');
			
			//-delete start
			$sql_delete_location="DELETE FROM inventory_product_location WHERE id='$location_id'";
			
			$delstat=$this->bm->dataDeleteDB1($sql_delete_location);
			if($delstat==1)
			{
               $data['msg']="<font size=3 color=green>Data Deleted.</font>";
            }
            else {
               $data['msg']="<font size=3 color=red>Data not deleted. Please! Make sure it is deleted from others entry.</font>";
            }
			//-delete end
			
			//-reload list - start
			$sql_location_list="SELECT * FROM inventory_product_location";
			
			$rslt_location_list=$this->bm->dataSelectDb1($sql_location_list);
			//-reload list - end
			
			$data['rslt_location_list']=$rslt_location_list;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('location_list',$data);
			$this->load->view('jsAssets');
		//}
	}
	//Location delete - end
	
	//User List - start
	function product_user_list()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{ */
			$sql_product_user_list="SELECT * FROM inventory_product_user";
			
			$rslt_product_user_list=$this->bm->dataSelectDb1($sql_product_user_list);
			
			$data['rslt_product_user_list']=$rslt_product_user_list;
			
			$data['title']="USER LIST...";
			
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('product_user_list',$data);
			$this->load->view('jsAssets');
		//}
	}
	//User List - end
	
	//User edit - start
	function user_edit_form()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
	/* 	if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{ */
			$user_id=$this->input->post('user_id');
			
			$sql_user_info="SELECT id,company_name
			FROM inventory_product_user
			WHERE id='$user_id'";
			
			$rslt_user_info=$this->bm->dataSelectDb1($sql_user_info);
			
			$data['rslt_user_info']=$rslt_user_info;
			
			$data['title']="USER FORM...";
			$data['msg']="";
			$data['flag']=1;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('product_user_form',$data);
			$this->load->view('jsAssets');
		//}
	}
	//User edit - end
	
	//User delete - start
	// function user_delete_form()
	// {
		// $session_id = $this->session->userdata('value');
		// if($session_id!=$this->session->userdata('session_id'))
		// {
			// $this->logout();
		// }
		// else
		// {
			// $user_id=$this->input->post('user_id');
			
			// //-delete start
		// echo	$sql_delete_user="DELETE FROM inventory_product_user WHERE id='$user_id'";
			
			// $rslt_delete_user=$this->bm->dataDeleteDB1($sql_delete_user);
			// //-delete end
			
			// //-reload list - start
	// echo		$sql_user_list="SELECT * FROM inventory_product_user";
			
			// $rslt_user_list=$this->bm->dataSelectDb1($sql_user_list);
			// //-reload list - end
			
			// $data['rslt_user_list']=$rslt_user_list;
			
			// $this->load->view('header2');
			// $this->load->view('product_user_list',$data);
			// $this->load->view('footer');
		// }
	// }
	//user delete - end
	
	function product_dlv_form()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{ */                       
			$owner_sql="SELECT id, full_name FROM inventory_product_owner";
			// echo $jetty_list_query;
			$owner_list=$this->bm->dataSelectDb1($owner_sql);
			$data['owner_list']=$owner_list;

			 $usr_sql="SELECT id,company_name FROM inventory_product_user";
			// echo $jetty_list_query;
			$usr_list=$this->bm->dataSelectDb1($usr_sql);
			$data['usr_list']=$usr_list;

			$login_id = $this->session->userdata('login_id');
			$data['title']="PRODUCT DELIVERY FORM...";
			$data['login_id']=$login_id;
			$data['editflag']=0;
			$data['msg']="";
			

			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('product_dlv_form',$data);
			$this->load->view('jsAssets');
		//}
	}
	
	
        
        
	function product_dlv_entry()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{ */
			$login_id = $this->session->userdata('login_id');
			$product_type=$this->input->post('product_type');
			$product_name=$this->input->post('product_name');
			$handover_category=$this->input->post('handover_category');
			$handover_to=$this->input->post('handover_to');
			$ownar_id=$this->input->post('ownar_id');
			$usr_id=$this->input->post('usr_id');
			$handover_date=$this->input->post('handover_date');
			$comments=$this->input->post('comments');
			$handover_by=$this->input->post('handover_by');
			$ipaddr = $_SERVER['REMOTE_ADDR'];
                        
                                                        
                if($this->input->post('update'))
                   { 
                    $delid=$this->input->post('delid'); 
                    //echo $rId;
                     if($handover_to=="owner")
                     {
                    $updateSql="UPDATE cchaportdb.inventory_product_delivery set product_id ='$product_name', handover_category='$handover_category', handover_to='$handover_to',
                            handover_owner_user_id='$ownar_id', handover_date='$handover_date', comments='$comments', handover_by='$handover_by',  last_update=now(), user_ip='$ipaddr'
                             where inventory_product_delivery.id='$delid'"; 
                     }
                     else{
                         $updateSql="UPDATE cchaportdb.inventory_product_delivery set product_id ='$product_name', handover_category='$handover_category', handover_to='$handover_to',
                             handover_owner_user_id='$usr_id',handover_date='$handover_date', comments='$comments', handover_by='$handover_by',  last_update=now(), user_ip='$ipaddr'
                             where inventory_product_delivery.id='$delid'"; 
                     }
                   
                     $updateStat=$this->bm->dataUpdateDB1($updateSql);  
                       if($updateStat==1)
                           $data['msg']="<font size=3 color=green>Data updated successfully.</font>";
                       else 
                           $data['msg']="<font size=3 color=red>Data not updated.</font>";			
                   }
                  //add insert query here
                else{
                    if($handover_to=="owner")
                    {
                    $handOverSql="INSERT INTO cchaportdb.inventory_product_delivery(`product_id`,`handover_category`, `handover_to`, handover_owner_user_id,
                               `handover_date`, `comments`,`handover_by`, `last_update`, `user_ip`)
                                VALUES('$product_name', '$handover_category', '$handover_to', '$ownar_id', '$handover_date',
                                '$comments','$handover_by', now(), '$ipaddr' )";
                    }
                    else
                    {
                        $handOverSql="INSERT INTO cchaportdb.inventory_product_delivery(`product_id`,`handover_category`, `handover_to`, handover_owner_user_id,
                               `handover_date`, `comments`,`handover_by`, `last_update`, `user_ip`)
                                VALUES('$product_name', '$handover_category', '$handover_to','$usr_id', '$handover_date',
                                '$comments','$handover_by', now(), '$ipaddr' )"; 
                    }
                    //echo $handOverSql;
                    $insertStat=$this->bm->dataInsertDB1($handOverSql);  
                
                    if($insertStat==1)
                          $data['msg']="<font size=4 color=green>Data inserted successfully.</font>";

                    else
                          $data['msg']="<font size=3 color=red>Data not inserted.</font>";
                }    

                $data['title']="PRODUCT DELIVERY FORM...";
				$data['login_id']=$login_id;
		            
                $owner_sql="SELECT id, full_name FROM inventory_product_owner";
                // echo $jetty_list_query;
                $owner_list=$this->bm->dataSelectDb1($owner_sql);
                $data['owner_list']=$owner_list;

                 $usr_sql="SELECT id,company_name FROM inventory_product_user";
                // echo $jetty_list_query;
                $usr_list=$this->bm->dataSelectDb1($usr_sql);
                $data['usr_list']=$usr_list;

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('product_dlv_form',$data);
			$this->load->view('jsAssets');
		//}
	}
	
	
	function networkProductDeliveryList()
	{
		
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{ */

			if($this->input->post('delete'))
			{
				$deliId=$this->input->post('dID');
				$deleteSql="DELETE FROM inventory_product_delivery WHERE inventory_product_delivery.id='$deliId'";
				$deleteStat=$this->bm->dataDeleteDB1($deleteSql);
			}
			$listSql="SELECT inventory_product_delivery.`id`,`product_id`, `inventory_product_type`.id AS typeid, `short_name`,`prod_name`, 
				`handover_category`,`handover_to`,handover_owner_user_id,
					CASE 
							WHEN handover_to ='owner' THEN  full_name
							WHEN handover_to <> 'owner' THEN company_name
							END
							AS owner_user,
							`handover_date`,`comments`,`handover_by`  
					FROM `inventory_product_delivery` 
					INNER JOIN `inventory_product_info` ON `inventory_product_delivery`.`product_id`=inventory_product_info.`id`
					INNER JOIN `inventory_product_type` ON `inventory_product_type`.`id`=inventory_product_info.type_id
					LEFT JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_delivery.handover_owner_user_id
					AND handover_to ='owner'
					LEFT JOIN `inventory_product_user` ON `inventory_product_user`.id=inventory_product_delivery.handover_owner_user_id
					AND handover_to <> 'owner' order by inventory_product_delivery.`id` desc";

			$list=$this->bm->dataSelectDb1($listSql);
			$data['list']=$list;

			$data['tableTitle']="PRODUCT DELEDERY LIST";
			$data['title']="PRODUCT DELEDERY LIST";

			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('networkProductDeliveryList',$data);
			$this->load->view('jsAssets');
			
		//}
		
	}
        
        
	function networkProductDeliveryListEdit()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{ */
			$deliId=$this->input->post('deliveryID');
			
			$selectSql="SELECT inventory_product_delivery.`id`,`product_id`, `inventory_product_type`.id AS typeid, `short_name`,`prod_name`, 
			`handover_category`,`handover_to`,handover_owner_user_id,
				CASE 
						WHEN handover_to ='owner' THEN  full_name
						WHEN handover_to <> 'owner' THEN company_name
						END
						AS owner_user,
						`handover_date`,`comments`,`handover_by`  
				FROM `inventory_product_delivery` 
				INNER JOIN `inventory_product_info` ON `inventory_product_delivery`.`product_id`=inventory_product_info.`id`
				INNER JOIN `inventory_product_type` ON `inventory_product_type`.`id`=inventory_product_info.type_id
				LEFT JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_delivery.handover_owner_user_id
				AND handover_to ='owner'
				LEFT JOIN `inventory_product_user` ON `inventory_product_user`.id=inventory_product_delivery.handover_owner_user_id
				AND handover_to <> 'owner' WHERE inventory_product_delivery.id='$deliId'";
						// echo $selectSql;
			$delv_details=$this->bm->dataSelectDb1($selectSql);
			$data['delv_details']=$delv_details;                
			$data['editflag']=1;
			
				$owner_sql="SELECT id, full_name FROM inventory_product_owner";
			// echo $jetty_list_query;
			$owner_list=$this->bm->dataSelectDb1($owner_sql);
			$data['owner_list']=$owner_list;

				$usr_sql="SELECT id,company_name FROM inventory_product_user";
			// echo $jetty_list_query;
			$usr_list=$this->bm->dataSelectDb1($usr_sql);
			$data['usr_list']=$usr_list;

			$data['title']="PRODUCT RECEIVED FORM.";
			// $data['msg']="";
			$data['login_id']=$login_id;

			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('product_dlv_form',$data);
			$this->load->view('jsAssets');
		//}            
	} 
	//product delivery form - end
	 
	 
	
	// SOURAV Pliot Entry
	function pilot_vsl_entry_rpt()
	{
			$data['msg']="";

			$this->load->view('cssAssets');
			$this->load->view('pilot_vsl_entry_rpt_view',$data);
		   	$this->load->view('myclosebar');
			$this->load->view('jsAssets');
	}
	
	function update_pilot_vsl_status()
	{
			$vslEntryId=$this->input->post('vslEntryId');
			
			//echo $vslEntryId;
			$data['msg']="";
			
			$strUpdate="update doc_vsl_info set status=1 where id=$vslEntryId";
						
			$stat = $this->bm->dataInsertDB1($strUpdate);
						
			if($stat==1)
				$data['msg']="<font color='green' size=2>Data Successfully Updated</font>";
			else
				$data['msg']="<font color='red' size=2>Data Not Updated</font>";

			$this->load->view('pilot_vsl_entry_rpt_view',$data);

		   $this->load->view('myclosebar');
  
	}
	// SOURAV
	//---------Sumon--------------Network Product Entry-----------------------------------------------------
	function networkProductEntryForm()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{ */
		$data['title']="PRODUCT ENTRY FORM.";
		$data['msg']="";
		$data['flag']=0;
		
		$data['login_id']=$login_id;
		$data['editFlag']=0;
		$product_sql="SELECT id,IF(short_name='Monitor',CONCAT(short_name,'-',product_desc),short_name) AS short_name FROM cchaportdb.inventory_product_type ORDER BY short_name ASC";
		// echo $jetty_list_query;
		$product_list=$this->bm->dataSelectDb1($product_sql);
		$data['product_list']=$product_list;
		
		$location_sql="SELECT id, location_name FROM inventory_product_location";
		// echo $jetty_list_query;
		$location_list=$this->bm->dataSelectDb1($location_sql);
		$data['location_list']=$location_list;
		
		$owner_sql="SELECT id, full_name FROM inventory_product_owner";
		// echo $jetty_list_query;
		$owner_list=$this->bm->dataSelectDb1($owner_sql);
		$data['owner_list']=$owner_list;
		
			$usr_sql="SELECT id,company_name FROM inventory_product_user";
		// echo $jetty_list_query;
		$usr_list=$this->bm->dataSelectDb1($usr_sql);
		$data['usr_list']=$usr_list;
				

		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('networkProductEntryForm',$data);
		$this->load->view('jsAssets');

		//}
	}
        
	function networkProductEntryPerform()
	{
		$login_id = $this->session->userdata('login_id');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{ */
			//product_type serial_no rcv_date ip_addr dec_id location product_user ownar_name rcv_by
			$product_type=$this->input->post('product_type');
			$serial_no=$this->input->post('serial_no');
			$imei_number=$this->input->post('imei_number');
			$prod_name=$this->input->post('prod_name');
			$rcv_date=$this->input->post('rcv_date'); 
			$ip_addr=$this->input->post('ip_addr'); 
			$dec_id=$this->input->post('dec_id'); 
			$location=$this->input->post('location'); 
			$loc_dtl=trim($this->input->post('loc_dtl')); 
			$product_user=$this->input->post('product_user'); 
			$ownar_id=$this->input->post('ownar_id'); 
			$rcv_by=$this->input->post('rcv_by'); 

			
			$strPordDtl = "select count(*) as rtnValue from inventory_product_location_details where location_details = '$loc_dtl'";
			$ack = $this->bm->dataReturnDb1($strPordDtl);
			$prodLocDtlId = 0;
			if($ack==0)
			{
				$strIn = "INSERT INTO inventory_product_location_details(location_id,location_details,updated_by,updated_time,ip_addr) 
				VALUES ('$location','$loc_dtl','$login_id',now(),'$ipaddr')";
				$inSt=$this->bm->dataInsertDB1($strIn);
				if($inSt)
				{
					$strDtlId = "select id as rtnValue from inventory_product_location_details where location_details = '$loc_dtl'";
					$prodLocDtlId = $this->bm->dataReturnDb1($strDtlId);
				}
			}
			else
			{
				$strDtlId = "select id as rtnValue from inventory_product_location_details where location_details = '$loc_dtl'";
				$prodLocDtlId = $this->bm->dataReturnDb1($strDtlId);
			}
			//echo $prodLocDtlId;
			if($this->input->post('update'))
			{
				$productId=$this->input->post('pid');  
				$serial_chk_sql="SELECT  COUNT(*) AS rtnValue FROM inventory_product_info WHERE prod_serial!= 'missing' AND prod_serial='$serial_no'
								AND inventory_product_info.id!='$productId'";
				$serialStat=$this->bm->dataReturnDb1($serial_chk_sql);
				if($serialStat==0)
				{
					$updateSql="UPDATE cchaportdb.inventory_product_info set loc_detail_id ='$prodLocDtlId', owner_id='$ownar_id', type_id='$product_type',
							prod_name='$prod_name', prod_serial='$serial_no',imei_number='$imei_number', prod_ip='$ip_addr', prod_deck_id='$dec_id',  prod_rcv_date='$rcv_date', prod_rcv_by='$rcv_by', 
							last_update=now() where inventory_product_info.id='$productId'";   
					
					$updateStat=$this->bm->dataUpdateDB1($updateSql);  
					//               echo $updateSql;
					//return;
					if($updateStat==1)
					{
						$data['msg']="<font size=3 color=green>Data updated successfully.</font>";
					}
					else {
						$data['msg']="<font size=3 color=red>Data not updated.</font>";
					}
				}
				else
				{
					$data['msg']="<font size=3 color=red>Duplicate Serial number is found!!</font>";
				}
				
			}
			else
			{
				$serial_chk_sql="SELECT  COUNT(*) AS rtnValue FROM inventory_product_info WHERE prod_serial!= 'missing' AND prod_serial='$serial_no'";
				$serialStat=$this->bm->dataReturnDb1($serial_chk_sql);
				if($serialStat==0)
				{
					$insertSql="INSERT INTO cchaportdb.inventory_product_info(loc_detail_id, owner_id, type_id, prod_name, prod_serial, imei_number, prod_ip, 
							prod_deck_id, prod_rcv_date, prod_rcv_by, last_update) VALUES('$prodLocDtlId', '$ownar_id', '$product_type',
							'$prod_name','$serial_no', '$imei_number', '$ip_addr', '$dec_id', '$rcv_date', '$rcv_by', now())";

				// echo $insertSql;
				//    return;
					$insertStat=$this->bm->dataInsertDB1($insertSql);  
					if($insertStat==1)
					{
						$data['msg']="<font size=3 color=green>Data inserted successfully.</font>";
					}
					else {
						$data['msg']="<font size=3 color=red>Data not inserted.</font>";
					}
				}
				else
				{
						$data['msg']="<font size=3 color=red>Duplicate Serial number is found!!</font>";
				}
			}
			

			$data['title']="PRODUCT ENTRY FORM.";
			// $data['msg']="";
			$data['login_id']=$login_id;
			$data['editFlag']=0;
			$product_sql="SELECT id,IF(short_name='Monitor',CONCAT(short_name,'-',product_desc),short_name) AS short_name FROM cchaportdb.inventory_product_type ORDER BY short_name ASC";
			// echo $jetty_list_query;
			$product_list=$this->bm->dataSelectDb1($product_sql);
			$data['product_list']=$product_list;

			$location_sql="SELECT id, location_name FROM inventory_product_location";
			// echo $jetty_list_query;
			$location_list=$this->bm->dataSelectDb1($location_sql);
			$data['location_list']=$location_list;

			$owner_sql="SELECT id, full_name FROM inventory_product_owner";
			// echo $jetty_list_query;
			$owner_list=$this->bm->dataSelectDb1($owner_sql);
			$data['owner_list']=$owner_list;
			
			$usr_sql="SELECT id,company_name FROM inventory_product_user";
			// echo $jetty_list_query;
			$usr_list=$this->bm->dataSelectDb1($usr_sql);
			$data['usr_list']=$usr_list;
			$data['flag']=0;

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('networkProductEntryForm',$data);
			$this->load->view('jsAssets');
		//}
	}
         
                
	function networkProductEntryList()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{ */
			
			$sql_user_num="select count(*) as rtnValue from inventory_product_info";			
			$segment_three = $this->uri->segment(3);				
			$config = array();
			$config["base_url"] = site_url("report/networkProductEntryList/$segment_three");
			
			$config["total_rows"] = $this->bm->dataReturnDb1($sql_user_num);
			$config["per_page"] = 30;
			$offset = $this->uri->segment(4, 0);
			$config["uri_segment"] = 4;
			$limit=$config["per_page"];
			
			$this->pagination->initialize($config);
			$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;				
			$start=$page;

			if($this->input->post('delete'))
			{
				$productId=$this->input->post('pid');
				$deleteSql="DELETE FROM inventory_product_info WHERE inventory_product_info.id='$productId'";
				$deleteStat=$this->bm->dataDeleteDB1($deleteSql);
			}
			
			$listSql="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
					prod_serial,imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
					LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
					INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
					INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
					order by inventory_product_info.id limit $start,$limit";
			
			$list=$this->bm->dataSelectDb1($listSql);
			$data['list']=$list;
			$data['title']="Product List";
			$data['start']=$start;
			$data["links"] = $this->pagination->create_links();

			$data['tableTitle']="PRODUCT LIST";
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('networkProductList',$data);
			$this->load->view('jsAssets');  
			
	/* 			$this->load->view('cssVesselList');
	$this->load->view('jsVesselList');
		$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('networkProductList',$data);
			$this->load->view('jsAssets');  */ 
			/* 
				$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('networkProductEntryForm',$data);
		$this->load->view('jsAssets'); */
			
		//}
	}
		
		
	function networkProductEntryListBySearch()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{ */
			$search_by = $this->input->post('search_by');
			$data['title'] = "network Product Entry List By Search";

			if($search_by=="serial")
			{
			$serial=trim($this->input->post('searchInput'));
			$data['tableTitle']="Product Serial No:  ".$serial;			 
				$listSql="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
					prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
					LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
					INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
					INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
					WHERE prod_serial='$serial'";            
			}

			else if($search_by=="category")
			{
				$category=trim($this->input->post('searchVal'));
					
					$listSql="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
						prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
						LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
						INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
						INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
						WHERE type_id='$category'";
					$category_name_sql="SELECT inventory_product_type.id ,IF(short_name='Monitor',CONCAT(short_name,'-',product_desc),short_name) AS detl 
							FROM inventory_product_type WHERE cchaportdb.inventory_product_type.id='$category'";
					$cat_name=$this->bm->dataSelectDb1($category_name_sql);
					$data['tableTitle']="Product category: ".$cat_name[0]['detl'];
					
				}
			else if($search_by=="product")
		{
			$product_name=trim($this->input->post('searchInput'));
			$data['tableTitle']="Product Name:  ".$product_name;		 
			$listSql="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
					prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
					LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
					INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
					INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
					WHERE prod_name='$product_name'";
			
		}
		else if($search_by=="location")
		{
			$location=trim($this->input->post('searchVal'));
			$data['tableTitle']="Location:  ".$location;
		
				$listSql="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
					prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
					LEFT JOIN inventory_product_location_details ON  inventory_product_location_details.id=inventory_product_info.loc_detail_id
					INNER JOIN inventory_product_location ON inventory_product_location_details.location_id=inventory_product_location.id
					INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
					INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
					WHERE location_name='$location'";
			
		}
			else if($search_by=="user")
		{
			$updated_by=trim($this->input->post('searchVal'));
			$data['tableTitle']="Records updated by:  ".$updated_by;
		
				$listSql="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
					prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
					LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
					INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
					INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
					WHERE prod_rcv_by ='$updated_by'";
			
		}
		else if($search_by=="ip_addr")
			{
				$ip_addr=trim($this->input->post('searchInput'));
				$data['tableTitle']="IP Address:  ".$ip_addr;

				
						$listSql="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
							prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
							LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
							INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
							INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
							WHERE prod_ip='$ip_addr'";  
			}
			$list=$this->bm->dataSelectDb1($listSql);
			$data['list']=$list;

			//$data['tableTitle']="PRODUCT LIST";
			
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('networkProductList',$data);
		$this->load->view('jsAssets');
			
		//}
		
	}
		
	function networkProductCkecked()
	{
		$login_id = $this->session->userdata('login_id');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{ */
		$chkId=$this->input->post('chkId');    
		$updateSql="UPDATE cchaportdb.inventory_product_info set checkStatus=1, checked_by='$login_id'
					where inventory_product_info.id='$chkId' and checkStatus=0";   
					
		$updateStat=$this->bm->dataUpdateDB1($updateSql); 
		
				
		$sql_user_num="select count(*) as rtnValue from inventory_product_info";			
		$segment_three = $this->uri->segment(3);				
		$config = array();
		$config["base_url"] = site_url("report/networkProductEntryList/$segment_three");
				
		$config["total_rows"] = $this->bm->dataReturnDb1($sql_user_num);
		$config["per_page"] = 30;
		$offset = $this->uri->segment(4, 0);
		$config["uri_segment"] = 4;
		$limit=$config["per_page"];
				
		$this->pagination->initialize($config);
		$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;				
		$start=$page;

			
			$listSql="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
					prod_serial,imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
					LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
					INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
					INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
					order by inventory_product_info.id limit $start,$limit";
			
			$list=$this->bm->dataSelectDb1($listSql);
			$data['list']=$list;
			$data['start']=$start;
			$data["links"] = $this->pagination->create_links();

			$data['tableTitle']="PRODUCT LIST";
			
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('networkProductList',$data);
			$this->load->view('jsAssets');
		//}
	}
  
		
		
               
	function workstationList()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{ */

			if($this->input->post('delete'))
			{
				$productId=$this->input->post('pid');
				$deleteSql="DELETE FROM inventory_product_info WHERE inventory_product_info.id='$productId'";
				$deleteStat=$this->bm->dataDeleteDB1($deleteSql);
			}
			$search_by = $this->input->post('search_by');
	
			if($search_by=="serial")
				{
				$serial=trim($this->input->post('searchInput'));
				$data['tableTitle']="Product Serial No:  ".$serial;
				$listSql="SELECT inventory_product_info.id, inventory_product_info.loc_detail_id,location_details, inventory_product_info.owner_id,
					full_name, inventory_product_info.type_id, short_name,inventory_product_info.prod_name,
					inventory_product_info.prod_serial,inventory_product_info.prod_ip, inventory_product_info.prod_deck_id,
					inventory_product_info.prod_rcv_date, inventory_product_info.prod_rcv_by,
					info.prod_name AS mName,info.prod_serial mSerial    
					FROM inventory_product_info 
					LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
					INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
					INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
					LEFT JOIN inventory_workstation_monitor ON inventory_product_info.id=inventory_workstation_monitor.workstation_id
					LEFT JOIN inventory_product_info info ON info.id=inventory_workstation_monitor.monitor_id
					WHERE inventory_product_type.id='6' and inventory_product_info.prod_serial='$serial'";            
	}

				else if($search_by=="ip_addr")
	{
		$ip_addr=trim($this->input->post('searchInput'));
		$data['tableTitle']="IP Address:  ".$ip_addr;
	// $data['rot']=$serial;
		
					$listSql="SELECT inventory_product_info.id, inventory_product_info.loc_detail_id,location_details, inventory_product_info.owner_id,
					full_name, inventory_product_info.type_id, short_name,inventory_product_info.prod_name,
					inventory_product_info.prod_serial,inventory_product_info.prod_ip, inventory_product_info.prod_deck_id,
					inventory_product_info.prod_rcv_date, inventory_product_info.prod_rcv_by,
					info.prod_name AS mName,info.prod_serial mSerial    
					FROM inventory_product_info 
					LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
					INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
					INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
					LEFT JOIN inventory_workstation_monitor ON inventory_product_info.id=inventory_workstation_monitor.workstation_id
					LEFT JOIN inventory_product_info info ON info.id=inventory_workstation_monitor.monitor_id
					WHERE inventory_product_type.id='6' and inventory_product_info.prod_ip='$ip_addr'";
//                    echo $listSql;
//                    return;
			
	}
		else
		{
		$data['tableTitle']="WORKSTATION LIST";
		$listSql="SELECT inventory_product_info.id, inventory_product_info.loc_detail_id,location_details, inventory_product_info.owner_id,
				full_name, inventory_product_info.type_id, short_name,inventory_product_info.prod_name,
				inventory_product_info.prod_serial,inventory_product_info.prod_ip, inventory_product_info.prod_deck_id,
				inventory_product_info.prod_rcv_date, inventory_product_info.prod_rcv_by,
				info.prod_name AS mName,info.prod_serial mSerial    
				FROM inventory_product_info 
				LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
				INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
				LEFT JOIN inventory_workstation_monitor ON inventory_product_info.id=inventory_workstation_monitor.workstation_id
				LEFT JOIN inventory_product_info info ON info.id=inventory_workstation_monitor.monitor_id
				WHERE inventory_product_type.id='6'";
		}
		$list=$this->bm->dataSelectDb1($listSql);
		$data['list']=$list;
		$data['title']="Workstation List";


			
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('workstationProductList',$data);
		$this->load->view('jsAssets');
			
		//}
		
	}
		
	function addWorkStationItem()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{ */
			$data['product_info_id'] = $this->input->post('product_info_id');
			$data['product_name'] = $this->input->post('product_name');
			$data['product_serial'] = $this->input->post('product_serial');
			$data['product_model'] = $this->input->post('product_model');

			$monitor_sql="SELECT id,CONCAT(TRIM(prod_name),'-',TRIM(prod_serial)) AS short_name FROM inventory_product_info WHERE type_id IN(13,14,15,16,18,19) ORDER BY 
						short_name ASC";

			$monitor_list=$this->bm->dataSelectDb1($monitor_sql);
			$data['monitor_list']=$monitor_list;
			
			$data['title']="ADD WORKSTATION ITEM";
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('workStationItemForm',$data);
			$this->load->view('jsAssets');

		//}
	}
        
	function addWorkStationItemPerform()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		/* 
		if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{ */
			$product_info_id = $this->input->post('product_info_id');
			$monitor = $this->input->post('monitor');

			$sql_insert="REPLACE INTO inventory_workstation_monitor(workstation_id, monitor_id) VALUES('$product_info_id','$monitor')";
			$stat=$this->bm->dataInsertDB1($sql_insert);
			// echo $sql_insert;
			//return;
			if($stat==1)
				$msg="<font color='green'><b>Succesfully inserted</b></font>";
			else
				$msg="<font color='red'><b>Insertion failed</b></font>";

			$monitor_sql="SELECT id,CONCAT(TRIM(prod_name),'-',TRIM(prod_serial)) AS short_name FROM inventory_product_info WHERE type_id IN(13,14,15,16,18,19) ORDER BY 
						short_name ASC";    
			$monitor_list=$this->bm->dataSelectDb1($monitor_sql);
			$data['monitor_list']=$monitor_list;
			$data['msg']=$msg;
			$data['title']="ADD WORKSTATION ITEM";
			
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('workStationItemForm',$data);
			$this->load->view('jsAssets');
			
		//}
		
	}
        	   
        
	function networkProductListEdit()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		// if($LoginStat!="yes")n_id'))
		/* if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{ */
			$productId=$this->input->post('prodructID');
			
			$selectSql="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name, 
				`inventory_product_location`.id as loc_id,`location_name`, 
					prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by FROM inventory_product_info 
					LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
					INNER JOIN `inventory_product_location` ON `inventory_product_location`.`id`=inventory_product_location_details.`location_id`
					INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
					INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
					WHERE inventory_product_info.id='$productId'";
//                echo $selectSql;
//                return;
			$product_details=$this->bm->dataSelectDb1($selectSql);
			$data['product_details']=$product_details;
			
			$data['editFlag']=1;

			$data['title']="PRODUCT ENTRY FORM.";
			$data['msg']="";
			$data['login_id']=$login_id;

			$product_sql="SELECT id,short_name FROM cchaportdb.inventory_product_type order by short_name asc";
			// echo $jetty_list_query;
			$product_list=$this->bm->dataSelectDb1($product_sql);
			$data['product_list']=$product_list;

			$location_sql="SELECT id, location_name FROM inventory_product_location";
			// echo $jetty_list_query;
			$location_list=$this->bm->dataSelectDb1($location_sql);
			$data['location_list']=$location_list;

			$owner_sql="SELECT id, full_name FROM inventory_product_owner";
			// echo $jetty_list_query;
			$owner_list=$this->bm->dataSelectDb1($owner_sql);
			$data['owner_list']=$owner_list;
			
			$usr_sql="SELECT id,company_name FROM inventory_product_user";
			// echo $jetty_list_query;
			$usr_list=$this->bm->dataSelectDb1($usr_sql);
			$data['usr_list']=$usr_list;

			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('networkProductEntryForm',$data);
			$this->load->view('jsAssets');
		//}
	}
		
	function networkProductReceive()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{ */
		$data['title']="PRODUCT RECEIVED FORM.";
		$data['msg']="";
		$data['login_id']=$login_id;
		$data['editFlag']=0;
		$product_sql="SELECT id,IF(short_name='Monitor',CONCAT(short_name,'-',product_desc),short_name) AS short_name FROM cchaportdb.inventory_product_type ORDER BY short_name ASC";
		// echo $jetty_list_query;
		$product_list=$this->bm->dataSelectDb1($product_sql);
		$data['product_list']=$product_list;
		
		$location_sql="SELECT id, location_name FROM inventory_product_location";
		// echo $jetty_list_query;
		$location_list=$this->bm->dataSelectDb1($location_sql);
		$data['location_list']=$location_list;
		
		$owner_sql="SELECT id, full_name FROM inventory_product_owner";
		// echo $jetty_list_query;
		$owner_list=$this->bm->dataSelectDb1($owner_sql);
		$data['owner_list']=$owner_list;
		
			$usr_sql="SELECT id,company_name FROM inventory_product_user";
		// echo $jetty_list_query;
		$usr_list=$this->bm->dataSelectDb1($usr_sql);
		$data['usr_list']=$usr_list;

		
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('networkProductReceiveForm',$data);
		$this->load->view('jsAssets');

		//}
	}   
        
	function networkProductReceivePerform()
	{
		
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{ */
//product_type prod_name product_type rcv_from ownar_id usr_id rcv_date rcv_by
			$product_type=$this->input->post('product_type');
			$prod_name=$this->input->post('prod_name');
			$recv_category=$this->input->post('recv_category');
			$rcv_from=$this->input->post('rcv_from');
			$rcv_date=$this->input->post('rcv_date'); 
			//  $ip_addr=$this->input->post('ip_addr'); 
			$rcv_comment=$this->input->post('rcv_comment'); 
			// $location=$this->input->post('location'); 
			$usr_id=$this->input->post('usr_id'); 
			$ownar_id=$this->input->post('ownar_id'); 
			$rcv_by=$this->input->post('rcv_by'); 
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			
							
			if($this->input->post('update'))
				{ 
				$rId=$this->input->post('rcvid'); 
				//echo $rId;
				if($rcv_from=='owner'){
				$updateSql="UPDATE cchaportdb.inventory_product_receive set product_id ='$prod_name', rcv_category='$recv_category', rcv_from='$rcv_from',
							rcv_frm_owner_user='$ownar_id', rcv_date='$rcv_date', comments='$rcv_comment', rcv_by='$rcv_by', last_update=now(), user_ip='$ipaddr'
							where inventory_product_receive.id='$rId'";   
				}
				else{
					$updateSql="UPDATE cchaportdb.inventory_product_receive set product_id ='$prod_name', rcv_category='$recv_category', rcv_from='$rcv_from',
							rcv_frm_owner_user='$usr_id', rcv_date='$rcv_date', comments='$rcv_comment', rcv_by='$rcv_by', last_update=now(), user_ip='$ipaddr' 
							where inventory_product_receive.id='$rId'";  

				}
					$updateStat=$this->bm->dataUpdateDB1($updateSql);  
								// echo $tag."=".$updateSql;
					//return;
					if($updateStat==1)
					{
						$data['msg']="<font size=3 color=green>Data updated successfully.</font>";
					}
					else {
						$data['msg']="<font size=3 color=red>Data not updated.</font>";
					}
				}
			else {
			
			if($rcv_from=="owner")
			{
				$ownerSql="INSERT INTO cchaportdb.inventory_product_receive(`product_id`,  `rcv_category`, `rcv_from`, 
						`rcv_frm_owner_user`, `rcv_date`, `comments`, `rcv_by`, `last_update`, `user_ip`) 
						VALUES('$prod_name', '$recv_category', '$rcv_from',
						'$ownar_id','$rcv_date', '$rcv_comment', '$rcv_by', now(), '$ipaddr' )";

				//  echo $ownerSql;
				$insertStat=$this->bm->dataInsertDB1($ownerSql);  
			}
			else
			{
				$userSql="INSERT INTO cchaportdb.inventory_product_receive(`product_id`,  `rcv_category`, `rcv_from`, 
				`rcv_frm_owner_user`, `rcv_date`, `comments`, `rcv_by`, `last_update`, `user_ip`) 
				VALUES('$prod_name', '$recv_category', '$rcv_from',
				'$usr_id','$rcv_date',  '$rcv_comment', '$rcv_by', now(), '$ipaddr' )";
			// echo $userSql;
				$insertStat=$this->bm->dataInsertDB1($userSql);  
				
			}
			if($insertStat==1)
			{
				$data['msg']="<font size=3 color=green>Data inserted successfully.</font>";
			}
			else
			{
				$data['msg']="<font size=3 color=red>Data not inserted.</font>";
			}
		}       
		$data['title']="PRODUCT RECEIVED FORM.";
		// $data['msg']="";
		$data['login_id']=$login_id;
		$data['editFlag']=0;
		$product_sql="SELECT id,IF(short_name='Monitor',CONCAT(short_name,'-',product_desc),short_name) AS short_name FROM cchaportdb.inventory_product_type ORDER BY short_name ASC";
		// echo $jetty_list_query;
		$product_list=$this->bm->dataSelectDb1($product_sql);
		$data['product_list']=$product_list;
		
		$location_sql="SELECT id, location_name FROM inventory_product_location";
		// echo $jetty_list_query;
		$location_list=$this->bm->dataSelectDb1($location_sql);
		$data['location_list']=$location_list;
		
		$owner_sql="SELECT id, full_name FROM inventory_product_owner";
		// echo $jetty_list_query;
		$owner_list=$this->bm->dataSelectDb1($owner_sql);
		$data['owner_list']=$owner_list;
		
			$usr_sql="SELECT id,company_name FROM inventory_product_user";
		// echo $jetty_list_query;
		$usr_list=$this->bm->dataSelectDb1($usr_sql);
		$data['usr_list']=$usr_list;

		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('networkProductReceiveForm',$data);
		$this->load->view('jsAssets');

		//}  
	}
        
       
     
        
	function networkProductReceiveList()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{ */

			if($this->input->post('delete'))
			{
				$rcvId=$this->input->post('pid');
				$deleteSql="DELETE FROM inventory_product_receive WHERE inventory_product_receive.id='$rcvId'";
				$deleteStat=$this->bm->dataDeleteDB1($deleteSql);
			}
			$listSql="SELECT *
					FROM ((SELECT inventory_product_receive.id, `product_id`, `prod_name`, `rcv_category`, `rcv_from`,`rcv_frm_owner_user`, full_name AS owner_user,`rcv_date`,`comments`,`rcv_by`
				FROM `inventory_product_receive` 
				INNER JOIN `inventory_product_info` ON `inventory_product_receive`.`product_id`=inventory_product_info.`id`
				INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_receive.rcv_frm_owner_user 
					WHERE rcv_from='owner')
				UNION ALL
				(SELECT `inventory_product_receive`.`id`, `product_id`, `prod_name`, `rcv_category`, `rcv_from`,`rcv_frm_owner_user`, company_name AS owner_user,`rcv_date`,`comments`,`rcv_by`
				FROM `inventory_product_receive` 
				INNER JOIN `inventory_product_info` ON `inventory_product_receive`.`product_id`=inventory_product_info.`id`
				INNER JOIN `inventory_product_user` ON `inventory_product_user`.id=inventory_product_receive.rcv_frm_owner_user 
				WHERE rcv_from='user' ))a ORDER BY id DESC";
			
			$list=$this->bm->dataSelectDb1($listSql);
			$data['list']=$list;

			$data['tableTitle']="PRODUCT RECEIVED LIST";
			$data['title']="PRODUCT RECEIVED LIST";


			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('networkProductReceivedList',$data);
			$this->load->view('jsAssets');				
		//}  
	}
        
	function networkProductReceivedEdit()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{ */
			$recvId=$this->input->post('recvID');
			
			$selectSql="SELECT inventory_product_receive.id AS rcv_id, inventory_product_type.id, short_name,`product_id`, `prod_name`, `rcv_category`, `rcv_from`,`rcv_frm_owner_user`, 
						CASE 
						WHEN rcv_from='owner' THEN  full_name
						WHEN rcv_from='user' THEN company_name
						END
						AS owner_user,
				`rcv_date`,`comments`,`rcv_by`
				FROM `inventory_product_receive` 
				INNER JOIN `inventory_product_info` ON `inventory_product_receive`.`product_id`=inventory_product_info.`id`
				INNER JOIN `inventory_product_type` ON `inventory_product_type`.`id`=inventory_product_info.`type_id`
				LEFT JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_receive.rcv_frm_owner_user
				AND rcv_from='owner'
				LEFT JOIN `inventory_product_user` ON `inventory_product_user`.id=inventory_product_receive.rcv_frm_owner_user 
				AND rcv_from='user'
				WHERE inventory_product_receive.id='$recvId'";
			//  echo $selectSql;
//                return;
			$product_details=$this->bm->dataSelectDb1($selectSql);
			$data['product_details']=$product_details;                
			$data['editFlag']=1;

			$data['title']="PRODUCT RECEIVED FORM.";
			// $data['msg']="";
			$data['login_id']=$login_id;

			$product_sql="SELECT id,IF(short_name='Monitor',CONCAT(short_name,'-',product_desc),short_name) AS short_name FROM cchaportdb.inventory_product_type ORDER BY short_name ASC";
			// echo $jetty_list_query;
			$product_list=$this->bm->dataSelectDb1($product_sql);
			$data['product_list']=$product_list;

			$location_sql="SELECT id, location_name FROM inventory_product_location";
			// echo $jetty_list_query;
			$location_list=$this->bm->dataSelectDb1($location_sql);
			$data['location_list']=$location_list;

			$owner_sql="SELECT id, full_name FROM inventory_product_owner";
			// echo $jetty_list_query;
			$owner_list=$this->bm->dataSelectDb1($owner_sql);
			$data['owner_list']=$owner_list;

				$usr_sql="SELECT id,company_name FROM inventory_product_user";
			// echo $jetty_list_query;
			$usr_list=$this->bm->dataSelectDb1($usr_sql);
			$data['usr_list']=$usr_list;


			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('networkProductReceiveForm',$data);
			$this->load->view('jsAssets');
		//}
			
	}
  
		//Network Product Entry----------------------------------------------------------
		//location details___________________________
	function location_detail_form()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
		$login_id = $this->session->userdata('login_id');
		$data['title']="LOCATION DETAIL FORM...";
		$data['msg']="";
		$data['editFlag']=0;

		$data['flag']=0;
				
		$location_sql="SELECT id, location_name FROM inventory_product_location";
		$location_list=$this->bm->dataSelectDb1($location_sql);
		$data['location_list']=$location_list;
			

	
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('location_details_form',$data);
		$this->load->view('jsAssets');
		}    
	}
		
		
	function location_details_save()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{ */
			$loc_id=$this->input->post('location');
			$loc_details=$this->input->post('location_detail');
			$login_id = $this->session->userdata('login_id');
			$user_ip=$_SERVER['REMOTE_ADDR'];
			if($this->input->post('update'))
			{ 
				$loc_dt_id=$this->input->post('loc_dt_id');
				$sql_location_detail_update="UPDATE cchaportdb.inventory_product_location_details set location_id ='$loc_id', location_details='$loc_details', 
														updated_by='$login_id',  updated_time=now(), ip_addr='$user_ip'
														where inventory_product_location_details.id='$loc_dt_id'";
//			
//                                echo $sql_location_detail_update;
//                                return;
//                                
				$updateStat=$this->bm->dataUpdateDB1($sql_location_detail_update);  
				if($updateStat==1)
					$msg="<font size=3 color=green>Data updated successfully.</font>";
				else 
						$msg="<font size=3 color=red>Data not updated.</font>";	

				}
			else{                       
				$sql_location_detail="INSERT INTO inventory_product_location_details(`location_id`, `location_details`, `updated_by`, `updated_time`, `ip_addr`)
										VALUES('$loc_id','$loc_details','$login_id',NOW(),'$user_ip')";
		
//                               echo $sql_location_detail;
//                                return;
				$insertStat=$this->bm->dataInsertDB1($sql_location_detail);
											//  $rslt_insert_location_name=0;
				if($insertStat==1)
						$msg="<font color='green'><b>Succesfully inserted</b></font>";
					else
						$msg="<font color='red'><b>Insertion failed</b></font>";
				}

			$data['title']="LOCATION DETAIL FORM...";
			$data['msg']=$msg;
			$data['editFlag']=0;
			$data['flag']=0;

			$location_sql="SELECT id, location_name FROM inventory_product_location";
						// echo $jetty_list_query;
			$location_list=$this->bm->dataSelectDb1($location_sql);
			$data['location_list']=$location_list;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('location_details_form',$data);
			$this->load->view('jsAssets');
		//}	
	}
                
	function location_details_list()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
		$this->logout();
		}
		else
		{ */
			if($this->input->post('delete'))
			{
				$loc_dtl_id=$this->input->post('lid');
				$deleteSql="DELETE FROM inventory_product_location_details WHERE inventory_product_location_details.id='$loc_dtl_id'";
				$deleteStat=$this->bm->dataDeleteDB1($deleteSql);
			}
				if($this->input->post('search'))
			{
				$loc_id=$this->input->post('location');
				$location_list_Sql="SELECT `inventory_product_location_details`.id as loc_dtl_id, `inventory_product_location_details`.`location_id`,
				`location_details`, `inventory_product_location`.`location_name` FROM `inventory_product_location_details`
				INNER JOIN `inventory_product_location` ON `inventory_product_location`.`id`=`inventory_product_location_details`.`location_id`
				where inventory_product_location.id='$loc_id'";
			}
			else
			{
				$location_list_Sql="SELECT `inventory_product_location_details`.id as loc_dtl_id, `inventory_product_location_details`.`location_id`,
				`location_details`, `inventory_product_location`.`location_name` FROM `inventory_product_location_details`
				INNER JOIN `inventory_product_location` ON `inventory_product_location`.`id`=`inventory_product_location_details`.`location_id`";
			}

			$data['editFlag']=1; 
			$loc_list=$this->bm->dataSelectDb1($location_list_Sql);
			$data['loc_list']=$loc_list;    
			$location_sql="SELECT id, location_name FROM inventory_product_location";
			// echo $jetty_list_query;
			$location_list=$this->bm->dataSelectDb1($location_sql);
			$data['location_list']=$location_list;
			
			$data['title']="LOCATION DETAIL LIST.";


			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('location_details_list',$data);
			$this->load->view('jsAssets');				
		//}	
	}
         
         
    function location_details_list_edit()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		/* if($LoginStat!="yes")
		{
				$this->logout();
		}
        else
		{ */
                $location_dtl_id=$this->input->post('location_dtl_id');
                 $location_list_Sql="SELECT `inventory_product_location_details`.id as loc_dtl_id, `inventory_product_location_details`.`location_id`,
                   `location_details`, `inventory_product_location`.`location_name`, inventory_product_location.id as locId FROM `inventory_product_location_details`
                    INNER JOIN `inventory_product_location` ON `inventory_product_location`.`id`=`inventory_product_location_details`.`location_id`
                    where`inventory_product_location_details`.id='$location_dtl_id'";
                 
//                 echo $location_list_Sql;
//                 return;

                $loc_list=$this->bm->dataSelectDb1($location_list_Sql);
                $data['loc_list']=$loc_list; 
                $data['editFlag']=1;
                $login_id = $this->session->userdata('login_id');
				$data['title']="LOCATION DETAIL FORM...";
				$data['msg']="";
				$data['flag']=1;

				$location_sql="SELECT id, location_name FROM inventory_product_location";
				$location_list=$this->bm->dataSelectDb1($location_sql);
				$data['location_list']=$location_list;
						

				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('location_details_form',$data);
				$this->load->view('jsAssets');
        //}
             
    }
	  
	  //Workstation Report
	  
	  
	function workstationReport()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{ */
			$data['tableTitle']="WORKSTATION REPORT";
			$data['title']="WORKSTATION REPORT";
		
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('workstationProductReport',$data);
			$this->load->view('jsAssets');
			
		//}
		
	}
		
	function workstationReportPerform()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		/* if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{ */

			
			$search_by = $this->input->post('search_by');
	
			if($search_by=="serial")
				{
				$serial=trim($this->input->post('searchInput'));
				$this->data['tableTitle']="Product Serial No:  ".$serial;
				$listSql="SELECT inventory_product_info.id, inventory_product_info.loc_detail_id,location_details, inventory_product_info.owner_id,
					full_name, inventory_product_info.type_id, short_name,inventory_product_info.prod_name,
					inventory_product_info.prod_serial,inventory_product_info.prod_ip, inventory_product_info.prod_deck_id,
					inventory_product_info.prod_rcv_date, inventory_product_info.prod_rcv_by,
					info.prod_name AS mName,info.prod_serial mSerial    
					FROM inventory_product_info 
					LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
					INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
					INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
					LEFT JOIN inventory_workstation_monitor ON inventory_product_info.id=inventory_workstation_monitor.workstation_id
					LEFT JOIN inventory_product_info info ON info.id=inventory_workstation_monitor.monitor_id
					WHERE inventory_product_type.id='6' and inventory_product_info.prod_serial='$serial'";            
				}

				else if($search_by=="ip_addr")
			{
				$ip_addr=trim($this->input->post('searchInput'));
				$this->data['tableTitle']="IP Address:  ".$ip_addr;
			// $data['rot']=$serial;
				
					$listSql="SELECT inventory_product_info.id, inventory_product_info.loc_detail_id,location_details, inventory_product_info.owner_id,
					full_name, inventory_product_info.type_id, short_name,inventory_product_info.prod_name,
					inventory_product_info.prod_serial,inventory_product_info.prod_ip, inventory_product_info.prod_deck_id,
					inventory_product_info.prod_rcv_date, inventory_product_info.prod_rcv_by,
					info.prod_name AS mName,info.prod_serial mSerial    
					FROM inventory_product_info 
					LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
					INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
					INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
					LEFT JOIN inventory_workstation_monitor ON inventory_product_info.id=inventory_workstation_monitor.workstation_id
					LEFT JOIN inventory_product_info info ON info.id=inventory_workstation_monitor.monitor_id
					WHERE inventory_product_type.id='6' and inventory_product_info.prod_ip='$ip_addr'";
		//                    echo $listSql;
		//                    return;
					
			}
		else
		{
			$this->data['tableTitle']="WORKSTATION LIST";
			$listSql="SELECT inventory_product_info.id, inventory_product_info.loc_detail_id,location_details, inventory_product_info.owner_id,
					full_name, inventory_product_info.type_id, short_name,inventory_product_info.prod_name,
					inventory_product_info.prod_serial,inventory_product_info.prod_ip, inventory_product_info.prod_deck_id,
					inventory_product_info.prod_rcv_date, inventory_product_info.prod_rcv_by,
					info.prod_name AS mName,info.prod_serial mSerial    
					FROM inventory_product_info 
					LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
					INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
					INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
					LEFT JOIN inventory_workstation_monitor ON inventory_product_info.id=inventory_workstation_monitor.workstation_id
					LEFT JOIN inventory_product_info info ON info.id=inventory_workstation_monitor.monitor_id
					WHERE inventory_product_type.id='6' ORDER BY location_details ASC";
			}
			$list=$this->bm->dataSelectDb1($listSql);
			$this->data['list']=$list;

			$this->load->library('M_pdf');
			$mpdf->use_kwt = true;
			//$this->data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			//$this->data['title']="Country Wise Import Report";

			$html=$this->load->view('workstationReportView',$this->data, true); 
			$pdfFilePath ="inventory_report".time().".pdf";

			//actually, you can pass mPDF parameter on this load() function
			$pdf = $this->m_pdf->load();
			//$pdf->SetWatermarkText('CPA CTMS');
			$pdf->showWatermarkText = true;	
							
			//$stylesheet = file_get_contents('resources/styles/test.css'); // external css
			date_default_timezone_set('Asia/Dhaka');
			//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO}|Date:  {DATE M d, Y h:i:sa}');
			$pdf->WriteHTML($html,2);
			$pdf->Output($pdfFilePath, "I"); // For Show Pdf	

		
				//$this->load->view('header5');
			$this->load->view('workstationReportView',$data);
			// $this->load->view('footer_1');
			
		//}
		
	}
	  	
	// Equipment Entry Form  
	function equipmentEntryForm()
	{
        $session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
                if($this->input->post('delete'))
                {
                    $eid=$this->input->post('eid');
                    $deleteSql="DELETE FROM ctmsmis.equip_assign_detail WHERE ctmsmis.equip_assign_detail.id='$eid'";
                    $deleteStat=$this->bm->dataDeleteDb2($deleteSql);
                }
                $rslt_sql="SELECT id, `workshop_zone`, `equipment`, `equip_num`,non_operational,equip_supply, `updated_by`, `update_time` FROM ctmsmis.equip_assign_detail";
                $result=$this->bm->dataSelectDb2($rslt_sql);			
                $data['result']=$result;
                $data['editFlag']=0;
                $msg="";
                $data['title']="Equipment Assign Entry Form";
                $data['msg']=$msg;
                $this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
                $this->load->view('equipmentEntryForm',$data);
                $this->load->view('jsAssetsList');
		}
	}
        
   	function equipmentEntryFormPerform()
	{ 
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
			{
			$login_id = $this->session->userdata('login_id');
			$zone=$this->input->post('zone');
			$equipment=$this->input->post('equipment');
			$total_equip=$this->input->post('total_equip');
			$total_supply=$this->input->post('total_supply');
			$nonOperational=$this->input->post('nonOperational');
		
			
			if($this->input->post('go_to_dashboard'))
			{
				//echo "go_to_dashboard";
				$sql_equip_demand="SELECT equipment,tot_equip,tot_out_of_order,tot_supply,IFNULL(tot_demand,0) AS  tot_demand,
				(tot_equip-tot_out_of_order-tot_supply) AS tot_stand_by,DATE(NOW()) AS cur_dt
				FROM (
				SELECT * FROM (SELECT 
				IF(equipment='RST Loaded 45 Ton','RST 45 Ton(L)',equipment) AS equipment,
				SUM(equip_num) AS tot_equip,SUM(non_operational) AS tot_out_of_order,SUM(equip_supply) AS tot_supply 
				FROM ctmsmis.equip_assign_detail
				GROUP BY equipment) tbl
				LEFT JOIN 
				(
				SELECT equip_type,SUM(equip_demand) AS tot_demand 
				FROM ctmsmis.mis_equip_demand 
				WHERE equip_type IS NOT NULL AND equip_type!=''
				GROUP BY equip_type ) tbl2 ON  tbl.equipment=tbl2.equip_type
				) AS final_tbl";
				
				$rslt_equip_demand=$this->bm->dataSelectDb2($sql_equip_demand);
				
				for($i=0;$i<count($rslt_equip_demand);$i++)
				{
					$equipment=$rslt_equip_demand[$i]['equipment'];
					$tot_out_of_order=$rslt_equip_demand[$i]['tot_out_of_order'];
					$cur_dt=$rslt_equip_demand[$i]['cur_dt'];
					$tot_demand=$rslt_equip_demand[$i]['tot_demand'];
					$tot_supply=$rslt_equip_demand[$i]['tot_supply'];
					$tot_stand_by=$rslt_equip_demand[$i]['tot_stand_by'];
										
					$sql_replace_demand_supply="REPLACE INTO ctmsmis.mis_equip_demand_suply(equipment_type,demand_suply_date,demand,suply,stand_by,out_of_order)
					VALUES('$equipment','$cur_dt','$tot_demand','$tot_supply','$tot_stand_by','$tot_out_of_order')";
					
					$rslt_replace_demand_supply=$this->bm->dataInsertDb2($sql_replace_demand_supply);
				}									
				
				if($rslt_replace_demand_supply)								
					$msg="<font color='green'>Dashboard data updated</font>";
				else
					$msg="<font color='red'>Dashboard data not updated</font>";
			}
			else 
			{
				if($zone=="")
				{
					$msg="<font color='red'><b>Please Select Zone.</b></font>";
				}
				else if($equipment=="")
				{
					$msg="<font color='red'><b>Please Select Equipment.</b></font>";
				}
				else
				{
					if($this->input->post('update'))
					{
						$equipID=$this->input->post('equipID');
						$updateSql="UPDATE ctmsmis.equip_assign_detail set workshop_zone ='$zone', equipment='$equipment', equip_num='$total_equip',non_operational='$nonOperational',equip_supply='$total_supply',
									updated_by='$login_id',  update_time=now() where ctmsmis.equip_assign_detail.id='$equipID'";
						$updateStat=$this->bm->dataUpdatedb2($updateSql);
						
						if($updateStat==1)
							$msg="<font color='green'><b>Succesfully Updated</b></font>";
						else
							$msg="<font color='red'><b>Updation failed</b></font>";				
					}
					// goto dashboard - start
					//else 
					// goto dashboard - end
					else
					{				
						$strChk = "select count(id) as rtnValue 
						from ctmsmis.equip_assign_detail where workshop_zone ='$zone' and equipment='$equipment'";
						$rtnVal = $this->bm->dataReturnDb2($strChk);
						
						if($rtnVal>0)
						{
							$msg="<font color='red'><b>Data Already Exist.</b></font>";
						}
						else
						{
							$insert_sql="INSERT INTO ctmsmis.equip_assign_detail(`workshop_zone`, `equipment`, `equip_num`, non_operational,equip_supply,`updated_by`, `update_time`)
							VALUES('$zone','$equipment','$total_equip', '$nonOperational','$total_supply','$login_id', NOW())";							
							$insert_stat=$this->bm->dataInsertDb2($insert_sql);

							if($insert_stat==1)
								$msg="<font color='green'><b>Succesfully inserted</b></font>";
							else
								$msg="<font color='red'><b>Insertion failed</b></font>";
						}
					}				
				}
			}	
			   
		
			$rslt_sql="SELECT id, `workshop_zone`, `equipment`, `equip_num`, `updated_by`,non_operational,equip_supply, `update_time` FROM ctmsmis.equip_assign_detail";
			$result=$this->bm->dataSelectDb2($rslt_sql);			
			$data['result']=$result;

			$data['title']="Equipment Assign Entry Form";
			$data['msg']=$msg;
			$data['editFlag']=0;
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('equipmentEntryForm',$data);
			$this->load->view('jsAssetsList');
		} 
	}
        
    function equipmentEntryFormEdit()
	{
        $session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{           
            $eqiID= $this->input->post('eqiID');
                
			$select_sql="SELECT id,`workshop_zone`, `equipment`, `equip_num`,non_operational,equip_supply, `updated_by`, `update_time` 
					FROM ctmsmis.equip_assign_detail where equip_assign_detail.id='$eqiID'";
			
			$select_result=$this->bm->dataSelectDb2($select_sql);			
			$data['select_result']=$select_result;
			
			$rslt_sql="SELECT id, `workshop_zone`, `equipment`, `equip_num`,non_operational,equip_supply, `updated_by`, `update_time` FROM ctmsmis.equip_assign_detail";
			$result=$this->bm->dataSelectDb2($rslt_sql);			
			$data['result']=$result;

			$data['editFlag']=1;
			$msg="";
			$data['title']="Equipment Assign Entry Form";
			$data['msg']=$msg;
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('equipmentEntryForm',$data);
			$this->load->view('jsAssetsList');
        }
	}
	
        
	// SOURAV Equipment Status
	function mis_equipment_cur_stat_rpt()
	{
	   $this->load->view('mis_equipment_current_status');
	   //$this->load->view('myclosebar');
  
	}
    // SMS BALANCE ENTRY
	function smsBalanceEntryForm()				// 2020-06-03
	{
        $session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{  
			$rslt_sql="SELECT  id,buy_sms,send_sms,date_sms FROM ctmsmis.sms_transaction_balance WHERE sms_status=0 order by id desc limit 1";
			$result=$this->bm->dataSelectDb2($rslt_sql);			
			$data['result']=$result;
			$msg="";
			$data['title']="Sms Balance Entry Form";
			$data['msg']=$msg;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('mis_sms_balance_entry',$data);
			$this->load->view('jsAssets');
		}            
	}
        
    function smsBalanceEntryFormPerform()		// 2020-06-03
    { 
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{			
			$login_id = $this->session->userdata('login_id');
			$buy_sms=trim($this->input->post('buy_sms'))+48;
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			
			$insert_sql="INSERT INTO ctmsmis.sms_transaction_balance (buy_sms,date_sms,updated_by,ip_addr) 
							VALUES ('$buy_sms',now(),'$login_id','$ipaddr')";
					
			$insert_stat=$this->bm->dataInsert($insert_sql);

			if($insert_stat==1)
				$msg="<font color='green'><b>Succesfully inserted</b></font>";
			else
				$msg="<font color='red'><b>Insertion failed</b></font>";   
				//$msg="";
				
			$rslt_sql="SELECT  id,buy_sms,send_sms,date_sms FROM ctmsmis.sms_transaction_balance WHERE sms_status=0 order by id desc limit 1";
			$result=$this->bm->dataSelectDb2($rslt_sql);			
			$data['result']=$result;
	
			$data['title']="Sms Balance Entry Form";
			$data['msg']=$msg;			
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('mis_sms_balance_entry',$data);
			$this->load->view('jsAssets');
		} 
    }        	
	
	//assignment_sheet_for_pangaon - start
	function assignment_sheet_for_pangaon()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$msg="";
			$data['title']="ASSIGNMENT SHEET FOR OUTWARD PANGAON";
			$data['msg']=$msg;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('assignment_sheet_for_pangaon_form',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function assignment_sheet_for_pangaon_action()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$pangaon_rot=$this->input->post('pangaon_rot');
			
			
			$sql_assignment_sheet="
			SELECT inv_unit.id AS cont_id,
	
				(select substr(ref_equip_type.nominal_length,-2) from ref_equip_type 
				INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
				INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
				where inv_unit_fcy_visit.unit_gkey=inv_unit.gkey fetch first 1 rows only
				) as siz,
				
				(SELECT
				to_char( vsl_vessel_berthings.ata, 'yyyy/mm/dd hh:mi:ss am')
				FROM vsl_vessel_berthings
				INNER JOIN vsl_vessel_visit_details vsldtl ON vsldtl.vvd_gkey=vsl_vessel_berthings.vvd_gkey
				WHERE  vsldtl.ib_vyg=inv_unit_fcy_visit.flex_string10 ) AS berthDT,
				
				
				inv_unit.seal_nbr1 AS seal_no,inv_unit.goods_and_ctr_wt_kg,
				
				(SELECT NAME FROM vsl_vessels
				INNER JOIN vsl_vessel_visit_details vsldtl ON vsldtl.vessel_gkey=vsl_vessels.gkey
				WHERE  vsldtl.ib_vyg=inv_unit_fcy_visit.flex_string10) AS vsl_name,
				inv_unit_fcy_visit.flex_string10 AS rot_no,ref_bizunit_scoped.id AS mlo
				FROM vsl_vessel_visit_details
				INNER JOIN argo_carrier_visit ON argo_carrier_visit.cvcvd_gkey=vsl_vessel_visit_details.vvd_gkey
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.actual_ob_cv = argo_carrier_visit.gkey
				INNER JOIN inv_unit ON inv_unit.gkey = inv_unit_fcy_visit.unit_gkey
				INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=inv_unit.line_op
				WHERE vsl_vessel_visit_details.ib_vyg='$pangaon_rot'";
			
			$rslt_assignment_sheet=$this->bm->dataSelect($sql_assignment_sheet);
			
			$data['pangaon_rot']=$pangaon_rot;
			$data['rslt_assignment_sheet']=$rslt_assignment_sheet;
			
			if($_POST['options'] == 'excel'){
				$this->load->view('assignment_sheet_for_pangaon_viewxl',$data);

			}else if($_POST['options'] == 'html'){
				$this->load->view('cssAssets');
				$this->load->view('assignment_sheet_for_pangaon_view',$data);
				$this->load->view('jsAssets');
				
			}
		}
	}
	
	//assignment_sheet_for_pangaon - end
	
	//head delivery - start
	function head_delivery()
	{
		$is_data=0;
		$is_entry_data=0;
		$msg = "";
		$data['container']="";
		
		$data['is_data']=$is_data;
		$data['title']="HEAD DELIVERY";
		$data['msg']=$msg;
		
		$this->load->view('cssAssetsList');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('head_delivery_form',$data);
		$this->load->view('jsAssetsList');	
	}
	
	function head_delivery_search($container=null)
	{			
		$is_data=0;
		$is_entry_data=0;
		$msg_insert="";
		$msg="";
		
		if($container!="")
			$cont_no=$container;
		else
			$cont_no=$this->input->post('cont_no');
		
		$data['container']=$cont_no;
		

		

		
		$sql_info_panel="	
		SELECT config_metafield_lov.mfdch_value,
		
		
				(CASE
				WHEN
					config_metafield_lov.mfdch_value='APPREF'
				THEN
					'REF'
				WHEN
					config_metafield_lov.mfdch_value='DLV2H'
				THEN
					'2H'
				WHEN
					config_metafield_lov.mfdch_value='DLVGRD'
				THEN
					'G'
				WHEN
					config_metafield_lov.mfdch_value='DLVOTH'
				THEN
					'OTH'
				WHEN
					config_metafield_lov.mfdch_value='DLVHYS'
				THEN
					'HC'
				WHEN
					config_metafield_lov.mfdch_value='APPDLV2H'
				THEN
					'2H'
				WHEN
					config_metafield_lov.mfdch_value='APPDLVGRD'
				THEN
					'G'
				WHEN
					config_metafield_lov.mfdch_value='DLVREF2H'
				THEN
					'2H'
				WHEN
					config_metafield_lov.mfdch_value='DLVREFGRD'
				THEN
					'G'
				
				END
				) AS remarks
				
			FROM config_metafield_lov	
			
		WHERE  config_metafield_lov.mfdch_value NOT IN ('CANCEL') ";
		
		$rslt_info_panel=$this->bm->dataSelect($sql_info_panel);
		

		$j=0;
		$result=[];
		$strResult2=[];

		for($i=0;$i<count($rslt_info_panel);$i++){
			$mfdch_value="";
			$mfdch_value=$rslt_info_panel[$i]['MFDCH_VALUE'];
			$strQuery2="
								SELECT a.gkey,k.name AS cf,a.freight_kind AS cont_status,
								NVL((SELECT substr(srv_event_field_changes.new_value,7)
								FROM srv_event 
								INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey 
								WHERE  srv_event.event_type_gkey IN(18,13,16)
								AND srv_event_field_changes.new_value IS NOT NULL AND srv_event_field_changes.new_value !='' AND 
								srv_event_field_changes.new_value !='Y-CGP-.' AND srv_event.gkey <
								(SELECT srv_event.gkey
								FROM srv_event INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey
								WHERE srv_event.event_type_gkey=4  AND metafield_id='unitFlexString01'
								AND new_value IS NOT NULL ORDER BY srv_event_field_changes.gkey DESC FETCH FIRST 1 ROWS ONLY) ORDER BY srv_event.gkey 
								DESC FETCH FIRST 1 ROWS ONLY),(SELECT substr(srv_event_field_changes.new_value,7) FROM srv_event 
								INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey 
								WHERE  srv_event.event_type_gkey IN(18,13,16) 
								ORDER BY srv_event_field_changes.gkey DESC FETCH FIRST 1 ROWS ONLY)) AS slot,
			
								
								(SELECT substr(ref_equip_type.nominal_length,-2) FROM ref_equipment
								INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey
								INNER JOIN inv_unit ON ref_equipment.gkey=inv_unit.eq_gkey
								) as siz,
								
								((SELECT substr(ref_equip_type.nominal_height,-2) FROM ref_equipment
								INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey
								INNER JOIN inv_unit ON ref_equipment.gkey=inv_unit.eq_gkey
								)/10) as v,
			
								b.flex_string10 AS rot_no,
								to_date(b.flex_date01) AS stDate,
								(SELECT NAME FROM vsl_vessels
								INNER JOIN vsl_vessel_visit_details vsldtl ON vsldtl.vessel_gkey=vsl_vessels.gkey
								WHERE  vsldtl.ib_vyg=b.flex_string10) AS vsl_name,

								g.id AS mlo,j.bl_nbr AS bl_no,
								b.flex_date01
								FROM inv_unit a
								INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey=a.gkey
								INNER JOIN ref_bizunit_scoped g ON a.line_op = g.gkey
								INNER JOIN
								inv_goods j ON j.gkey = a.goods
								LEFT JOIN


								ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
								WHERE a.flex_string01='$mfdch_value' AND a.id='$cont_no'	AND a.freight_kind='FCL' ORDER BY a.gkey DESC fetch first 1 rows only
					";
			$rslt_info_panel = $this->bm->dataSelect($strQuery2);
			if(count($rslt_info_panel )>0){
		
				$result[$j]['vsl_name']=$rslt_info_panel[0]['VSL_NAME'];
				$result[$j]['size']=$rslt_info_panel[0]['SIZ'];
				$result[$j]['height']=$rslt_info_panel[0]['HEIGHT'];
				$result[$j]['cf']=$rslt_info_panel[0]['CF'];
				$result[$j]['slot']=$rslt_info_panel[0]['SLOT'];

				
				$j++;
				

			}

		}









		if(count($rslt_info_panel)>0)
		{
			$is_data=1;
		}
		else
		{
			$msg="Assignment not given for container ".$cont_no;
			
			$data['msg']=$msg;
			$data['title']="HEAD DELIVERY";
		
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('head_delivery_form',$data);
			$this->load->view('jsAssetsList');
			
			return;
		}
		
		$data['is_data']=$is_data;
		$data['msg']=$msg;
		$data['msg_insert']=$msg_insert;
		
		$data['rtnAllList']=$result;

		$data['rslt_info_panel']=$rslt_info_panel;
		
		$rot_no=$rslt_info_panel[0]['ROT_NO'];
		
		//get bl no of igm - start
		$sql_bl_no="SELECT BL_No AS rtnValue
		FROM igm_details
		INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
		WHERE Import_Rotation_No='$rot_no' AND cont_number='$cont_no'";
		
		$bl_no=$this->bm->dataReturnDb1($sql_bl_no);
		
	//	$bl_no=$rslt_info_panel[0]['bl_no'];		// take with rotation and cont_no in a separate query from igm; not from n4 query stated above.
		//get bl no of igm - end

		$sql_stc_weight="SELECT CONCAT(Pack_Number,' ',Pack_Description) AS stc,CONCAT(weight,' KG') AS weight 
		FROM igm_details 
		WHERE Import_Rotation_No='$rot_no' AND REPLACE(BL_No,'/','')='$bl_no'";
		
		$rslt_stc_weight=$this->bm->dataSelectDb1($sql_stc_weight);
		
		$data['rslt_stc_weight']=$rslt_stc_weight;
		
		//select container data - end
		
		//select container no - start
		
		$sql_cont_no="SELECT DISTINCT cont_number,Description_of_Goods,igm_details.weight 
		FROM igm_details
		INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id 
		WHERE BL_No='$bl_no'";
		
		$rslt_cont_no=$this->bm->dataSelectDb1($sql_cont_no);
		
		$data['rslt_cont_no']=$rslt_cont_no;
		
		//select container no - end
		
		//select entry data - start
		$bl_nbr_n4=$rslt_info_panel[0]['BL_NO'];
		
		$unit_gkey=$rslt_info_panel[0]['GKEY'];
		
		$sql_entry_dlv_dtl="SELECT id,be_no,be_dt,cp_no,cp_dt FROM ctmsmis.mis_head_delivery_detail WHERE bl_nbr='$bl_nbr_n4'";
		
		//$rslt_entry_dlv_dtl=$this->bm->dataSelect($sql_entry_dlv_dtl);
		$rslt_entry_dlv_dtl=$this->bm->dataSelectDb2($sql_entry_dlv_dtl);
		
	//	$data['tot_dlv_qty']=0;
		
		if(count($rslt_entry_dlv_dtl)!=0)
		{
			$dlv_dtl_id=$rslt_entry_dlv_dtl[0]['id'];
			// $data['be_no']=$rslt_entry_dlv_dtl[0]['be_no'];
			// $data['be_dt']=$rslt_entry_dlv_dtl[0]['be_dt'];
			// $data['cp_no']=$rslt_entry_dlv_dtl[0]['cp_no'];
			// $data['cp_dt']=$rslt_entry_dlv_dtl[0]['cp_dt'];
			$data['is_entry_data']=1;
			
			$data['rslt_entry_dlv_dtl']=$rslt_entry_dlv_dtl;
			
			$sql_entry_sub_dtl="SELECT COUNT(*) AS no_of_truck,SUM(qty) AS tot_dlv_qty
			FROM ctmsmis.mis_head_delivery_sub_detail
			WHERE head_dlv_dtl_id='$dlv_dtl_id'";
			
			$rslt_entry_sub_dtl=$this->bm->dataSelectDb2($sql_entry_sub_dtl);
			
			$data['no_of_truck']=$rslt_entry_sub_dtl[0]['no_of_truck'];
			$data['tot_dlv_qty']=$rslt_entry_sub_dtl[0]['tot_dlv_qty'];
		}
		
		//select entry data - end
		
		//be no, date from xml
		$office_code = "";
		$be_no = "";
		$be_dt = "";
		$exit_note_number = "";
		
		$sql_be_no_dt="SELECT office_code,reg_no AS be_no,reg_date AS be_dt,place_dec AS exit_note_number
		FROM sad_info
		INNER JOIN sad_container ON sad_container.sad_id=sad_info.id
		WHERE cont_number='$cont_no'";
		
		$rslt_be_no_dt=$this->bm->dataSelectDb1($sql_be_no_dt);
		
		if(count($rslt_be_no_dt)>0)
		{
			$office_code=$rslt_be_no_dt[0]['office_code'];
			$be_no=$rslt_be_no_dt[0]['be_no'];
			$be_dt=$rslt_be_no_dt[0]['be_dt'];
			$exit_note_number=$rslt_be_no_dt[0]['exit_note_number'];
		}
		
		$data['office_code']=$office_code;
		$data['be_no']=$be_no;
		$data['be_dt']=$be_dt;
		$data['exit_note_number']=$exit_note_number;
		//----
		
		$data['title']="HEAD DELIVERY";
		
		$this->load->view('head_delivery_form_html',$data);
	
	}
	
	function head_delivery_entry()
	{
		$container=$this->input->post('container');
		$rotation=$this->input->post('rotation');
		
		$unit_gkey=$this->input->post('unit_gkey');
		$bl_no=$this->input->post('bl_no');
		
		$be_no=$this->input->post('be_no');
		$be_date=$this->input->post('be_date');
		$cp_no=$this->input->post('cp_no');
		$cp_date=$this->input->post('cp_date');
		
		$total_dlv_truck=$this->input->post('total_dlv_truck');
		$total_dlv_quantity=$this->input->post('total_dlv_quantity');
		
		$truck_no=$this->input->post('truck_no');
		$quantity=$this->input->post('quantity');
		
		$dlv_by=$this->session->userdata('login_id');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		
		//insert head_dlv_dtl - start
		$rtn_unit_gkey=0;
		
		$sql_unit_gkey="SELECT COUNT(*) AS rtnValue FROM ctmsmis.mis_head_delivery_detail WHERE unit_gkey='$unit_gkey'";
		
		$rtn_unit_gkey=$this->bm->dataReturnDb2($sql_unit_gkey);
		
		if($rtn_unit_gkey==0)
		{
			$sql_insert_dlv_dtl="INSERT INTO ctmsmis.mis_head_delivery_detail(unit_gkey,bl_nbr,cont_id,rotation,be_no,be_dt,cp_no,cp_dt,dlv_dt,dlv_by,ip_addr)
			VALUES('$unit_gkey','$bl_no','$container','$rotation','$be_no','$be_date','$cp_no','$cp_date',NOW(),'$dlv_by','$ipaddr')";
		
			$rslt_insert_dlv_dtl=$this->bm->dataInsertDb2($sql_insert_dlv_dtl);
		}				
		
		//insert head_dlv_dtl - end
		
		//insert head_dlv_sub_dtl - start
		$sql_dlv_dtl_id="SELECT id AS rtnValue FROM ctmsmis.mis_head_delivery_detail WHERE unit_gkey='$unit_gkey'";
		
		$head_dlv_id=$this->bm->dataReturnDb2($sql_dlv_dtl_id);
	
		$sql_insert_dlv_sub_dtl="INSERT INTO ctmsmis.mis_head_delivery_sub_detail(head_dlv_dtl_id,truck_no,qty,entry_dt,entry_by)
		VALUES('$head_dlv_id','$truck_no','$quantity',NOW(),'$dlv_by')";
		
		$rslt_insert_dlv_sub_dtl=$this->bm->dataInsertDb2($sql_insert_dlv_sub_dtl);
		
		//if($rslt_insert_dlv_dtl==1 and $rslt_insert_dlv_sub_dtl==1)
		if($rslt_insert_dlv_sub_dtl==1)
			$data['msg_insert']="Successfully inserted";
		//insert head_dlv_sub_dtl - end
	
		$this->head_delivery_search($container);
	}
	
	function head_dlv_delete()
	{
		$sub_dtl_id=$this->input->post('sub_dtl_id');
		$cont_for_sub_dtl=$this->input->post('cont_for_sub_dtl');
		
		$sql_head_dlv_delete="DELETE FROM ctmsmis.mis_head_delivery_sub_detail
							WHERE id='$sub_dtl_id'";
							
		$rslt_head_dlv_delete=$this->bm->dataDelete($sql_head_dlv_delete);
		
		$this->head_delivery_search($cont_for_sub_dtl);
	}
	
	function head_dlv_status_action()
	{
		$dlv_val=$this->input->post('dlv_val');
		$container_dlv=$this->input->post('container_dlv');
	
		$unit_gkey_dlv=$this->input->post('unit_gkey_dlv');
	
		$sql_status_update="UPDATE ctmsmis.mis_head_delivery_detail 
							SET dlv_status='$dlv_val',status_dt=NOW()
							WHERE unit_gkey='$unit_gkey_dlv'";
	
		$rslt_status_update=$this->bm->dataUpdatedb2($sql_status_update);
		
		$this->head_delivery_search($container_dlv);
	}
	
	// OLD - uncomment following section (till head delivery - eend) if necessary
	
	  // function headDeliveryForm()
        // {
            // $login_id = $this->session->userdata('login_id');
           // // $ipaddr = $_SERVER['REMOTE_ADDR'];
            // $session_id = $this->session->userdata('value');
            // if($session_id!=$this->session->userdata('session_id'))
            // {
                // $this->logout();
            // }
            // else
            // {       
                // $data['title']="Head Delivery Search";
                // $this->load->view('header2');
                // $this->load->view('headDeliveryInfoForm',$data);
                // $this->load->view('footer');
            // }
            
        // }
        
        // function headDeliveryPerformPDF()
        // {
            // $login_id = $this->session->userdata('login_id');
            // $session_id = $this->session->userdata('value');
            // if($session_id!=$this->session->userdata('session_id'))
            // {
                // $this->logout();
            // }
            
            // else {
                // $this->load->library('m_pdf');
                // $cont=$this->input->post('cont');
                // //echo $rot;
                // $this->data['title']="HEAD DELIVERY REGISTER REPORT OF CCT ".$cont;

                // $str = "SELECT a.gkey,IF(LENGTH(a.id)=11,CONCAT(SUBSTR(a.id ,1,4),'-',SUBSTR(a.id ,5,6),'-',SUBSTR(a.id ,11)),a.id ) AS cont_no,a.id AS contid,k.name AS cf,CONVERT(SUBSTRING(k.name, 1), UNSIGNED INTEGER) AS sl,
		// a.freight_kind AS cont_status,
		// IFNULL((SELECT SUBSTRING(sparcsn4.srv_event_field_changes.new_value,7)
		// FROM sparcsn4.srv_event
		// INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
		// WHERE sparcsn4.srv_event.applied_to_gkey=a.gkey  AND sparcsn4.srv_event.event_type_gkey IN(18,13,16) AND sparcsn4.srv_event_field_changes.new_value IS NOT NULL AND sparcsn4.srv_event_field_changes.new_value !='' AND sparcsn4.srv_event_field_changes.new_value !='Y-CGP-.' AND sparcsn4.srv_event.gkey<(SELECT sparcsn4.srv_event.gkey FROM sparcsn4.srv_event
		// INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
		// WHERE sparcsn4.srv_event.event_type_gkey=4 AND sparcsn4.srv_event.applied_to_gkey=a.gkey AND metafield_id='unitFlexString01' AND new_value IS NOT NULL ORDER BY sparcsn4.srv_event_field_changes.gkey DESC LIMIT 1) ORDER BY sparcsn4.srv_event.gkey DESC LIMIT 1),(SELECT SUBSTRING(sparcsn4.srv_event_field_changes.new_value,7)
		// FROM sparcsn4.srv_event
		// INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
		// WHERE sparcsn4.srv_event.applied_to_gkey=a.gkey  AND sparcsn4.srv_event.event_type_gkey IN(18,13,16) ORDER BY sparcsn4.srv_event_field_changes.gkey DESC LIMIT 1)) AS slot,
		// (SELECT size FROM ctmsmis.mis_inv_unit WHERE gkey=a.gkey) AS size,
		// ((SELECT height FROM ctmsmis.mis_inv_unit WHERE gkey=a.gkey)/10) AS height,
		// (SELECT IF(SUBSTR(REPLACE(UPPER(LTRIM(vsl_name)),'.',''),1,2)='MV',SUBSTR(REPLACE(LTRIM(vsl_name),'.',''),3),REPLACE(LTRIM(vsl_name),'.','')) FROM ctmsmis.mis_inv_unit WHERE gkey=a.gkey) AS v_name,
		// (SELECT ctmsmis.mis_inv_unit.vsl_visit_dtls_ib_vyg FROM ctmsmis.mis_inv_unit WHERE gkey=a.gkey) AS rot_no,
		// g.id AS mlo,j.bl_nbr AS bl_no,
			    // DATE(b.flex_date01) AS stDate,
			    // b.flex_date01,
		// (SELECT ctmsmis.cont_yard(slot)) AS Yard_No,
			    // (SELECT ctmsmis.cont_block(slot,Yard_No)) AS Block_No,mfdch_value, mfdch_desc,
			   // b.time_out,a.seal_nbr1
		// FROM sparcsn4.inv_unit a
		// INNER JOIN sparcsn4.inv_unit_fcy_visit b ON b.unit_gkey=a.gkey
		// INNER JOIN sparcsn4.ref_bizunit_scoped g ON a.line_op = g.gkey
		// INNER JOIN sparcsn4.config_metafield_lov ON a.flex_string01=config_metafield_lov.mfdch_value
		// INNER JOIN
			    // sparcsn4.inv_goods j ON j.gkey = a.goods
		// LEFT JOIN
			    // sparcsn4.ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
		// WHERE a.id='$cont' AND config_metafield_lov.mfdch_value NOT IN ('CANCEL') AND a.freight_kind='FCL'";
		
                // $head_result = $this->bm->dataSelect($str);  	
                // $this->data['head_result']=$head_result;                             
                // /*$bl_no=$head_result[0]['bl_no'];
                // $unit_gkey=$head_result[0]['gkey'];
                
// //                echo $unit_gkey;
// //                return;
                
                // $str1="SELECT  igm_details.id,cont_number,igm_details.Import_Rotation_No,(SELECT Vessel_Name FROM igm_masters 
                    // WHERE igm_masters.id=igm_details.IGM_id) AS vsl_name,igm_details.BL_No, cont_size,cont_height,off_dock_id, 
                    // (SELECT Organization_Name FROM organization_profiles 
                    // WHERE organization_profiles.id=igm_detail_container.off_dock_id) AS offdock_name, cont_status,cont_seal_number,
                    // cont_iso_type, igm_details.Pack_Number, igm_details.Pack_Description, igm_detail_container.cont_gross_weight  AS cont_weight 
                    // FROM igm_detail_container  
                    // INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id  
                    // WHERE igm_details.BL_No='$bl_no' 
                    // UNION 
                    // SELECT igm_details.id,cont_number,igm_details.Import_Rotation_No,(SELECT Vessel_Name FROM igm_masters  
                    // WHERE igm_masters.id=igm_supplimentary_detail.igm_master_id) AS vsl_name,igm_details.BL_No, cont_size,cont_height,off_dock_id, 
                    // (SELECT Organization_Name FROM organization_profiles 
                    // WHERE organization_profiles.id=igm_sup_detail_container.off_dock_id) AS offdock_name,
                    // cont_status,cont_seal_number,cont_iso_type, igm_details.Pack_Number, igm_details.Pack_Description, igm_sup_detail_container.Cont_gross_weight AS cont_weight
                    // FROM igm_sup_detail_container 
                    // INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id 
                    // INNER JOIN igm_details ON igm_details.id=igm_supplimentary_detail.igm_detail_id 
                    // WHERE igm_supplimentary_detail.BL_No='$bl_no'";
                // $sqlresult = $this->bm->dataSelectDb1($str1);                
                // $this->data['sqlresult']=$sqlresult;
               // // $this->data['title']="";
                
                // $str3="SELECT be_no, be_dt, cp_no, cp_dt FROM ctmsmis.mis_head_delivery_detail 
                        // WHERE mis_head_delivery_detail.unit_gkey='$unit_gkey'";
                 // $dlv_result = $this->bm->dataSelect($str3);  	
                // $this->data['dlv_result']=$dlv_result;*/     
                // $html=$this->load->view('headDeliveryViewPdf', $this->data,true);
                // //$html=$this->load->view('pdf_output', $data); //pdf_output for rotation

                // //this the the PDF filename that user will get to download
                // $pdfFilePath ="mypdfName-".time()."-download.pdf";

                // //actually, you can pass mPDF parameter on this load() function
                // $pdf = $this->m_pdf->load();

// //                $pdf->SetHeader('|Date: {DATE j-m-Y}|');

                // //$pdf->SetHeader($url . "\n\n" . 'Date {DATE j-m-Y}');
                // $pdf->setFooter('|Page {PAGENO}|');
                // //generate the PDF!
                // $pdf->WriteHTML($html,2);
                // //offer it to user via browser download! (The PDF won't be saved on your server HDD)
                // $pdf->Output($pdfFilePath, "I");   //--------pdf view show
                // //$pdf->Output($pdfFilePath, "D");  //-------pdf download					
                // }
            
            
        // }
  
	//head delivery - end
	
	// Special Feeder Discharge Summary Sourav
	// Special Feeder Discharge Summary Sourav
	function reportSpecial()
	{
		//print_r($this->session->all_userdata());
		
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
			
		}
		else
		{
			$data['title']="FEEDER DISCHARGE SUMMARY LIST SPECIAL...";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myFeederDischargeSpecialHTML',$data);   
			$this->load->view('jsAssets');
		}

	}
	   
	function specialReportView()
	{
		$rptType=$this->input->post('options');
		if($rptType=='pdf')
		{
			//$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$this->load->library('M_pdf');
			//$pdf->use_kwt = true;
			$this->data['title']="FEEDER DISCHARGE Summary LIST";
			$pdfFilePath ="FEEDER DISCHARGE Summary LIST-".time()."-download.pdf";
			$pdf = $this->m_pdf->load();
			////$pdf->SetWatermarkText('CPA CTMS');
			//$pdf->showWatermarkText = true;	
			//$pdf->useAdobeCJK = true;
			//$pdf->SetAutoFont(AUTOFONT_ALL);
			
			$html=$this->load->view('myReportDischargeSummeryListSpecial',$this->data, true);
			$stylesheet = file_get_contents('assets/stylesheets/test.css'); // external css
			$pdf->useSubstitutions = true; // optional - just as an example
			
			//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
			
			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);
			$pdf->Output($pdfFilePath, "I"); // For Show Pdf
		}
		else{
			$this->load->view('myReportDischargeSummeryListSpecial');
			//$this->load->view('footer');
		}
	}
	
	
	function icdInboundOutboundContainerReport()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			// $query = "SELECT DISTINCT gkey, id FROM sparcsn4.road_gates WHERE life_cycle_state='ACT'";
			// $gateList = $this->bm->dataSelect($query);
				
			// $data['gateList']=$gateList;
			$data['title']="ICD INBOUND OUTBOUND REPORT";
			//echo $data['title'];
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('icdInboundOutboundContainerForm',$data);
			$this->load->view('jsAssets');
		}	
		
	}	
		
		
	function icdInboundOutboundContainerReportView()
	{
		//	$fileType=$this->input->post('fileOptions');
		//	$registerType=$this->input->post('registerType');
		$visitType=$this->input->post('visitType');
		$vist_id=$this->input->post('vist_id');
		if($visitType=="inbound")
		{  
			$str="SELECT sparcsn4.vsl_vessels.name,inv_unit.id AS cont,  inv_unit_fcy_visit.time_in,
				inv_unit_fcy_visit.time_out, inv_unit_fcy_visit.flex_string10 AS rot_no,
			RIGHT(sparcsn4.ref_equip_type.nominal_length,2) AS size,
			RIGHT(sparcsn4.ref_equip_type.nominal_height,2) AS height
			FROM sparcsn4.inv_unit
			INNER JOIN sparcsn4.inv_unit_fcy_visit ON sparcsn4.inv_unit_fcy_visit.unit_gkey=sparcsn4.inv_unit.gkey
			INNER JOIN sparcsn4.argo_carrier_visit ON sparcsn4.argo_carrier_visit.gkey=sparcsn4.inv_unit_fcy_visit.actual_ib_cv

			INNER JOIN sparcsn4.inv_unit_equip ON sparcsn4.inv_unit_equip.unit_gkey=inv_unit.gkey
			INNER JOIN sparcsn4.ref_equipment ON sparcsn4.ref_equipment.gkey=sparcsn4.inv_unit_equip.eq_gkey
			INNER JOIN sparcsn4.ref_equip_type ON sparcsn4.ref_equip_type.gkey=sparcsn4.ref_equipment.eqtyp_gkey
			LEFT JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessel_visit_details.ib_vyg=sparcsn4.inv_unit_fcy_visit.flex_string10
			LEFT JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
			WHERE sparcsn4.argo_carrier_visit.id='$vist_id'";		
			$data['title']="ICD INBOUND CONTAINER LIST";
		}
		else if($visitType=="outbound")
		{  
			$str="SELECT sparcsn4.vsl_vessels.name,inv_unit.id AS cont,  inv_unit_fcy_visit.time_in,
				inv_unit_fcy_visit.time_out, inv_unit_fcy_visit.flex_string10 AS rot_no,
			RIGHT(sparcsn4.ref_equip_type.nominal_length,2) AS size,
			RIGHT(sparcsn4.ref_equip_type.nominal_height,2) AS height
			FROM sparcsn4.inv_unit
			INNER JOIN sparcsn4.inv_unit_fcy_visit ON sparcsn4.inv_unit_fcy_visit.unit_gkey=sparcsn4.inv_unit.gkey
			INNER JOIN sparcsn4.argo_carrier_visit ON sparcsn4.argo_carrier_visit.gkey=sparcsn4.inv_unit_fcy_visit.actual_ob_cv

			INNER JOIN sparcsn4.inv_unit_equip ON sparcsn4.inv_unit_equip.unit_gkey=inv_unit.gkey
			INNER JOIN sparcsn4.ref_equipment ON sparcsn4.ref_equipment.gkey=sparcsn4.inv_unit_equip.eq_gkey
			INNER JOIN sparcsn4.ref_equip_type ON sparcsn4.ref_equip_type.gkey=sparcsn4.ref_equipment.eqtyp_gkey
			LEFT JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessel_visit_details.ib_vyg=sparcsn4.inv_unit_fcy_visit.flex_string10
			LEFT JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
			WHERE sparcsn4.argo_carrier_visit.id='$vist_id'";
			$data['title']="ICD OUTBOUND CONTAINER LIST";	
		}	
		
		
		$result = $this->bm->dataSelect($str);
		$data['result']=$result;			
		$data['vist_id']=$vist_id;	
		$this->load->view('icdInboundOutboundContainerView',$data);

	}  
	
	//xml conversion - start
	function xml_conversion()
	{
		$org_Type_id = $this->session->userdata('org_Type_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$msg="";
			
			$sql_be_num="SELECT COUNT(*) AS rtnValue FROM sad_info";
			
			if(($this->uri->segment(4))=="")
				$segment_three=0;
			else
				$segment_three = $this->uri->segment(3);
			
			$config = array();
			$config["base_url"] = site_url("report/xml_conversion/$segment_three");
			$config["total_rows"] = $this->bm->dataReturnDb1($sql_be_num);
			
			$config["per_page"] = 20;
			$offset = $this->uri->segment(4, 0);
			$config["uri_segment"] = 4;
			$limit=$config["per_page"];
			
			$this->pagination->initialize($config);
			$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;
			$start=$page;
			
			$cond = "";
			
			if($org_Type_id==2)
			{
				$login_id=$this->session->userdata('login_id');
				$dec_code = rtrim($login_id,'CF');
				$cond = " WHERE dec_code='$dec_code'";								
			}
			
			// $sql_list_of_be="SELECT office_code,reg_no,reg_date,place_dec,entry_dt 
			// FROM sad_info 
			// ORDER BY id 
			// DESC LIMIT $start,$limit";
			
			$sql_list_of_be="SELECT office_code,reg_no,reg_date,place_dec,entry_dt
			FROM sad_info ".$cond." ORDER BY id DESC 
			LIMIT $start,$limit";
			
			$rslt_list_of_be=$this->bm->dataSelectDb1($sql_list_of_be);
			
			if(count($rslt_list_of_be)==0)
				$msg="No result found";
			
			$data['title']="BE ENTRY...";
			$data['msg']=$msg;
			$data['rslt_list_of_be']=$rslt_list_of_be;
			$data['start']=$start;
			$data["links"] = $this->pagination->create_links();
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('xml_conversion_form',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	function search_be_list()
	{
		$org_Type_id = $this->session->userdata('org_Type_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$cond="";
			$msg="";
			
			$cnf_cond="";
			
			if($org_Type_id==2)
			{
				$login_id=$this->session->userdata('login_id');
				$dec_code = rtrim($login_id,'CF');	
				$cnf_cond=" AND dec_code='$dec_code'";
			}
			
			if($this->input->post('search_office_code'))
			{
				$search_office_code=$this->input->post('search_office_code');
				$cond=" WHERE office_code='$search_office_code'".$cnf_cond;		
			}
			else if($this->input->post('search_c_number'))
			{
				$search_c_number=$this->input->post('search_c_number');			
				$cond=" WHERE reg_no='$search_c_number'".$cnf_cond;
			}
			else if($this->input->post('search_c_date'))
			{
				$search_c_date=$this->input->post('search_c_date');
				$cond=" WHERE reg_date='$search_c_date'".$cnf_cond;
			}
			else if($this->input->post('search_entry_date'))
			{
				$search_entry_date=$this->input->post('search_entry_date');
				$cond=" WHERE DATE(entry_dt)='$search_entry_date'".$cnf_cond;
			}
			else if($this->input->post('search_cont_no'))
			{
				$search_cont_no=$this->input->post('search_cont_no');
				$cond=" INNER JOIN sad_container ON sad_container.`sad_id`=sad_info.`id`
						WHERE sad_container.`cont_number`='$search_cont_no'".$cnf_cond;
			}				
			
			$sql_search_be_list="SELECT office_code,reg_no,reg_date,place_dec,entry_dt FROM sad_info".$cond;
			
			$rslt_list_of_be=$this->bm->dataSelectDb1($sql_search_be_list);
			
			if(count($rslt_list_of_be)==0)
				$msg="No result found";
			
			$data['title']="BE ENTRY...";
			$data['msg']=$msg;
			$data['rslt_list_of_be']=$rslt_list_of_be;
			
			/* $this->load->view('header2');
			$this->load->view('xml_conversion_form',$data);
			$this->load->view('footer');	 */	

			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('xml_conversion_form',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	// function xml_conversion_action()
	// {
		// $session_id = $this->session->userdata('value');
		// if($session_id!=$this->session->userdata('session_id'))
		// {
			// $this->logout();
		// }
		// else
		// {
			// $login_id = $this->session->userdata('login_id');
			// $this->load->library('m_pdf');
		    // $mpdf->use_kwt = true;
			
			// $flag=$this->uri->segment(3);
			
			// if($flag==1)
			// {
				// $office_code=$this->uri->segment(4);
			 	// $c_nubmber=$this->uri->segment(5);
				// $xml_date=$this->uri->segment(6);
			// }
			// else
			// {
				// $office_code=$this->input->post('office_code');
				// $c_nubmber=$this->input->post('c_nubmber');
				// $xml_date=$this->input->post('xml_date');
			// }
							
			// // $sql_show_report="SELECT * 
			// // FROM sad_info
			// // INNER JOIN sad_container ON sad_container.sad_id=sad_info.id
			// // INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
			// // WHERE sad_info.office_code='$office_code' AND reg_no='$c_nubmber' AND reg_date='$xml_date'";
			
			// $sql_show_report="SELECT * 
			// FROM sad_info
			// INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
			// WHERE sad_info.office_code='$office_code' AND reg_no='$c_nubmber' AND reg_date='$xml_date'";
							
			// $rslt_show_report=$this->bm->dataSelectDb1($sql_show_report);
			// // $data['rslt_show_report']=$rslt_show_report;
			// // $this->load->view('xml_conversion_pdf',$data);
			// $this->data['rslt_show_report']=$rslt_show_report;
						
			// $dec_ref_no=$rslt_show_report[0]['dec_ref_no'];
			// $dec_ref_no=substr($dec_ref_no,1);
			// $dec_ref_no="/C".$dec_ref_no;
			
			// $this->data['dec_ref_no']=$dec_ref_no;
			
			// $vsl_rot=$rslt_show_report[0]['manif_num'];
			// $vsl_rot=str_replace(" ","/",$vsl_rot);
			
			// $sql_vsl_name="SELECT Vessel_Name AS rtnValue FROM igm_masters WHERE Import_Rotation_No='$vsl_rot'";
			
			// $vsl_name=$this->bm->dataReturnDb1($sql_vsl_name);
			// $this->data['vsl_name']=$vsl_name;
			
			// $pdf = $this->m_pdf->load();
			// $stylesheet = file_get_contents('resources/styles/xml_conversion.css'); // external css
			
			// $pdf->AddPage('P', // L - landscape, P - portrait
						// '', '', '', '',
						// 5, // margin_left
						// 5, // margin right
						// 10, // margin top
						// 10, // margin bottom
						// 10, // margin header
						// 10); // margin footer
					
			// $html=$this->load->view('xml_conversion_pdf',$this->data, true);
										
			// $pdfFilePath ="xml_conversion_pdf-".time()."-download.pdf";

		// //	$pdf = $this->m_pdf->load();
			
			// $pdf->useSubstitutions = true; 
					
		// //	$pdf->setFooter('Prepared By : '.$login_id.'|Page {PAGENO}|Date {DATE j-m-Y}');
			
			// $pdf->WriteHTML($stylesheet,1);
			// $pdf->WriteHTML($html,2);
					
			// $pdf->Output($pdfFilePath, "I");
			// // $data['rslt_show_report']=$rslt_show_report;
			
			// // $this->load->view('xml_conversion_html',$data);
		// }
	// }
	
	function xml_conversion_action()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			// if($this->input->post('view')=="View")
			// {
				$login_id = $this->session->userdata('login_id');
				$this->load->library('M_pdf');
				$mpdf->use_kwt = true;
				
				$flag=$this->uri->segment(3);
				
				if($flag==1)
				{
					$office_code=$this->uri->segment(4);
					$c_nubmber=$this->uri->segment(5);
					$xml_date=$this->uri->segment(6);
				}
				else
				{
					$office_code=$this->input->post('office_code');
					$c_nubmber=$this->input->post('c_nubmber');
					$xml_date=$this->input->post('xml_date');
				}							
				
				$sql_show_report="SELECT * 
				FROM sad_info
				INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
				WHERE sad_info.office_code='$office_code' AND reg_no='$c_nubmber' AND reg_date='$xml_date'";
				//die();
				$rslt_show_report=$this->bm->dataSelectDb1($sql_show_report);
				
				$this->data['rslt_show_report']=$rslt_show_report;
							
				$dec_ref_no=$rslt_show_report[0]['dec_ref_no'];
				$dec_ref_no=substr($dec_ref_no,1);
				$dec_ref_no="/C".$dec_ref_no;
				
				$this->data['dec_ref_no']=$dec_ref_no;				
				
				//--						
				$vsl_rot=$rslt_show_report[0]['manif_num'];	
				//$vsl_rot=str_replace(" ","/",$vsl_rot);				
				$cnt=substr_count($vsl_rot," ");
		
				if($cnt==1)
				{
					$index=strpos($vsl_rot," ");				
					$first_str=substr($vsl_rot,0,$index);			
					$last_str=substr($vsl_rot,$index);
					$last_str=(int)$last_str;			
					$vsl_rot=$first_str."/".$last_str;	
				}
				else if($cnt==2)
				{
					$index=strpos($vsl_rot," ");
					$vsl_rot=trim(substr($vsl_rot,$index));
					$index=strpos($vsl_rot," ");
					$first_str=substr($vsl_rot,0,$index);			
					$last_str=substr($vsl_rot,$index);
					$last_str=(int)$last_str;					
					$vsl_rot=$first_str."/".$last_str;	
				}
				//--							
				
				$sql_vsl_name="SELECT Vessel_Name AS rtnValue FROM igm_masters WHERE Import_Rotation_No='$vsl_rot'";
			//	return;
				$vsl_name=$this->bm->dataReturnDb1($sql_vsl_name);
				$this->data['vsl_name']=$vsl_name;
				
				//cont list - start
				$sql_cont_info="SELECT * FROM sad_container
				INNER JOIN sad_info ON sad_info.id=sad_container.sad_id 
				WHERE office_code='$office_code' AND reg_no='$c_nubmber' AND reg_date='$xml_date'";
				
				$rslt_cont_info=$this->bm->dataSelectDb1($sql_cont_info);
				
				//--
				$this->data['rslt_cont_info']=$rslt_cont_info;			
				//cont list - end...
				
				$pdf = $this->m_pdf->load();
				
				////$pdf->SetWatermarkText('CPA CTMS');
				//$pdf->showWatermarkText = true;
				
				$stylesheet = file_get_contents('resources/styles/xml_conversion.css'); // external css							
				
				/* $pdf->AddPage('P', // L - landscape, P - portrait
							'', '', '', '',
							5, // margin_left
							5, // margin right
							10, // margin top
							10, // margin bottom
							10, // margin header
							10); // margin footer */
						
				$html=$this->load->view('xml_conversion_pdf',$this->data, true);
									
				$pdfFilePath ="xml_conversion_pdf-".time()."-download.pdf";
				
				$pdf->useSubstitutions = true; 					
				
				$pdf->WriteHTML($stylesheet,1);
				$pdf->WriteHTML($html,2);
						
				$pdf->Output($pdfFilePath, "I");				
			// }
			// else if($this->input->post('view')=="View Container")
			// {
				// $login_id = $this->session->userdata('login_id');
				// $this->load->library('m_pdf');
				// $mpdf->use_kwt = true;
				
				// $office_code=$this->input->post('office_code');
				// $c_nubmber=$this->input->post('c_nubmber');
				// $xml_date=$this->input->post('xml_date');
				
				// $sql_cont_info="SELECT * FROM sad_container
				// INNER JOIN sad_info ON sad_info.id=sad_container.sad_id 
				// WHERE office_code='$office_code' AND reg_no='$c_nubmber' AND reg_date='$xml_date'";
				
				// $rslt_cont_info=$this->bm->dataSelectDb1($sql_cont_info);
				
				// //--
				// $this->data['rslt_cont_info']=$rslt_cont_info;								
				
				// $pdf = $this->m_pdf->load();
				
				// //$pdf->SetWatermarkText('CPA CTMS');
				// $pdf->showWatermarkText = true;
				
				// $stylesheet = file_get_contents('resources/styles/xml_conversion.css'); // external css
				
				// $pdf->AddPage('P', // L - landscape, P - portrait
							// '', '', '', '',
							// 5, // margin_left
							// 5, // margin right
							// 10, // margin top
							// 10, // margin bottom
							// 10, // margin header
							// 10); // margin footer
						
				// $html=$this->load->view('xml_conversion_cont_info',$this->data, true);
											
				// $pdfFilePath ="xml_conversion_cont_info-".time()."-download.pdf";
				
				// $pdf->useSubstitutions = true; 					
				
				// $pdf->WriteHTML($stylesheet,1);
				// $pdf->WriteHTML($html,2);
						
				// $pdf->Output($pdfFilePath, "I");	
				// //--				
			// }
		}
	}
	
	//date wise be report - start
	function date_wise_be_report()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="DATE WISE Bill of Entry REPORT...";
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('date_wise_be_report_form',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	function date_wise_be_report_action()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$be_entry_date=$this->input->post('be_entry_date');
			
			$sql_be_report_datewise="SELECT COUNT(*) AS tot_entry,ip_address,entry_dt
			FROM sad_info
			WHERE DATE(entry_dt)='$be_entry_date'
			GROUP BY ip_address";
			
			$rslt_be_report_datewise=$this->bm->dataSelectDb1($sql_be_report_datewise);
			
			$this->load->library('m_pdf');
			$mpdf->use_kwt = true;
			
			//--
			$this->data['rslt_be_report_datewise']=$rslt_be_report_datewise;								
			$this->data['be_entry_date']=$be_entry_date;								
				
			$pdf = $this->m_pdf->load();
			
			//$pdf->SetWatermarkText('CPA CTMS');
			$pdf->showWatermarkText = true;
			
		//	$stylesheet = file_get_contents('resources/styles/xml_conversion.css'); // external css
			
			// $pdf->AddPage('P', // L - landscape, P - portrait
			// 			'', '', '', '',
			// 			5, // margin_left
			// 			5, // margin right
			// 			10, // margin top
			// 			10, // margin bottom
			// 			10, // margin header
			// 			10); // margin footer
					
			$html=$this->load->view('date_wise_be_report_pdf',$this->data, true);
										
			$pdfFilePath ="date_wise_be_report-".time()."-download.pdf";
			
			$pdf->useSubstitutions = true; 					
			// $pdf->setFooter('|Page {PAGENO} of {nb}|');   
		//	$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);
					
			$pdf->Output($pdfFilePath, "I");
			//--
		}
	}
		//date wise be report - end
	//xml conversion - end
	
	//handling performance compare - start
	function handling_performance_compare()					// 2020-06-08
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="Handling Performance Compare";
			$data['flag']=0;
			$data['msg']="";				
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('handling_performance_compare',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function handling_performance_compare_search($perform_search_date_entry=null)		// 2020-06-08
	{
		if($perform_search_date_entry!="")
			$perform_search_date=$perform_search_date_entry;
		else
			$perform_search_date=$this->input->post('perform_search_date');
		

			$sql_performance_search="SELECT 
			to_char( vsl_vessel_berthings.ata, 'dd-mm-yyyy') AS ata_dt,
	
			   argo_quay.id AS berth,Y.id AS agent,
			argo_carrier_visit.id,
			vsl_vessel_visit_details.flex_date07 AS ffd,
			vsl_vessels.name,
			vsl_vessel_berthings.ata ata,
			argo_carrier_visit.atd atd,
			'' AS pr_imp,
			'' AS pr_exp,
			NVL(vsl_vessel_visit_details.flex_string03,vsl_vessel_visit_details.flex_string02) AS berthop,
			argo_carrier_visit.gkey,
			argo_carrier_visit.cvcvd_gkey,
			vsl_vessel_visit_details.ib_vyg, 
			(NVL(argo_carrier_visit.atd,(SELECT argo_visit_details.etd FROM argo_visit_details WHERE argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey FETCH FIRST 1 ROWS ONLY))) AS etd
			FROM argo_carrier_visit
			INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
			INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
			INNER JOIN vsl_vessel_berthings ON vsl_vessel_berthings.vvd_gkey=vsl_vessel_visit_details.vvd_gkey
			INNER JOIN argo_quay ON argo_quay.gkey=vsl_vessel_berthings.quay
			INNER JOIN
			( ref_bizunit_scoped r
			LEFT JOIN ( ref_agent_representation X
			LEFT JOIN ref_bizunit_scoped Y ON X.agent_gkey=Y.gkey )
			ON r.gkey=X.bzu_gkey
			)  ON r.gkey = argo_carrier_visit.operator_gkey
	
	
			WHERE 
			(  
			(argo_carrier_visit.ata  between to_date(concat('$perform_search_date',' 08:00:00'),'YYYY-MM-DD HH24-MI-SS' )-1 and to_date(concat('$perform_search_date',' 20:00:00'),'YYYY-MM-DD HH24-MI-SS'))
			OR(argo_carrier_visit.ata < to_date(CONCAT('$perform_search_date',' 08:00:01'),'YYYY-MM-DD HH24-MI-SS') AND argo_carrier_visit.atd IS NULL)
			OR(argo_carrier_visit.atd  between to_date(concat('$perform_search_date',' 08:00:00'),'YYYY-MM-DD HH24-MI-SS' )-1 and to_date(concat('$perform_search_date',' 20:00:00'),'YYYY-MM-DD HH24-MI-SS'))
			)
			AND argo_carrier_visit.carrier_mode='VESSEL' AND  argo_carrier_visit.phase!='80CANCELED'
			ORDER BY 1,2";






		$rslt_performance_search=$this->bm->dataSelect($sql_performance_search);
		
		$data['rslt_performance_search']=$rslt_performance_search;
		$data['perform_search_date']=$perform_search_date;
		$data['flag']=1;
		$data['msg']="";
		$data['title']="Handling Performance Compare";		
		
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('handling_performance_compare',$data);
		$this->load->view('jsAssets');
	}
	
	function actual_ctms_entry_action()
	{
		$tbl_id=$this->input->post('tbl_id');
		$vvd_gkey_entry=$this->input->post('vvd_gkey_entry');
		$rot_entry=$this->input->post('rot_entry');
		$vsl_name_entry=$this->input->post('vsl_name_entry');
		$berth_entry=$this->input->post('berth_entry');
		$agent_entry=$this->input->post('agent_entry');
		$discharge_actual_entry=$this->input->post('discharge_actual_entry');
		$discharge_ctms_entry=$this->input->post('discharge_ctms_entry');
		$loading_actual_entry=$this->input->post('loading_actual_entry');
		$loading_ctms_entry=$this->input->post('loading_ctms_entry');
		$perform_search_date_entry=$this->input->post('perform_search_date_entry');
		$login_id = $this->session->userdata('login_id');
		$ip_address = $_SERVER['REMOTE_ADDR'];
		//$ata_dt_entry=$this->input->post('ata_dt_entry');
		
		//echo "<br>";	
		
		//--17-01-19
		$cnt=0;
		
		$sql_chk_duplicate="SELECT COUNT(*) AS rtnValue FROM ctmsmis.handlingperformancecompare WHERE id='$tbl_id'";
		
		$cnt=$this->bm->dataReturn($sql_chk_duplicate);
		
		if($cnt>0)
		{
			$sql_insert_perform="UPDATE ctmsmis.handlingperformancecompare
			SET discharge_actual='$discharge_actual_entry',discharge_ctms='$discharge_ctms_entry',loading_actual='$loading_actual_entry',loading_ctms='$loading_ctms_entry',ip_address='$ip_address'
			WHERE id='$tbl_id'";
		}
		else
		{
			$sql_insert_perform="INSERT INTO ctmsmis.handlingperformancecompare(vvd_gkey,rotation,vessel_name,berth,agent,discharge_actual,discharge_ctms,loading_actual,loading_ctms,ata_dt,entry_dt,entry_by,ip_address)
			VALUES('$vvd_gkey_entry','$rot_entry','$vsl_name_entry','$berth_entry','$agent_entry','$discharge_actual_entry','$discharge_ctms_entry','$loading_actual_entry','$loading_ctms_entry','$perform_search_date_entry',NOW(),'$login_id','$ip_address')";
		}
		
		//--17-01-19
		
		// $sql_insert_perform="INSERT INTO ctmsmis.handlingperformancecompare(vvd_gkey,rotation,vessel_name,berth,agent,discharge_actual,discharge_ctms,loading_actual,loading_ctms,ata_dt,entry_dt,entry_by)
		// VALUES('$vvd_gkey_entry','$rot_entry','$vsl_name_entry','$berth_entry','$agent_entry','$discharge_actual_entry','$discharge_ctms_entry','$loading_actual_entry','$loading_ctms_entry','$perform_search_date_entry',NOW(),'$login_id')";
	
		$rslt_insert_perform=$this->bm->dataInsert($sql_insert_perform);
		
		$this->handling_performance_compare_search($perform_search_date_entry);
	
		// $data['flag']=1;
		// $data['title']="Handling Performance Compare";
		
		// $this->load->view('header2');
		// $this->load->view('handling_performance_compare',$data);
		// $this->load->view('footer');
	}
	
	function add_new_form_action()
	{
		$vsl_name_new=$this->input->post('vsl_name_new');
		$rot_new=$this->input->post('rot_new');
		$berth_new=$this->input->post('berth_new');
		$agent_new=$this->input->post('agent_new');
		$dis_act_new=$this->input->post('dis_act_new');
		$dis_ctms_new=$this->input->post('dis_ctms_new');
		$load_act_new=$this->input->post('load_act_new');
		$load_ctms_new=$this->input->post('load_ctms_new');
		$perform_search_date_entry_new=$this->input->post('perform_search_date_entry_new');
		$login_id = $this->session->userdata('login_id');
		
		$sql_vvd_gkey="SELECT vvd_gkey AS rtnValue FROM vsl_vessel_visit_details WHERE ib_vyg='$rot_new'";
		
		$vvd_gkey_new=$this->bm->dataReturn($sql_vvd_gkey);
		
		$sql_insert_new_entry="INSERT INTO ctmsmis.handlingperformancecompare(vvd_gkey,rotation,vessel_name,berth,agent,discharge_actual,discharge_ctms,loading_actual,loading_ctms,ata_dt,entry_dt,entry_by)
		VALUES('$vvd_gkey_new','$rot_new','$vsl_name_new','$berth_new','$agent_new','$dis_act_new','$dis_ctms_new','$load_act_new','$load_ctms_new','$perform_search_date_entry_new',NOW(),'$login_id')";
		
		$rslt_insert_new_entry=$this->bm->dataInsert($sql_insert_new_entry);
		
		$this->handling_performance_compare_search($perform_search_date_entry_new);
	}
	
	//handling performance compare - end
	//ICD Container Report start
	function icdContainerReportByRotation()
	{
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="ROTATION WISE ICD CONTAINER";
			//echo $data['title'];
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('icdContainerReportByRotation',$data);
			$this->load->view('jsAssets');
		}	
	}
		
	function icdContainerReportByRotationView()
	{
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="ROTATION WISE ICD CONTAINER";
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$query = "SELECT sparcsn4.vsl_vessels.name AS vsl_name
				FROM sparcsn4.vsl_vessels
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg='$ddl_imp_rot_no'";
			$vsselName = $this->bm->dataSelect($query);
			$data['vsselName']=$vsselName;
			$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			//echo $data['title'];
			$this->load->view('icdContainerReportByRotationView',$data);

		}	
	}
  
	//ICD Container Report End
	function containerBarcodeSearch()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$msg="";
			$data['title']="BARCODE GENERATOR";
			$data['msg']=$msg;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('containerBarcodeSearch',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function continerBarcodeGeneratePerform()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$cont_no = "";
			if($this->input->post('cont_no'))
				$cont_no=$this->input->post('cont_no');
			else
				$cont_no=$this->uri->segment(3);
			
			$data['cont_no']=$cont_no;
			$data['title']="BARCODE";
			$data['msg']="";
			

			$this->load->view('containerBarcodeGenerator',$data);
		}
	}
	
		//Container Wise Truck - start
	function cont_wise_truck()
	{
		$data['title']="CONTAINER WISE TRUCK ENTRY";
		$data['msg']="";
		$data['flag']=0;
		$data['container_no']=null;
		
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('cont_wise_truck',$data);
		$this->load->view('jsAssets');
	}
	
	function cont_wise_truck_search()
	{
		$data['title']="CONTAINER WISE TRUCK";
		$data['msg']="";
		
		//--- 
		
		//$query = "SELECT DISTINCT gkey, id FROM sparcsn4.road_gates WHERE life_cycle_state='ACT'";
		$query ="SELECT DISTINCT gkey, id FROM road_gates WHERE life_cycle_state='ACT'";
		$gateList = $this->bm->dataSelect($query);
					
		$data['gateList']=$gateList;
		
				
		$container_no=$this->input->post('cont_no');
		$data['container_no']=$container_no;
		
		/*$sql_cont_truck_n4="SELECT sparcsn4.inv_unit.id AS cont_no,sparcsn4.inv_unit.gkey AS unit_gkey,sparcsn4.config_metafield_lov.mfdch_desc AS assign_type,DATE(sparcsn4.inv_unit_fcy_visit.flex_date01) AS assign_date,sparcsn4.vsl_vessel_visit_details.ib_vyg AS rotation,sparcsn4.vsl_vessels.name AS vessel_name,k.name AS cnf,k.gkey AS bizu_gkey
		FROM sparcsn4.inv_unit  
		INNER JOIN sparcsn4.inv_unit_fcy_visit ON sparcsn4.inv_unit_fcy_visit.unit_gkey=sparcsn4.inv_unit.gkey
		INNER JOIN sparcsn4.argo_carrier_visit ON sparcsn4.argo_carrier_visit.gkey=sparcsn4.inv_unit_fcy_visit.actual_ib_cv
		INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessel_visit_details.vvd_gkey=sparcsn4.argo_carrier_visit.cvcvd_gkey
		INNER JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
		INNER JOIN sparcsn4.config_metafield_lov ON sparcsn4.inv_unit.flex_string01=config_metafield_lov.mfdch_value 
		INNER JOIN
		sparcsn4.inv_goods j ON j.gkey = sparcsn4.inv_unit.goods
		LEFT JOIN
		sparcsn4.ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
		WHERE sparcsn4.inv_unit.id='$container_no'";*/

		$sql_cont_truck_n4="SELECT inv_unit.id AS cont_no,inv_unit.gkey AS unit_gkey,config_metafield_lov.mfdch_desc AS assign_type,to_char(inv_unit_fcy_visit.flex_date01,'yyyy-mm-dd') AS assign_date,vsl_vessel_visit_details.ib_vyg AS rotation,vsl_vessels.name AS vessel_name,k.name AS cnf,k.gkey AS bizu_gkey
		FROM inv_unit  
		INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
		INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
		INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
		INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
		INNER JOIN config_metafield_lov ON inv_unit.flex_string01=config_metafield_lov.mfdch_value 
		INNER JOIN
		inv_goods j ON j.gkey = inv_unit.goods
		LEFT JOIN
		ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
		WHERE inv_unit.id='$container_no'";

	

		$rslt_cont_truck_n4=$this->bm->dataSelect($sql_cont_truck_n4);
		
		
		$sql_cont_truck_igm="SELECT cont_size,cont_height,Pack_Description,Pack_Number
		FROM igm_details
		INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
		WHERE cont_number='$container_no'";
		
		$rslt_cont_truck_igm=$this->bm->dataSelectDb1($sql_cont_truck_igm);
		
	
	

		$sql_chk_entered_truck="SELECT id, number_of_truck FROM ctmsmis.mis_cf_assign_truck WHERE cont_id='$container_no' 
								UNION ALL

								SELECT '0' AS id, '0' AS number_of_truck FROM
								 (SELECT 0) T1
								WHERE NOT EXISTS
								(
									SELECT id, number_of_truck AS number_of_truck FROM ctmsmis.mis_cf_assign_truck WHERE cont_id='$container_no' 
								)";
		
		//$rslt_chk_entered_truck=$this->bm->dataSelect($sql_chk_entered_truck);
		$rslt_chk_entered_truck=$this->bm->dataSelectDb2($sql_chk_entered_truck);
		
		
		$cf_assign_truck_id=$rslt_chk_entered_truck[0]['id'];
		
		$sql_truck_number_list="SELECT truck_number,entrance_date,entrance_gate,entrance_serial FROM ctmsmis.cont_wise_truck_dtl WHERE cf_assign_truck_id='$cf_assign_truck_id'";
		//return;
		//$rslt_truck_number_list=$this->bm->dataSelect($sql_truck_number_list);
		$rslt_truck_number_list=$this->bm->dataSelectDb2($sql_truck_number_list);
		//---
		
		$data['flag']=0;
		
		if(count($rslt_cont_truck_n4)>0 and count($rslt_cont_truck_igm)>0)
		{
			$data['flag']=1;
		}
		
		$data['rslt_cont_truck_n4']=$rslt_cont_truck_n4;
		$data['rslt_cont_truck_igm']=$rslt_cont_truck_igm;
		$data['rslt_chk_entered_truck']=$rslt_chk_entered_truck;
		$data['rslt_truck_number_list']=$rslt_truck_number_list;
	
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar'); 
		$this->load->view('cont_wise_truck',$data);
		$this->load->view('jsAssets');
	}
	
	
	
	
	function truck_wise_entry_action()
	{
		$login_id = $this->session->userdata('login_id');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		
		$cont_no=$this->input->post('container_no');
		$unit_gkey=$this->input->post('unit_gkey');		
		$total_truck=$this->input->post('total_truck');			
		$all_truck=$this->input->post('all_truck');		
		$bizu_gkey=$this->input->post('bizu_gkey');		
		$assign_type=$this->input->post('assign_type');		
		$gate=$this->input->post('gate');		
		
		$sql_chk_duplicate="SELECT COUNT(*) AS rtnValue FROM ctmsmis.mis_cf_assign_truck WHERE unit_gkey='$unit_gkey'";
		
		//$rslt_chk_duplicate=$this->bm->dataReturn($sql_chk_duplicate);
		$rslt_chk_duplicate=$this->bm->dataReturnDb2($sql_chk_duplicate);
		
		
		if($rslt_chk_duplicate>0)
		{
			$sql_cf_assign_truck_update="UPDATE ctmsmis.mis_cf_assign_truck 
								SET number_of_truck='$total_truck',truck_assign_time=NOW(),truck_assign_by='$login_id',user_ip='$ipaddr' 
								WHERE unit_gkey='$unit_gkey'";
								
			//$rslt_cf_assign_truck_update=$this->bm->dataUpdate($sql_cf_assign_truck_update);
			$rslt_cf_assign_truck_update=$this->bm->dataUpdatedb2($sql_cf_assign_truck_update);
		}
		else
		{
			$sql_cf_assign_truck="INSERT INTO ctmsmis.mis_cf_assign_truck(unit_gkey,cont_id,assign_type,number_of_truck,truck_assign_time,truck_assign_by,user_ip)
							VALUES('$unit_gkey','$cont_no','$assign_type','$total_truck',NOW(),'$login_id','$ipaddr')";
							
			//$rslt_cf_assign_truck=$this->bm->dataInsert($sql_cf_assign_truck);
			$rslt_cf_assign_truck=$this->bm->dataInsertDb2($sql_cf_assign_truck);
		}
		
		if($rslt_cf_assign_truck or $rslt_cf_assign_truck_update)
		{
			$sql_cf_assign_truck_id="SELECT ctmsmis.mis_cf_assign_truck.id AS rtnValue 
								FROM ctmsmis.mis_cf_assign_truck
								WHERE unit_gkey='$unit_gkey'";
						
			//$cf_assign_truck_id=$this->bm->dataReturn($sql_cf_assign_truck_id);
			$cf_assign_truck_id=$this->bm->dataReturnDb2($sql_cf_assign_truck_id);
			
			for($i=1;$i <= $total_truck;$i++)
			{
				$strSeral = "SELECT IFNULL(MAX(entrance_serial),0)+1 AS rtnValue FROM ctmsmis.cont_wise_truck_dtl WHERE entrance_date=DATE(NOW()) AND entrance_gate='$gate'";
				//$trkSerial=$this->bm->dataReturn($strSeral);
				$trkSerial=$this->bm->dataReturnDb2($strSeral);
				
				
				$truck_number = $this->input->post('truck_no_'.$i);				
				if($truck_number!="")
				{
					$sql_chk_dup_truck="SELECT COUNT(truck_number) as rtnValue FROM ctmsmis.cont_wise_truck_dtl WHERE truck_number='$truck_number' AND cf_assign_truck_id='$cf_assign_truck_id'";
				
					//$rslt_chk_duplicate=$this->bm->dataReturn($sql_chk_dup_truck);
					$rslt_chk_duplicate=$this->bm->dataReturnDb2($sql_chk_dup_truck);
					
					if($rslt_chk_duplicate>0)
					{
						$sql_update_cont_wise_dtl="UPDATE ctmsmis.cont_wise_truck_dtl SET cf_assign_truck_id='$cf_assign_truck_id',bizu_gkey='$bizu_gkey',encrypted_data=sha1('".$cont_no.$bizu_gkey.$truck_number."') WHERE truck_number='$truck_number' AND cf_assign_truck_id='$cf_assign_truck_id'";
						
						//$rslt_conf_wise_dtl_update=$this->bm->dataUpdate($sql_update_cont_wise_dtl);
						$rslt_conf_wise_dtl_update=$this->bm->dataUpdatedb2($sql_update_cont_wise_dtl);
					}
					else
					{
						$sql_conf_wise_dtl="INSERT INTO ctmsmis.cont_wise_truck_dtl(cf_assign_truck_id,truck_number,bizu_gkey,encrypted_data,entrance_date,entrance_gate,entrance_serial)
							VALUES('$cf_assign_truck_id','$truck_number','$bizu_gkey',sha1('".$cont_no.$bizu_gkey.$truck_number."'),DATE(NOW()),'$gate','$trkSerial')";
							
						//$rslt_conf_wise_dtl=$this->bm->dataInsert($sql_conf_wise_dtl);
						$rslt_conf_wise_dtl=$this->bm->dataInsertDb2($sql_conf_wise_dtl);
					}					
				}
			}
			
			if($rslt_conf_wise_dtl)
				$data['msg']="<font color='green' size='5'>Successfully inserted for ".$cont_no."<b><br/><br/><a href='".site_url('report/continerBarcodeGeneratePerform/'.$cont_no)."' target='_blank'>Print Ticket</a></b></font>";
			else if($rslt_conf_wise_dtl_update)
				$data['msg']="<font color='green' size='5'>Successfully updated for ".$cont_no."<b><br/><br/><a href='".site_url('report/continerBarcodeGeneratePerform/'.$cont_no)."' target='_blank'>Print Ticket</a></b></font>";
			else
				$data['msg']="<font color='red' size='5'>Entry failed for ".$cont_no."</font>";
		}
		
		$data['title']="CONTAINER WISE TRUCK ENTRY";
		$data['rslt_conf_wise_dtl']="";
		$data['rslt_cf_assign_truck']="";
		$data['container_no']=$cont_no;

		$data['flag']=0;
		
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar'); 
		$this->load->view('cont_wise_truck',$data);
		$this->load->view('jsAssets');
	}
	
	
	//Container Wise Truck - end
	
	function containerListForSecurity()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="Container List Search";

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar'); 
			$this->load->view('containerListForSecurity',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function containerListForSecurityBySearch()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{
		  $search_by = $this->input->post('search_by');
		  
		  if($search_by=="Date")
			{
			$date=trim($this->input->post('searchInput'));
			$data['tableTitle']="Container List for the Date: ".$date;
			$listSql="SELECT ctmsmis.mis_cf_assign_truck.cont_id, ctmsmis.mis_cf_assign_truck.number_of_truck, ctmsmis.cont_wise_truck_dtl.bizu_gkey,cont_id, 
				ctmsmis.cont_wise_truck_dtl.encrypted_data, ctmsmis.cont_wise_truck_dtl.truck_number, 
				cont_wise_truck_dtl.entrance_gate,mis_cf_assign_truck.assign_type, cont_wise_truck_dtl.entrance_date, cont_wise_truck_dtl.cont_verification_status FROM ctmsmis.mis_cf_assign_truck 
				INNER JOIN ctmsmis.cont_wise_truck_dtl ON ctmsmis.cont_wise_truck_dtl.cf_assign_truck_id=ctmsmis.mis_cf_assign_truck.id 
				WHERE cont_wise_truck_dtl.entrance_date='$date'";    
			}

			else if($search_by=="Gate")
			{
			 $gate=trim($this->input->post('searchVal'));
				$data['tableTitle']="Container List for the Gate: ".$gate; 
			   $listSql="SELECT ctmsmis.mis_cf_assign_truck.cont_id, ctmsmis.mis_cf_assign_truck.number_of_truck, ctmsmis.cont_wise_truck_dtl.bizu_gkey,cont_id, 
				ctmsmis.cont_wise_truck_dtl.encrypted_data, ctmsmis.cont_wise_truck_dtl.truck_number, 
				cont_wise_truck_dtl.entrance_gate,mis_cf_assign_truck.assign_type, cont_wise_truck_dtl.entrance_date, cont_wise_truck_dtl.cont_verification_status FROM ctmsmis.mis_cf_assign_truck 
				INNER JOIN ctmsmis.cont_wise_truck_dtl ON ctmsmis.cont_wise_truck_dtl.cf_assign_truck_id=ctmsmis.mis_cf_assign_truck.id 
				where cont_wise_truck_dtl.entrance_gate='$gate'";
				   
			}
			$list=$this->bm->dataSelectDb2($listSql);
			$data['list']=$list;

			$this->load->view('containerListForSecurityBySearch',$data);               
            }	
	}
	
	//Cargo Handling Equipment Remarks------SUMON 
	function cargoHandlingEquipmentRemarks()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$msg="";
			if($this->input->post('delete'))
			{
				$eid=$this->input->post('eid');
				$deleteSql="DELETE FROM ctmsmis.equip_for_cargo_handling_remarks WHERE ctmsmis.equip_for_cargo_handling_remarks.id='$eid'";
				$deleteStat=$this->bm->dataDeleteDb2($deleteSql);
				if($deleteStat==1)
					$msg="<font color='green'><b>Succesfully Deleted</b></font>";
			   else
					$msg="<font color='red'><b>Not Deleted.</b></font>";
			}
			$rslt_sql="SELECT id, equi_type, remarks, updated_by, date(update_time) as update_time FROM ctmsmis.equip_for_cargo_handling_remarks";
			$result=$this->bm->dataSelectDb2($rslt_sql);			
			$data['result']=$result;
			$data['editFlag']=0;
			
			$data['title']="Equipment Remarks For Cargo Handling";
			$data['msg']=$msg;
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('cargoHandlingEquipmentRemarks',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	
	function cargoHandlingEquipmentRemarksPerform()
	{ 
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
				
			$login_id = $this->session->userdata('login_id');
			$equip_type=$this->input->post('equip_type');
			//$office=$this->input->post('office');
			$remarks=$this->input->post('remarks');
			// $total_equip=$this->input->post('total_equip');

		
			if($this->input->post('update'))
				{
					$equipID=$this->input->post('equipID');
					$updateSql="UPDATE ctmsmis.equip_for_cargo_handling_remarks set remarks='$remarks',
								updated_by='$login_id', update_time=now() where ctmsmis.equip_for_cargo_handling_remarks.equi_type='$equip_type'";
					$updateStat=$this->bm->dataUpdatedb2($updateSql);
						if($updateStat==1)
						$msg="<font color='green'><b>Succesfully Updated</b></font>";
						else
						$msg="<font color='red'><b>Updation failed</b></font>";
						
				} 
			else{
						$ckqSql="SELECT COUNT(*) AS rtnValue FROM ctmsmis.equip_for_cargo_handling_remarks WHERE equi_type='$equip_type'";
						$chkStat=$this->bm->dataReturnDb2($ckqSql);
						if($chkStat==0)
						{							
							$insert_sql="REPLACE INTO ctmsmis.equip_for_cargo_handling_remarks(equi_type,remarks, updated_by, update_time)
											VALUES('$equip_type','$remarks','$login_id', NOW())";                   
							$insert_stat=$this->bm->dataInsertDb2($insert_sql);

							if($insert_stat==1)
								$msg="<font color='green'><b>Succesfully inserted</b></font>";
							else
								$msg="<font color='red'><b>Insertion failed</b></font>";
						}
						else
							$msg="<font color='red'><b>The Equipment remarks already in the list.<br/> try to edit or delete it.</b></font>";
				}   
				$rslt_sql="SELECT id, equi_type, remarks, updated_by, date(update_time) as update_time FROM ctmsmis.equip_for_cargo_handling_remarks";
				$result=$this->bm->dataSelect($rslt_sql);			
				$data['result']=$result;
		
				$data['title']="Equipment Remarks For Cargo Handling";
				$data['msg']=$msg;
				$data['editFlag']=0;
				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('cargoHandlingEquipmentRemarks',$data);
				$this->load->view('jsAssetsList');
		} 
	}
		
	function cargoHandlingEquipmentRemarksEdit()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{
			$eqiID= $this->input->post('eqiID');               
			$select_sql="SELECT id, equi_type, remarks, updated_by, update_time
					FROM ctmsmis.equip_for_cargo_handling_remarks where equip_for_cargo_handling_remarks.id='$eqiID'";
			
//               echo $select_sql;
//                return;
			$select_result=$this->bm->dataSelectDb2($select_sql);			
			$data['select_result']=$select_result;
			
			$rslt_sql="SELECT id, equi_type, remarks, updated_by, date(update_time) as update_time FROM ctmsmis.equip_for_cargo_handling_remarks";
			$result=$this->bm->dataSelectDb2($rslt_sql);			
			$data['result']=$result;

			$data['editFlag']=1;
			$msg="";
		$data['title']="Equipment Remarks For Cargo Handling";
			$data['msg']=$msg;
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('cargoHandlingEquipmentRemarks',$data);
			$this->load->view('jsAssetsList');
		}
	}
		//Cargo Handling Equipment Position Entry
	
	function cargoHandlingEquipmentPositionEntry()
	{
		$session_id = $this->session->userdata('value');
		if($session_id!=$this->session->userdata('session_id'))
		{
			$this->logout();
		}
		else
		{
			if($this->input->post('delete'))
			{
				$eid=$this->input->post('eid');
				$deleteSql="DELETE FROM ctmsmis.equip_for_cargo_handling WHERE ctmsmis.equip_for_cargo_handling.id='$eid'";
				$deleteStat=$this->bm->dataDeleteDb2($deleteSql);
			}
			$rslt_sql="SELECT id, equip_type, office,  demand, supply, stand_by, out_of_order,workshop, updated_by, date(update_time) as update_time FROM ctmsmis.equip_for_cargo_handling where update_time=date(now())";
			$result=$this->bm->dataSelectDb2($rslt_sql);			
			$data['result']=$result;
			$data['editFlag']=0;
			$msg="";
			$data['title']="Equipment Assign For Cargo Handling";
			$data['msg']=$msg;
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('cargoHandlingEquipmentPositionEntry',$data);
			$this->load->view('jsAssetsList');
		}
	}
        
    function cargoHandlingEquipmentPositionPerform()
	{ 
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
				
			$login_id = $this->session->userdata('login_id');
			$equip_type=$this->input->post('equip_type');
			$office=$this->input->post('office');
			// $total_equip=$this->input->post('total_equip');
			$demand=$this->input->post('demand');
			$supply=$this->input->post('supply');
			$stand_by=$this->input->post('stand_by');
			$out_of_order=$this->input->post('out_of_order');
			$workshop=$this->input->post('workshop');
		
	/* 		if($this->input->post('update'))
		{
			$equipID=$this->input->post('equipID');
			$updateSql="UPDATE ctmsmis.equip_for_cargo_handling set equip_type ='$equip_type', office='$office', 
						demand='$demand', supply='$supply', stand_by='$stand_by', out_of_order='$out_of_order',
						updated_by='$login_id',  update_time=now() where ctmsmis.equip_for_cargo_handling.id='$equipID'";
				echo $updateSql;
				return;
			$updateStat=$this->bm->dataUpdate($updateSql);
			if($updateStat==1)
			$msg="<font color='green'><b>Succesfully Updated</b></font>";
			else
			$msg="<font color='red'><b>Updation failed</b></font>";
				
		} */
	//       else{
		
			$insert_sql="REPLACE INTO ctmsmis.equip_for_cargo_handling(equip_type, office, demand, supply, stand_by, out_of_order, workshop, updated_by, update_time)
				VALUES('$equip_type', '$office', '$demand', '$supply','$stand_by','$out_of_order','$workshop', '$login_id', NOW())";
				
		//       echo $insert_sql;
		//         return;
			$insert_stat=$this->bm->dataInsertDb2($insert_sql);

			if($insert_stat==1)
				$msg="<font color='green'><b>Succesfully inserted</b></font>";
			else
				$msg="<font color='red'><b>Insertion failed</b></font>";
		//    }   
				//$msg="";
				
				$rslt_sql="SELECT id, equip_type, office,  demand, supply, stand_by, out_of_order, workshop, updated_by, date(update_time) as update_time FROM ctmsmis.equip_for_cargo_handling where update_time=date(now())";
				$result=$this->bm->dataSelectDb2($rslt_sql);			
				$data['result']=$result;
		
				$data['title']="Equipment Assign For Cargo Handling";
				$data['msg']=$msg;
				$data['editFlag']=0;
				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('cargoHandlingEquipmentPositionEntry',$data);
				$this->load->view('jsAssetsList');
		} 
	}
     
 
	function cargoHandlingEquipmentPositionEdit()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{
			$eqiID= $this->input->post('eqiID');               
			$select_sql="SELECT id, equip_type, office, demand, supply, stand_by, out_of_order,workshop, updated_by, update_time
					FROM ctmsmis.equip_for_cargo_handling where equip_for_cargo_handling.id='$eqiID'";
			
//               echo $select_sql;
//                return;
			$select_result=$this->bm->dataSelectDb2($select_sql);			
			$data['select_result']=$select_result;
			
			$rslt_sql="SELECT id, equip_type, office, demand, supply, stand_by, out_of_order,workshop, updated_by, date(update_time) as update_time FROM ctmsmis.equip_for_cargo_handling where update_time=date(now())";
			$result=$this->bm->dataSelectDb2($rslt_sql);			
			$data['result']=$result;

			$data['editFlag']=1;
			$msg="";
			$data['title']="Equipment Assign For Cargo Handling";
			$data['msg']=$msg;
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('cargoHandlingEquipmentPositionEntry',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	
	function cargoHandlingEquipmentPositionView()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
		   $this->logout();
		}
		else
		{
			$this->load->view('cargoHandlingEquipmentPositionView',$data);
		} 
		
	}
	
		//Cargo Handling Equipment Position Entry---- End //Sumon
		
		function product_report_search()		
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['tableTitle']="PRODUCT LIST";
			$data['title']="PRODUCT LIST";

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('networkProductReportForm',$data);
			$this->load->view('jsAssets');			
		}
	}
	
	function product_report_pdf()	 //Sumon	//intakhab
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$fileType=$this->input->post('fileOptions');
			//echo CI_VERSION;
			//return;
		if($fileType=="pdf" )
			{ 
			$this->load->library('m_pdf');
			//$pdf->use_kwt = true;
			
			$pdf = $this->m_pdf->load();
			//$pdf->SetWatermarkText('CPA CTMS');
			$pdf->showWatermarkText = true;	
			$search_by = $this->input->post('search_by');
			
			if($search_by=="serial")
			{
				$serial=trim($this->input->post('searchInput'));
				$this->data['tableTitle']="Product Serial No:  ".$serial;			 
				
				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
				prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
				LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
				INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
				WHERE prod_serial='$serial'";            
			}
			else if($search_by=="category")
			{
				$category=trim($this->input->post('searchVal'));
				// $this->data['tableTitle']="Product Category:  ".$category;
				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
				prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
				LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
				INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
				WHERE type_id='$category'";
				$category_name_sql="SELECT inventory_product_type.id ,IF(short_name='Monitor',CONCAT(short_name,'-',product_desc),short_name) AS detl 
				FROM inventory_product_type WHERE cchaportdb.inventory_product_type.id='$category'";
				$cat_name=$this->bm->dataSelectDb1($category_name_sql);
				$this->data['tableTitle']="Product category: ".$cat_name[0]['detl'];   
			}
			else if($search_by=="product")
			{
				$product_name=trim($this->input->post('searchInput'));
				$this->data['tableTitle']="Product Name:  ".$product_name;		 
				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
				prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
				LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
				INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
				WHERE prod_name='$product_name'";		   
			}
			else if($search_by=="location")
			{
				$location=trim($this->input->post('searchVal'));
				$this->data['tableTitle']="Location:  ".$location;
	 
				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
				prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
				LEFT JOIN inventory_product_location_details ON  inventory_product_location_details.id=inventory_product_info.loc_detail_id
				INNER JOIN inventory_product_location ON inventory_product_location_details.location_id=inventory_product_location.id
				INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
				WHERE location_name='$location'";
			}
			else if($search_by=="user")
			{
				$updated_by=trim($this->input->post('searchVal'));
				$this->data['tableTitle']="Records updated by:  ".$updated_by;
	 
				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
				prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
				LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
				INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
				WHERE prod_rcv_by ='$updated_by'";
			}
			else if($search_by=="ip_addr")
			{
				$ip_addr=trim($this->input->post('searchInput'));
				$this->data['tableTitle']="IP Address:  ".$ip_addr;

				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
				prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
				LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
				INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
				WHERE prod_ip='$ip_addr'";  
			}
			else if($search_by=="monitor")
			{
				//$ip_addr=trim($this->input->post('searchInput'));
				$this->data['tableTitle']="All Monitor";

				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, 
				 short_name,prod_name, prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, 
				 checkStatus, checked_by FROM inventory_product_info
				  LEFT JOIN `inventory_product_location_details` 
				  ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
				  INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				  INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id WHERE short_name='Monitor'";  
			}else if($search_by == "product_sts"){
				$sts = trim($this->input->post('searchVal'));
				$this->data['tableTitle']="Product Status: ".$sts;
				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, 
				 short_name,prod_name, prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, 
				 checkStatus, checked_by FROM inventory_product_info
				  LEFT JOIN `inventory_product_location_details` 
				  ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
				  INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				  INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id WHERE prod_condi='$sts'";
			}

			$rslt_product_list=$this->bm->dataSelectDb1($sql_product_list);
			
			$this->data['rslt_product_list']=$rslt_product_list;
			
			$html=$this->load->view('network_product_list_report',$this->data, true); 

			// $pdf->AddPage('P', // L - landscape, P - portrait
			// 					'', '', '', '',
			// 					5, // margin_left
			// 					5, // margin right
			// 					5, // margin top
			// 					5, // margin bottom
			// 					5, // margin header
			// 					5); // margin footer

			date_default_timezone_set('Asia/Dhaka');
			//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO}|Date:  {DATE M d, Y h:i:sa}');
			//$pdf->setFooter('|Page {PAGENO} of {nb}|');   

			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);

			$pdf->Output($pdfFilePath, "I");
		}
		else
		{
			$search_by = $this->input->post('search_by');
			
			if($search_by=="serial")
			{
				$serial=trim($this->input->post('searchInput'));
				$data['tableTitle']="Product Serial No:  ".$serial;			 
				
				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
				prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
				LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
				INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
				WHERE prod_serial='$serial'";            
			}
			else if($search_by=="category")
			{
				$category=trim($this->input->post('searchVal'));
				// $this->data['tableTitle']="Product Category:  ".$category;
				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
				prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
				LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
				INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
				WHERE type_id='$category'";
				$category_name_sql="SELECT inventory_product_type.id ,IF(short_name='Monitor',CONCAT(short_name,'-',product_desc),short_name) AS detl 
				FROM inventory_product_type WHERE cchaportdb.inventory_product_type.id='$category'";
				$cat_name=$this->bm->dataSelectDb1($category_name_sql);
				$data['tableTitle']="Product category: ".$cat_name[0]['detl'];   
			}
			else if($search_by=="product")
			{
				$product_name=trim($this->input->post('searchInput'));
				$data['tableTitle']="Product Name:  ".$product_name;		 
				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
				prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
				LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
				INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
				WHERE prod_name='$product_name'";		   
			}
			else if($search_by=="location")
			{
				$location=trim($this->input->post('searchVal'));
				$data['tableTitle']="Location:  ".$location;
	 
				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
				prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
				LEFT JOIN inventory_product_location_details ON  inventory_product_location_details.id=inventory_product_info.loc_detail_id
				INNER JOIN inventory_product_location ON inventory_product_location_details.location_id=inventory_product_location.id
				INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
				WHERE location_name='$location'";
			}
			else if($search_by=="user")
			{
				$updated_by=trim($this->input->post('searchVal'));
				$data['tableTitle']="Records updated by:  ".$updated_by;
	 
				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
				prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
				LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
				INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
				WHERE prod_rcv_by ='$updated_by'";
			}
			else if($search_by=="ip_addr")
			{
				$ip_addr=trim($this->input->post('searchInput'));
				$data['tableTitle']="IP Address:  ".$ip_addr;

				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, short_name,prod_name,
				prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, checkStatus, checked_by FROM inventory_product_info 
				LEFT JOIN `inventory_product_location_details` ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
				INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id
				WHERE prod_ip='$ip_addr'";  
			}
			else if($search_by=="monitor")
			{
				//$ip_addr=trim($this->input->post('searchInput'));
				$data['tableTitle']="All Monitor";

				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, 
				 short_name,prod_name, prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, 
				 checkStatus, checked_by FROM inventory_product_info
				  LEFT JOIN `inventory_product_location_details` 
				  ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
				  INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				  INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id WHERE short_name='Monitor'";  
			}else if($search_by == "product_sts"){
				$sts = trim($this->input->post('searchVal'));
				$data['tableTitle']="Product Status: ".$sts;
				$sql_product_list="SELECT inventory_product_info.id, loc_detail_id,location_details, owner_id, full_name, type_id, 
				 short_name,prod_name, prod_serial, imei_number, prod_ip, prod_deck_id, prod_rcv_date, prod_rcv_by, 
				 checkStatus, checked_by FROM inventory_product_info
				  LEFT JOIN `inventory_product_location_details` 
				  ON `inventory_product_location_details`.id=inventory_product_info.`loc_detail_id` 
				  INNER JOIN inventory_product_owner ON inventory_product_owner.id=inventory_product_info.owner_id
				  INNER JOIN inventory_product_type ON inventory_product_type.id=inventory_product_info.type_id WHERE prod_condi='$sts'";
			}

			$rslt_product_list=$this->bm->dataSelectDb1($sql_product_list);
			
			$data['rslt_product_list']=$rslt_product_list;
			
			$this->load->view('network_product_list_report_excel',$data); 
			
			}
		}
	}
	
	//Organization Type entry and list
	
	function organizationTypeList()			// 2020-06-02
	{
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{   
			if($this->input->post('delete'))
			{
				$listId=$this->input->post('listId');
				$deleteSQL="Delete from  cchaportdb.tbl_org_types  where id='$listId'";
				$updateStat=$this->bm->dataDeleteDB1($deleteSQL);			
			}
			
			$formListQuery="SELECT id, Org_Type, Type_description FROM cchaportdb.tbl_org_types";						
			$formList=$this->bm->dataSelectDb1($formListQuery);
			$data['title']="ORGANIZATION TYPE LIST";
			$data['msg']="";
			$data['formList']=$formList;
			$data['editFlag']=0;	
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('organizationTypeList',$data);
			$this->load->view('jsAssets');
		}
	}



	function organizationTypeListSearch()
	{
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{   
			$seach_by=$this->input->post('search_by');
			$list=$this->input->post('list');						
			if ($seach_by=="org")
			{	       
				$formListQuery="SELECT id, Org_Type, Type_description FROM cchaportdb.tbl_org_types where Org_Type='$list'";
				//echo $formListQuery;
			//return;	
			}
			else if($searchkey=="sec")
			{
					
			}
			$formList=$this->bm->dataSelectDb1($formListQuery);
			
			$data['title']="ORGANIZATION TYPE LIST";
			$data['msg']=$msg;
			$data['formList']=$formList;
			$data['editFlag']=0;	
			$this->load->view('header2');
			$this->load->view('organizationTypeList',$data);
			$this->load->view('footer');
		}
	}

	function organizationTypeEdit()
	{
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{   
			$seach_by=$this->input->post('search_by');
			$list=$this->input->post('listId');						
     
				$formListQuery="SELECT id, Org_Type, Type_description FROM cchaportdb.tbl_org_types where id='$list'";
			//	echo $formListQuery;
			//return;	
			
			$formList=$this->bm->dataSelectDb1($formListQuery);
			
			$data['title']="ORGANIZATION TYPE LIST";
			$data['msg']=$msg;
			$data['formList']=$formList;
			$data['editFlag']=1;
				
			$this->load->view('header2');
			$this->load->view('organizationTypeForm',$data);
			$this->load->view('footer');
		}
	}
	
	function organizationTypeEntryForm()		// 2020-06-03
	{
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{   
			$seach_by=$this->input->post('search_by');
			$list=$this->input->post('listId');						
     
			$formListQuery="SELECT id, Org_Type, Type_description FROM cchaportdb.tbl_org_types where id='$list'";
			$formList=$this->bm->dataSelectDb1($formListQuery);
			
			$org_type = $this->input->post('org_type');
            $type_description=$this->input->post('type_description');
           
			if($this->input->post('update'))
			{
				$org_id=$this->input->post('org_id');
				$updateSql="UPDATE cchaportdb.tbl_org_types set Org_Type ='$org_type', Type_description='$type_description' 
						where cchaportdb.tbl_org_types.id='$org_id'";
			   
				$updateStat=$this->bm->dataUpdateDB1($updateSql);
				if($updateStat==1)
					$msg="<font color='green'><b>Succesfully Updated</b></font>";
				else
					$msg="<font color='red'><b>Updation failed</b></font>";					
			} 
			if($this->input->post('save')){
			
				$insert_sql="INSERT INTO cchaportdb.tbl_org_types(Org_Type, Type_description) VALUES('$org_type', '$type_description')";
					
				$insert_stat=$this->bm->dataInsertDB1($insert_sql);

				if($insert_stat==1)
					$msg="<font color='green'><b>Succesfully inserted</b></font>";
				else
					$msg="<font color='red'><b>Insertion failed</b></font>";
			}   
			
			$data['title']="ORGANIZATION TYPE FORM";
			$data['msg']="";
			$data['formList']=$formList;
			$data['editFlag']=0;				
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('organizationTypeForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function listOfNotStrippedContainerView()
	{
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$fromdate=$this->input->post('strDt');
			if($fromdate == "")
			{
				$data['title']="YARD WISE PROPOSED EMPTY AND EMPTY CONTAINER REPORT...";
				$data['msg8'] = "<font color='red' size='3'>Please Provide Date</font>";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('assignmentAllReportForm',$data);
				$this->load->view('jsAssets');
			}
			else
			{
				$yard_no=$this->input->post('yard_no1'); 
				$data['fromdate']=$fromdate;
				$data['yard_no']=$yard_no;
				$this->load->view('cssAssets');
				$this->load->view('listOfNotStrippedContainerView',$data);
				$this->load->view('jsAssets');
			}
		}
    }
	
	function ocr_container_info()
	{
			$this->load->view('ocr_container_form');
	}
	
	
	function ocr_container_list()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$cond="";
			$msg="";
			
			if($this->input->post('search_office_code'))
			{
				$search_office_code=$this->input->post('search_office_code');
				$cond=" WHERE office_code='$search_office_code'";
			}
			else if($this->input->post('search_c_number'))
			{
				$search_c_number=$this->input->post('search_c_number');
				$cond=" WHERE reg_no='$search_c_number'";
			}
			else if($this->input->post('search_c_date'))
			{
				$search_c_date=$this->input->post('search_c_date');
				$cond=" WHERE reg_date='$search_c_date'";
			}
			else if($this->input->post('search_entry_date'))
			{
				$search_entry_date=$this->input->post('search_entry_date');
				$cond=" WHERE DATE(entry_dt)='$search_entry_date'";
			}
			else if($this->input->post('search_cont_no'))
			{
				$search_cont_no=$this->input->post('search_cont_no');
				$cond=" INNER JOIN sad_container ON sad_container.`sad_id`=sad_info.`id`
						WHERE sad_container.`cont_number`='$search_cont_no'";
			}				
			
			$sql_search_be_list="SELECT office_code,reg_no,reg_date FROM sad_info".$cond;
			
			$rslt_list_of_be=$this->bm->dataSelectDb1($sql_search_be_list);
			
			if(count($rslt_list_of_be)==0)
				$msg="No result found";
			
			$data['title']="BE ENTRY...";
			$data['msg']=$msg;
			$data['rslt_list_of_be']=$rslt_list_of_be;
			
			$this->load->view('header2');
			$this->load->view('xml_conversion_form',$data);
			$this->load->view('footer');					
		}
	}

	// CIR

	function cirForm()
	{
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="CIR";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('cirForm',$data);
			$this->load->view('jsAssets');
		}	
	}
	
	function cirReportView()
	{
		$fromdate=$this->input->post('fromdate1');
		$cat=$this->input->post('yard_no1'); 
		
		$this->data['fromdate']=$fromdate;
		$this->data['cat']=$cat;
		$try="DATE";
		$this->load->library('m_pdf');
		//$pdf->use_kwt = true;
		$this->data['title']="CIR Report";
		$pdfFilePath ="CIR Report-".time()."-download.pdf";
		$pdf = $this->m_pdf->load();
		$pdf->useAdobeCJK = true;
		$pdf->SetAutoFont(AUTOFONT_ALL);
		
		$html=$this->load->view('cirReportView',$this->data, true);
		$stylesheet = file_get_contents('resources/styles/test.css'); // external css
		$pdf->useSubstitutions = true; // optional - just as an example
		
		//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
		$pdf->setFooter('Developed By : DataSoft||Page {PAGENO} of {nb}');
		
		$pdf->WriteHTML($stylesheet,1);
		$pdf->WriteHTML($html,2);
		$pdf->Output($pdfFilePath, "I"); // For Show Pdf
    }
	
	// Raju
	 //date wise be icd report - start
    function date_wise_icd_report()
    {
        $session_id = $this->session->userdata('value');

        $LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
        {
            $this->logout();
        }
        else
        {
            $data['title']="DATE WISE ICD Report...";

            $this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('date_wise_icd_report_form',$data);
			$this->load->view('jsAssets');
        }
    }

    function date_wise_icd_report_action()
    {
        $session_id = $this->session->userdata('value');
        $LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
        {
            $this->logout();
        }
        else
        {
            $icd_entry_date = $this->input->post('icd_entry_date');

            $sql_icd_report_datewise="SELECT i.cir_dt,i.cir_no,i.time,i.pt, i.shift,i.category,i.entry_dt FROM icd_app_mst AS i 
            WHERE DATE(i.cir_dt) = '$icd_entry_date'";

            $rslt_icd_report_datewise = $this->bm->dataSelectDb1($sql_icd_report_datewise);

          //  $this->load->library('m_pdf');
          //  $mpdf->use_kwt = true;
            $this->data['rslt_icd_report_datewise']=$rslt_icd_report_datewise;
            $this->data['icd_entry_date']=$icd_entry_date;
           // $pdf = $this->m_pdf->load();
          //  //$pdf->SetWatermarkText('CPA CTMS');
          //  $pdf->showWatermarkText = true;

//            $pdf->AddPage('P', // L - landscape, P - portrait
//                '', '', '', '',
//                5, // margin_left
//                5, // margin right
//                10, // margin top
//                10, // margin bottom
//                10, // margin header
//                10); // margin footer
            $this->load->view('date_wise_icd_report_pdf',$this->data);
          //  $html=$this->load->view('date_wise_icd_report_pdf',$this->data, true);
          //  $pdfFilePath ="date_wise_icd_report-".time()."-download.pdf";
          //  $pdf->useSubstitutions = true;
          //  $pdf->setFooter('|Page {PAGENO} of {nb}|');
          //  $pdf->WriteHTML($html,2);
          //  $pdf->Output($pdfFilePath, "I");
        }
    }



    function icd_icr_wise_report()
    {
        $session_id = $this->session->userdata('value');
       // print_r($session_id);
	   $LoginStat = $this->session->userdata('LoginStat');
		
	   if($LoginStat!="yes")
        {
            $this->logout();
        }
        else
        {
            $cir_no = $this->input->post('cir_no');
            $cir_dt = $this->input->post('cir_dt');


            $sql_data="SELECT cont_no, rotation, wagon_no FROM icd_app_mst
				JOIN icd_app_dtl ON icd_app_dtl.mst_id = icd_app_mst.id WHERE icd_app_mst.cir_no = '$cir_no'
				AND DATE(icd_app_mst.cir_dt) = '$cir_dt'";

            $rslt_data = $this->bm->dataSelectDb1($sql_data);

              $this->load->library('m_pdf');
              $mpdf->use_kwt = true;
            $this->data['rslt_data']=$rslt_data;
            $this->data['cir_dt']=$cir_dt;
             $pdf = $this->m_pdf->load();
              //$pdf->SetWatermarkText('CPA CTMS');
              $pdf->showWatermarkText = true;

            $pdf->AddPage('P', // L - landscape, P - portrait
                '', '', '', '',
                5, // margin_left
                5, // margin right
                10, // margin top
                10, // margin bottom
                10, // margin header
                10); // margin footer
            $this->load->view('date_and_cir_wise_report',$this->data);
              $html=$this->load->view('date_and_cir_wise_report',$this->data, true);
              $pdfFilePath ="date_and_cir_wise_report-".time()."-download.pdf";
              $pdf->useSubstitutions = true;
              $pdf->setFooter('|Page {PAGENO} of {nb}|');
              $pdf->WriteHTML($html,2);
              $pdf->Output($pdfFilePath, "I");

        }
    }

    // //date wise be icd report - End
	//Unit wise last24HrsPosition  start--Sumon
	function last24HrPositionForm()					// 2020-06-09
    {
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="LAST 24 HOURS POSITION..";
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('last24HrPositionForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function last24HrPositionFormPerform()			// 2020-06-09
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['date']=$this->input->post('date');
			$data['unit']=$this->input->post('unit');
			
			$data['title']="LAST 24 HOURS POSITION..";
			
			$this->load->view('last24HrPositionPerform',$data);			
		}
	}
	
	//Unit wise last24HrsPosition  end
	
	//ocr report - start
	function ocr_report_form()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="OCR REPORT FORM";
			$data['msg']="";
				
			$this->load->view('header2');
			$this->load->view('ocr_report_form',$data);
			$this->load->view('footer');	
		}
	}
	
	function ocr_report_action()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$this->load->library('m_pdf');
			$mpdf->use_kwt = true;

			$search_by=$this->input->post('search_by');
			$from_dt=$this->input->post('from_dt');
			$to_dt=$this->input->post('to_dt');
			
			if($search_by=="ocd")
			{
			


            //     SELECT rd.created
			// 	FROM road_truck_transactions
			// 	INNER JOIN road_documents rd ON rd.tran_gkey=road_truck_transactions.gkey
			// 	WHERE road_truck_transactions.unit_gkey='' AND rd.doctype_gkey='7'
			// 	ORDER BY road_truck_transactions.gkey DESC fetch first 1 rows only
                
              
            // SELECT road_truck_visit_details.bat_nbr
			// 	FROM road_truck_transactions
			// 	INNER JOIN road_truck_visit_details ON road_truck_visit_details.tvdtls_gkey=road_truck_transactions.truck_visit_gkey
			// 	WHERE road_truck_transactions.unit_gkey='' ORDER BY road_truck_transactions.gkey DESC fetch first 1 rows only
                
              
                
            //     SELECT road_truck_visit_details.truck_license_nbr
			// 	FROM road_truck_transactions
			// 	INNER JOIN road_truck_visit_details ON road_truck_visit_details.tvdtls_gkey=road_truck_transactions.truck_visit_gkey
			// 	WHERE road_truck_transactions.unit_gkey='' ORDER BY road_truck_transactions.gkey DESC fetch first 1 rows only
               
                
            //     SELECT rd.created
			// 	FROM road_truck_transactions
			// 	INNER JOIN road_documents rd ON rd.tran_gkey=road_truck_transactions.gkey
			// 	WHERE road_truck_transactions.unit_gkey='' AND rd.doctype_gkey='7'
			// 	ORDER BY rd.gkey  DESC fetch first 1 rows only
                
              
        






				$sql_ocr_report="
				SELECT unit_gkey,cont_number,freight_kind,entry_dt_time AS out_time,assign_dt,cf_name
				FROM ctmsmis.mis_ocr_info
				WHERE off_dock_code='2591' AND entry_dt BETWEEN '$from_dt' AND '$to_dt'
				";

			}
			else if($search_by=="depo")
			{
				$sql_ocr_report="SELECT DISTINCT off_dock_code,
				(SELECT offdoc.code FROM ctmsmis.offdoc WHERE id=mis_ocr_info.off_dock_code) AS depo_code,
				(SELECT offdoc.name FROM ctmsmis.offdoc WHERE id=mis_ocr_info.off_dock_code) AS depo_name
				FROM ctmsmis.mis_ocr_info
				WHERE off_dock_code!='2591' AND entry_dt BETWEEN '$from_dt' AND '$to_dt'
				ORDER BY depo_code";
			}
			
			$rslt_ocr_report=$this->bm->dataSelect($sql_ocr_report);
				
			$this->data['rslt_ocr_report']=$rslt_ocr_report;
			
			$dest="";
			if($search_by=="ocd")
				$dest="On Chasis Delivery";
			else if($search_by=="depo")
				$dest="Depo";
			
			$this->data['search_by']=$search_by;
			$this->data['dest']=$dest;
			$this->data['from_dt']=$from_dt;
			$this->data['to_dt']=$to_dt;
			
		//	$this->load->view('ocr_report_view',$data);
			
			$html=$this->load->view('ocr_report_view',$this->data, true); 

			$pdfFilePath ="ocr_report_view-".time()."-download.pdf";

			$pdf = $this->m_pdf->load();

			//$pdf->SetWatermarkText('CPA CTMS');
			$pdf->showWatermarkText = true;

			//$stylesheet = file_get_contents(CSS_PATH.'style.css'); // external css
			//$stylesheet = file_get_contents('resources/styles/test.css'); 
			$pdf->useSubstitutions = true; 
				
			$pdf->setFooter('Prepared By : '.$login_id.'|Page {PAGENO}|Date {DATE j-m-Y}');

			//$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);
				
			$pdf->Output($pdfFilePath, "I");
		}
	}
	//ocr report - end
	
	//goods report - start
	function goods_report()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			// $sql_active_import_cont="SELECT sparcsn4.inv_unit.id,sparcsn4.inv_unit.visit_state,sparcsn4.inv_unit.category,sparcsn4.inv_unit.create_time
			// FROM sparcsn4.inv_unit
			// WHERE visit_state='1ACTIVE' AND category='IMPRT' AND DATE(create_time) BETWEEN '2019-01-01' AND '2019-03-10'";	
			
			// $sql_active_import_cont="SELECT sparcsn4.inv_unit.id,sparcsn4.inv_unit.visit_state,sparcsn4.inv_unit.category,sparcsn4.inv_unit.create_time
			// FROM sparcsn4.inv_unit
			// WHERE visit_state='1ACTIVE' AND category='IMPRT'";
			
			$sql_active_import_cont="SELECT id,inv_unit.visit_state,inv_unit.category,inv_unit.create_time 
			FROM inv_unit
			INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
			WHERE inv_unit_fcy_visit.transit_state='S40_YARD' AND inv_unit.category='IMPRT'";	
			
			$rslt_active_import_cont=$this->bm->dataSelect($sql_active_import_cont);
			
			$data['rslt_active_import_cont']=$rslt_active_import_cont;
			
			$this->load->view('goods_description_list',$data);
		}	
	}
	
	//first get the onion container - then get active yard
	function goods_report_new()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$sql_onion_cont="SELECT YEAR(igm_details.file_clearence_date) AS yr,igm_masters.Vessel_Name,igm_detail_container.cont_number,cont_size,'Import' AS cat,(cont_gross_weight-cont_weight)/1000 AS mton,igm_details.Exporter_address,Description_of_Goods,igm_details.file_clearence_date
			FROM igm_details
			INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
			INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
			WHERE Description_of_Goods LIKE 'ONION%' AND DATE(igm_details.file_clearence_date) BETWEEN '2019-08-01' AND '2019-10-20'";
			
			$rslt_onion_cont=$this->bm->dataSelectDb1($sql_onion_cont);
			
			$data['rslt_onion_cont']=$rslt_onion_cont;
			
			$this->load->view('goods_description_list_new',$data);
		}
	}
	
	function goods_report_rice()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$sql_rice_cont="SELECT YEAR(igm_details.file_clearence_date) AS yr,igm_details.Import_Rotation_No,igm_masters.Vessel_Name,igm_detail_container.cont_number,cont_size,'Import' AS cat,(cont_gross_weight-cont_weight)/1000 AS mton,igm_details.Exporter_address,Description_of_Goods,igm_details.file_clearence_date,igm_detail_container.commudity_code
			FROM igm_details
			INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
			INNER JOIN commudity_detail ON commudity_detail.commudity_code=igm_detail_container.commudity_code
			INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
			WHERE igm_detail_container.commudity_code='4' AND (Description_of_Goods LIKE 'RICE%' OR Description_of_Goods LIKE '% RICE' OR Description_of_Goods LIKE '% RICE %') AND DATE(igm_details.file_clearence_date) BETWEEN '2019-01-01' AND '2019-12-31'";
			
			$rslt_rice_cont=$this->bm->dataSelectDb1($sql_rice_cont);
			
			$data['rslt_rice_cont']=$rslt_rice_cont;
			
			$this->load->view('goods_description_list_rice',$data);
		}
	}
	
	function goods_report_garlic()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$sql_rice_cont="SELECT YEAR(igm_details.file_clearence_date) AS yr,igm_details.Import_Rotation_No,igm_masters.Vessel_Name,igm_detail_container.cont_number,cont_size,'Import' AS cat,(cont_gross_weight-cont_weight)/1000 AS mton,igm_details.Exporter_address,Description_of_Goods,igm_details.file_clearence_date,igm_detail_container.commudity_code
			FROM igm_details
			INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
			INNER JOIN commudity_detail ON commudity_detail.commudity_code=igm_detail_container.commudity_code
			INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
			WHERE igm_detail_container.commudity_code='4' AND (Description_of_Goods LIKE 'RICE%' OR Description_of_Goods LIKE '% RICE' OR Description_of_Goods LIKE '% RICE %') AND DATE(igm_details.file_clearence_date) BETWEEN '2019-01-01' AND '2019-12-31'";
			
			$rslt_rice_cont=$this->bm->dataSelectDb1($sql_rice_cont);
			
			$data['rslt_rice_cont']=$rslt_rice_cont;
			
			$this->load->view('goods_description_list_garlic',$data);
		}
	}
	//goods report - end

	function yardWiseImportTotalReport()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
		    $data['title'] = "Yard Wise Assignment Total Report Summary";

            $this->load->view('cssAssetsList');
            $this->load->view('headerTop');
            $this->load->view('sidebar');
            $this->load->view('yardWiseImportTotalReport',@$data);
            $this->load->view('jsAssetsList');
		}
	}
	
	function yardWiseImportTotalReportPerform()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{
		    $date = $this->input->post('date');
		    $yard_no = $this->input->post('yard_no');
		  
			//$date=trim($this->input->post('searchInput'));
			$data['tableTitle']="YARD WISE ASSIGNMENT TOTAL REPORT SUMMARY: ".$date;
			$data['date']=$date;
			$data['yard_no']=$yard_no;

            $this->load->view('cssAssetsList');
			$this->load->view('yardWiseImportTotalReportPerform',$data);
			$this->load->view("myclosebar");
            $this->load->view('jsAssetsList');
		}	
	}
	
	function yardWiseImportTotalReportPerformDetails()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{
			$type=$this->uri->segment(3);
			$yard=urldecode($this->uri->segment(4));
			$date=$this->uri->segment(5);
			if($yard=='CCT'|| $yard=='NCT'|| $yard=='OFY')
			{
				$con_yard=' Yard_No';
			}
			else
			{
				$con_yard=' Block_No';
			}
			
			$blockListQuery="SELECT DISTINCT block_cpa AS block FROM ctmsmis.yard_block
				 WHERE terminal='$yard' AND  block_cpa!='NULL' ORDER BY block ASC";
				$blockListRes=$this->bm->dataSelectDb2($blockListQuery);
				$blockList="";
				for($i=0;$i<count($blockListRes);$i++){
					$blockString="";
					$blockString=$blockListRes[$i]['block'];

					if($i==(count($blockListRes)-1)){
						$blockList=$blockList."'".$blockString."'";
					}
					else{
						$blockList=$blockList."'".$blockString."',";

					}

				}
			
			if($type=="C")
			{
				$query="SELECT a.cont_no AS cont,
				a.spAssignment AS special,
				(SELECT 
				CASE 
				WHEN a.time_out!='null' AND a.time_out!='0000-00-00 00:00:00'  THEN 1 
				 -- WHEN tmp_oracle_assignment.time_out IS NOT NULL THEN 1
				ELSE 0
				END ) AS delv,
				(SELECT 
				CASE 
				WHEN a.mfdch_value='APPCUS' THEN 1 
				WHEN a.mfdch_value='APPOTH' THEN 1
				WHEN a.mfdch_value='APPREF' THEN 1
				ELSE 0
				END ) AS ass,
				a.time_out AS delivery,
				a.mfdch_desc,
				a.mfdch_value AS t,

				a.cont_status AS statu,

				a.Yard_No,
				a.Block_No,
				a.assignmentDate,
				IF(UCASE(a.stay) LIKE '%STAY%',1,0) AS stay

				FROM ctmsmis.tmp_oracle_assignment a
				WHERE DATE(a.assignmentDate)='$date' AND Yard_No ='$yard' AND mfdch_value='CANCEL'";

				$val="CANCEL";
				
			}
			else if($type=="SP")
			{
				$section = $this->uri->segment(6);
				
				if($section == "BIDDLV")
					$cond = "  t='BIDDLV'";
				else if($section == "OCD")
					$cond = "  t='OCD'";
				else if($section == "REST")
					$cond = "  t NOT IN('BIDDLV','OCD')";
				
				
				$query="SELECT *
				FROM (SELECT a.cont_no AS cont,
				a.spAssignment AS special,
				(SELECT 
				CASE 
				WHEN a.time_out!='null' AND a.time_out!='0000-00-00 00:00:00'  THEN 1 
				ELSE 0
				END ) AS delv,
				(SELECT 
				CASE 
				WHEN a.mfdch_value='APPCUS' THEN 1 
				WHEN a.mfdch_value='APPOTH' THEN 1
				WHEN a.mfdch_value='APPREF' THEN 1
				ELSE 0
				END ) AS ass,
				a.time_out AS delivery,
				a.mfdch_desc,
				a.mfdch_value AS t,

				a.cont_status AS statu,

				a.Yard_No,
				a.Block_No,
				a.assignmentDate,
				a.time_in AS dischargetime,
				IF(UCASE(a.stay) LIKE '%STAY%',1,0) AS stay

				FROM ctmsmis.tmp_oracle_assignment a
				WHERE DATE(a.assignmentDate)='$date' AND $con_yard ='$yard' AND a.spAssignment='1'
				) as tbl WHERE ".$cond;
				//echo $query;
				//return;
				
				$val="SPECIAL";
				
			}
			else if($type=="B")
			{ 				
				$query="SELECT * FROM (
				SELECT a.cont_no AS cont, a.time_out,
				(CASE WHEN a.time_out!='null' AND  a.time_out!='0000-00-00 00:00:00'  THEN 1 
				WHEN a.time_out IS NOT NULL THEN 0
				ELSE 0
				END ) AS delv,
				(CASE 
				WHEN a.mfdch_value='APPCUS' THEN 1 
				WHEN a.mfdch_value='APPOTH' THEN 1
				WHEN a.mfdch_value='APPREF' THEN 1
				ELSE 0
				END) AS ass,
				a.time_in AS dischargetime,
				a.time_out AS delivery,
				a.mfdch_desc,
				a.mfdch_value AS t,

				a.cont_status AS statu,
				a.proEmtyDate,
				a.assignmentDate, (CASE WHEN UPPER(a.stay) LIKE '%STAY%' THEN 1 ELSE 0 END) AS stay

				FROM ctmsmis.tmp_oracle_assignment a
				WHERE DATE(a.assignmentDate)='$date' AND $con_yard ='$yard' AND a.mfdch_value NOT IN 
				('APPCUS','APPOTH','APPREF')
				)  tbl WHERE delv = 0 AND t!='CANCEL'";
				
			//	echo $query;
				$val="BALANCE";
				//return;
			}
			else if($type=="S")
			{
				$query="SELECT * FROM (
						SELECT a.cont_no AS cont, a.time_out,
						(CASE WHEN a.time_out!='null' AND  a.time_out!='0000-00-00 00:00:00'  THEN 1 
						WHEN a.time_out IS NOT NULL THEN 0
						ELSE 0
						END ) AS delv,
						(CASE 
						WHEN a.mfdch_value='APPCUS' THEN 1 
						WHEN a.mfdch_value='APPOTH' THEN 1
						WHEN a.mfdch_value='APPREF' THEN 1
						ELSE 0
						END) AS ass,
						a.time_in AS dischargetime,
						a.time_out AS delivery,
						a.mfdch_desc,
						a.mfdch_value AS t,

						a.cont_status AS statu,
						a.proEmtyDate,
						a.assignmentDate, (CASE WHEN UPPER(a.stay) LIKE '%STAY%' THEN 1 ELSE 0 END) AS stay

						FROM ctmsmis.tmp_oracle_assignment a
						WHERE DATE(a.assignmentDate)='$date' AND  $con_yard='$yard' 
						) AS tbl WHERE  stay = 1";
				$val="STAYED";
			}
			else if($type=="A")
			{
				$query="SELECT * FROM (
					SELECT a.cont_no AS cont, a.time_out,
					(CASE WHEN a.time_out!='null' AND  a.time_out!='0000-00-00 00:00:00'  THEN 1 
					WHEN a.time_out IS NOT NULL THEN 0
					ELSE 0
					END ) AS delv,
					(CASE 
					WHEN a.mfdch_value='APPCUS' THEN 1 
					WHEN a.mfdch_value='APPOTH' THEN 1
					WHEN a.mfdch_value='APPREF' THEN 1
					ELSE 0
					END) AS ass,
					a.time_in AS dischargetime,
					a.time_out AS delivery,
					a.mfdch_desc,
					a.mfdch_value AS t,

					a.cont_status AS statu,
					a.proEmtyDate,
					a.assignmentDate, (CASE WHEN UPPER(a.stay) LIKE '%STAY%' THEN 1 ELSE 0 END) AS stay

					FROM ctmsmis.tmp_oracle_assignment a
					WHERE DATE(a.assignmentDate)='$date' AND  $con_yard='$yard' AND 
					a.mfdch_value IN ('APPCUS','APPOTH','APPREF') 
					) AS tbl";
				
				$val="APPRAISE";
			}
			else if($type=="T")
			{
				$query="SELECT * FROM (
					SELECT a.cont_no AS cont, a.time_out,
					(CASE WHEN a.time_out!='null' AND  a.time_out!='0000-00-00 00:00:00'  THEN 1 
					WHEN a.time_out IS NOT NULL THEN 0
					ELSE 0
					END ) AS delv,
					(CASE 
					WHEN a.mfdch_value='APPCUS' THEN 1 
					WHEN a.mfdch_value='APPOTH' THEN 1
					WHEN a.mfdch_value='APPREF' THEN 1
					ELSE 0
					END) AS ass,
					a.time_in AS dischargetime,
					a.time_out AS delivery,
					a.mfdch_desc,
					a.mfdch_value AS t,

					a.cont_status AS statu,
					a.proEmtyDate,
					a.assignmentDate, (CASE WHEN UPPER(a.stay) LIKE '%STAY%' THEN 1 ELSE 0 END) AS stay

					FROM ctmsmis.tmp_oracle_assignment a
					WHERE DATE(a.assignmentDate)='$date' AND  Yard_No='$yard' AND 
					a.mfdch_value IN ('APPCUS','APPOTH','APPREF') 
					) AS tbl";
				
				$val="APPRAISE";
			}
			else if($type=="AY")
			{
				// if($yard=='GCB')
				// {
					$query="
					SELECT a.id AS cont,a.flex_string14,
					(CASE WHEN b.time_out!='' THEN 1 WHEN b.time_out IS NOT NULL THEN 1 ELSE 0 END ) AS delv, 
					b.time_in AS dischargetime, 
					b.time_out AS delivery, config_metafield_lov.mfdch_desc, config_metafield_lov.mfdch_value AS t, a.freight_kind AS statu, 
					
					(SELECT srv_event.created FROM srv_event 
					INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey 
					WHERE applied_to_gkey=a.gkey AND event_type_gkey=31426 AND srv_event_field_changes.new_value='E' FETCH FIRST 1 ROWS ONLY) AS proEmtyDate, 
					b.flex_date01 AS assignmentdate, (CASE WHEN UPPER(a.flex_string15) LIKE '%STAY%' THEN 1 ELSE 0 END) AS stay
					FROM inv_unit a
					INNER JOIN srv_event ON  srv_event.applied_to_gkey=a.gkey
					INNER JOIN inv_move_event ON inv_move_event.mve_gkey=srv_event.gkey
					INNER JOIN xps_che ON (xps_che.gkey=inv_move_event.che_fetch OR xps_che.gkey=inv_move_event.che_carry OR xps_che.gkey=inv_move_event.che_put)
					INNER JOIN xps_chezone ON  xps_chezone.che_id=xps_che.id
					INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey=a.gkey INNER JOIN ref_bizunit_scoped g ON a.line_op = g.gkey 
					INNER JOIN config_metafield_lov ON a.flex_string01=config_metafield_lov.mfdch_value 
					INNER JOIN inv_goods j ON j.gkey = a.goods LEFT JOIN ref_bizunit_scoped k ON k.gkey = j.consignee_bzu 
					WHERE to_char(b.flex_date01,'yyyy-mm-dd')='$date' AND config_metafield_lov.mfdch_value IN 
					('APPCUS','APPOTH','APPREF') AND a.flex_string14='YES' AND sel_block IN ($blockList)";
					$val="APPRAISEMENT (YES)";
			//	}
			}
			else if($type=="AN")
			{
				$query="
				SELECT a.id AS cont,a.flex_string14,
				(CASE WHEN b.time_out!='' THEN 1 WHEN b.time_out IS NOT NULL THEN 1 ELSE 0 END ) AS delv, 
				b.time_in AS dischargetime, 
				b.time_out AS delivery, config_metafield_lov.mfdch_desc, config_metafield_lov.mfdch_value AS t, a.freight_kind AS statu, 
				
				(SELECT srv_event.created FROM srv_event 
				INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey 
				WHERE applied_to_gkey=a.gkey AND event_type_gkey=31426 AND srv_event_field_changes.new_value='E' FETCH FIRST 1 ROWS ONLY) AS proEmtyDate, 
				b.flex_date01 AS assignmentdate, (CASE WHEN UPPER(a.flex_string15) LIKE '%STAY%' THEN 1 ELSE 0 END) AS stay 
				FROM inv_unit a
				INNER JOIN srv_event ON  srv_event.applied_to_gkey=a.gkey
				INNER JOIN inv_move_event ON inv_move_event.mve_gkey=srv_event.gkey
				INNER JOIN xps_che ON (xps_che.gkey=inv_move_event.che_fetch OR xps_che.gkey=inv_move_event.che_carry OR xps_che.gkey=inv_move_event.che_put)
				INNER JOIN xps_chezone ON  xps_chezone.che_id=xps_che.id
				INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey=a.gkey INNER JOIN ref_bizunit_scoped g ON a.line_op = g.gkey 
				INNER JOIN config_metafield_lov ON a.flex_string01=config_metafield_lov.mfdch_value 
				INNER JOIN inv_goods j ON j.gkey = a.goods LEFT JOIN ref_bizunit_scoped k ON k.gkey = j.consignee_bzu 
				WHERE to_char(b.flex_date01,'yyyy-mm-dd')='$date' AND config_metafield_lov.mfdch_value IN 
				('APPCUS','APPOTH','APPREF') AND a.flex_string14='NO' AND sel_block IN ($blockList)";
				$val="APPRAISEMENT (NO)";
			}
			else if($type=="AY_Single")
			{

				$query="
				SELECT a.id AS cont,a.flex_string14,
				(CASE WHEN b.time_out!='' THEN 1 WHEN b.time_out IS NOT NULL THEN 1 ELSE 0 END ) AS delv, 
				b.time_in AS dischargetime, 
				b.time_out AS delivery, config_metafield_lov.mfdch_desc, config_metafield_lov.mfdch_value AS t, a.freight_kind AS statu, 
				
				(SELECT srv_event.created FROM srv_event 
				INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey 
				WHERE applied_to_gkey=a.gkey AND event_type_gkey=31426 AND srv_event_field_changes.new_value='E' FETCH FIRST 1 ROWS ONLY) AS proEmtyDate, 
				b.flex_date01 AS assignmentdate,  (CASE WHEN UPPER(a.flex_string15) LIKE '%STAY%' THEN 1 ELSE 0 END) AS stay 
				FROM inv_unit a 
				INNER JOIN srv_event ON  srv_event.applied_to_gkey=a.gkey
				INNER JOIN inv_move_event ON inv_move_event.mve_gkey=srv_event.gkey
				INNER JOIN xps_che ON (xps_che.gkey=inv_move_event.che_fetch OR xps_che.gkey=inv_move_event.che_carry OR xps_che.gkey=inv_move_event.che_put)
				INNER JOIN xps_chezone ON  xps_chezone.che_id=xps_che.id
				INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey=a.gkey INNER JOIN ref_bizunit_scoped g ON a.line_op = g.gkey 
				INNER JOIN config_metafield_lov ON a.flex_string01=config_metafield_lov.mfdch_value 
				INNER JOIN inv_goods j ON j.gkey = a.goods LEFT JOIN ref_bizunit_scoped k ON k.gkey = j.consignee_bzu 
				WHERE to_char(b.flex_date01,'yyyy-mm-dd')='$date' AND config_metafield_lov.mfdch_value IN 
				('APPCUS','APPOTH','APPREF') AND a.flex_string14='YES' AND 
				mfdch_desc IN('Customs Appraise','Appraise Others','Appraise Reefer') AND sel_block='$yard'";
				$val="APPRAISEMENT (YES)";
			}
			else if($type=="AN_Single")
			{
				$query="SELECT a.id AS cont,a.flex_string14,
				(CASE WHEN b.time_out!='' THEN 1 WHEN b.time_out IS NOT NULL THEN 1 ELSE 0 END ) AS delv, 
				b.time_in AS dischargetime, 
				b.time_out AS delivery, config_metafield_lov.mfdch_desc, config_metafield_lov.mfdch_value AS t, a.freight_kind AS statu, 
				
				(SELECT srv_event.created FROM srv_event 
				INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey 
				WHERE applied_to_gkey=a.gkey AND event_type_gkey=31426 AND srv_event_field_changes.new_value='E' FETCH FIRST 1 ROWS ONLY) AS proEmtyDate, 
				b.flex_date01 AS assignmentdate, (CASE WHEN UPPER(a.flex_string15) LIKE '%STAY%' THEN 1 ELSE 0 END) AS stay  
				FROM inv_unit a 
				INNER JOIN srv_event ON  srv_event.applied_to_gkey=a.gkey
				INNER JOIN inv_move_event ON inv_move_event.mve_gkey=srv_event.gkey
				INNER JOIN xps_che ON (xps_che.gkey=inv_move_event.che_fetch OR xps_che.gkey=inv_move_event.che_carry OR xps_che.gkey=inv_move_event.che_put)
				INNER JOIN xps_chezone ON  xps_chezone.che_id=xps_che.id
				INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey=a.gkey INNER JOIN ref_bizunit_scoped g ON a.line_op = g.gkey 
				INNER JOIN config_metafield_lov ON a.flex_string01=config_metafield_lov.mfdch_value 
				INNER JOIN inv_goods j ON j.gkey = a.goods LEFT JOIN ref_bizunit_scoped k ON k.gkey = j.consignee_bzu 
				WHERE to_char(b.flex_date01,'yyyy-mm-dd')='$date' AND config_metafield_lov.mfdch_value IN 
				('APPCUS','APPOTH','APPREF') AND a.flex_string14='NO' AND sel_block='$yard'";
			}
			else if($type=="assignment") 
			{
				$section = $this->uri->segment(6);
				
				if($section == "BIDDLV")
					$cond = " AND t='BIDDLV'";
				else if($section == "OCD")
					$cond = " AND t='OCD'";
				else if($section == "REST")
					$cond = " AND t NOT IN('BIDDLV','OCD')";
				
				$query="SELECT * FROM (
				SELECT a.cont_no AS cont,
				(CASE WHEN a.time_out!='null' AND a.time_out!='0000-00-00 00:00:00'  THEN 1 
				WHEN a.time_out IS NOT NULL THEN 1
				ELSE 0
				END ) AS delv,
				(CASE 
				WHEN a.mfdch_value='APPCUS' THEN 1 
				WHEN a.mfdch_value='APPOTH' THEN 1
				WHEN a.mfdch_value='APPREF' THEN 1
				ELSE 0
				END) AS ass,
				a.time_in AS dischargetime,
				a.time_out AS delivery,
				a.mfdch_desc,
				a.mfdch_value AS t,

				a.cont_status AS statu,
				 a.proEmtyDate,
				a.assignmentDate, (CASE WHEN UPPER(a.stay) LIKE '%STAY%' THEN 1 ELSE 0 END) AS stay

				FROM ctmsmis.tmp_oracle_assignment a
				WHERE DATE(a.assignmentDate)='$date' AND $con_yard ='$yard' ) AS tbl WHERE t!='CANCEL' AND ass=0 ".$cond;
				
			
				$val="ASSIGNMENT";
			}
			else if($type=="delivered")
			{
				$query="SELECT * FROM (
				SELECT a.cont_no AS cont, a.time_out,
				(CASE WHEN a.time_out!='null' AND  a.time_out!='0000-00-00 00:00:00'  THEN 1 
				WHEN a.time_out IS NOT NULL THEN 0
				ELSE 0
				END ) AS delv,
				(CASE 
				WHEN a.mfdch_value='APPCUS' THEN 1 
				WHEN a.mfdch_value='APPOTH' THEN 1
				WHEN a.mfdch_value='APPREF' THEN 1
				ELSE 0
				END) AS ass,
				a.time_in AS dischargetime,
				a.time_out AS delivery,
				a.mfdch_desc,
				a.mfdch_value AS t,

				a.cont_status AS statu,
				a.proEmtyDate,
				a.assignmentDate, (CASE WHEN UPPER(a.stay) LIKE '%STAY%' THEN 1 ELSE 0 END) AS stay

				FROM ctmsmis.tmp_oracle_assignment a
				WHERE DATE(a.assignmentDate)='$date' AND $con_yard ='$yard' 
				)  tbl WHERE delv = 1 AND t!='CANCEL'";
				
				//echo $query;
				$val="DELIVERED";
			}
			else if($type=="AST")
			{
				$section = $this->uri->segment(6);
				
				if($section == "BIDDLV")
					$cond = " AND t='BIDDLV'";
				else if($section == "OCD")
					$cond = " AND t='OCD'";
				else if($section == "REST")
					$cond = " AND t NOT IN('BIDDLV','OCD')";
				
				$query="SELECT * FROM (
				SELECT a.cont_no AS cont,
				(CASE WHEN a.time_out!='null' AND a.time_out!='0000-00-00 00:00:00'  THEN 1 
				WHEN a.time_out IS NOT NULL THEN 1
				ELSE 0
				END ) AS delv,
				(CASE 
				WHEN a.mfdch_value='APPCUS' THEN 1 
				WHEN a.mfdch_value='APPOTH' THEN 1
				WHEN a.mfdch_value='APPREF' THEN 1
				ELSE 0
				END) AS ass,
				a.time_in AS dischargetime,
				a.time_out AS delivery,
				a.mfdch_desc,
				a.mfdch_value AS t,

				a.cont_status AS statu,
				 a.proEmtyDate,
				a.assignmentDate AS assignmentdate, (CASE WHEN UPPER(a.stay) LIKE '%STAY%' THEN 1 ELSE 0 END) AS stay

				FROM ctmsmis.tmp_oracle_assignment a
				WHERE DATE(a.assignmentDate)='$date' AND Yard_No ='$yard' ) AS tbl WHERE t!='CANCEL' AND ass=0 ".$cond;
					//echo $query;
				$val="ASSIGNMENT";
			}
			else if($type=="SPT")
			{
				$section = $this->uri->segment(6);
				
				if($section == "BIDDLV")
					$cond = " t='BIDDLV'";
				else if($section == "OCD")
					$cond = " t='OCD'";
				else if($section == "REST")
					$cond = " t NOT IN('BIDDLV','OCD')";
				
				$query="SELECT *
				FROM (SELECT a.cont_no AS cont,
				a.spAssignment AS special,
				(SELECT 
				CASE 
				WHEN a.time_out!='null' AND a.time_out!='0000-00-00 00:00:00'  THEN 1 
				ELSE 0
				END ) AS delv,
				(SELECT 
				CASE 
				WHEN a.mfdch_value='APPCUS' THEN 1 
				WHEN a.mfdch_value='APPOTH' THEN 1
				WHEN a.mfdch_value='APPREF' THEN 1
				ELSE 0
				END ) AS ass,
				a.time_out AS delivery,
				a.mfdch_desc,
				a.mfdch_value AS t,

				a.cont_status AS statu,

				a.Yard_No,
				a.Block_No,
				a.assignmentDate,
				a.time_in AS dischargetime,
				IF(UCASE(a.stay) LIKE '%STAY%',1,0) AS stay

				FROM ctmsmis.tmp_oracle_assignment a
				WHERE DATE(a.assignmentDate)='$date' AND Yard_No ='$yard' AND a.spAssignment='1'
				) as tbl WHERE ".$cond;
				$val="SPECIAL";
				//echo $query;
			}
			else if($type=="CT")
			{
				$query="SELECT * FROM (
					SELECT a.id AS cont,(CASE WHEN a.flex_string14='YES' THEN 1 ELSE 0 END) AS appraise_yes,
					(CASE WHEN a.flex_string14='NO' THEN 1 ELSE 0 END) AS appraise_no,
					( CASE 
					WHEN b.time_out!='' THEN 1 
					WHEN b.time_out IS NOT NULL THEN 1
					ELSE 0
					END ) AS delv,
					(CASE 
					WHEN config_metafield_lov.mfdch_value='APPCUS' THEN 1 
					WHEN config_metafield_lov.mfdch_value='APPOTH' THEN 1
					WHEN config_metafield_lov.mfdch_value='APPREF' THEN 1
					ELSE 0
					END ) AS ass,
					b.time_in AS dischargetime,
					b.time_out AS delivery,
					config_metafield_lov.mfdch_desc,
					config_metafield_lov.mfdch_value AS t,
					
					a.freight_kind AS statu,
					
					
					(SELECT srv_event.created FROM  srv_event 
					INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey
					WHERE applied_to_gkey=a.gkey AND event_type_gkey=31426 AND srv_event_field_changes.new_value='E' FETCH FIRST 1 ROWS ONLY) AS proEmtyDate,
					b.flex_date01 AS assignmentdate,(CASE WHEN UPPER(a.flex_string15) LIKE '%STAY%' THEN 1 ELSE 0 END) AS stay
					
					
					FROM inv_unit a
					INNER JOIN srv_event ON  srv_event.applied_to_gkey=a.gkey
					INNER JOIN inv_move_event ON inv_move_event.mve_gkey=srv_event.gkey
					INNER JOIN xps_che ON (xps_che.gkey=inv_move_event.che_fetch OR xps_che.gkey=inv_move_event.che_carry OR xps_che.gkey=inv_move_event.che_put)
					INNER JOIN xps_chezone ON  xps_chezone.che_id=xps_che.id
					INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey=a.gkey
					INNER JOIN ref_bizunit_scoped g ON a.line_op = g.gkey
					INNER JOIN config_metafield_lov ON a.flex_string01=config_metafield_lov.mfdch_value
					
					INNER JOIN
					inv_goods j ON j.gkey = a.goods
					LEFT JOIN
					ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
					WHERE to_char(b.flex_date01,'yyyy-mm-dd')='$date'  AND sel_block IN(($blockList) )  tbl WHERE t='CANCEL'";
				$val="CANCEL";
			}
			else if($type=="DLVT")
			{
				$query="SELECT * FROM (
				SELECT a.cont_no AS cont, a.time_out,
				(CASE WHEN a.time_out!='null' AND  a.time_out!='0000-00-00 00:00:00'  THEN 1 
				WHEN a.time_out IS NOT NULL THEN 0
				ELSE 0
				END ) AS delv,
				(CASE 
				WHEN a.mfdch_value='APPCUS' THEN 1 
				WHEN a.mfdch_value='APPOTH' THEN 1
				WHEN a.mfdch_value='APPREF' THEN 1
				ELSE 0
				END) AS ass,
				a.time_in AS dischargetime,
				a.time_out AS delivery,
				a.mfdch_desc,
				a.mfdch_value AS t,

				a.cont_status AS statu,
				a.proEmtyDate,
				a.assignmentDate, (CASE WHEN UPPER(a.stay) LIKE '%STAY%' THEN 1 ELSE 0 END) AS stay

				FROM ctmsmis.tmp_oracle_assignment a
				WHERE DATE(a.assignmentDate)='$date' AND Yard_No='$yard' 
				)  tbl WHERE delv = 1 AND t!='CANCEL'"; 
				//echo $query;
				//return;
				$val="DELIVERED";
			}
			else if($type=="BLT")
			{
				$query="SELECT * FROM (
				SELECT a.cont_no AS cont, a.time_out,
				(CASE WHEN a.time_out!='null' AND  a.time_out!='0000-00-00 00:00:00'  THEN 1 
				WHEN a.time_out IS NOT NULL THEN 0
				ELSE 0
				END ) AS delv,
				(CASE 
				WHEN a.mfdch_value='APPCUS' THEN 1 
				WHEN a.mfdch_value='APPOTH' THEN 1
				WHEN a.mfdch_value='APPREF' THEN 1
				ELSE 0
				END) AS ass,
				a.time_in AS dischargetime,
				a.time_out AS delivery,
				a.mfdch_desc,
				a.mfdch_value AS t,

				a.cont_status AS statu,
				a.proEmtyDate,
				a.assignmentDate, (CASE WHEN UPPER(a.stay) LIKE '%STAY%' THEN 1 ELSE 0 END) AS stay

				FROM ctmsmis.tmp_oracle_assignment a
				WHERE DATE(a.assignmentDate)='$date' AND Yard_No='$yard' AND a.mfdch_value NOT IN 
				('APPCUS','APPOTH','APPREF')
				) AS tbl WHERE delv = 0 AND t!='CANCEL'";
				$val="BALANCE";
			}
			else if($type=="STT")
			{
				$query="SELECT * FROM (
						SELECT a.cont_no AS cont, a.time_out,
						(CASE WHEN a.time_out!='null' AND  a.time_out!='0000-00-00 00:00:00'  THEN 1 
						WHEN a.time_out IS NOT NULL THEN 0
						ELSE 0
						END ) AS delv,
						(CASE 
						WHEN a.mfdch_value='APPCUS' THEN 1 
						WHEN a.mfdch_value='APPOTH' THEN 1
						WHEN a.mfdch_value='APPREF' THEN 1
						ELSE 0
						END) AS ass,
						a.time_in AS dischargetime,
						a.time_out AS delivery,
						a.mfdch_desc,
						a.mfdch_value AS t,

						a.cont_status AS statu,
						a.proEmtyDate,
						a.assignmentDate, (CASE WHEN UPPER(a.stay) LIKE '%STAY%' THEN 1 ELSE 0 END) AS stay

						FROM ctmsmis.tmp_oracle_assignment a
						WHERE DATE(a.assignmentDate)='$date' AND Yard_No='$yard' 
						) AS tbl WHERE  stay = 1";
				$val="STAYED";
			}
			//echo $query;
			//return; 
			
			$rslt_cont=$this->bm->dataSelectDb2($query);
			
			$data['rslt_cont']=$rslt_cont;
			$data['val']=$val;
			$data['yard']=$yard;
			$data['date']=$date;
			
			$this->load->view('cssAssetsList');
			$this->load->view('yardWiseImportTotalReportPerformDetails',$data);
			$this->load->view('myclosebar');
            $this->load->view('jsAssetsList');               
		}	
	}
	
	
	function noticeUploadForm()					
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
		    $date = $this->input->post('date');
		  			
			$data['title']="UPLOAD NOTICE..";
			$data['editFlag']=0;
			$data['msg']="";
			$sql = "select id,Org_Type from tbl_org_types where id in(1,5,6,30,57)";
			$orgList = $this->bm->dataSelectDb1($sql);
			$data['orgList']=$orgList;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('noticeUploadForm',$data);
			$this->load->view('jsAssets');
		}	
	}
	
	
	function noticeUploadFormPerform()			
	{		
		$login_id = $this->session->userdata('login_id');
		$notice_title = $this->input->post('notice_title');
		
		$type = $this->input->post('type');
		$notice_comment = $this->input->post('notice_comment');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		$date = date('Y_m_d_H_i_s');
		
		error_reporting(E_ALL ^ E_NOTICE);   
		
		$fi=$notice_title.'_'.$date.".pdf";
		$filenm=str_replace(' ','_',$fi);
		$filetype=$_POST["file"];
		$orgs = $_POST['orgs'];
				
		if($this->input->post('update'))
		{
			$notice_id=$this->input->post('notice_id');  
			if ($_FILES["file"]["error"] > 0)
			{
				$data['msg']="<font color='red' size=4>Here is Problem!! To upload this file. Please! Check Again, That file is not Corrupted and ensure correct format</font>";
			}
			else
			{ 
				move_uploaded_file($_FILES["file"]["tmp_name"],$_SERVER['DOCUMENT_ROOT']."/myportpanel/resources/notice/".$_FILES["file"]["name"]);			
				rename($_SERVER['DOCUMENT_ROOT']."/myportpanel/resources/notice/".$_FILES["file"]["name"],$_SERVER['DOCUMENT_ROOT']."/myportpanel/resources/notice/".$filenm);
				
				$update_str="UPDATE upload_notice set title='$notice_title', comment='$notice_comment', pdf_path='$filenm',  ip_addr='$ipaddr', entry_user='$login_id', entry_date=now() where id='$notice_id'";
				
				$stat = $this->bm->dataUpdateDB1($update_str);
				if($stat==1)
				{
					$data['msg']="<font color='green' size='4'>Information Updated Sucessfully.</font>";
				}
				else
				{
					$data['msg']="<font color='red' size='4'>Apolozies! information not Updated.</font>";
				}
			
				$del_org_sql="DELETE FROM upload_notice_dtl WHERE notice_id='$notice_id'";

				$del_org= $this->bm->dataDeleteDB1($del_org_sql);

				for($k=0; $k<count($orgs); $k++)
				{
					$query="INSERT INTO upload_notice_dtl (notice_id, org_id) VALUES ('$notice_id', '$orgs[$k]' )";

					$stat = $this->bm->dataInsertDB1($query);		
				}
			}
		}
		else
		{
			if ($_FILES["file"]["error"] > 0)
			{
				$data['msg']="<font color='red' size=4>Here is Problem!! To upload this file. Please! Check Again, That file is not Corrupted and ensure correct format</font>";
			}
			else
			{ 
                move_uploaded_file($_FILES["file"]["tmp_name"],$_SERVER['DOCUMENT_ROOT']."/myportpanel/resources/notice/".$_FILES["file"]["name"]);			
                rename($_SERVER['DOCUMENT_ROOT']."/myportpanel/resources/notice/".$_FILES["file"]["name"],$_SERVER['DOCUMENT_ROOT']."/myportpanel/resources/notice/".$filenm);
                
				$insert_str="INSERT INTO upload_notice( title, comment, pdf_path,  ip_addr, entry_user, entry_date)VALUES 
				             ('$notice_title','$notice_comment','$filenm','$ipaddr','$login_id',now())";
                $stat = $this->bm->dataInsertDB1($insert_str);
				
				if($stat==1)
				{
					$data['msg']="<font color='green' size='4'>Information uploaded Sucessfully.</font>";
				}
				else
				{
					$data['msg']="<font color='red' size='4'>Apolozies! information not uploaded.</font>";
				}
						
				$last_id_sql="SELECT id AS rtnValue FROM upload_notice ORDER BY id DESC  LIMIT 1 ";
				$last_notice_id = $this->bm->dataReturnDb1($last_id_sql);

				for($k=0; $k<count($orgs); $k++)
				{
					$query="INSERT INTO upload_notice_dtl (notice_id, org_id) VALUES ('$last_notice_id', '$orgs[$k]' )";
					
				    $stat = $this->bm->dataInsertDB1($query);		
				}
			}
		}
		
		$sql = "select id,Org_Type from tbl_org_types where id in(1,5,6,30,57)";
		$orgList = $this->bm->dataSelectDb1($sql);
		$data['orgList']=$orgList;
		$data['title']="UPLOAD NOTICE..";
		$data['editFlag']=0;
		
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('noticeUploadForm',$data);
		$this->load->view('jsAssets');
	}
	
	function noticeUploadList()				
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			if($this->input->post('delete'))
			{
				$notice_id=$this->input->post('notice_id');
				$del_org_sql="DELETE FROM upload_notice_dtl WHERE notice_id='$notice_id'";
				$del_org= $this->bm->dataDeleteDB1($del_org_sql);	
				
				$del_upload_detl="DELETE FROM upload_notice WHERE id='$notice_id'";
				$del_dtl= $this->bm->dataDeleteDB1($del_upload_detl);	

				$notice_list_Sql="SELECT id, title, comment, pdf_path, ip_addr, entry_user, entry_date FROM  upload_notice order by id desc";
				$rslt_notice_list=$this->bm->dataSelectDb1($notice_list_Sql);				
			}
			
			if($this->input->post('search'))
			{
				$pub_date=$this->input->post('pub_date');
				$notice_list_Sql="SELECT id, title, comment, pdf_path, ip_addr, entry_user, entry_date FROM upload_notice where date(entry_date)='$pub_date' order by id desc";
				$rslt_notice_list=$this->bm->dataSelectDb1($notice_list_Sql);			
				$data['rslt_notice_list']=$rslt_notice_list;
			}
			else
			{
				$notice_list_Sql="SELECT id, title, comment, pdf_path, ip_addr, entry_user, entry_date FROM  upload_notice order by id desc";
				$rslt_notice_list=$this->bm->dataSelectDb1($notice_list_Sql);
			}
			
			$data['title']="NOTICE UPLOAD LIST..";
			$data['rslt_notice_list']=$rslt_notice_list;
            $data['editFlag']=0;           
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('noticeUploadList',$data);
			$this->load->view('jsAssets');
		}		
	}
	
	function notice_edit_form()			
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$notice_id=$this->input->post('notice_id');			
			$sql_notice_info="SELECT id, title, comment, pdf_path, ip_addr, entry_user, entry_date FROM upload_notice WHERE id='$notice_id'";
			$rslt_notice_info=$this->bm->dataSelectDb1($sql_notice_info);			
			$data['rslt_notice_info']=$rslt_notice_info;		
			$sel_org="SELECT org_id FROM upload_notice_dtl INNER JOIN upload_notice ON upload_notice.id=upload_notice_dtl.notice_id WHERE notice_id='$notice_id'";
			$sel_org_list=$this->bm->dataSelectDb1($sel_org);			
			$data['sel_org_list']=$sel_org_list;
			$data['editFlag']=1;
			$data['title']="UPLOAD NOTICE..";
			$sql = "select id,Org_Type from tbl_org_types where id in(1,5,6,30,57)";
			$orgList = $this->bm->dataSelectDb1($sql);
			$data['orgList']=$orgList;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('noticeUploadForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	
	function notice_log_view()
	{
		    $notice_id=$this->input->post('notice_id');			
			$sql_notice_info="SELECT id, title, comment, pdf_path, ip_addr, entry_user, entry_date FROM upload_notice WHERE id='$notice_id'";
			$rslt_notice_info=$this->bm->dataSelectDb1($sql_notice_info);			
			$data['rslt_notice_info']=$rslt_notice_info;
			$data['notice_id']=$notice_id;
			$data['title']="UPLOAD NOTICE..";
			$sql = "SELECT notice_id, title,view_stat,user_id,org_id, Org_Type, view_notice_log.ip_addr,view_notice_log.entry_date FROM view_notice_log
					INNER JOIN tbl_org_types ON tbl_org_types.id=view_notice_log.org_id
					INNER JOIN upload_notice ON upload_notice.id=view_notice_log.notice_id
					WHERE notice_id= '$notice_id'";
			$rptView = $this->bm->dataSelectDb1($sql);
			$data['rptView']=$rptView;	
			$this->load->view('notice_view_log_report',$data);      
	}
	
	//special_assignment - start
	function special_assignment()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
				$this->logout();
		}
		else
		{
			$sql_special_assignment="SELECT *
			FROM 
			(SELECT unit_gkey AS u_gkey,
			(SELECT id FROM inv_unit WHERE gkey=a.unit_gkey) AS Cont,
			(SELECT inv_unit_fcy_visit.flex_string10 FROM inv_unit
			INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.`unit_gkey`=inv_unit.`gkey`
			WHERE inv_unit.id=Cont ORDER BY inv_unit_fcy_visit.flex_date01 DESC LIMIT 1) AS rot_no,
			(SELECT RIGHT(sparcsn4.ref_equip_type.nominal_length,2) AS size
			FROM sparcsn4.inv_unit_equip	
			INNER JOIN sparcsn4.ref_equipment ON sparcsn4.ref_equipment.gkey=sparcsn4.inv_unit_equip.eq_gkey		
			INNER JOIN sparcsn4.ref_equip_type ON sparcsn4.ref_equip_type.gkey=sparcsn4.ref_equipment.eqtyp_gkey		
			WHERE sparcsn4.inv_unit_equip.unit_gkey=u_gkey LIMIT 1) AS size,
			(SELECT (RIGHT(sparcsn4.ref_equip_type.nominal_height,2)/10) AS height
			FROM sparcsn4.inv_unit_equip	
			INNER JOIN sparcsn4.ref_equipment ON sparcsn4.ref_equipment.gkey=sparcsn4.inv_unit_equip.eq_gkey		
			INNER JOIN sparcsn4.ref_equip_type ON sparcsn4.ref_equip_type.gkey=sparcsn4.ref_equipment.eqtyp_gkey		
			WHERE sparcsn4.inv_unit_equip.unit_gkey=u_gkey LIMIT 1) AS height,flex_date01,
			(SELECT (SELECT new_value FROM srv_event_field_changes WHERE event_gkey=srv_event.gkey AND metafield_id='ufvFlexDate01' ORDER BY gkey DESC LIMIT 1) AS assignment_Date
			FROM srv_event
			INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey
			WHERE event_type_gkey=4 AND DATE(created)=CURDATE() AND applied_to_gkey=a.unit_gkey 
			ORDER BY srv_event_field_changes.event_gkey DESC LIMIT 1) AS ass_dt
			FROM (SELECT unit_gkey,flex_date01 FROM inv_unit_fcy_visit WHERE DATE(flex_date01)=CURDATE()) AS a) AS b WHERE ass_dt IS NOT NULL";
			
			$rslt_special_assignment=$this->bm->dataSelect($sql_special_assignment);
			
			$data['rslt_special_assignment']=$rslt_special_assignment;
			
			$this->load->view('special_assignment',$data); 
		}
	}
	// Special Assignment for Security
/* 	function special_assignmentForSecurity()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		if($session_id!=$this->session->userdata('session_id'))
		{
				$this->logout();
		}
		else
		{
			$sql_special_assignment="SELECT *
				FROM 
				(SELECT unit_gkey AS u_gkey,
				(SELECT id FROM inv_unit WHERE gkey=a.unit_gkey) AS Cont,
				(SELECT inv_unit_fcy_visit.flex_string10 FROM inv_unit
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.`unit_gkey`=inv_unit.`gkey`
				WHERE inv_unit.id=Cont ORDER BY inv_unit_fcy_visit.flex_date01 DESC LIMIT 1) AS rot_no,

				(SELECT ref_bizunit_scoped.id  FROM inv_unit
				INNER JOIN sparcsn4.ref_bizunit_scoped  ON inv_unit.line_op = ref_bizunit_scoped.gkey
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.`unit_gkey`=inv_unit.`gkey`
				WHERE inv_unit.id=Cont ORDER BY inv_unit_fcy_visit.flex_date01 DESC LIMIT 1
				) AS mlo,
				(SELECT ref_bizunit_scoped.name  FROM inv_unit
				INNER JOIN sparcsn4.inv_goods ON inv_goods.gkey = inv_unit.goods
				LEFT JOIN sparcsn4.ref_bizunit_scoped  ON ref_bizunit_scoped.gkey = inv_goods.consignee_bzu
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.`unit_gkey`=inv_unit.`gkey`
				WHERE inv_unit.id=Cont ORDER BY inv_unit_fcy_visit.flex_date01 DESC LIMIT 1) AS cnf,

				(SELECT RIGHT(sparcsn4.ref_equip_type.nominal_length,2) AS size
				FROM sparcsn4.inv_unit_equip	
				INNER JOIN sparcsn4.ref_equipment ON sparcsn4.ref_equipment.gkey=sparcsn4.inv_unit_equip.eq_gkey		
				INNER JOIN sparcsn4.ref_equip_type ON sparcsn4.ref_equip_type.gkey=sparcsn4.ref_equipment.eqtyp_gkey		
				WHERE sparcsn4.inv_unit_equip.unit_gkey=u_gkey LIMIT 1) AS size,
				(SELECT (RIGHT(sparcsn4.ref_equip_type.nominal_height,2)/10) AS height
				FROM sparcsn4.inv_unit_equip	
				INNER JOIN sparcsn4.ref_equipment ON sparcsn4.ref_equipment.gkey=sparcsn4.inv_unit_equip.eq_gkey		
				INNER JOIN sparcsn4.ref_equip_type ON sparcsn4.ref_equip_type.gkey=sparcsn4.ref_equipment.eqtyp_gkey		
				WHERE sparcsn4.inv_unit_equip.unit_gkey=u_gkey LIMIT 1) AS height,flex_date01,
				(SELECT (SELECT new_value FROM srv_event_field_changes WHERE event_gkey=srv_event.gkey AND metafield_id='ufvFlexDate01' ORDER BY gkey DESC LIMIT 1) AS assignment_Date
				FROM srv_event
				INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey
				WHERE event_type_gkey=4 AND DATE(created)=CURDATE() AND applied_to_gkey=a.unit_gkey 
				ORDER BY srv_event_field_changes.event_gkey DESC LIMIT 1) AS ass_dt
				FROM (SELECT unit_gkey,flex_date01 FROM inv_unit_fcy_visit WHERE DATE(flex_date01)=CURDATE()) AS a) AS b WHERE ass_dt IS NOT NULL";
				//echo $sql_special_assignment;
				//return;
			
			$rslt_special_assignment=$this->bm->dataSelect($sql_special_assignment);
			
			$data['rslt_special_assignment']=$rslt_special_assignment;
			
			$this->load->view('special_assignmentForSecurity',$data); 
		}
	} */
	//special_assignment - end
	//Vessel wise lying container-Start....// SUMON
	
	function auctionContainers()
	{
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="AUCTION HANDOVER LIST";
			$data['msg']="";
			if($this->input->post("flag"))
			{
				$listType = "byRotation";
				$rotation_no = $this->input->post("rot_no");
				$data['rotation_no'] = $rotation_no;
			}
			else
			{
				$listType = "all";
			}
			
			$data['listType']=$listType;
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('auctionHandOverViewForm',@$data);
			$this->load->view('jsAssetsList');
		}	
	}
	
		function auctionHandOverView()
	{
		$session_id = $this->session->userdata('value');
		$printValue=$this->input->post('printValue');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			if( $printValue==0)
			{
				
			   $data['title']="AUCTION HANDOVER LIST";

				$rotation=$this->input->post('rotation');
				$landingDt=$this->input->post('landingDt');
				$diff=$this->input->post('diff');
				//echo $ddl_imp_rot_no;
				//return;
				
					   $query="SELECT * FROM(
						SELECT inv_unit.id,inv_unit.freight_kind,
						extract(day from CURRENT_DATE  - inv_unit_fcy_visit.time_in)AS lying_days,
						vsl_vessel_visit_details.ib_vyg AS rot_no,vsl_vessels.name AS v_name,
						SUBSTR(ref_equip_type.nominal_length,-2) AS siz,
						SUBSTR(ref_equip_type.nominal_height,-2)/10 AS height,
						to_char(argo_carrier_visit.ata,'YYYY-MM-DD')AS ata,
						inv_unit_fcy_visit.last_pos_slot,
						inv_unit_fcy_visit.flex_string04 AS rl_no,
						inv_unit_fcy_visit.flex_string05 AS rl_date,
						inv_unit_fcy_visit.flex_string07 AS obpc_number,
						inv_unit_fcy_visit.flex_string08 AS obpc_date
						,inv_unit_fcy_visit.time_in, 
						inv_unit_fcy_visit.time_out
						FROM inv_unit
						INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
						INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
						INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
						INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
						INNER JOIN ref_equipment ON ref_equipment.gkey=inv_unit.eq_gkey 
						INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey 
						WHERE transit_state='S40_YARD' AND inv_unit.category='IMPRT' AND
						vsl_vessel_visit_details.ib_vyg='$rotation' 
						) tbl WHERE lying_days>=30";
				       $result = $this->bm->dataSelect($query);
				   
				$data['result']=$result;
				$data['rotation']=$rotation;
				$data['landingDt']=$landingDt;
				$data['diff']=$diff;

                $this->load->view('cssAssetsList');
				$this->load->view('auctionHandOverView',$data);
                $this->load->view('jsAssetsList');
				//$this->load->view('footer');
			}	
			else
			{
				//$pdf->Output($pdfFilePath, "D");  //-------pdf download	
			
				
				$this->load->library('m_pdf');				
				//$this->data['title']="LYING CONTAINER BY ROTATION";
				$mpdf->use_kwt = true;
				$rotation=$this->input->post('rotation');
				$landingDt=$this->input->post('landingDt');
				$diff=$this->input->post('diff');
				//echo $ddl_imp_rot_no;
				//return;
				
					 $query ="SELECT * FROM(SELECT inv_unit.id,inv_unit.freight_kind, 
					extract(day from CURRENT_DATE  - inv_unit_fcy_visit.time_in)AS lying_days,
					vsl_vessel_visit_details.ib_vyg AS rot_no,vsl_vessels.name AS v_name,
					SUBSTR(ref_equip_type.nominal_length,-2) AS siz,
					SUBSTR(ref_equip_type.nominal_height,-2)/10 AS height,
					to_char(argo_carrier_visit.ata,'YYYY-MM-DD')AS ata,
					inv_unit_fcy_visit.last_pos_slot,
					inv_unit_fcy_visit.flex_string04 AS rl_no,inv_unit_fcy_visit.flex_string05 AS rl_date,inv_unit_fcy_visit.flex_string07 AS obpc_number,
					inv_unit_fcy_visit.flex_string08 AS obpc_date,inv_unit_fcy_visit.time_in, inv_unit_fcy_visit.time_out
					FROM inv_unit
					INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
					INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
					INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
					INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
					INNER JOIN ref_equipment ON ref_equipment.gkey=inv_unit.eq_gkey 
					INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey 
					WHERE transit_state='S40_YARD' AND inv_unit.category='IMPRT' AND vsl_vessel_visit_details.ib_vyg='$rotation'
					)  tbl WHERE lying_days>=30";
				
			/* 	$this->data['sqlresult']=$query;
			 
            // $this->data['str']= $str; */
				$result = $this->bm->dataSelect($query);
				
				$this->data['result']=$result;
				$this->data['rotation']=$rotation;
				$this->data['landingDt']=$landingDt;
				$this->data['diff']=$diff;
				$html=$this->load->view('auctionHandOverPdfView', $this->data,true);
			//$html=$this->load->view('pdf_output', $data); //pdf_output for rotation
   
				//this the the PDF filename that user will get to download
				$pdfFilePath ="lying_container".time()."_download.pdf";


				//actually, you can pass mPDF parameter on this load() function
				$pdf = $this->m_pdf->load();
			
				//$pdf->SetHeader('|Date: {DATE j-m-Y}|');

				//$pdf->SetHeader($url . "\n\n" . 'Date {DATE j-m-Y}');
				//$pdf->setFooter('|Page {PAGENO}|');
				//generate the PDF!
				$pdf->WriteHTML($html,2);
				//offer it to user via browser download! (The PDF won't be saved on your server HDD)
				$pdf->Output($pdfFilePath, "I");   //--------pdf view show
			}
		
		}
	}
	//Vessel wise lying container-End....// SUMON
	
	//be_error_list - start
	function be_error_list()
	{
		$msg="";
			
		$sql_be_num="SELECT COUNT(*) AS rtnValue FROM sad_log WHERE DATE(log_dt) BETWEEN (DATE(NOW())-5) AND DATE(NOW())";
		
		if(($this->uri->segment(4))=="")
			$segment_three=0;
		else
			$segment_three = $this->uri->segment(3);
		
		$config = array();
		$config["base_url"] = site_url("report/be_error_list/$segment_three");
		$config["total_rows"] = $this->bm->dataReturnDb1($sql_be_num);
		
		$config["per_page"] = 20;
		$offset = $this->uri->segment(4, 0);
		$config["uri_segment"] = 4;
		$limit=$config["per_page"];
		
		$this->pagination->initialize($config);
		$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;
		$start=$page;
		
		$sql_list_of_be="SELECT * FROM sad_log WHERE DATE(log_dt) BETWEEN (DATE(NOW())-5) AND DATE(NOW()) ORDER BY log_dt DESC LIMIT $start,$limit";
		
		$rslt_list_of_be=$this->bm->dataSelectDb1($sql_list_of_be);
		
		if(count($rslt_list_of_be)==0)
			$msg="No result found";
		
		$data['title']="BE ERROR...";
		$data['msg']=$msg;
		$data['rslt_list_of_be']=$rslt_list_of_be;
		$data['start']=$start;
		$data["links"] = $this->pagination->create_links();
		
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('be_error_list',$data);
		$this->load->view('jsAssets');
	}
	//be_error_list - end
	
		//BB Shed User - start
	function bbTruckEntryForm()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$section_id = $this->session->userdata('section');
			$sql_section_name="SELECT full_name as rtnValue FROM users_section_detail WHERE id='$section_id'";
			$section_name=$this->bm->dataReturnDb1($sql_section_name);
			
			//$sql_cnf_name="SELECT id,NAME FROM ref_bizunit_scoped WHERE role='SHIPPER' AND life_cycle_state='ACT'";
			$sql_cnf_name="SELECT id FROM ref_bizunit_scoped WHERE role='SHIPPER' AND life_cycle_state='ACT'";
			$rslt_cnf_name=$this->bm->dataSelect($sql_cnf_name);
		//	echo $rslt_cnf_name[0]['id'];
		//	return;
			$edit_flag=0;
			$title="BREAK BULK TRUCK DEMAND FORM";
			
			$data['msg']="";
			$data['edit_flag']=$edit_flag;
			$data['title']=$title;
			$data['section_name']=$section_name;
			$data['rslt_cnf_name']=$rslt_cnf_name;
	
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('bbTruckEntryForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function bbTruckEntryFormAction()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$bb_shed_no=$this->input->post('bb_shed_no');
			$bb_cnf_lic_no=$this->input->post('bb_cnf_lic_no');
			$bb_cnf_name=$this->input->post('bb_cnf_name');
			$bb_truck_entry_date=$this->input->post('bb_truck_entry_date');
			$bb_truck_entry_from_time=$this->input->post('bb_truck_entry_from_time');
			$bb_truck_entry_to_time=$this->input->post('bb_truck_entry_to_time');
			$bb_truck_quantity=$this->input->post('bb_truck_quantity');
			$ip_address = $_SERVER['REMOTE_ADDR'];
			
			$cnt=0;
			
			$sql_cnt_duplicate="SELECT COUNT(*) AS rtnValue
			FROM bb_shed_truck
			WHERE shed_no='$bb_shed_no' AND cnf_lic_no='$bb_cnf_lic_no' AND cnf_name='$bb_cnf_name' AND truck_entry_date='$bb_truck_entry_date' AND truck_from_time='$bb_truck_entry_from_time' AND truck_to_time='$bb_truck_entry_to_time' AND truck_quantity='$bb_truck_quantity'";
			
			$cnt=$this->bm->dataReturnDb1($sql_cnt_duplicate);
			
			if($cnt>0)
			{
				$msg="<font color='red'><b>Duplicate Entry</b></font>";
			}
			else
			{
				$sql_bbTruckEntry="INSERT INTO bb_shed_truck(shed_no,cnf_lic_no,cnf_name,truck_entry_date,truck_from_time,truck_to_time,truck_quantity,last_update,last_update_by,ip_address)
				VALUES('$bb_shed_no','$bb_cnf_lic_no','$bb_cnf_name','$bb_truck_entry_date','$bb_truck_entry_from_time','$bb_truck_entry_to_time','$bb_truck_quantity',NOW(),'$login_id','$ip_address')";
							
				if($this->bm->dataInsertDB1($sql_bbTruckEntry))
				{
					$msg="<font color='green'><b>Successfully inserted</b></font>";
				}
				else
				{
					$msg="<font color='red'><b>Entry failed</b></font>";
				}
			}
								
			//
			$section_id = $this->session->userdata('section');
			$sql_section_name="SELECT full_name as rtnValue FROM users_section_detail WHERE id='$section_id'";
			$section_name=$this->bm->dataReturnDb1($sql_section_name);
			
			$sql_cnf_name="SELECT id FROM ref_bizunit_scoped WHERE role='SHIPPER' AND life_cycle_state='ACT'";
			$rslt_cnf_name=$this->bm->dataSelect($sql_cnf_name);
		
			$title="BREAK BULK TRUCK DEMAND FORM";
			
			$data['msg']=$msg;
			$edit_flag=0;
			$data['title']=$title;
			$data['edit_flag']=$edit_flag;
			$data['section_name']=$section_name;
			$data['rslt_cnf_name']=$rslt_cnf_name;
			//
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('bbTruckEntryForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function bbTruckEntryList()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
	
			$rtn_msg="";
			if($rtn_msg!="")
				$data['msg']=$rtn_msg;
			else
				$data['msg']="";
			
			$sql_truckEntryList="SELECT id,shed_no,cnf_lic_no,cnf_name,truck_entry_date,truck_from_time,truck_to_time,truck_quantity 
			FROM bb_shed_truck";
			
			$rslt_truckEntryList=$this->bm->dataSelectDb1($sql_truckEntryList);
			
			$title="BREAK BULK TRUCK DEMAND LIST";
			
			$data['title']=$title;
			$data['rslt_truckEntryList']=$rslt_truckEntryList;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('bbTruckEntryList',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function bbTruckEntryListSearch()
	{
		// funtion parameter $rtn_msg removed in new portpanel due to error occurance.
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$search_by=$this->input->post('search_by');
			$fromdate=$this->input->post('fromdate');
			$shedNo=$this->input->post('shedNo');
			
			if($search_by=='shedNo')
			{
				$sql_truckEntryList="SELECT id,shed_no,cnf_lic_no,cnf_name,truck_entry_date,truck_from_time,truck_to_time,truck_quantity 
					FROM bb_shed_truck where shed_no='$shedNo'";
			}
			else if($search_by=='dateRange')
			{
				$sql_truckEntryList="SELECT id,shed_no,cnf_lic_no,cnf_name,truck_entry_date,truck_from_time,truck_to_time,truck_quantity 
					FROM bb_shed_truck where truck_entry_date=date('$fromdate')";
			}
			else if($search_by=='Shed_Date')
			{
				$sql_truckEntryList="SELECT id,shed_no,cnf_lic_no,cnf_name,truck_entry_date,truck_from_time,truck_to_time,truck_quantity 
					FROM bb_shed_truck where truck_entry_date=date('$fromdate') and shed_no='$shedNo'";
			}
			else
			{
				$sql_truckEntryList="SELECT id,shed_no,cnf_lic_no,cnf_name,truck_entry_date,truck_from_time,truck_to_time,truck_quantity 
					FROM bb_shed_truck";
			}
			
			$rtn_msg="";
			$data['msg']=$rtn_msg;
			
			/* if($rtn_msg!="")
				$data['msg']=$rtn_msg;
			else
				$data['msg']="";	 */		
			
		 if (isset($_POST['View']))
			 {
				$rslt_truckEntryList=$this->bm->dataSelectDb1($sql_truckEntryList);
				
				$title="BREAK BULK TRUCK DEMAND LIST";
				
				$data['title']=$title;
				$data['rslt_truckEntryList']=$rslt_truckEntryList;
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('bbTruckEntryList',$data);
				$this->load->view('jsAssets');
			}
		  if (isset($_POST['Print'])) 
			  {
				$this->load->library('M_pdf');
				$title="BREAK BULK TRUCK DEMAND LIST";
				$this->data['title']=$title;
				$rslt_truckEntryList=$this->bm->dataSelectDb1($sql_truckEntryList);
		

				//$data['login_id']=$login_id;
			  
				$this->data['rslt_truckEntryList']=$rslt_truckEntryList;
				$html=$this->load->view('bbTruckEntryListPdfView',$this->data,true);

				$pdfFilePath ="mypdfName-".time()."-download.pdf";

				$pdf = $this->m_pdf->load();

				//$stylesheet = file_get_contents('resources/styles/lcl.css'); 
				$pdf->useSubstitutions = true; 
			//	$pdf->WriteHTML($stylesheet,1);
				$pdf->WriteHTML($html,2);

				$pdf->Output($pdfFilePath, "I");   //--------pdf view show  
				  
/* 				$rslt_truckEntryList=$this->bm->dataSelectDb1($sql_truckEntryList);
				
				$title="BREAK BULK TRUCK DEMAND LIST";
				
				$data['title']=$title;
				$data['rslt_truckEntryList']=$rslt_truckEntryList;
				
				$this->load->view('header2');
				$this->load->view('bbTruckEntryList',$data);
				$this->load->view('footer'); */
			  }
		}
	}
	
	
	function editBBTruckEntry()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$section_id = $this->session->userdata('section');
			$sql_section_name="SELECT full_name as rtnValue FROM users_section_detail WHERE id='$section_id'";
			$section_name=$this->bm->dataReturnDb1($sql_section_name);
			
			
			$sql_cnf_name="SELECT id FROM ref_bizunit_scoped WHERE role='SHIPPER' AND life_cycle_state='ACT'";
			$rslt_cnf_name=$this->bm->dataSelect($sql_cnf_name);
			
			$bb_id_edit=$this->input->post('bb_id_edit');
		
			$sql_edit_bb_truck="SELECT id,shed_no,cnf_lic_no,cnf_name,truck_entry_date,truck_from_time,truck_to_time,truck_quantity 
			FROM bb_shed_truck 
			WHERE id='$bb_id_edit'";
			
			$rslt_edit_bb_truck=$this->bm->dataSelectDb1($sql_edit_bb_truck);
			
			$edit_flag=1;
			$title="BREAK BULK TRUCK DEMAND FORM";
			
			$data['msg']="";
			$data['edit_flag']=$edit_flag;
			$data['title']=$title;
			$data['section_name']=$section_name;
			$data['rslt_cnf_name']=$rslt_cnf_name;
			$data['rslt_edit_bb_truck']=$rslt_edit_bb_truck;
			//
			
		
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('bbTruckEntryForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function bbTruckEditFormAction()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$form_edit_id=$this->input->post('form_edit_id');
			
			$bb_shed_no=$this->input->post('bb_shed_no');
			$bb_cnf_lic_no=$this->input->post('bb_cnf_lic_no');
			$bb_cnf_name=$this->input->post('bb_cnf_name');
			$bb_truck_entry_date=$this->input->post('bb_truck_entry_date');
			$bb_truck_entry_from_time=$this->input->post('bb_truck_entry_from_time');
			$bb_truck_entry_to_time=$this->input->post('bb_truck_entry_to_time');
			$bb_truck_quantity=$this->input->post('bb_truck_quantity');
			$ip_address = $_SERVER['REMOTE_ADDR'];
			
			$sql_update_bb_entry="UPDATE bb_shed_truck 
			SET shed_no='$bb_shed_no',cnf_lic_no='$bb_cnf_lic_no',cnf_name='$bb_cnf_name',truck_entry_date='$bb_truck_entry_date',truck_from_time='$bb_truck_entry_from_time',truck_to_time='$bb_truck_entry_to_time',truck_quantity='$bb_truck_quantity',last_update=NOW(),last_update_by='$login_id',ip_address='$ip_address' 
			WHERE id='$form_edit_id'";
			
			if($this->bm->dataUpdateDB1($sql_update_bb_entry))
			{
				$msg="<font color='green'><b>Successfully updated</b></font>";
			}
			else
			{
				$msg="<font color='red'><b>Update failed</b></font>";
			}
			
			$edit_flag=0;
			$title="BREAK BULK TRUCK DEMAND FORM";
			
			$data['title']=$title;
			$data['msg']=$msg;
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('bbTruckEntryForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function deleteBBTruckEntry()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$bb_id_delete=$this->input->post('bb_id_delete');
			
			$sql_delete_bb_entry="DELETE FROM bb_shed_truck
			WHERE id='$bb_id_delete'";
			
			if($this->bm->dataDeleteDB1($sql_delete_bb_entry))
			{
				$msg="<font color='green'><b>Successfully deleted</b></font>";
			}
			else
			{
				$msg="<font color='red'><b>Deletion failed</b></font>";
			}
			
			//$this->bbTruckEntryList($msg);
			$sql_truckEntryList="SELECT id,shed_no,cnf_lic_no,cnf_name,truck_entry_date,truck_from_time,truck_to_time,truck_quantity 
			FROM bb_shed_truck";
			
			$rslt_truckEntryList=$this->bm->dataSelectDb1($sql_truckEntryList);
			
			$title="BREAK BULK TRUCK DEMAND LIST";
			
			$data['msg']=$msg;
			$data['title']=$title;
			$data['rslt_truckEntryList']=$rslt_truckEntryList;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('bbTruckEntryList',$data);
			$this->load->view('jsAssets');
		}
	}
	//BB Shed User - end
	
	//ASSIGNMENT SUMMARY - start
	function assignment_summary()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$title="ASSIGNMENT SUMMARY";
			
			$data['title']=$title;
			$data['msg']=@$msg;
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('assignmentSummaryForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function assignment_summary_action()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$title="ASSIGNMENT SUMMARY";
			
			$assignment_date=$this->input->post('assignment_date');
			$fileOptions=$this->input->post('fileOptions');
			
			/*$sql_assignment_summary="SELECT mfdch_value,mfdch_desc,title,
			SUM(cnt_gcb) AS cnt_gcb,
			SUM(cnt_nct) AS cnt_nct,
			SUM(cnt_cct) AS cnt_cct,
			SUM(cnt_scy) AS cnt_scy,
			SUM(cnt_ofy) AS cnt_ofy FROM (
			SELECT mfdch_value,mfdch_desc,
			(CASE
				WHEN mfdch_value='APPOTH' THEN 'Others'
				WHEN mfdch_value='DLVOTH' THEN 'Others'
				
				WHEN mfdch_value='OCD' THEN 'On Chasis Delivery'
				
				WHEN mfdch_value='APPREF' THEN 'Reefer'
				WHEN mfdch_value='DLVREF2H' THEN 'Reefer'
				WHEN mfdch_value='DLVREFGRD' THEN 'Reefer'
				
				WHEN mfdch_value='APPCUS' THEN 'Appraise Customs'
				
				WHEN mfdch_value='DLVGRT2H' THEN 'Garments'
				WHEN mfdch_value='DLVGRTGRD' THEN 'Garments'	
				
				WHEN mfdch_value='BIDDLV' THEN 'Bidder'
				
				WHEN mfdch_value='DLVHYS' THEN 'Delivery Hyster'
				
				WHEN mfdch_value='APPDLV2H' THEN 'Appraise'
				WHEN mfdch_value='APPDLVGRD' THEN 'Appraise'
			END) AS title,
			Yard_No,cont_no,
			(CASE
				WHEN Yard_No='GCB' THEN 1
				ELSE 0
				END) AS cnt_gcb,
			(CASE
				WHEN Yard_No='NCT' THEN 1
				ELSE 0
				END) AS cnt_nct,
			(CASE
				WHEN Yard_No='CCT' THEN 1
				ELSE 0
				END) AS cnt_cct,
			(CASE
				WHEN Yard_No='SCY' THEN 1
				ELSE 0
				END) AS cnt_scy,
			(CASE
				WHEN Yard_No='OFY' THEN 1
				ELSE 0
				END) AS cnt_ofy FROM (
			SELECT a.id AS cont_no,config_metafield_lov.mfdch_value,
			(SELECT sparcsn4.ref_equip_type.id FROM sparcsn4.inv_unit_equip
			INNER JOIN sparcsn4.ref_equipment ON sparcsn4.ref_equipment.gkey=sparcsn4.inv_unit_equip.eq_gkey
			INNER JOIN sparcsn4.ref_equip_type ON sparcsn4.ref_equip_type.gkey=sparcsn4.ref_equipment.eqtyp_gkey 
			WHERE sparcsn4.inv_unit_equip.unit_gkey=a.gkey LIMIT 1) AS iso_code,
			b.flex_string10 AS rot_no,
			b.time_in AS dischargetime,
			b.time_out AS delivery,
			g.id AS mlo,
			k.name AS cf,
			sparcsn4.config_metafield_lov.mfdch_desc,
			a.freight_kind AS statu,
			a.goods_and_ctr_wt_kg AS weight,
			(SELECT ctmsmis.mis_exp_unit_load_failed.last_update
			FROM ctmsmis.mis_exp_unit_load_failed WHERE ctmsmis.mis_exp_unit_load_failed.gkey=a.gkey) AS last_update,
			(SELECT ctmsmis.mis_exp_unit_load_failed.user_id
			FROM ctmsmis.mis_exp_unit_load_failed WHERE ctmsmis.mis_exp_unit_load_failed.gkey=a.gkey) AS user_id,

			IFNULL((SELECT SUBSTRING(sparcsn4.srv_event_field_changes.new_value,7)
					FROM sparcsn4.srv_event
					INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
					WHERE sparcsn4.srv_event.applied_to_gkey=a.gkey  AND sparcsn4.srv_event.event_type_gkey IN(18,13,16) AND sparcsn4.srv_event_field_changes.new_value IS NOT NULL AND sparcsn4.srv_event_field_changes.new_value !='' AND sparcsn4.srv_event_field_changes.new_value !='Y-CGP-.' AND sparcsn4.srv_event.gkey<(SELECT sparcsn4.srv_event.gkey FROM sparcsn4.srv_event
					INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
					WHERE sparcsn4.srv_event.event_type_gkey=4 AND sparcsn4.srv_event.applied_to_gkey=a.gkey AND metafield_id='unitFlexString01' AND new_value IS NOT NULL ORDER BY sparcsn4.srv_event_field_changes.gkey DESC LIMIT 1) ORDER BY sparcsn4.srv_event.gkey DESC LIMIT 1),(SELECT SUBSTRING(sparcsn4.srv_event_field_changes.new_value,7)
					FROM sparcsn4.srv_event
					INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
					WHERE sparcsn4.srv_event.applied_to_gkey=a.gkey  AND sparcsn4.srv_event.event_type_gkey IN(18,13,16) ORDER BY sparcsn4.srv_event_field_changes.gkey DESC LIMIT 1)) AS carrentPosition,

			(SELECT ctmsmis.cont_yard(carrentPosition)) AS Yard_No,

			(SELECT ctmsmis.cont_block(carrentPosition,Yard_No)) AS Block_No,
			(SELECT creator FROM sparcsn4.srv_event WHERE applied_to_gkey=a.gkey AND event_type_gkey=30 ORDER BY gkey DESC LIMIT 1) AS stripped_by,
			(SELECT sparcsn4.srv_event.created FROM  sparcsn4.srv_event 
			INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey
			WHERE applied_to_gkey=a.gkey AND event_type_gkey=4 AND sparcsn4.srv_event_field_changes.new_value='E' LIMIT 1) AS proEmtyDate,
			b.flex_date01 AS assignmentdate, IF(UCASE(a.flex_string15) LIKE '%STAY%',1,0) AS stay

			FROM sparcsn4.inv_unit a
			INNER JOIN sparcsn4.inv_unit_fcy_visit b ON b.unit_gkey=a.gkey
			INNER JOIN sparcsn4.ref_bizunit_scoped g ON a.line_op = g.gkey
			INNER JOIN sparcsn4.config_metafield_lov ON a.flex_string01=config_metafield_lov.mfdch_value

			INNER JOIN
					sparcsn4.inv_goods j ON j.gkey = a.goods
			LEFT JOIN
					sparcsn4.ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
			WHERE DATE(b.flex_date01)='$assignment_date' AND config_metafield_lov.mfdch_value IN ('APPOTH','DLVOTH','OCD','APPREF','DLVREF2H','DLVREFGRD','APPCUS','DLVGRT2H','DLVGRTGRD','APPDLV2H','APPDLVGRD','BIDDLV','DLVHYS')) AS tbl 
			ORDER BY mfdch_value) AS tmp GROUP BY title";*/
			$sql_assignment_summary="SELECT mfdch_value,mfdch_desc,carrentPosition,gkey,
			(CASE
			WHEN mfdch_value='APPOTH' THEN 'Others'
			WHEN mfdch_value='DLVOTH' THEN 'Others'
			
			WHEN mfdch_value='OCD' THEN 'On Chasis Delivery'
			
			WHEN mfdch_value='APPREF' THEN 'Reefer'
			WHEN mfdch_value='DLVREF2H' THEN 'Reefer'
			WHEN mfdch_value='DLVREFGRD' THEN 'Reefer'
			
			WHEN mfdch_value='APPCUS' THEN 'Appraise Customs'
			
			WHEN mfdch_value='DLVGRT2H' THEN 'Garments'
			WHEN mfdch_value='DLVGRTGRD' THEN 'Garments'	
			
			WHEN mfdch_value='BIDDLV' THEN 'Bidder'
			
			WHEN mfdch_value='DLVHYS' THEN 'Delivery Hyster'
			
			WHEN mfdch_value='APPDLV2H' THEN 'Appraise'
			WHEN mfdch_value='APPDLVGRD' THEN 'Appraise'
			END) AS title,
			cont_no
			 FROM (
			SELECT a.id AS cont_no,config_metafield_lov.mfdch_value,a.gkey,
			(SELECT ref_equip_type.id FROM inv_unit
			INNER JOIN ref_equipment ON ref_equipment.gkey=inv_unit.eq_gkey
			INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey 
			WHERE b.unit_gkey=a.gkey Fetch First 1 rows only ) AS iso_code,
			b.flex_string10 AS rot_no,
			b.time_in AS dischargetime,
			b.time_out AS delivery,
			g.id AS mlo,
			k.name AS cf,
			config_metafield_lov.mfdch_desc,
			a.freight_kind AS statu,
			a.goods_and_ctr_wt_kg AS weight,
			
			NVL((SELECT SUBSTR(srv_event_field_changes.new_value,7)
			FROM srv_event
			INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey
			WHERE srv_event.applied_to_gkey=a.gkey  AND srv_event.event_type_gkey IN(18,13,16)
			AND srv_event_field_changes.new_value IS NOT NULL AND srv_event_field_changes.new_value !=''
			AND srv_event_field_changes.new_value !='Y-CGP-.' AND srv_event.gkey<(SELECT srv_event.gkey FROM srv_event
			INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey
			WHERE srv_event.event_type_gkey=4 AND srv_event.applied_to_gkey=a.gkey AND metafield_id='unitFlexString01'
			AND new_value IS NOT NULL ORDER BY srv_event_field_changes.gkey DESC FETCH First 1 rows only )
			ORDER BY srv_event.gkey DESC FETCH First 1 rows only ),(SELECT SUBSTR(srv_event_field_changes.new_value,7)
			FROM srv_event
			INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey
			WHERE srv_event.applied_to_gkey=a.gkey  AND srv_event.event_type_gkey IN(18,13,16) 
			ORDER BY srv_event_field_changes.gkey DESC FETCH First 1 rows only )) AS carrentPosition,
			
			(SELECT creator FROM srv_event WHERE applied_to_gkey=a.gkey AND event_type_gkey=30 ORDER BY gkey DESC FETCH First 1 rows only ) AS stripped_by,
			(SELECT srv_event.created FROM  srv_event 
			INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey
			WHERE applied_to_gkey=a.gkey AND event_type_gkey=4 AND srv_event_field_changes.new_value='E' FETCH First 1 rows only ) AS proEmtyDate,
			b.flex_date01 AS assignmentdate
			
			FROM inv_unit a
			INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey=a.gkey
			INNER JOIN ref_bizunit_scoped g ON a.line_op = g.gkey
			INNER JOIN config_metafield_lov ON a.flex_string01=config_metafield_lov.mfdch_value
			
			INNER JOIN
			inv_goods j ON j.gkey = a.goods
			LEFT JOIN
			ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
			WHERE Cast(b.flex_date01 as date)=to_date('$assignment_date','yyyy-mm-dd') 
			AND  config_metafield_lov.mfdch_value 
			IN ('APPOTH','DLVOTH','OCD','APPREF','DLVREF2H','DLVREFGRD','APPCUS','DLVGRT2H','DLVGRTGRD','APPDLV2H','APPDLVGRD','BIDDLV','DLVHYS'))  tbl ";
			
			$rslt_assignment_summary=$this->bm->dataSelect($sql_assignment_summary);
			
			$title_array=array("Appraise","Appraise Customs","Bidder","Delivery Hyster","Garments","On Chasis Delivery","Others","Reefer");

			$resultList;
			$allTitle;
			$uniqueTitle;
			for($i=0;$i<count($rslt_assignment_summary);$i++){
				$yardNo="";
				$blockNo="";
				$carrentPosition="";
				$carrentPosition=$rslt_assignment_summary[$i]['CARRENTPOSITION'];
				$gkey="";
				$gkey=$rslt_assignment_summary[$i]['GKEY'];
				$title="";
				$title=$rslt_assignment_summary[$i]['TITLE'];

                $last_update="";
				$userId="";
				$yardQuery="SELECT ctmsmis.cont_yard('$carrentPosition') AS rtnValue";
				$yardNo=$this->bm->dataReturnDb2($yardQuery);

				$blockNoQuery="SELECT ctmsmis.cont_block('$lastPosition', '$yardNo') AS rtnValue";
				$blockNo=$this->bm->dataReturnDb2($blockNoQuery);

			/*	$lastUpdateQuery="SELECT ctmsmis.mis_exp_unit_load_failed.last_update AS rtnValue
				FROM ctmsmis.mis_exp_unit_load_failed WHERE ctmsmis.mis_exp_unit_load_failed.gkey='$gkey'";
				 $last_update=$this->bm->dataReturnDb2($lastUpdateQuery);

				 $userIdQuery="SELECT ctmsmis.mis_exp_unit_load_failed.user_id  AS rtnValue
				 FROM ctmsmis.mis_exp_unit_load_failed WHERE ctmsmis.mis_exp_unit_load_failed.gkey='$gkey'";
				 $userId=$this->bm->dataReturnDb2($userIdQuery);*/

				$cnt_gcb=0;
				$cnt_nct=0;
				$cnt_cct=0;
				$cnt_scy=0;
				$cnt_ofy=0;
				if($yardNo=='GCB'){
					$cnt_gcb=1;

				}
				else{
					$cnt_gcb=0;

				}
				if($yardNo=='NCT'){
					$cnt_nct=1;

				}
				else{
					$cnt_nct=0;

				}

				if($yardNo=='CCT'){
					$cnt_cct=1;

				}
				else{
					$cnt_cct=0;

				}
				if($yardNo=='SCY'){
					$cnt_scy=1;

				}
				else{
					$cnt_scy=0;

				}

				if($yardNo=='OFY'){
					$cnt_ofy=1;

				}
				else{
					$cnt_ofy=0;

				}
				
				$resultList[$i]['mfdch_value']=$rslt_assignment_summary[$i]['MFDCH_VALUE'];
				$resultList[$i]['mfdch_desc']=$rslt_assignment_summary[$i]['MFDCH_DESC'];
				$resultList[$i]['title']=$rslt_assignment_summary[$i]['TITLE'];
				$resultList[$i]['cnt_gcb']=$cnt_gcb;
				$resultList[$i]['cnt_nct']=$cnt_nct;
				$resultList[$i]['cnt_cct']=$cnt_cct;
				$resultList[$i]['cnt_scy']=$cnt_scy;
				$resultList[$i]['cnt_ofy']=$cnt_ofy;
				if($title !='' and $title !=null ){
					$allTitle[$i]=$title;
				 }

				

			}

			$mainResultList;
			$cnt_gcb=0;
			$cnt_nct=0;
			$cnt_cct=0;
			$cnt_scy=0;
			$cnt_ofy=0;

			foreach($uniqueTitle as $key=> $singleTitle ){
				$p=0;
				$mfdch_value="";
				$mfdch_desc="";
				$titleRes="";
				$mfdch_value=$resultList[$key]['mfdch_value'];
				$mfdch_desc=$resultList[$key]['mfdch_desc'];
				$titleRes=$resultList[$key]['title'];

				for($r=0;$r<count($resultList);$r++){
					$tempTitle="";
					$tempTitle=	$resultList[$r]['title'];
					if($singleTitle==$tempTitle){
						$cnt_gcb=$resultList[$r]['cnt_gcb']+1;
						$cnt_nct==$resultList[$r]['cnt_nct']+1;
						$cnt_cct=$resultList[$r]['cnt_cct']+1;
						$cnt_scy=$resultList[$r]['cnt_scy']+1;
						$cnt_ofy=$resultList[$r]['cnt_ofy']+1;

					}

				}
				$mainResultList[$p]['mfdch_value']=$mfdch_value;
				$mainResultList[$p]['mfdch_desc']=$mfdch_desc;
				$mainResultList[$p]['title']=$singleTitle;

				$mainResultList[$p]['cnt_gcb']=$cnt_gcb;
				$mainResultList[$p]['cnt_nct']=$cnt_nct;
				$mainResultList[$p]['cnt_cct']=$cnt_cct;
				$mainResultList[$p]['cnt_scy']=$cnt_scy;
				$mainResultList[$p]['cnt_ofy']=$cnt_ofy;
				
				$p++;
			}

			if($fileOptions=="html")
			{
				$data['title']=$title;
				$data['title_array']=$title_array;
				$data['assignment_date']=$assignment_date;
				$data['rslt_assignment_summary']=$mainResultList;
				
				$this->load->view('cssAssets');
				$this->load->view('assignmentSummaryReport',$data);
				$this->load->view('jsAssets');
			}
			else if($fileOptions=="pdf")
			{
			//	$this->data['title']=$title;
				$this->data['title_array']=$title_array;
				$this->data['assignment_date']=$assignment_date;
				$this->data['rslt_assignment_summary']=$mainResultList;
				
				$this->load->library('m_pdf');
				//$mpdf->use_kwt = true;
				
				$html=$this->load->view('assignmentSummaryReportPDF',$this->data, true); 

				$pdfFilePath ="assignmentSummaryReportPDF-".time()."-download.pdf";

				$pdf = $this->m_pdf->load();

				//$pdf->SetWatermarkText('CPA CTMS');
				$pdf->showWatermarkText = true;

				//$stylesheet = file_get_contents(CSS_PATH.'style.css'); // external css
				//$stylesheet = file_get_contents('resources/styles/test.css'); 
				$pdf->useSubstitutions = true; 
					
				//$pdf->setFooter('Prepared By : '.$login_id.'|Page {PAGENO}|Date {DATE j-m-Y}');

				//$pdf->WriteHTML($stylesheet,1);
				$pdf->WriteHTML($html,2);
					
				$pdf->Output($pdfFilePath, "I");
			}
		}
	}
	//ASSIGNMENT SUMMARY - end
	
		//CONTAINER DELIVERY STATUS CHECK - start
	function contDlvStatusCheck()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$title="CONTAINER DELIVERY STATUS CHECK";
			
			$data['title']=$title;
			$data['msg']="";

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('contDlvStatusCheckForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function contDlvStatusCheckAction()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$msg="";
			$securityContNo=$this->input->post('securityContNo');
			
			// $sql_cont_info="SELECT sparcsn4.inv_unit.gkey AS unit_gkey,sparcsn4.inv_unit.id,freight_kind,IFNULL(mfdch_value, '') AS mfdch_value,IFNULL(mfdch_desc, '') AS mfdch_desc,flex_date01,sparcsn4.inv_goods.destination,sparcsn4.ref_bizunit_scoped.name AS CnFName
			// FROM sparcsn4.inv_unit
			// INNER JOIN sparcsn4.inv_unit_fcy_visit ON sparcsn4.inv_unit_fcy_visit.unit_gkey=sparcsn4.inv_unit.gkey
			// LEFT JOIN sparcsn4.inv_goods ON sparcsn4.inv_goods.gkey=sparcsn4.inv_unit.goods
			// LEFT JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.inv_goods.consignee_bzu
			// LEFT JOIN sparcsn4.config_metafield_lov ON config_metafield_lov.mfdch_value=sparcsn4.inv_unit.flex_string01
			// WHERE sparcsn4.inv_unit.id='$securityContNo' ORDER BY unit_gkey DESC LIMIT 1";


			$sql_cont_info="SELECT inv_unit.gkey AS unit_gkey,inv_unit.id,freight_kind,NVL(mfdch_value, '') AS mfdch_value,NVL(mfdch_desc, '') AS mfdch_desc,flex_date01,inv_goods.destination,ref_bizunit_scoped.name AS CnFName
			FROM inv_unit
			INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
			LEFT JOIN inv_goods ON inv_goods.gkey=inv_unit.goods
			LEFT JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=inv_goods.consignee_bzu
			LEFT JOIN config_metafield_lov ON config_metafield_lov.mfdch_value=inv_unit.flex_string01
			WHERE inv_unit.id='$securityContNo' ORDER BY unit_gkey DESC  fetch first 1 rows only
            ";
			
			$rslt_cont_info=$this->bm->dataSelect($sql_cont_info);
			
			$unit_gkey=$rslt_cont_info[0]['UNIT_GKEY'];
			$contType=$rslt_cont_info[0]['FREIGHT_KIND'];
			$destination=$rslt_cont_info[0]['DESTINATION'];
			$assignmentCode=$rslt_cont_info[0]['MFDCH_VALUE'];
			$mfdch_desc=$rslt_cont_info[0]['MFDCH_DESC'];
			$dlvSt=0;
			$doctype_gkey=0;
			
			// $sql_doctype_gkey="SELECT EXISTS(SELECT doctype_gkey AS rtnValue FROM sparcsn4.road_truck_transactions rtt 
			// 	INNER JOIN sparcsn4.road_documents rd ON rd.tran_gkey=rtt.gkey WHERE rtt.unit_gkey='$unit_gkey' ORDER BY rd.gkey DESC LIMIT 1)AS rtnValue";


	$sql_doctype_gkey="SELECT doctype_gkey AS rtnValue FROM road_truck_transactions rtt 
			INNER JOIN road_documents rd ON rd.tran_gkey=rtt.gkey WHERE rtt.unit_gkey='$unit_gkey' ORDER BY rd.gkey DESC fetch first 1 rows only";
	

			$doctype_gkey=$this->bm->dataReturn($sql_doctype_gkey);
			
			if($contType=="FCL")
			{
				if($destination == "2591")
				{
					if($assignmentCode == "OCD")
					{
						if($doctype_gkey==7)
							$msg="<font color='green'><b>Permission Okay</b></font>";
						else
							$msg="<font color='red'><b>Permission Problem! EIR not Taken</b></font>";
					}						
					else
					{
						$msg="<font color='red'><b>Permission Problem! Assignment Type: $mfdch_desc</b></font>";						
					}
				}
				else if($destination != "2591" and $destination != "2592")
				{					
					if($doctype_gkey == 7)
					{
						$msg="<font color='green'><b>Permission Okay</b></font>";
					}						
					else
					{
						$msg="<font color='red'><b>Permission Problem! EIR not Taken</b></font>";
					}	
				}
			}
			else
			{
				if($contType == "MTY")
				{
					if($doctype_gkey == 7)
					{
						$msg="<font color='green'><b>Permission Okay</b></font>";
					}						
					else
					{
						$msg="<font color='red'><b>Permission Problem! EIR not Taken</b></font>";
					}	
				}
			}
			
			$title="CONTAINER DELIVERY STATUS CHECK";
			
			$data['title']=$title;
			$data['msg']=$msg;
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('contDlvStatusCheckForm',$data);
			$this->load->view('jsAssets');
		}
	}
	//CONTAINER DELIVERY STATUS CHECK - end
	
	
//Sumon-- Cargo Receiving & Delivery Report --start
	function cargoReceiveDeliveryForm()
	{
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="Cargo Receiving & Delivery Report Form";
			//echo $data['title'];
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('cargoReceiveDeliveryForm',$data);
			$this->load->view('jsAssets');
		}	
	}
	
	
	function cargoReceiveDeliveryFormPerform()
	{
		//print_r($this->session->all_userdata());
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="Cargo Receiving & Delivery Report Form";
			//$fileType=$this->input->post('fileOptions');
				
			$cont_no=$this->input->post('cont_no');
			  

			$str="SELECT verify_number,DATE_FORMAT(DATE(verify_time),'%d%m%y')AS verify_time, shed_tally_info.import_rotation,
			shed_bill_master.bill_no, shed_bill_master.bill_date,cp_no,RIGHT(cp_year,2) AS cp_year,cp_bank_code,cp_unit, DATE(recv_time) AS bank_cp_date, 
			DATE(verify_time)AS verifyDate,tally_sheet_number,
			shed_tally_info.wr_date,rcv_pack,shed_loc, igm_sup_detail_container.cont_number, 
			igm_sup_detail_container.cont_height, igm_sup_detail_container.cont_type,appraise_date,
			igm_supplimentary_detail.BL_No, igm_supplimentary_detail.master_BL_No,
			igm_sup_detail_container.cont_status, igm_sup_detail_container.cont_size, shed_tally_info.shed_yard, shed_tally_info.actual_marks, 
			igm_masters.Vessel_Name, Registration_number_of_transport_code, igm_supplimentary_detail.Pack_Marks_Number, igm_supplimentary_detail.Description_of_Goods, 
			igm_sup_detail_container.Cont_gross_weight,igm_sup_detail_container.cont_weight,
			(shed_tally_info.rcv_pack+shed_tally_info.loc_first) AS un_rcv_qty, igm_details.Pack_Description,
			igm_supplimentary_detail.Pack_Number, verify_other_data.be_no, verify_other_data.be_date,
			shed_bill_master.grand_total,shed_loc, 
			igm_supplimentary_detail.weight, igm_supplimentary_detail.net_weight_unit,igm_supplimentary_detail.Notify_name, 
			igm_supplimentary_detail.Notify_address, shed_tally_id,
			no_of_truck, verify_other_data.cnf_lic_no, verify_other_data.cnf_name,cus_rel_odr_no,cus_rel_odr_date 
			FROM cchaportdb.shed_tally_info 
			INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=shed_tally_info.igm_sup_detail_id
			LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
			INNER JOIN igm_masters ON igm_supplimentary_detail.igm_master_id=igm_masters.id
			LEFT JOIN igm_details ON igm_details.id=igm_supplimentary_detail.igm_detail_id
			LEFT JOIN verify_other_data ON verify_other_data.shed_tally_id=shed_tally_info.id 
			LEFT JOIN appraisement_info ON igm_supplimentary_detail.BL_No=appraisement_info.BL_NO
			LEFT JOIN shed_bill_master ON shed_bill_master.verify_no=shed_tally_info.verify_number
			LEFT JOIN bank_bill_recv ON shed_bill_master.bill_no=bank_bill_recv.bill_no
			WHERE igm_sup_detail_container.cont_number='$cont_no'";
	
			//echo $str;
			$result = $this->bm->dataSelectDb1($str);
			//$result = $this->bm->dataSelect($str);
		  
			$data['result']=$result;			
			//$data['date']=$date;	

			//$this->load->view('header2');
			$this->load->view('cargoReceiveDeliveryFormPerform',$data);
			//$this->load->view('footer');
		}	
	}	
		//Sumon-- Cargo Receiving & Delivery Report --end
		
	//dailyExportContGateIn - start
	function dailyExportContGateIn()			// 2020-06-10
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{						
			$title="Daily Export Container Gate In";
			$msg="";
			
			$data['title']=$title;
			$data['msg']=$msg;						
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('dailyExportContGateIn',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function dailyExportContGateInAction()			// 2020-06-10
	{				
		$rotation=$this->input->post('gateInRotation');
				
		$data['rotation']=$rotation;			
		
		$title="Daily Export Container Gate In";
		$msg="";
		
		$data['title']=$title;
		$data['msg']=$msg;
					
		$this->load->view('dailyExportContGateInReport',$data);					
	}
	//dailyExportContGateIn - end
	
	//Head Delivery Report List Start
	function date_wise_bill_entry()
    {
        $session_id = $this->session->userdata('value');
        $LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
        {
            $this->logout();
        }
        else
        {
            $data['title']="DATE WISE BILL OF ENTRY REPORT...";

            $this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
            $this->load->view('date_wise_bill_report_form',$data);
            $this->load->view('jsAssetsList');
        }
    }
	
	function date_wise_bill_of_entry_report_action()
    {
        $session_id = $this->session->userdata('value');
        $LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
        {
            $this->logout();
        }
        else
        {
            $be_entry_date=$this->input->post('be_entry_date');

            $sql_be_report_datewise="SELECT office_code,reg_no,reg_date,place_dec,entry_dt 
            FROM sad_info 
            WHERE DATE(entry_dt)='$be_entry_date'
			ORDER BY id DESC";

            $rslt_be_report_datewise=$this->bm->dataSelectDb1($sql_be_report_datewise);

            $this->load->library('M_pdf');
            $mpdf->use_kwt = true;

            //--
            $this->data['rslt_be_report_datewise']=$rslt_be_report_datewise;
            $this->data['be_entry_date']=$be_entry_date;

            $pdf = $this->m_pdf->load();

            //$pdf->SetWatermarkText('CPA CTMS');
            $pdf->showWatermarkText = true;

            //	$stylesheet = file_get_contents('resources/styles/xml_conversion.css'); // external css

           /*  $pdf->AddPage('P', // L - landscape, P - portrait
                '', '', '', '',
                5, // margin_left
                5, // margin right
                10, // margin top
                10, // margin bottom
                10, // margin header
                10); // margin footer */

            $html=$this->load->view('bill_of_entry_report_pdf.php',$this->data, true);

            $pdfFilePath ="date_wise_bill_of_entry_report-".time()."-download.pdf";

            $pdf->useSubstitutions = true;
            //$pdf->setFooter('|Page {PAGENO} of {nb}|');
            //	$pdf->WriteHTML($stylesheet,1);
            $pdf->WriteHTML($html,2);

            $pdf->Output($pdfFilePath, "I");

        }
    }
	
	//Head Delivery Report List End
	
	// //Bill Tariff - start

    // function billTariff()
	// {
	// 	$session_id = $this->session->userdata('value');
	// 	$LoginStat = $this->session->userdata('LoginStat');
		
	// 	if($LoginStat!="yes") 
	// 	{
	// 		$this->logout();
	// 	}
	// 	else
	// 	{
	// 		$data['title'] = "Bill Tariff...";
	// 		$data['msg'] = "";					
			
	// 		$this->load->view('cssAssets');
	// 		$this->load->view('headerTop');
	// 		$this->load->view('sidebar');
	// 		$this->load->view('billTariff',$data);
	// 		$this->load->view('jsAssets');
	// 	}
    // }

    // function getBillTariff()
	// {		// kawsar - to be merged
	// 	if(isset($_POST['save']))
	// 	{	
	// 		// $session_id = $this->session->userdata('value');
	// 		// if ($session_id != $this->session->userdata('session_id')) 
	// 		// {
	// 			// $this->logout();
	// 		// }
	// 		// else
	// 		// {
			
	// 			$string = $this->input->post('id');
			
	// 			$id = $string;

	// 		$desc = $this->input->post('desc');
		
		
	// 			$ldesc = $this->input->post('ldesc');
	// 		$glcode = $this->input->post('glcode');
	// 		$bill_type = $this->input->post('bill_type');
	
	// 			$login_id = $this->session->userdata('login_id');

	// 			$sql = "INSERT INTO bil_tariffs(id,description,long_description,gl_code,bill_type,created,creator)
	// 			VALUES('$id','$desc','$ldesc','$glcode','$bill_type',NOW(),'$login_id')";

	// 			$result = $this->bm->dataInsertDB1($sql);
	// 			if($result)
	// 			{
	// 				$msg="<font color='green'>Tarrif successfully inserted</font>";
	// 			}
	// 			else
	// 			{
	// 				$msg="<font color='red'>Tarrif failed to insert</font>";
	// 			}
	// 			$data['title'] = "Bill Tariff...";
	// 			$data['msg'] = $msg;				
				
	// 			$this->load->view('cssAssets');
	// 			$this->load->view('headerTop');
	// 			$this->load->view('sidebar');
	// 			$this->load->view('billTariff',$data);
	// 			$this->load->view('jsAssets');
	// 		}

	// 	// }
	// 	else if($_POST['update'])
	// 	{
	// 		$string = $this->input->post('id');
			
	// 		$id = $string;
	// 		$desc = $this->input->post('desc');
	// 		$ldesc = $this->input->post('ldesc');
	// 		$glcode = $this->input->post('glcode');
	// 		$bill_type = $this->input->post('bill_type');
		
	// 		$login_id = $this->session->userdata('login_id');
	// 		$gkey = $this->input('gkey');

	// 		$sql = "UPDATE bil_tariffs SET id='$id',description = '$desc',long_description = '$ldesc', gl_code = '$glcode',bill_type='$bill_type',created='NOW()',creator='$login_id' WHERE gkey = ''$gkey";
	// 		//	$result = $this->db->dataInsertDB1($sql);
	// 		if($result)
	// 		{
	// 			$msg="<font color='green'>Tarrif successfully updated</font>";
	// 		}
	// 		else
	// 		{
	// 			$msg="<font color='red'>Tarrif failed to update</font>";
	// 		}
	// 		$data['title'] = "Bill Tariff...";
	// 		$data['msg'] = $msg;
			
	// 		$this->load->view('cssAssets');
	// 		$this->load->view('headerTop');
	// 		$this->load->view('sidebar');
	// 		$this->load->view('billTariff',$data);
	// 		$this->load->view('jsAssets');
	// 	}
		
	// }
	
	// function billTariffRate()
	// {
	// 	$session_id = $this->session->userdata('value');
	// 	$LoginStat = $this->session->userdata('LoginStat');
		
	// 	if($LoginStat!="yes") 
	// 	{
	// 		$this->logout();
	// 	}
	// 	else
	// 	{
	// 		$data['title'] = "Bill Tariff Rate...";
	// 		$data['msg'] = "";
			
	// 		$this->load->view('cssAssets');
	// 		$this->load->view('headerTop');
	// 		$this->load->view('sidebar');
	// 		$this->load->view('billTariffRate',$data);
	// 		$this->load->view('jsAssets');
	// 	}        
    // }
	
	// function billTarriffRateAction()		// kawsar - to be merged
	// {
	// 	if(isset($_POST['save']))
	// 	{
	// 		$session_id = $this->session->userdata('value');
	// 		$LoginStat = $this->session->userdata('LoginStat');
		
	// 		if($LoginStat!="yes") 
	// 		{
	// 			$this->logout();
	// 		}
	// 		else
	// 		{
	// 			$bill_type=$this->input->post('bill_type');
	// 			$id=$this->input->post('id');
	// 			$rate_type=$this->input->post('rate_type');
	// 			$currency=$this->input->post('currency');
	// 			$amount=$this->input->post('amount');
	// 			$effective_date = $this->input->post('effective_date');

	// 			$login_id = $this->session->userdata('login_id');
				
	// 			$sql_insertBillTarrifRate="INSERT INTO bil_tariff_rates(effective_date,rate_type,amount,currency_gkey,tariff_gkey,created,creator)
	// 			VALUES('$effective_date','$rate_type','$amount','$currency','$id',NOW(),'$login_id')";
	// 			$result = $this->bm->dataInsertDB1($sql_insertBillTarrifRate);
	// 			if($result)
	// 			{
	// 				$msg="<font color='green'>Tarrif rate successfully inserted</font>";
	// 			}
	// 			else
	// 			{
	// 				$msg="<font color='red'>Tarrif rate failed to insert</font>";
	// 			}
				
	// 			$data['title'] = "Bill Tariff Rate...";
	// 			$data['msg'] = $msg;
				
	// 			$this->load->view('cssAssets');
	// 			$this->load->view('headerTop');
	// 			$this->load->view('sidebar');
	// 			$this->load->view('billTariffRate',$data);
	// 			$this->load->view('jsAssets');
	// 		}		
	// 	}
	// 	else if($_POST['update'])
	// 	{
	// 		//$bill_type=$this->input->post('bill_type');
	// 		//$id=$this->input->post('id');
	// 		$rate_type=$this->input->post('rate_type');
	// 		$currency=$this->input->post('currency');
	// 		$amount=$this->input->post('amount');
	// 		$effective_date = $this->input->post('effective_date');
	// 		$login_id = $this->session->userdata('login_id');
	// 		$tariff_gkey = $this->input->post('gkey');
			
	// 		$sql_insertBillTarrifRate="UPDATE bil_tariff_rates SET rate_type = '$rate_type',currency = '$currency', effective_date = '$effective_date', amount = '$amount', changed = 'NOW()', changer = '$login_id' WHERE tariff_gkey = '$tariff_gkey'";
	// 		//$result = $this->bm->dataInsertDB1($sql_insertBillTarrifRate);
	// 		if($result)
	// 		{
	// 			$msg="<font color='green'>Tarrif rate successfully updated</font>";
	// 		}
	// 		else
	// 		{
	// 			$msg="<font color='red'>Tarrif rate failed to update</font>";
	// 		}
			
	// 		$data['title'] = "Bill Tariff Rate...";
	// 		$data['msg'] = $msg;
			
	// 		$this->load->view('cssAssets');
	// 		$this->load->view('headerTop');
	// 		$this->load->view('sidebar');
	// 		$this->load->view('billTariffRate',$data);
	// 		$this->load->view('jsAssets');
	// 	}

	// }
	
	// function billList()
	// {		
	// 	// kawsar - to be merged
	// 	$sql = "SELECT bil_tariffs.gkey,bil_tariffs.id,bil_tariffs.description,bil_tariffs.long_description,bil_tariffs.gl_code,bil_tariffs.bill_type
	// 	FROM bil_tariffs Left JOIN bil_tariff_rates ON bil_tariffs.gkey = bil_tariff_rates.tariff_gkey";
	// 	$result = $this->bm->dataSelectDb1($sql);
		
	// 	$data['result'] = $result;
	// 	$data['title'] = "Bill List...";

	// 	$this->load->view('cssAssets');
	// 	$this->load->view('headerTop');
	// 	$this->load->view('sidebar');
	// 	$this->load->view('billList',$data);
	// 	$this->load->view('jsAssets');		
	// }
	
	// function billAction()
	// {		// kawsar - to be merged
	// 	//$data['msg']="";
			
	// 	if(isset($_POST['delete']))
	// 	{
	// 		$key = $_POST['gkey'];		
	// 		$deleteSql="DELETE FROM bil_tariffs WHERE bil_tariffs.gkey='$key'";
	// 		// $deleteStat=$this->bm->dataDeleteDb1($deleteSql);
	// 		$data['msg']="<font color='red'><b>Data Deleted.</b></font>";
	// 		redirect('Report/billList/', 'refresh');

	// 	}
	// 	else if(isset($_POST['editTarrif']))
	// 	{
	// 		$session_id = $this->session->userdata('value');
	// 		if ($session_id != $this->session->userdata('session_id')) 
	// 		{
	// 			$this->logout();
	// 		}
	// 		else
	// 		{	
	// 			$key = $_POST['gkey'];
	// 			$sql = "SELECT gkey,id,description,long_description,gl_code,bill_type FROM bil_tariffs WHERE gkey = '$key'";
	// 			$result = $this->bm->dataSelectDb1($sql);
	// 			$data['result'] = $result;
	// 			$data['title'] = "Edit Bill Tariff...";
								
	// 			$this->load->view('cssAssets');
	// 			$this->load->view('headerTop');
	// 			$this->load->view('sidebar');
	// 			$this->load->view('billTariff',$data);
	// 			$this->load->view('jsAssets');		
	// 		}
	// 	}
	// }
	
	// function rateList()
	// {		
	// 	// kawsar - to be merged
	// 	$sql = "SELECT bil_tariffs.gkey,bil_tariffs.id,bil_tariff_rates.amount
	// 	FROM bil_tariffs INNER JOIN bil_tariff_rates ON bil_tariffs.gkey = bil_tariff_rates.tariff_gkey";
	// 	$result = $this->bm->dataSelectDb1($sql);
	// 	// echo "<pre>";
	// 	// var_dump($result);
	// 	// echo "</pre>";
	// 	$data['result'] = $result;
	// 	$data['title'] = "Rate List...";
		
	// 	$this->load->view('cssAssets');
	// 	$this->load->view('headerTop');
	// 	$this->load->view('sidebar');
	// 	$this->load->view('rateList',$data);
	// 	$this->load->view('jsAssets');		
	// }

	// function rateAction()
	// {		// kawsar - to be merged
	// 	if(isset($_POST['editRate']))
	// 	{
	// 		$session_id = $this->session->userdata('value');
	// 		$LoginStat = $this->session->userdata('LoginStat');
		
	// 		if($LoginStat!="yes") 
	// 		{
	// 			$this->logout();
	// 		}
	// 		else
	// 		{
	// 			$key = $_POST['gkey'];
	// 			$sql = "SELECT bil_tariff_rates.effective_date,bil_tariff_rates.rate_type,bil_tariff_rates.amount,bil_tariff_rates.currency_gkey,bil_tariff_rates.tariff_gkey,bil_tariffs.id,bil_tariffs.bill_type,bil_tariffs.gkey FROM bil_tariff_rates INNER JOIN bil_tariffs WHERE bil_tariff_rates.tariff_gkey = bil_tariffs.gkey AND tariff_gkey = '$key'";
	// 			$result = $this->bm->dataSelectDb1($sql);
	// 			$data['result'] = $result;
	// 			$data['title'] = "Edit Bill Tariff Rate...";
	// 			$data['msg'] = "";				
				
	// 			$this->load->view('cssAssets');
	// 			$this->load->view('headerTop');
	// 			$this->load->view('sidebar');
	// 			$this->load->view('billTariffRate',$data);
	// 			$this->load->view('jsAssets');
	// 		} 
	// 	}
	// }

    // // Bill Tariff - end
	
	function Offdock($login_id)
	{
		$offdoc ="";
		if($login_id=='gclt')
		{
			$offdoc = "3328";
		}
		elseif($login_id=='saple')
		{
			$offdoc = "3450";
		}
		elseif($login_id=='saplw')
		{
			$offdoc = "2603";
		}
		elseif($login_id=='ebil')
		{
			$offdoc = "2594";
		}
		elseif($login_id=='cctcl')
		{
			$offdoc = "2595";
		}
		elseif($login_id=='ktlt')
		{
			$offdoc = "2596";
		}
		elseif($login_id=='qnsc')
		{
			$offdoc = "2597";
		}
		elseif($login_id=='ocl')
		{
			$offdoc = "2598";
		}
		elseif($login_id=='vlsl')
		{
			$offdoc = "2599";
		}
		elseif($login_id=='shml')
		{
			$offdoc = "2600";
		}
		elseif($login_id=='iqen')
		{
			$offdoc = "2601";
		}
		elseif($login_id=='iltd')
		{
			$offdoc = "2620";
		}
		elseif($login_id=='plcl')
		{
		 $offdoc = "2643";
		}
		elseif($login_id=='shpm')
		{
		 $offdoc = "2646";
		}
		elseif($login_id=='hsat')
		{
		 $offdoc = "3697";
		}
		elseif($login_id=='ellt')
		{
		 $offdoc = "3709";
		}
		elseif($login_id=='bmcd')
		{
		 $offdoc = "3725";
		}
		elseif($login_id=='nclt')
		{
		 $offdoc = "4013";
		}
		elseif($login_id=='kdsl')
		{
			$offdoc = "2624";
		}		
		else
		{
		 $offdoc = "";
		}
		return $offdoc;
	}
	//raju Goods report 

   //Goods Report start 3/1/2020
    function goodsWiseReportForm()			// 2020-06-14
    {
        $session_id = $this->session->userdata('value');
        $LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
        {
            $this->logout();

        }
        else
        {
            $g_query = "";
           // $goodsList = "";
            $g_query ="SELECT c.commudity_code AS id, c.commudity_desc AS c_name FROM commudity_detail AS c
              ORDER BY c_name ASC";

           $commGoodsData  = $this->bm->dataSelectDb1($g_query);
           // print_r($rtnGoodsList); exit()
            $data['goodsList']  = $commGoodsData;
            $data['msg']="";
            $data['title']="GOODS WISE REPORT ...";
            // $this->load->view('header5');
            // $this->load->view('getGoodsWiseReportForm',$data);
            // $this->load->view('footer_1');
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('getGoodsWiseReportForm',$data);
			$this->load->view('jsAssets');
        }
    }
	
	// function getGoodsWiseReport()		// 2020-06-14
	// {
		// $item = $this->input->post('item');
		// $goodsfromdate = $this->input->post('goodsfromdate');
		// $goodstodate = $this->input->post('goodstodate');
		// $options = $this->input->post('options');
		// $gResult ="";
		
		// $goodsQuery ="SELECT igm_details.Import_Rotation_No,igm_masters.Vessel_Name,igm_detail_container.cont_number,igm_detail_container.cont_size,
		// commudity_detail.commudity_desc,
		// SUM(igm_detail_container.cont_gross_weight)/1000 AS tonage, 
		// igm_details.NotifyDesc
		// FROM igm_detail_container 
		// INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id
		// INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
		// INNER JOIN commudity_detail  ON commudity_detail.commudity_code = igm_detail_container.commudity_code
		// WHERE igm_detail_container.commudity_code='$item' AND DATE(igm_details.file_clearence_date) BETWEEN '$goodsfromdate' AND '$goodstodate'
		// GROUP BY igm_details.Import_Rotation_No,igm_details.NotifyDesc";
		// $goodsResult = $this->bm->dataSelectDb1($goodsQuery);
		
		// $data['goodsResult'] = $goodsResult;
		// $this->load->view('goods_description_list',$data);
	// }
	
	function getGoodsWiseReport()		// 2021-03-07
	{
		$item = $this->input->post('item');
		$goodsfromdate = $this->input->post('goodsfromdate');
		$goodstodate = $this->input->post('goodstodate');
		$options = $this->input->post('options');
		$searchText = $this->input->post('searchText');
		$searchText=str_replace(" ","%",$searchText);
		$gResult ="";
		
		 $goodsQuery ="SELECT igm_details.Import_Rotation_No,igm_masters.Vessel_Name,igm_detail_container.cont_number,igm_detail_container.cont_size,igm_detail_container.cont_height,IF(cont_size=20,1,IF((cont_size=40 OR cont_size=45),2,'')) AS teus,
		commudity_detail.commudity_desc,
		igm_detail_container.cont_gross_weight/1000 AS tonage, 
		igm_details.Exporter_name, igm_details.Exporter_address, igm_details.Notify_name, igm_details.Notify_address,
		igm_details.Notify_name,igm_details.NotifyDesc,igm_details.Description_of_Goods
		FROM igm_detail_container 
		INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id
		INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
		INNER JOIN commudity_detail  ON commudity_detail.commudity_code = igm_detail_container.commudity_code
		WHERE DATE(igm_details.file_clearence_date) BETWEEN '$goodsfromdate' AND '$goodstodate' AND UPPER(Description_of_Goods) LIKE UPPER('%$searchText%')
		UNION ALL

		SELECT igm_supplimentary_detail.Import_Rotation_No,igm_masters.Vessel_Name,igm_sup_detail_container.cont_number,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_height,IF(cont_size=20,1,IF((cont_size=40 OR cont_size=45),2,'')) AS teus,
		commudity_detail.commudity_desc,
		igm_sup_detail_container.cont_gross_weight/1000 AS tonage, 
		igm_supplimentary_detail.Exporter_name,igm_supplimentary_detail.Exporter_address, igm_supplimentary_detail.Notify_name, igm_supplimentary_detail.Notify_address,
		igm_supplimentary_detail.Notify_name,igm_supplimentary_detail.NotifyDesc,igm_supplimentary_detail.Description_of_Goods
		FROM igm_sup_detail_container 
		INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id
		INNER JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
		INNER JOIN commudity_detail  ON commudity_detail.commudity_code = igm_sup_detail_container.commudity_code
		WHERE DATE(igm_supplimentary_detail.file_clearence_date) BETWEEN '$goodsfromdate' AND '$goodstodate' AND UPPER(Description_of_Goods) LIKE UPPER('%$searchText%')";
		//return;
		$goodsResult = $this->bm->dataSelectDb1($goodsQuery);
		
		$data['goodsResult'] = $goodsResult;
		$data['options'] = $options;
		$data['searchText'] = $searchText;
		
		$this->load->view('goods_description_list_text',$data);
	}
	
	function itemGoodsWiseReportForm()			// 2020-06-14
    {
        $session_id = $this->session->userdata('value');
        $LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
        {
            $this->logout();

        }
        else
        {

            $query ="SELECT c.commudity_code AS id, c.commudity_desc AS c_name FROM commudity_detail AS c
              ORDER BY c_name ASC";

            $itemList  = $this->bm->dataSelectDb1($query);
//             print_r($itemList); exit();
            $data['itemList']  = $itemList;
            $data['msg']="";
            $data['title']="GOODS REPORT ACTIVE YARD...";
            // $this->load->view('header5');
            // $this->load->view('itemGoodsWiseReportForm',$data);
            // $this->load->view('footer_1');
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('itemGoodsWiseReportForm',$data);
			$this->load->view('jsAssets');
        }
    }	
	
	function getItemGoodsWiseReport()				// 2020-06-14
    {
        $item = $this->input->post('item');

		$container_query ="SELECT id,inv_unit.visit_state,inv_unit.category,inv_unit.create_time 
		FROM inv_unit
		INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
		WHERE inv_unit_fcy_visit.transit_state='S40_YARD' AND inv_unit.category='IMPRT'";

        $containerResult = $this->bm->dataSelect($container_query);
        $data['containerResult'] = $containerResult;
        $data['item'] = $item;

        $this->load->view('itemGoodsDescriptionList',$data);
    }
	
	function containerHandlingView()
	{
		
		
		if($this->uri->segment(3)){
			$session_id = $this->session->userdata('value');
		
			$this->data['title']="CONTAINER HANDLING REPORT";
		
			if($this->input->post())
			{
				$equipment=$this->input->post('equipment');
				$shift=$this->input->post('shift');
				$sVal=$this->input->post('sVal');
				$sDate=$this->input->post('sDate');
			}
			else
			{
				$equipment="All";
				$shift="All";
				$sDate = $this->uri->segment(3);
				$sVal = null;
			}
			
			
			$this->data['equipment']=$equipment;
			$this->data['sVal']=$sVal;
			$this->data['sDate']=$sDate;
			$this->data['shift']=$shift;
		

			$this->load->view('cssAssetsList');
			//$this->load->view('FrontEnd/myReportContainerHandlingListPrint', $this->data);
			$this->load->view('FrontEnd/containerHandlingReportPdf', $this->data);	
			$this->load->view('jsAssetsList.php');

		}else{
			
			$session_id = $this->session->userdata('value');
		
			$this->data['title']="CONTAINER HANDLING REPORT";
		
			if($this->input->post())
			{
				$equipment=$this->input->post('equipment');
				$shift=$this->input->post('shift');
				$sVal=$this->input->post('sVal');
				$sDate=$this->input->post('sDate');
			}
			else
			{
				$equipment="All";
				$shift="All";
				$sDate = date('Y-m-d');
				$sVal = null;
			}
			
			
			$this->data['equipment']=$equipment;
			$this->data['sVal']=$sVal;
			$this->data['sDate']=$sDate;
			$this->data['shift']=$shift;
		

			$this->load->view('cssAssetsList');
			//$this->load->view('FrontEnd/myReportContainerHandlingList', $this->data);
			$this->load->view('FrontEnd/containerHandlingReport', $this->data);
			$this->load->view('jsAssetsList.php');
		}
	}
				//custom panel task start 5/11/2020
    //vessel_wise_discharge_loading - start
    function vessel_wise_discharge_loading()
    {
        if($this->uri->segment(3)){
            $login_id = $this->session->userdata('login_id');
            $session_id = $this->session->userdata('value');

            $this->load->view('cssAssetsList');
            $this->load->view('vessel_wise_discharge_loading_viewPrint');
            $this->load->view('jsAssetsList');
        }else{
            $login_id = $this->session->userdata('login_id');
            $session_id = $this->session->userdata('value');

            $this->load->view('cssAssetsList');
            $this->load->view('vessel_wise_discharge_loading_view');
            $this->load->view('jsAssetsList');
        }

    }
    //vessel_wise_discharge_loading - end
	
	
    function yard_wise_delivery_and_receive()
    {
        $login_id = $this->session->userdata('login_id');
        $session_id = $this->session->userdata('value');
       	// echo "hello you called me"; exit();

	   	$LoginStat = $this->session->userdata('LoginStat');
		
	   	if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="YARD WISE CONTAINER RECEIVE AND DELIVERY...";
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('yardWiseContainerRcvAndDlvForm',$data);
			$this->load->view('jsAssetsList');
		}
    }




    function yard_wise_delivery_and_receive_action()
    {
        if($this->uri->segment(3)){
            $login_id = $this->session->userdata('login_id');
            $session_id = $this->session->userdata('value');

            $LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
            {
                $this->logout();
            }
            else
            {
                $search_type = $this->input->post('search_type');
                $search_dt = $this->input->post('search_dt');
                $terminal = $this->input->post('terminal');
                $search_yard = $this->input->post('search_yard');

                if($search_type=="delivery")
                    $data['title']="YARD WISE CONTAINER DELIVERY";
                else if($search_type=="receive")
                    $data['title']="YARD WISE CONTAINER RECEIVE";

                $data['search_type']=$search_type;
                $data['search_dt']=$search_dt;
                $data['terminal']=$terminal;
                $data['search_yard']=$search_yard;
                $this->load->view('cssAssetsList');
                $this->load->view('yardWiseContainerRcvAndDlvListPrint',$data);
                $this->load->view('jsAssetsList');
            }

        }else{
            $login_id = $this->session->userdata('login_id');
            $session_id = $this->session->userdata('value');

            if($session_id!=$this->session->userdata('session_id'))
            {
                $this->logout();
            }
            else
            {
                $search_type = $this->input->post('search_type');
                $search_dt = $this->input->post('search_dt');
                $terminal = $this->input->post('terminal');
                $search_yard = $this->input->post('search_yard');

                if($search_type=="delivery")
                    $data['title']="YARD WISE CONTAINER DELIVERY";
                else if($search_type=="receive")
                    $data['title']="YARD WISE CONTAINER RECEIVE";

                $data['search_type']=$search_type;
                $data['search_dt']=$search_dt;
                $data['terminal']=$terminal;
                $data['search_yard']=$search_yard;
                $this->load->view('cssAssetsList');
                $this->load->view('yardWiseContainerRcvAndDlvList',$data);
                $this->load->view('jsAssetsList');
            }
        }

    }

    //Equipment report for custom
    function EquipmentWiseDeliveryReceving()
    {
        $session_id = $this->session->userdata('value');
        $LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
        {
            $this->logout();
        }
        else
        {
            $data['title']="Equipment Wise Delivery Receiving Report";

            $this->load->view('headerTop');
            $this->load->view('sidebar');
            $this->load->view('EquipmentWiseDeliveryReceving',$data);

        }
    }

    function EquipmentWiseDeliveryRecevingReport()
    {
        if($this->uri->segment(3)){
            $login_id = $this->session->userdata('login_id');
            $session_id = $this->session->userdata('value');
            $LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
            {
                $this->logout();
            }
            else
            {
                $date = $this->uri->segment(4);

                $data['tableTitle']="Equipment Wise Delivery Receiving Report for the Date: ".$date;
                $data['date']=$date;
                $this->load->view('cssAssetsList');
                $this->load->view('EquipmentWiseDeliveryRecevingReportPrint',$data);
                $this->load->view('jsAssetsList');
            }
        }else{
            $login_id = $this->session->userdata('login_id');
            $session_id = $this->session->userdata('value');
            if($session_id!=$this->session->userdata('session_id'))
            {
                $this->logout();
            }
            else
            {
                $date = $this->input->post('date');

                $data['tableTitle']="Equipment Wise Delivery Receiving Report for the Date: ".$date;
                $data['date']=$date;
                $this->load->view('cssAssetsList');
                $this->load->view('EquipmentWiseDeliveryRecevingReport',$data);
                $this->load->view('jsAssetsList');
            }
        }

    }
	
	function offDockReportForm()			
	{
		$data['title']="IGM DESTINATION CHANGE TO OFFDOCK";						
		$data['msg']="";						
		
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('offDockReportForm',$data);
		$this->load->view('jsAssets');
	}
	
		//IGM DESTINATION Changed to offDock--------SUMON
	function offDockReportAction()			
	{
		$login_id = $this->session->userdata('login_id');
		$rot_no = $this->input->post('rot_no');
		$offdock_id = $this->input->post('offdock_id');
		$fileType=$this->input->post('fileOptions');
		$destinationStat=$this->input->post('destinationStat');
		$btnAction=$this->input->post('btnAction');
		
		if($destinationStat=='full')
		{
			$str="";
		}
		else
		{
			$containers=trim($this->input->post('containers'));
			$conts=explode(",",$containers);
			//$conts_set=join("','",trim($conts));
			$conts_set="";
			foreach($conts as $cont)
			{
				$tcont = trim($cont);
				$conts_set = $conts_set."'".$tcont."',";
			}
			$conts_set = substr($conts_set,0,-1);
			$str=" and inv_unit.id in ($conts_set)";
		}
		//return;
		if($btnAction=="Manual Update")
		{
			$containers=trim($this->input->post('containers'));
			$conts=explode(",",$containers);
			$msg="";
			$resCnt = 0;
			foreach($conts as $cont)
			{
				$tcont = trim($cont);
				
				$strUpDtl = "UPDATE igm_detail_container 
				INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id
				SET off_dock_id='$offdock_id',Port_Status='5',cont_location_code='$offdock_id',login_id='$login_id',igm_detail_container.last_update=now()
				WHERE igm_details.Import_Rotation_No='$rot_no' AND igm_detail_container.cont_number='$tcont'";
				//echo "<hr>";
				$strUpSup = "UPDATE igm_sup_detail_container 
				INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id
				SET off_dock_id='$offdock_id',Port_Status='5',cont_location_code='$offdock_id',login_id='$login_id',igm_sup_detail_container.last_update=now()
				WHERE igm_supplimentary_detail.Import_Rotation_No='$rot_no' AND igm_sup_detail_container.cont_number='$tcont'";
				
				$resUpDtl = $this->bm->dataUpdateDB1($strUpDtl);
				$resUpSup = $this->bm->dataUpdateDB1($strUpSup);
				
				if($resUpDtl or $resUpSup)
					$resCnt++;
			}
			 
			//	return;
			if($resCnt>0)
			{
				$msg="Destination Changed.";
			}
			else
			{
				$msg="Not Updated.";

			}
			$data['msg']=$msg; 
			$data['title']="IGM DESTINATION CHANGE TO OFFDOCK";			
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('offDockReportForm',$data);
			$this->load->view('jsAssets');
		}
		else
		{
		
			$find_offdckStr="select name as rtnValue from ctmsmis.offdoc where id='$offdock_id'";
			$offDockNme = $this->bm->dataReturn($find_offdckStr);
			
			$strAssign = "SELECT inv_unit.id,vsl_vessel_visit_details.ib_vyg,vsl_vessels.name AS vsl_name,inv_unit_fcy_visit.time_in,inv_unit.freight_kind,
			Extract(DAY from NVL(time_out,CURRENT_DATE)- time_in) as duel,
			inv_unit_fcy_visit.last_pos_slot,
			substr(ref_equip_type.nominal_length,-2) AS siz,destination,argo_carrier_visit.ata,inv_unit_fcy_visit.flex_date01
			
			FROM inv_unit
			INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
			INNER JOIN ref_equipment ON inv_unit.eq_gkey=ref_equipment.gkey
			INNER JOIN ref_equip_type ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
			INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
			INNER JOIN inv_goods ON inv_unit.goods=inv_goods.gkey
			INNER JOIN ref_commodity ON inv_goods.commodity_gkey=ref_commodity.gkey
			INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
			INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
			WHERE inv_unit.category='IMPRT' AND inv_unit_fcy_visit.transit_state IN ('S40_YARD','S20_INBOUND')
			AND inv_unit.freight_kind='FCL'  AND inv_goods.destination=2591 
			AND ref_equip_type.iso_group NOT IN('RE','RT','HR','RS','UT','PF','PC')
			AND vsl_vessel_visit_details.ib_vyg='$rot_no' AND inv_unit_fcy_visit.flex_date01 IS NOT NULL".$str;
			//echo "<hr>";
			$rslt_assign = $this->bm->dataSelect($strAssign);
			//$blArray = array();
			$strDelBl = "DELETE FROM lyingAssignmentBL01";
			$this->bm->dataDeleteDB1($strDelBl);
			
			for($a=0;$a<count($rslt_assign);$a++)
			{
				$cont = $rslt_assign[$a]['ID'];
				$rot = $rslt_assign[$a]['IB_VYG'];
				$strBllAssign = "SELECT BL_No AS rtnValue FROM igm_detail_container 
				INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id 
				WHERE cont_number='$cont' AND Import_Rotation_No='$rot'
				UNION ALL
				SELECT BL_No AS rtnValue FROM igm_sup_detail_container 
				INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id
				WHERE cont_number='$cont' AND Import_Rotation_No='$rot'";
				
				$rslt_assignBL = $this->bm->dataSelectDb1($strBllAssign);
				for($bl=0;$bl<count($rslt_assignBL);$bl++)
				{
					//echo "In".$bl;
					$BLAssign = $rslt_assignBL[$bl]['rtnValue'];
					$strBlInsert = "REPLACE INTO lyingAssignmentBL01(BL) VALUES('$BLAssign')";
					$resBl = $this->bm->dataInsertDB1($strBlInsert);
					/*if (!in_array($BLAssign, $blArray))
					{
						array_push($blArray,$BLAssign);
					}*/
				}
			}
			
			$strGlassBL = "SELECT BL_No AS rtnValue FROM igm_details
			WHERE Import_Rotation_No='$rot_no' AND UCASE(Description_of_Goods) LIKE '%GLASS%'
			UNION ALL 
			SELECT BL_No AS rtnValue FROM igm_supplimentary_detail
			WHERE Import_Rotation_No='$rot_no' AND UCASE(Description_of_Goods) LIKE '%GLASS%'";
			$resGlassBL = $this->bm->dataSelectDb1($strGlassBL);
			for($gbl=0;$gbl<count($resGlassBL);$gbl++)
			{
				//echo "In".$bl;
				$BLGlass = $resGlassBL[$gbl]['rtnValue'];
				$strGBlInsert = "REPLACE INTO lyingAssignmentBL01(BL) VALUES('$BLGlass')";
				$resGBl = $this->bm->dataInsertDB1($strGBlInsert);
				/*if (!in_array($BLAssign, $blArray))
				{
					array_push($blArray,$BLAssign);
				}*/
			}
			//echo "<hr>";
			//print_r($blArray);
			//return;
			$strDelLying = "DELETE FROM lyingData01";
			$this->bm->dataDeleteDB1($strDelLying);
			
			$rsltquery ="SELECT inv_unit.id,vsl_vessel_visit_details.ib_vyg,vsl_vessels.name as vsl_name,inv_unit_fcy_visit.time_in,inv_unit.freight_kind,
			Extract(Day from NVL(time_out,CURRENT_DATE)-time_in) as duel,
			inv_unit_fcy_visit.last_pos_slot,
			
			SUBSTR(ref_equip_type.nominal_length,-2) AS siz,destination,argo_carrier_visit.ata,inv_unit_fcy_visit.flex_date01,
			ref_bizunit_scoped.id AS mlo
			
			FROM inv_unit
			INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
			INNER JOIN ref_equipment ON inv_unit.eq_gkey=ref_equipment.gkey
			INNER JOIN ref_equip_type ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
			INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
			INNER JOIN inv_goods ON inv_unit.goods=inv_goods.gkey
			INNER JOIN ref_commodity ON inv_goods.commodity_gkey=ref_commodity.gkey
			INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
			INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
			INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=inv_unit.line_op
			WHERE inv_unit.category='IMPRT' AND inv_unit_fcy_visit.transit_state IN ('S40_YARD','S20_INBOUND')
			AND inv_unit.freight_kind='FCL'  AND inv_goods.destination=2591 
			AND ref_equip_type.iso_group NOT IN('RE','RT','HR','RS','UT','PF','PC')
			AND vsl_vessel_visit_details.ib_vyg='$rot_no'".$str;
			$rslt_st = $this->bm->dataSelect($rsltquery);
			for($i=0;$i<count($rslt_st);$i++)
			{
				$id = $rslt_st[$i]["ID"];
				$rotation = $rslt_st[$i]["IB_VYG"];
				$discharge_dt = $rslt_st[$i]["time_in TIME_IN"];
				$freight_kind = $rslt_st[$i]["FREIGHT_KIND"];
				$dwetime_dt = $rslt_st[$i]["DUEL"];
				$location = $rslt_st[$i]["LAST_POS_SLOT"];
				$terminal = $rslt_st[$i]["YARD"];
				$size = $rslt_st[$i]["SIZ"];
				$dest = $rslt_st[$i]["DESTINATION"];
				$ata = $rslt_st[$i]["ATA"];
				$strip_proposed_dt = $rslt_st[$i]["FLEX_DATE01"];
				$mlo = $rslt_st[$i]["MLO"];
				$lastPosSlot="";
				$lastPosSlot=$rslt_st[$i]["LAST_POS_SLOT"];
				$yardQuery="SELECT ctmsmis.cont_yard('$lastPosSlot') AS rtnValue";
				$terminal=$this->bm->dataSelectDb2($yardQuery);


			
				//echo $i;
				$strInsertLying = "INSERT INTO lyingData01(id,rotation,discharge_dt,freight_kind,dwetime_dt,location,terminal,size,dest,ata,strip_proposed_dt,mlo) 
				VALUES ('$id','$rotation','$discharge_dt','$freight_kind','$dwetime_dt','$location','$terminal','$size','$dest','$ata','$strip_proposed_dt','$mlo')";
				//echo "<hr>";
				$this->bm->dataInsertDB1($strInsertLying);
			}
			
			$strShowUpdate = "SELECT BL,cont_number,cont_seal_number,CEILING(weight/1000) AS WT_Mton,Description_of_Goods, Importer,
			location,size,mlo,cont_height,Remarks,Notify_name,Commodity
			FROM (

			SELECT DISTINCT Vessel_Name,Import_Rotation_No,cont_number,strip_proposed_dt,Freight_Kind,IF(dest=2591,'CGP','Others') AS Dest,cont_seal_number,
			TRIM(BL_No) AS BL,cont_imo,cont_un,weight,Description_of_Goods,ASSnFlag,Notify_name,CONCAT(Notify_code,' ',  Notify_name,' ', Notify_address) AS Importer,
			location,terminal,size,mlo,cont_height,Remarks,Commodity
			FROM (

			SELECT DISTINCT cont_number ,igm_details.Import_Rotation_No,IF(igm_supplimentary_detail.igm_detail_id IS NULL ,'Main IGM','Assigned') AS SupFlag,igm_detail_container.cont_imo,igm_detail_container.cont_un,
			(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=lyingData01.rotation ) AS Vessel_Name,
			(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,

			igm_details.BL_No,igm_detail_container.Cont_gross_weight AS weight,igm_details.Description_of_Goods,igm_details.Notify_code, igm_details.Notify_name, 
			igm_details.Notify_address,
			location,terminal,size,IF(size=20,1,2) AS TEUs,freight_kind,dest,igm_detail_container.cont_seal_number,
			strip_proposed_dt,IF(strip_proposed_dt LIKE '2020%','Assigned','NOT') AS ASSnFlag,igm_detail_container.off_dock_id,
			mlo,igm_detail_container.cont_height,igm_details.Remarks
			FROM igm_detail_container
			INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id
			INNER JOIN lyingData01 ON lyingData01.id=igm_detail_container.cont_number
			LEFT JOIN igm_supplimentary_detail ON igm_supplimentary_detail.igm_detail_id=igm_details.id
			 
			WHERE igm_detail_container.cont_un='' AND igm_details.BL_No NOT IN (SELECT DISTINCT BL FROM lyingAssignmentBL01 )
			 
			UNION 

			SELECT DISTINCT igm_sup_detail_container.cont_number ,igm_supplimentary_detail.Import_Rotation_No,'Suppliment IGM' AS SupFlag,igm_sup_detail_container.cont_imo,igm_sup_detail_container.cont_un,
			(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=lyingData01.rotation ) AS Vessel_Name,
			(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,

			igm_supplimentary_detail.BL_No,igm_sup_detail_container.Cont_gross_weight AS weight,igm_supplimentary_detail.Description_of_Goods,igm_supplimentary_detail.Notify_code,
			igm_supplimentary_detail.Notify_name, igm_supplimentary_detail.Notify_address,location,terminal,size,IF(size=20,1,2) AS TEUs,freight_kind,dest,
			igm_sup_detail_container.cont_seal_number,strip_proposed_dt,IF(strip_proposed_dt LIKE '2020%','Assigned','NOT') AS ASSnFlag,igm_sup_detail_container.off_dock_id,
			mlo,igm_sup_detail_container.cont_height,igm_supplimentary_detail.Remarks
			FROM igm_sup_detail_container
			INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id
			INNER JOIN lyingData01 ON lyingData01.id=igm_sup_detail_container.cont_number
			LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_supplimentary_detail.igm_detail_id
			 
			WHERE igm_sup_detail_container.cont_un='' AND igm_supplimentary_detail.BL_No NOT IN (SELECT DISTINCT BL FROM lyingAssignmentBL01 )
			 
			) AS a
			 WHERE Supflag!='Assigned' AND off_dock_id=2591

			) AS b
			WHERE Import_Rotation_No='$rot_no'
			AND Remarks NOT LIKE '%ROB%' AND BL NOT IN (
			SELECT DISTINCT BL FROM lyingAssignmentBL01
			)
			ORDER BY 1,2,3";
			$resShowUpdate = $this->bm->dataSelectDb1($strShowUpdate);
			
			if($btnAction=="Show Data")
			{ 
				$strves = "SELECT Vessel_Name AS rtnValue FROM igm_masters WHERE Import_Rotation_No='$rot_no'";
				$vesName = $this->bm->dataReturnDb1($strves);
				$strBoxTeus = "SELECT SUM(box) AS box,SUM(teus) AS teus
				FROM (
				SELECT DISTINCT cont_number,size,1 AS box,IF(size=20,1,2) AS teus 
				FROM (

				SELECT DISTINCT Vessel_Name,Import_Rotation_No,cont_number,strip_proposed_dt,Freight_Kind,IF(dest=2591,'CGP','Others') AS Dest,cont_seal_number,
				TRIM(BL_No) AS BL,cont_imo,cont_un,weight,Description_of_Goods,ASSnFlag,Notify_name,
				CONCAT(Notify_code,' ',  Notify_name,' ', Notify_address) AS Importer, location,terminal,size,Remarks
				FROM (

				SELECT DISTINCT cont_number ,igm_details.Import_Rotation_No,IF(igm_supplimentary_detail.igm_detail_id IS NULL ,'Main IGM','Assigned') AS SupFlag,igm_detail_container.cont_imo,igm_detail_container.cont_un,
				(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=lyingData01.rotation ) AS Vessel_Name,
				(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,

				igm_details.BL_No,igm_detail_container.Cont_gross_weight AS weight,igm_details.Description_of_Goods,igm_details.Notify_code, igm_details.Notify_name, 
				igm_details.Notify_address,
				location,terminal,size,IF(size=20,1,2) AS TEUs,freight_kind,dest,igm_detail_container.cont_seal_number,
				strip_proposed_dt,IF(strip_proposed_dt LIKE '2020%','Assigned','NOT') AS ASSnFlag,igm_detail_container.off_dock_id,igm_details.Remarks
				FROM igm_detail_container
				INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id
				INNER JOIN lyingData01 ON lyingData01.id=igm_detail_container.cont_number
				LEFT JOIN igm_supplimentary_detail ON igm_supplimentary_detail.igm_detail_id=igm_details.id

				WHERE igm_detail_container.cont_un='' AND igm_details.BL_No NOT IN (SELECT DISTINCT BL FROM lyingAssignmentBL01 )

				UNION 

				SELECT DISTINCT igm_sup_detail_container.cont_number ,igm_supplimentary_detail.Import_Rotation_No,'Suppliment IGM' AS SupFlag,igm_sup_detail_container.cont_imo,igm_sup_detail_container.cont_un,
				(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=lyingData01.rotation ) AS Vessel_Name,
				(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,

				igm_supplimentary_detail.BL_No,igm_sup_detail_container.Cont_gross_weight AS weight,igm_supplimentary_detail.Description_of_Goods,igm_supplimentary_detail.Notify_code,
				igm_supplimentary_detail.Notify_name, igm_supplimentary_detail.Notify_address,location,terminal,size,IF(size=20,1,2) AS TEUs,freight_kind,
				dest,igm_sup_detail_container.cont_seal_number,strip_proposed_dt,IF(strip_proposed_dt LIKE '2020%','Assigned','NOT') AS ASSnFlag,
				igm_sup_detail_container.off_dock_id,igm_supplimentary_detail.Remarks
				FROM igm_sup_detail_container
				INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id
				INNER JOIN lyingData01 ON lyingData01.id=igm_sup_detail_container.cont_number
				LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_supplimentary_detail.igm_detail_id

				WHERE igm_sup_detail_container.cont_un='' AND igm_supplimentary_detail.BL_No NOT IN (SELECT DISTINCT BL FROM lyingAssignmentBL01 )

				) AS a
				WHERE Supflag!='Assigned' AND off_dock_id=2591

				) AS b
				WHERE Import_Rotation_No='$rot_no'
				AND Remarks NOT LIKE '%ROB%' AND BL NOT IN (
				SELECT DISTINCT BL FROM lyingAssignmentBL01
				)
				ORDER BY 1,2
				) AS c";
				$resBoxTeus = $this->bm->dataSelectDb1($strBoxTeus);
				$box = $resBoxTeus[0]["box"];
				$teus = $resBoxTeus[0]["teus"];
				$data['rot_no'] = $rot_no;       
				$data['vesName'] = $vesName;       
				$data['box'] = $box;       
				$data['teus'] = $teus;       
				$data['offDockNme'] = $offDockNme; 
				$data['resShowData'] = $resShowUpdate; 
				if($fileType=='xl')
				{
					$this->load->view('offDockReportActionView',$data);
				}
				else
				{
					$this->load->view('offDockReportActionViewHtml',$data);
				}
			}
			else if($btnAction=="Update Destination")
			{

				$msg="";
				$resCnt = 0;
				for($u=0;$u<count($resShowUpdate);$u++)
				{
					$cont = $resShowUpdate[$u]["cont_number"];
					
					$strUpDtl = "UPDATE igm_detail_container 
					INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id
					SET off_dock_id='$offdock_id',Port_Status='5',cont_location_code='$offdock_id',login_id='$login_id',igm_detail_container.last_update=now()
					WHERE igm_details.Import_Rotation_No='$rot_no' AND igm_detail_container.cont_number='$cont'";
					//echo "<hr>";
					$strUpSup = "UPDATE igm_sup_detail_container 
					INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id
					SET off_dock_id='$offdock_id',Port_Status='5',cont_location_code='$offdock_id',login_id='$login_id',igm_sup_detail_container.last_update=now()
					WHERE igm_supplimentary_detail.Import_Rotation_No='$rot_no' AND igm_sup_detail_container.cont_number='$cont'";
					
					$resUpDtl = $this->bm->dataUpdateDB1($strUpDtl);
					$resUpSup = $this->bm->dataUpdateDB1($strUpSup);
					
					if($resUpDtl or $resUpSup)
						$resCnt++;
				}
				 
					
				if($resCnt>0)
				{
					$msg="Destination Changed.";
				}
				else
				{
					$msg="Not Updated.";

				}
				$data['msg']=$msg; 
				$data['title']="IGM DESTINATION CHANGE TO OFFDOCK";				
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('offDockReportForm',$data);
				$this->load->view('jsAssets');
			}
		}
			
	}
	//2020-04-24 - Last 24 Hours CPA TO OFFDOCK removal - start	
	
	function last24HrsCPAToOffdockRemovalForm()				// 2020-06-10
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="Last 24 Hours CPA TO OFFDOCK removal";						
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('last24HrsCPAToOffdockRemovalForm',$data);
			$this->load->view('jsAssets');
		}
	}
	

	
	function last24HrsCPAToOffdockRemovalReport()
	{						
		$reportType=$this->input->post('reportType');
		$groupBy=$this->input->post('groupBy');
		$removalFromDate=$this->input->post('removalFromDate');
		$removalFromTime=$this->input->post('removalFromTime');
		$removalToDate=$this->input->post('removalToDate');
		$removalToTime=$this->input->post('removalToTime');
		$fileOptions=$this->input->post('fileOptions');
		$sumOrDtlOpt=$this->input->post('sumOrDtlOpt');
		
		if($groupBy=="vessel")
		//before
		
		 $cond = " GROUP BY vslName,destination,rot ORDER BY vslName";
		else
		
		$cond = " GROUP BY vslName,destination,rot ORDER BY destination";

		if($reportType=="remark")
			$cond = " WHERE remark='CPA TO OFFDOCK' OR sparcs_note='CPA TO OFFDOCK'";
		
		if($sumOrDtlOpt=="summary")
		{
			

			$sql_last24HrsCPAToOffdockRemoval="SELECT vslName,rot,destination,
			SUM(c20) AS c20,SUM(c40) AS c40,(SUM(c20)+SUM(c40)) AS totbox,(SUM(c20)+SUM(c40)*2) AS totteus
			From (
			SELECT tbl.*,
			(Case
			when siz='20' then '1'
			else '0'
			END) as c20,
			
			(Case
			when siz!='20' then '1'
			else '0'
			END) as c40
			
			FROM(
			SELECT inv_unit.id,vsl_vessels.name AS vslName,vsl_vessel_visit_details.ib_vyg AS rot, inv_goods.destination,
			(SELECT SUBSTR(ref_equip_type.nominal_length,-2) FROM ref_equip_type 
			INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey 
			INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey 
			INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey = inv_unit.gkey
			WHERE inv_unit_fcy_visit.unit_gkey=inv_unit.gkey fetch first 1 rows only
			 ) AS siz,
			UPPER(inv_unit.remark) AS remark,UPPER(inv_unit_fcy_visit.sparcs_note) AS sparcs_note			
			FROM inv_unit 
			INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey 
			INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv 
			INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey 
			INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey 
			INNER JOIN inv_goods ON inv_goods.gkey=inv_unit.goods 
			INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=inv_unit.line_op
			INNER JOIN road_truck_transactions ON road_truck_transactions.unit_gkey=inv_unit.gkey
			INNER JOIN road_truck_visit_details ON road_truck_visit_details.tvdtls_gkey=road_truck_transactions.truck_visit_gkey
			WHERE inv_unit_fcy_visit.time_load BETWEEN to_date(CONCAT('$removalFromDate',' $removalFromTime'),'YYYY-MM-DD HH24-MI-SS') 
			AND to_date(CONCAT('$removalToDate',' $removalToTime'),'YYYY-MM-DD HH24-MI-SS')  
			AND inv_goods.destination NOT IN('2591','2592','BDCGP')
			AND inv_goods.destination IS NOT NULL AND road_truck_transactions.status !='CANCEL'
			)  tbl)tbl2".$cond;
			
			
			$rslt_last24HrsCPAToOffdockRemoval=$this->bm->dataSelect($sql_last24HrsCPAToOffdockRemoval);
			
			if($fileOptions=="html")
			{			
				$data['title']="Last 24 Hours CPA TO OFFDOCK removal";	
				$data['groupBy']=$groupBy;	
				$data['removalFromDate']=$removalFromDate;
				$data['removalToDate']=$removalToDate;
				$data['rslt_last24HrsCPAToOffdockRemoval']=$rslt_last24HrsCPAToOffdockRemoval;
				
				$this->load->view('last24HrsCPAToOffdockRemovalReport',$data);					
			}
			else if($fileOptions=="pdf")
			{
				$this->load->library('m_pdf');
				//$mpdf->use_kwt = true;
				
				$this->data['title']="Last 24 Hours CPA TO OFFDOCK removal";
				$this->data['groupBy']=$groupBy;
				$this->data['removalFromDate']=$removalFromDate;
				$this->data['removalToDate']=$removalToDate;
				$this->data['rslt_last24HrsCPAToOffdockRemoval']=$rslt_last24HrsCPAToOffdockRemoval;

				$html=$this->load->view('last24HrsCPAToOffdockRemovalReport',$this->data, true); 
				$pdfFilePath ="last24HrsCPAToOffdockRemovalReport-".time()."-download.pdf";

				$pdf = $this->m_pdf->load();
				//$pdf->SetWatermarkText('CPA CTMS');
				$pdf->showWatermarkText = true;		
				//$stylesheet = file_get_contents('resources/styles/test.css'); // external css
				//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO}|Date {DATE j-m-Y}');
				$pdf->WriteHTML($html,2);
				$pdf->Output($pdfFilePath, "I"); // For Show Pdf	
			}
		}
		else if($sumOrDtlOpt=="detail")
		{		
			$condi = " ORDER BY vslName";
			
		 if($groupBy=='vessel')
			$condi = " ORDER BY vslName";	
		 if($groupBy=='offdock')
			$condi = " ORDER BY offdock";	
		
		 if($reportType=="remark" && $groupBy=='vessel')
			$condi = " WHERE remark='CPA TO OFFDOCK' OR sparcs_note='CPA TO OFFDOCK' ORDER BY vslName";	
		
		 if($reportType=="remark" && $groupBy=='offdock')
			$condi = " WHERE remark='CPA TO OFFDOCK' OR sparcs_note='CPA TO OFFDOCK' ORDER BY vslName";	
		
		
		
			
			$sql_last24HrsCPAToOffdockRemovalDetail="SELECT tbl.*,
			(Case
			when siz='20' then '1'
			else '0'
			END) as c20,
			
			(Case
			when siz!='20' then '1'
			else '0'
			END) as c40
			FROM(
			SELECT inv_unit.id,vsl_vessels.name AS vslName,vsl_vessel_visit_details.ib_vyg AS rot, inv_goods.destination, 
			(SELECT SUBSTR(ref_equip_type.nominal_length,-2)
			FROM ref_equip_type
			INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
			INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
			INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey= inv_unit.gkey
			WHERE inv_unit_fcy_visit.unit_gkey=inv_unit.gkey fetch first 1 rows only ) AS siz,
			UPPER(inv_unit.remark) AS remark,UPPER(inv_unit_fcy_visit.sparcs_note) AS sparcs_note,inv_unit_fcy_visit.time_load,road_gates.description AS gate
			FROM inv_unit
			INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
			INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
			INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
			INNER JOIN inv_goods ON inv_goods.gkey=inv_unit.goods
			INNER JOIN ref_bizunit_scoped ON ref_bizunit_scoped.gkey=inv_unit.line_op
			INNER JOIN road_truck_transactions ON road_truck_transactions.unit_gkey=inv_unit.gkey
			INNER JOIN road_truck_visit_details ON road_truck_visit_details.tvdtls_gkey=road_truck_transactions.truck_visit_gkey
			INNER JOIN road_gates ON road_gates.gkey=road_truck_visit_details.gate_gkey
			WHERE inv_unit_fcy_visit.time_load BETWEEN to_date(CONCAT('$removalFromDate',' $removalFromTime'),'YYYY-MM-DD HH24-MI-SS') AND to_date(CONCAT('$removalToDate',' $removalToTime'),'YYYY-MM-DD HH24-MI-SS')
			AND inv_goods.destination NOT IN('2591','2592','BDCGP') AND inv_goods.destination IS NOT NULL 
			AND road_truck_transactions.status !='CANCEL'
			 )  tbl".$condi;
			$rslt_last24HrsCPAToOffdockRemovalDetail=$this->bm->dataSelect($sql_last24HrsCPAToOffdockRemovalDetail);
			
			if($fileOptions=="html")
			{			
				$data['title']="Last 24 Hours CPA TO OFFDOCK removal detail";	
				$data['groupBy']=$groupBy;	




				$data['removalFromDate']=$removalFromDate;
				$data['removalToDate']=$removalToDate;
				$data['rslt_last24HrsCPAToOffdockRemovalDetail']=$rslt_last24HrsCPAToOffdockRemovalDetail;
				
				$this->load->view('last24HrsCPAToOffdockRemovalReportDetail',$data);					
			}
			else if($fileOptions=="pdf")
			{
				$this->load->library('m_pdf');
				//$mpdf->use_kwt = true;
				
				$this->data['title']="Last 24 Hours CPA TO OFFDOCK removal";
				$this->data['groupBy']=$groupBy;
				$this->data['removalFromDate']=$removalFromDate;
				$this->data['removalToDate']=$removalToDate;
				$this->data['rslt_last24HrsCPAToOffdockRemovalDetail']=$rslt_last24HrsCPAToOffdockRemovalDetail;

				$html=$this->load->view('last24HrsCPAToOffdockRemovalReportDetail',$this->data, true); 
				$pdfFilePath ="last24HrsCPAToOffdockRemovalReportDetail-".time()."-download.pdf";

				$pdf = $this->m_pdf->load();
				//$pdf->SetWatermarkText('CPA CTMS');
				$pdf->showWatermarkText = true;		
				//$stylesheet = file_get_contents('resources/styles/test.css'); // external css
				//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO}|Date {DATE j-m-Y}');
				$pdf->WriteHTML($html,2);
				$pdf->Output($pdfFilePath, "I"); // For Show Pdf	
			}
		}
	}
	
	//last45DayslyingReport Start 
	function last45DayslyingReportLink()			// 2020-06-10
    {
        $session_id = $this->session->userdata('value');
        $LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
        {
            $this->logout();

        }
        else
        {
            $data['msg']="";
            $data['title']="LAST 45 DAYS LYING FOOD ITEMS REPORT ...";
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('last45DaysLyingReportForm',$data);
			$this->load->view('jsAssets');
        }
    }

	function get45DaysLyingReportSummaryAction()		// 2020-06-10
    {
    	$options =$this->input->post('options');
		$submit =$this->input->post('submit');	

		if($submit=='Summary')
		{
			$date = date('Y-M-d');
			$data['date'] = $date;

            $goodsQuery ="SELECT goodsName,SUM(c20) AS c20,SUM(c40) AS c40I,SUM(teus) AS teus,SUM(mton) AS mton
			FROM (
			SELECT DISTINCT cont_number,Import_Rotation_No,cont_size,
			(CASE
			WHEN Description_of_Goods LIKE '%Apple%' OR Description_of_Goods LIKE '%apple%' OR Description_of_Goods LIKE '%APPLE%' THEN 'Apple'
			WHEN Description_of_Goods LIKE '%Orange%' OR Description_of_Goods LIKE '%orange%' OR Description_of_Goods LIKE '%ORANGE%' THEN 'Orange'
			WHEN Description_of_Goods LIKE '%Grapes%' OR Description_of_Goods LIKE '%grapes%' OR Description_of_Goods LIKE '%GRAPES%' THEN 'Grapes'
			WHEN Description_of_Goods LIKE '%Pears%' OR Description_of_Goods LIKE '%pears%' OR Description_of_Goods LIKE '%PEARS%' THEN 'Pears'
			WHEN Description_of_Goods LIKE '%Dates%' OR Description_of_Goods LIKE '%dates%' OR Description_of_Goods LIKE '%DATES%' THEN 'Dates'
			WHEN Description_of_Goods LIKE '%Sugar%' OR Description_of_Goods LIKE '%sugar%' OR Description_of_Goods LIKE '%SUGAR%' THEN 'Sugar'
			WHEN Description_of_Goods LIKE '%Mandarin%' OR Description_of_Goods LIKE '%mandarin%' OR Description_of_Goods LIKE '%MANDARIN%' THEN 'Mandarin'
			WHEN Description_of_Goods LIKE '%Chick Peas%' OR Description_of_Goods LIKE '%chick peas%' OR Description_of_Goods LIKE '%CHICK PEAS%' THEN 'Chick Peas'
			WHEN Description_of_Goods LIKE '%Ginger%' OR Description_of_Goods LIKE '%ginger%' OR Description_of_Goods LIKE '%GINGER%' THEN 'Ginger'
			WHEN Description_of_Goods LIKE '%Garlic%' OR Description_of_Goods LIKE '%garlic%' OR Description_of_Goods LIKE '%GARLIC%' THEN 'Garlic'
			WHEN Description_of_Goods LIKE '%Onion%' OR Description_of_Goods LIKE '%onion%' OR Description_of_Goods LIKE '%ONION%' THEN 'Onion'
			ELSE ''
			END) AS goodsName,
			Description_of_Goods,
			IF(cont_size=20,1,0) AS c20,IF(cont_size!=20,1,0) AS c40,IF(cont_size=20,1,2) AS teus,mton
			FROM (
			SELECT cont_number,Import_Rotation_No,cont_size,Description_of_Goods,(igm_detail_container.cont_gross_weight/1000) AS mton
			FROM igm_details
			INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
			WHERE (
			igm_details.Description_of_Goods LIKE '%Apple%' 
			OR igm_details.Description_of_Goods LIKE '%apple%' 
			OR igm_details.Description_of_Goods LIKE '%APPLE%'
			OR igm_details.Description_of_Goods LIKE '%Orange%' 
			OR igm_details.Description_of_Goods LIKE '%orange%' 
			OR igm_details.Description_of_Goods LIKE '%ORANGE%'
			OR igm_details.Description_of_Goods LIKE '%Grapes%' 
			OR igm_details.Description_of_Goods LIKE '%grapes%' 
			OR igm_details.Description_of_Goods LIKE '%GRAPES%'
			OR igm_details.Description_of_Goods LIKE '%Pears%' 
			OR igm_details.Description_of_Goods LIKE '%pears%' 
			OR igm_details.Description_of_Goods LIKE '%PEARS%'
			OR igm_details.Description_of_Goods LIKE '%Dates%' 
			OR igm_details.Description_of_Goods LIKE '%dates%' 
			OR igm_details.Description_of_Goods LIKE '%DATES%'
			OR igm_details.Description_of_Goods LIKE '%Sugar%' 
			OR igm_details.Description_of_Goods LIKE '%sugar%' 
			OR igm_details.Description_of_Goods LIKE '%SUGAR%'
			OR igm_details.Description_of_Goods LIKE '%Mandarin%' 
			OR igm_details.Description_of_Goods LIKE '%mandarin%' 
			OR igm_details.Description_of_Goods LIKE '%MANDARIN%'
			OR igm_details.Description_of_Goods LIKE '%Chick Peas%' 
			OR igm_details.Description_of_Goods LIKE '%chick peas%' 
			OR igm_details.Description_of_Goods LIKE '%CHICK PEAS%'
			OR igm_details.Description_of_Goods LIKE '%Ginger%'
			OR igm_details.Description_of_Goods LIKE '%ginger%'
			OR igm_details.Description_of_Goods LIKE '%GINGER%'
			OR igm_details.Description_of_Goods LIKE '%Garlic%'
			OR igm_details.Description_of_Goods LIKE '%garlic%'
			OR igm_details.Description_of_Goods LIKE '%GARLIC%'
			OR igm_details.Description_of_Goods LIKE '%Onion%'
			OR igm_details.Description_of_Goods LIKE '%onion%'
			OR igm_details.Description_of_Goods LIKE '%ONION%'
			) AND igm_detail_container.cont_number IN(SELECT DISTINCT id FROM yard_lying_info)
			AND Import_Rotation_No IN (SELECT DISTINCT rotation FROM yard_lying_info)
			UNION ALL
			SELECT cont_number,Import_Rotation_No,cont_size,Description_of_Goods,(igm_sup_detail_container.cont_gross_weight/1000) AS mton
			FROM igm_supplimentary_detail
			INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
			WHERE (Notify_code NOT LIKE '301' OR Notify_code NOT LIKE '101') 
			AND (
			igm_supplimentary_detail.Description_of_Goods LIKE '%Apple%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%apple%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%APPLE%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Orange%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%orange%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%ORANGE%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Grapes%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%grapes%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%GRAPES%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Pears%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%pears%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%PEARS%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Dates%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%dates%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%DATES%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Sugar%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%sugar%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%SUGAR%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Mandarin%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%mandarin%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%MANDARIN%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Chick Peas%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%chick peas%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%CHICK PEAS%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Ginger%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%ginger%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%GINGER%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Garlic%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%garlic%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%GARLIC%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Onion%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%onion%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%ONION%'
			) AND igm_sup_detail_container.cont_number IN(SELECT DISTINCT id FROM yard_lying_info)
			AND Import_Rotation_No IN (SELECT DISTINCT rotation FROM yard_lying_info)
			) AS tbl
			) AS fnl GROUP BY goodsName 
			ORDER BY goodsName";
			$goodsResult = $this->bm->dataSelectDb1($goodsQuery);

			$data['goodsResult'] = $goodsResult;
			$data['options'] = $options;
			$this->load->view('last45DaysLyingSummaryReport',$data);
		}
		else
		{
			$date = date('Y-M-d');
			$data['date'] = $date;

			$goodsQuery ="SELECT goodsName,cont_number,Import_Rotation_No,cont_size,Description_of_Goods,Notify_code,Notify_name,Notify_address
			FROM (
			SELECT DISTINCT cont_number,Import_Rotation_No,cont_size,
			(CASE
			WHEN Description_of_Goods LIKE '%Apple%' OR Description_of_Goods LIKE '%apple%' OR Description_of_Goods LIKE '%APPLE%' THEN 'Apple'
			WHEN Description_of_Goods LIKE '%Orange%' OR Description_of_Goods LIKE '%orange%' OR Description_of_Goods LIKE '%ORANGE%' THEN 'Orange'
			WHEN Description_of_Goods LIKE '%Grapes%' OR Description_of_Goods LIKE '%grapes%' OR Description_of_Goods LIKE '%GRAPES%' THEN 'Grapes'
			WHEN Description_of_Goods LIKE '%Pears%' OR Description_of_Goods LIKE '%pears%' OR Description_of_Goods LIKE '%PEARS%' THEN 'Pears'
			WHEN Description_of_Goods LIKE '%Dates%' OR Description_of_Goods LIKE '%dates%' OR Description_of_Goods LIKE '%DATES%' THEN 'Dates'
			WHEN Description_of_Goods LIKE '%Sugar%' OR Description_of_Goods LIKE '%sugar%' OR Description_of_Goods LIKE '%SUGAR%' THEN 'Sugar'
			WHEN Description_of_Goods LIKE '%Mandarin%' OR Description_of_Goods LIKE '%mandarin%' OR Description_of_Goods LIKE '%MANDARIN%' THEN 'Mandarin'
			WHEN Description_of_Goods LIKE '%Chick Peas%' OR Description_of_Goods LIKE '%chick peas%' OR Description_of_Goods LIKE '%CHICK PEAS%' THEN 'Chick Peas'
			WHEN Description_of_Goods LIKE '%Ginger%' OR Description_of_Goods LIKE '%ginger%' OR Description_of_Goods LIKE '%GINGER%' THEN 'Ginger'
			WHEN Description_of_Goods LIKE '%Garlic%' OR Description_of_Goods LIKE '%garlic%' OR Description_of_Goods LIKE '%GARLIC%' THEN 'Garlic'
			WHEN Description_of_Goods LIKE '%Onion%' OR Description_of_Goods LIKE '%onion%' OR Description_of_Goods LIKE '%ONION%' THEN 'Onion'
			ELSE ''
			END) AS goodsName,
			Description_of_Goods,Notify_code,Notify_name,Notify_address
			FROM (
			SELECT cont_number,Import_Rotation_No,cont_size,Description_of_Goods,Notify_code,Notify_name,Notify_address
			FROM igm_details
			INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
			WHERE (
			igm_details.Description_of_Goods LIKE '%Apple%' 
			OR igm_details.Description_of_Goods LIKE '%apple%' 
			OR igm_details.Description_of_Goods LIKE '%APPLE%'
			OR igm_details.Description_of_Goods LIKE '%Orange%' 
			OR igm_details.Description_of_Goods LIKE '%orange%' 
			OR igm_details.Description_of_Goods LIKE '%ORANGE%'
			OR igm_details.Description_of_Goods LIKE '%Grapes%' 
			OR igm_details.Description_of_Goods LIKE '%grapes%' 
			OR igm_details.Description_of_Goods LIKE '%GRAPES%'
			OR igm_details.Description_of_Goods LIKE '%Pears%' 
			OR igm_details.Description_of_Goods LIKE '%pears%' 
			OR igm_details.Description_of_Goods LIKE '%PEARS%'
			OR igm_details.Description_of_Goods LIKE '%Dates%' 
			OR igm_details.Description_of_Goods LIKE '%dates%' 
			OR igm_details.Description_of_Goods LIKE '%DATES%'
			OR igm_details.Description_of_Goods LIKE '%Sugar%' 
			OR igm_details.Description_of_Goods LIKE '%sugar%' 
			OR igm_details.Description_of_Goods LIKE '%SUGAR%'
			OR igm_details.Description_of_Goods LIKE '%Mandarin%' 
			OR igm_details.Description_of_Goods LIKE '%mandarin%' 
			OR igm_details.Description_of_Goods LIKE '%MANDARIN%'
			OR igm_details.Description_of_Goods LIKE '%Chick Peas%' 
			OR igm_details.Description_of_Goods LIKE '%chick peas%' 
			OR igm_details.Description_of_Goods LIKE '%CHICK PEAS%'
			OR igm_details.Description_of_Goods LIKE '%Ginger%'
			OR igm_details.Description_of_Goods LIKE '%ginger%'
			OR igm_details.Description_of_Goods LIKE '%GINGER%'
			OR igm_details.Description_of_Goods LIKE '%Garlic%'
			OR igm_details.Description_of_Goods LIKE '%garlic%'
			OR igm_details.Description_of_Goods LIKE '%GARLIC%'
			OR igm_details.Description_of_Goods LIKE '%Onion%'
			OR igm_details.Description_of_Goods LIKE '%onion%'
			OR igm_details.Description_of_Goods LIKE '%ONION%'
			) AND igm_detail_container.cont_number IN(SELECT DISTINCT id FROM yard_lying_info)
			AND Import_Rotation_No IN (SELECT DISTINCT rotation FROM yard_lying_info)
			UNION ALL

			SELECT cont_number,Import_Rotation_No,cont_size,Description_of_Goods,Notify_code,Notify_name,Notify_address
			FROM igm_supplimentary_detail
			INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
			WHERE (Notify_code NOT LIKE '301' OR Notify_code NOT LIKE '101') 
			AND (
			igm_supplimentary_detail.Description_of_Goods LIKE '%Apple%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%apple%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%APPLE%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Orange%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%orange%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%ORANGE%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Grapes%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%grapes%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%GRAPES%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Pears%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%pears%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%PEARS%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Dates%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%dates%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%DATES%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Sugar%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%sugar%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%SUGAR%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Mandarin%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%mandarin%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%MANDARIN%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Chick Peas%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%chick peas%' 
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%CHICK PEAS%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Ginger%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%ginger%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%GINGER%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Garlic%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%garlic%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%GARLIC%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%Onion%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%onion%'
			OR igm_supplimentary_detail.Description_of_Goods LIKE '%ONION%'
			) AND igm_sup_detail_container.cont_number IN(SELECT DISTINCT id FROM yard_lying_info)
			AND Import_Rotation_No IN (SELECT DISTINCT rotation FROM yard_lying_info)
			) AS tbl
			) AS fnl ORDER BY goodsName";
            $goodsResult = $this->bm->dataSelectDb1($goodsQuery);

			$data['goodsResult'] = $goodsResult;
			$data['options'] = $options;
			$this->load->view('last45DaysLyingDetailsReport',$data);        
		}
    }
	
	// Garments Item Lying and Delivery Information - start
	function garmentsItemLyingAndDeliveryInfoForm()			// 2020-06-10
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$title="Garments Item Lying and Delivery Information";
			$msg="";			
			
			$data['title']=$title;
			$data['msg']=$msg;						
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('garmentsItemLyingAndDeliveryInfoForm',$data);
			$this->load->view('jsAssets');

		}
	}
	
	function garmentsItemLyingAndDeliveryInfoAction()			// 2020-06-10
	{
		$title="Garments Item Lying and Delivery Information";
		$rotNum="";
		
		$reportType=$this->input->post('reportType');
		
		if($reportType=="giveRot")			
			$rotNum=$this->input->post('rotNum');
		
		$garmentsFromDate=$this->input->post('garmentsFromDate');
		$garmentsToDate=$this->input->post('garmentsToDate');		
		$lyingOrDlv=$this->input->post('lyingOrDlv');		
		$sumOrDtlOpt=$this->input->post('sumOrDtlOpt');		
		$viewType=$this->input->post('viewType');

		$data['title']=$title;
		$data['garmentsFromDate']=$garmentsFromDate;
		$data['garmentsToDate']=$garmentsToDate;
		
		if($lyingOrDlv=="lying")
		{
			if($sumOrDtlOpt=="summary")
			{	
				$sql_lyingSummary="SELECT Vessel_Name,Import_Rotation_No,cont_number,COUNT(size) AS Box,SUM(TEUs) AS TEUs
				FROM (
				SELECT DISTINCT Vessel_Name,Import_Rotation_No,cont_number,size, TEUs 
				FROM (
				SELECT DISTINCT cont_number ,igm_details.Import_Rotation_No,IF(igm_supplimentary_detail.igm_detail_id IS NULL ,'main','Assigned') AS SupFlag,
				(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=yard_lying_info.rotation ) AS Vessel_Name,
				(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,

				igm_details.BL_No,igm_details.weight,igm_details.Description_of_Goods,igm_details.Notify_code, igm_details.Notify_name, 
				igm_details.Notify_address,
				location,terminal,igm_detail_container.cont_size AS size,IF(igm_detail_container.cont_size=20,1,2) AS TEUs
				FROM igm_detail_container
				INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id 
				INNER JOIN yard_lying_info ON yard_lying_info.id=igm_detail_container.cont_number AND igm_details.Import_Rotation_No=yard_lying_info.rotation
				LEFT JOIN igm_supplimentary_detail ON igm_supplimentary_detail.igm_detail_id=igm_details.id

				UNION 

				SELECT DISTINCT igm_sup_detail_container.cont_number ,igm_supplimentary_detail.Import_Rotation_No,'Suppliment' AS SupFlag,
				(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=yard_lying_info.rotation ) AS Vessel_Name,
				(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,
				igm_supplimentary_detail.BL_No,igm_supplimentary_detail.weight,igm_supplimentary_detail.Description_of_Goods,igm_supplimentary_detail.Notify_code,
				igm_supplimentary_detail.Notify_name, igm_supplimentary_detail.Notify_address,location,terminal,igm_sup_detail_container.cont_size AS size,
				IF(igm_sup_detail_container.cont_size=20,1,2) AS TEUs
				FROM igm_sup_detail_container
				INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id
				INNER JOIN yard_lying_info ON yard_lying_info.id=igm_sup_detail_container.cont_number AND igm_supplimentary_detail.Import_Rotation_No=yard_lying_info.rotation
				LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_supplimentary_detail.igm_detail_id
				) AS a
				WHERE Supflag!='Assigned'
				AND ( 
				UCASE(Description_of_Goods) LIKE UCASE('%FAB%') 
				OR UCASE(Description_of_Goods) LIKE UCASE('%YARN%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%APPAR%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%GARM%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%DYEING%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%CLOTH%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%KNIT%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%DENIM%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%THREAD%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%MECH%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%VISCOSE%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%POLYESTER%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%EXPORT%ORIENTED%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%textile%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Finishing%agent%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Oven%interlin%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Dyes%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Taffeta%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%soda%ash%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Chemical%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%cotton%')
				)
				) AS b
				WHERE Import_Rotation_No IN (SELECT DISTINCT rotation FROM yard_lying_info WHERE DATE(discharge_dt) BETWEEN '$garmentsFromDate' AND 
				'$garmentsToDate')
				GROUP BY 1,2
				ORDER BY 1,2";
				
				if($reportType=="giveRot")
				{
					$sql_lyingSummary="SELECT * FROM(".$sql_lyingSummary.") AS tbl WHERE Import_Rotation_No='$rotNum'";
				}
				
				$rslt_lyingSummary=$this->bm->dataSelectDb1($sql_lyingSummary);
				//echo $sql_lyingSummary;
				//return;				
				$data['heading']="Garments Item Lying Summary";
				$data['rslt_lyingSummary']=$rslt_lyingSummary;
				
				if($viewType=="html")
					$this->load->view('garmentsItemLyingSummaryReport',$data);
				else if($viewType=="excel")
					$this->load->view('garmentsItemLyingSummaryReportExcel',$data);
			}																							// lying summary end
			else if($sumOrDtlOpt=="detail")
			{
				$sql_lyingDetail="SELECT * FROM (
				SELECT DISTINCT Vessel_Name,Import_Rotation_No,discharge_dt,cont_number,SupFlag,TRIM(BL_No) AS BL,weight,Commodity,Description_of_Goods,CONCAT(Notify_code,' ',  Notify_name,' ', Notify_address) AS Importer, location,terminal,size, 
				TEUs,d 
				FROM (
				SELECT DISTINCT cont_number,igm_details.Import_Rotation_No, discharge_dt,IF(igm_supplimentary_detail.igm_detail_id IS NULL ,'Main IGM','Assigned') AS SupFlag,
				(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=yard_lying_info.rotation ) AS Vessel_Name,
				(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,
				igm_details.BL_No,igm_details.weight,igm_details.Description_of_Goods,igm_details.Notify_code, igm_details.Notify_name, 
				igm_details.Notify_address,
				location,terminal,igm_detail_container.cont_size AS size,IF(igm_detail_container.cont_size=20,1,2) AS TEUs,
				TIMESTAMPDIFF(HOUR,yard_lying_info.discharge_dt,NOW()) AS hr,
				CONCAT((SELECT FLOOR(hr/24)),' Days ',(SELECT hr%24),' Hrs') AS d
				FROM igm_detail_container
				INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id
				INNER JOIN yard_lying_info ON yard_lying_info.id=igm_detail_container.cont_number AND igm_details.Import_Rotation_No=yard_lying_info.rotation
				LEFT JOIN igm_supplimentary_detail ON igm_supplimentary_detail.igm_detail_id=igm_details.id

				UNION 

				SELECT DISTINCT igm_sup_detail_container.cont_number,igm_supplimentary_detail.Import_Rotation_No,discharge_dt,'Suppliment IGM' AS SupFlag,
				(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=yard_lying_info.rotation ) AS Vessel_Name,
				(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,
				igm_supplimentary_detail.BL_No,igm_supplimentary_detail.weight,igm_supplimentary_detail.Description_of_Goods,igm_supplimentary_detail.Notify_code,
				igm_supplimentary_detail.Notify_name, igm_supplimentary_detail.Notify_address,location,terminal,igm_sup_detail_container.cont_size AS size,
				IF(igm_sup_detail_container.cont_size=20,1,2) AS TEUs,
				TIMESTAMPDIFF(HOUR,yard_lying_info.discharge_dt,NOW()) AS hr,
				CONCAT((SELECT FLOOR(hr/24)),' Days ',(SELECT hr%24),' Hrs') AS d
				FROM igm_sup_detail_container
				INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id
				INNER JOIN yard_lying_info ON yard_lying_info.id=igm_sup_detail_container.cont_number AND igm_supplimentary_detail.Import_Rotation_No=yard_lying_info.rotation
				LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_supplimentary_detail.igm_detail_id
				) AS a
				WHERE Supflag!='Assigned'
				AND (
				UCASE(Description_of_Goods) LIKE UCASE('%FAB%') 
				OR UCASE(Description_of_Goods) LIKE UCASE('%YARN%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%APPAR%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%GARM%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%DYEING%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%CLOTH%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%KNIT%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%DENIM%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%THREAD%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%MECH%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%VISCOSE%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%POLYESTER%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%EXPORT%ORIENTED%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%textile%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Finishing%agent%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Oven%interlin%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Dyes%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Taffeta%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%soda%ash%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Chemical%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%cotton%')
				)
				) AS b
				WHERE Import_Rotation_No IN (SELECT DISTINCT rotation FROM yard_lying_info WHERE DATE(discharge_dt) BETWEEN '$garmentsFromDate' AND '$garmentsToDate')
				ORDER BY 1,2,3";
				//return;
				if($reportType=="giveRot")
				{
					$sql_lyingDetail="SELECT * FROM(".$sql_lyingDetail.") AS tbl WHERE Import_Rotation_No='$rotNum'";
				}
							//echo $sql_lyingDetail;
				//return;
				$rslt_lyingDetail=$this->bm->dataSelectDb1($sql_lyingDetail);
				
				$data['heading']="Garments Item Lying Detail";
				$data['rslt_lyingDetail']=$rslt_lyingDetail;
				
				if($viewType=="html")
					$this->load->view('garmentsItemLyingDetailReport',$data);
				else if($viewType=="excel")
					$this->load->view('garmentsItemLyingDetailReportExcel',$data);								
			}																									// lying detail
		}	//	if lying
		else if($lyingOrDlv=="delivery")
		{
			if($sumOrDtlOpt=="summary")
			{
				$sql_deliverySummary="SELECT Vessel_Name,Import_Rotation_No,cont_number,COUNT(size) AS Box,SUM(TEUs) AS TEUs
				FROM (
				SELECT DISTINCT Vessel_Name,Import_Rotation_No,cont_number,size, TEUs 
				FROM (
				SELECT DISTINCT cont_number ,igm_details.Import_Rotation_No,IF(igm_supplimentary_detail.igm_detail_id IS NULL ,'main','Assigned') AS SupFlag,
				(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=igm_details.Import_Rotation_No ) AS Vessel_Name,
				(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,

				igm_details.BL_No,igm_details.weight,igm_details.Description_of_Goods,igm_details.Notify_code, igm_details.Notify_name, 
				igm_details.Notify_address,
				igm_detail_container.cont_size AS size,IF(igm_detail_container.cont_size=20,1,2) AS TEUs
				FROM igm_detail_container
				INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id 
				LEFT JOIN igm_supplimentary_detail ON igm_supplimentary_detail.igm_detail_id=igm_details.id
				WHERE DATE(igm_detail_container.Delivery_Status_date) BETWEEN '$garmentsFromDate' AND '$garmentsToDate'

				UNION 

				SELECT DISTINCT igm_sup_detail_container.cont_number ,igm_supplimentary_detail.Import_Rotation_No,'Suppliment' AS SupFlag,
				(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=igm_supplimentary_detail.Import_Rotation_No ) AS Vessel_Name,
				(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,
				igm_supplimentary_detail.BL_No,igm_supplimentary_detail.weight,igm_supplimentary_detail.Description_of_Goods,igm_supplimentary_detail.Notify_code,
				igm_supplimentary_detail.Notify_name, igm_supplimentary_detail.Notify_address,igm_sup_detail_container.cont_size AS size,
				IF(igm_sup_detail_container.cont_size=20,1,2) AS TEUs
				FROM igm_sup_detail_container
				INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id
				LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_supplimentary_detail.igm_detail_id
				WHERE DATE(igm_sup_detail_container.Delivery_Status_date) BETWEEN '$garmentsFromDate' AND '$garmentsToDate'
				) AS a
				WHERE Supflag!='Assigned'
				AND ( 
				UCASE(Description_of_Goods) LIKE UCASE('%FAB%') 
				OR UCASE(Description_of_Goods) LIKE UCASE('%YARN%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%APPAR%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%GARM%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%DYEING%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%CLOTH%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%KNIT%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%DENIM%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%THREAD%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%MECH%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%VISCOSE%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%POLYESTER%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%EXPORT%ORIENTED%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%textile%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Finishing%agent%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Oven%interlin%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Dyes%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Taffeta%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%soda%ash%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Chemical%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%cotton%')
				)
				) AS b
				GROUP BY 1,2
				ORDER BY 1,2";
				
				if($reportType=="giveRot")
				{
					$sql_deliverySummary="SELECT * FROM(".$sql_deliverSummary.") AS tbl WHERE Import_Rotation_No='$rotNum'";
				}
				//echo $sql_deliverySummary;
				//return;
				$rslt_deliverySummary=$this->bm->dataSelectDb1($sql_deliverySummary);
				
				$data['heading']="Garments Item Delivery Summary";
				$data['rslt_deliverySummary']=$rslt_deliverySummary;
				
				if($viewType=="html")
					$this->load->view('garmentsItemDeliverySummaryReport',$data);
				else if($viewType=="excel")
					$this->load->view('garmentsItemDeliverySummaryReportExcel',$data);
			}																									// delivery summary
			else if($sumOrDtlOpt=="detail")
			{
				$sql_deliverDetail="SELECT * FROM (
				SELECT DISTINCT Vessel_Name,Import_Rotation_No,cont_number,SupFlag,TRIM(BL_No) AS BL,weight,Commodity,Description_of_Goods,CONCAT(Notify_code,' ',  Notify_name,' ', Notify_address) AS Importer,size, TEUs 
				FROM (
				SELECT DISTINCT cont_number ,igm_details.Import_Rotation_No,IF(igm_supplimentary_detail.igm_detail_id IS NULL ,'Main IGM','Assigned') AS SupFlag,
				(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=igm_details.Import_Rotation_No ) AS Vessel_Name,
				(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,
				igm_details.BL_No,igm_details.weight,igm_details.Description_of_Goods,igm_details.Notify_code, igm_details.Notify_name, 
				igm_details.Notify_address,
				igm_detail_container.cont_size AS size,IF(igm_detail_container.cont_size=20,1,2) AS TEUs
				FROM igm_detail_container
				INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id
				LEFT JOIN igm_supplimentary_detail ON igm_supplimentary_detail.igm_detail_id=igm_details.id
				WHERE DATE(igm_detail_container.Delivery_Status_date) BETWEEN '$garmentsFromDate' AND '$garmentsToDate'

				UNION 

				SELECT DISTINCT igm_sup_detail_container.cont_number ,igm_supplimentary_detail.Import_Rotation_No,'Suppliment IGM' AS SupFlag,
				(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=igm_supplimentary_detail.Import_Rotation_No ) AS Vessel_Name,
				(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,
				igm_supplimentary_detail.BL_No,igm_supplimentary_detail.weight,igm_supplimentary_detail.Description_of_Goods,igm_supplimentary_detail.Notify_code,
				igm_supplimentary_detail.Notify_name, igm_supplimentary_detail.Notify_address,igm_sup_detail_container.cont_size AS size,
				IF(igm_sup_detail_container.cont_size=20,1,2) AS TEUs
				FROM igm_sup_detail_container
				INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id
				LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_supplimentary_detail.igm_detail_id
				WHERE DATE(igm_sup_detail_container.Delivery_Status_date) BETWEEN '$garmentsFromDate' AND '$garmentsToDate'
				) AS a
				WHERE Supflag!='Assigned'
				AND (
				UCASE(Description_of_Goods) LIKE UCASE('%FAB%') 
				OR UCASE(Description_of_Goods) LIKE UCASE('%YARN%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%APPAR%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%GARM%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%DYEING%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%CLOTH%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%KNIT%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%DENIM%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%THREAD%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%MECH%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%VISCOSE%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%POLYESTER%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%EXPORT%ORIENTED%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%textile%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Finishing%agent%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Oven%interlin%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Dyes%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Taffeta%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%soda%ash%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%Chemical%')
				OR UCASE(Description_of_Goods) LIKE UCASE('%cotton%')
				)
				) AS b
				ORDER BY 1,2,3 ";
				
				if($reportType=="giveRot")
				{
					$sql_deliverDetail="SELECT * FROM(".$sql_deliverDetail.") AS tbl WHERE Import_Rotation_No='$rotNum'";
				}
				//echo $sql_deliverDetail;
				//return;
				$rslt_deliverDetail=$this->bm->dataSelectDb1($sql_deliverDetail);
				
				$data['heading']="Garments Item Delivery Detail";
				$data['rslt_deliverDetail']=$rslt_deliverDetail;
				
				if($viewType=="html")
					$this->load->view('garmentsItemDeliveryDetailReport',$data);
				else if($viewType=="excel")
					$this->load->view('garmentsItemDeliveryDetailReportExcel',$data);
			}																									// deliver detail
		}	// else if deliver
	}
	
	// Garments Item Lying and Delivery Information - end



// Garments Item Lying And Delivery Info Form New -- start


function garmentsItemLyingAndDeliveryInfoFormNew()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$title="Garments Item Lying Information (New)";
			$msg="";			
			
			$data['title']=$title;
			$data['msg']=$msg;						
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('garmentsItemLyingAndDeliveryInfoFormNew',$data);
			$this->load->view('jsAssets');

		}
	}
	
	function garmentsItemLyingAndDeliveryInfoActionNew()
	{
		$title="Garments Item Lying Information";
		
		$garmentsFromDate = $this->input->post('garmentsFromDate');
		$garmentsToDate = $this->input->post('garmentsToDate');		
		$sumOrDtlOpt = $this->input->post('sumOrDtlOpt');
		$lyingMoreDays = $this->input->post('lyingMoreDays');
		$viewType = $this->input->post('viewType');

		$data['title']=$title;
		$data['garmentsFromDate']=$garmentsFromDate;
		$data['garmentsToDate']=$garmentsToDate;
		$data['lyingMoreDays']=$lyingMoreDays;
		
		
		if($sumOrDtlOpt=="summary")
		{	
			 $sql_lyingSummary="SELECT distinct Vessel_Name,Import_Rotation_No,cont_number,COUNT(size) AS Box,SUM(TEUs) AS TEUs, day
			FROM (
			SELECT Vessel_Name,Import_Rotation_No,discharge_dt,cont_number,SupFlag,TRIM(BL_No) AS BL,weight,Commodity,Description_of_Goods,CONCAT(Notify_code,' ',  Notify_name,' ', Notify_address) AS Importer, location,terminal,size, 
			TEUs,d, day
			FROM (
			SELECT DISTINCT cont_number,igm_details.Import_Rotation_No, discharge_dt,IF(igm_supplimentary_detail.igm_detail_id IS NULL ,'Main IGM','Assigned') AS SupFlag,
			(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=yard_lying_info.rotation ) AS Vessel_Name,
			(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,
			igm_details.BL_No,igm_details.weight,igm_details.Description_of_Goods,igm_details.Notify_code, igm_details.Notify_name, 
			igm_details.Notify_address,
			location,terminal,igm_detail_container.cont_size AS size,IF(igm_detail_container.cont_size=20,1,2) AS TEUs,
			TIMESTAMPDIFF(HOUR,yard_lying_info.discharge_dt,NOW()) AS hr,
			(SELECT FLOOR(hr/24)) as day,
			CONCAT((SELECT FLOOR(hr/24)),' Days ',(SELECT hr%24),' Hrs') AS d
			FROM igm_detail_container
			INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id
			INNER JOIN yard_lying_info ON yard_lying_info.id=igm_detail_container.cont_number AND igm_details.Import_Rotation_No=yard_lying_info.rotation
			LEFT JOIN igm_supplimentary_detail ON igm_supplimentary_detail.igm_detail_id=igm_details.id

			UNION 

			SELECT DISTINCT igm_sup_detail_container.cont_number,igm_supplimentary_detail.Import_Rotation_No,discharge_dt,'Suppliment IGM' AS SupFlag,
			(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=yard_lying_info.rotation ) AS Vessel_Name,
			(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,
			igm_supplimentary_detail.BL_No,igm_supplimentary_detail.weight,igm_supplimentary_detail.Description_of_Goods,igm_supplimentary_detail.Notify_code,
			igm_supplimentary_detail.Notify_name, igm_supplimentary_detail.Notify_address,location,terminal,igm_sup_detail_container.cont_size AS size,
			IF(igm_sup_detail_container.cont_size=20,1,2) AS TEUs,
			TIMESTAMPDIFF(HOUR,yard_lying_info.discharge_dt,NOW()) AS hr,
			(SELECT FLOOR(hr/24)) as day,
			CONCAT((SELECT FLOOR(hr/24)),' Days ',(SELECT hr%24),' Hrs') AS d
			FROM igm_sup_detail_container
			INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id
			INNER JOIN yard_lying_info ON yard_lying_info.id=igm_sup_detail_container.cont_number AND igm_supplimentary_detail.Import_Rotation_No=yard_lying_info.rotation
			LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_supplimentary_detail.igm_detail_id
			) AS a
			WHERE Supflag!='Assigned'
			AND (
			UCASE(Description_of_Goods) LIKE UCASE('%FAB%') 
			OR UCASE(Description_of_Goods) LIKE UCASE('%YARN%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%APPAR%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%GARM%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%DYEING%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%CLOTH%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%KNIT%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%DENIM%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%THREAD%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%MECH%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%VISCOSE%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%POLYESTER%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%EXPORT%ORIENTED%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%textile%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%Finishing%agent%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%Oven%interlin%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%Dyes%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%Taffeta%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%soda%ash%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%Chemical%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%cotton%')
			)
			) AS b
			WHERE day>='$lyingMoreDays' AND Import_Rotation_No IN (SELECT DISTINCT rotation FROM yard_lying_info WHERE DATE(discharge_dt) BETWEEN '$garmentsFromDate' AND 
			'$garmentsToDate')
			GROUP BY 1,2
			ORDER BY 1,2";
			//return;
			$rslt_lyingSummary=$this->bm->dataSelectDb1($sql_lyingSummary);
			//echo $sql_lyingSummary;
			//return;				
			$data['heading']="Garments Item Lying Summary";
			$data['rslt_lyingSummary']=$rslt_lyingSummary;
			
			if($viewType=="html")
			{
				$this->load->view('garmentsItemLyingSummaryReport',$data);
				return;
			}
			else if($viewType == "excel")
			{
				$this->load->view('garmentsItemLyingSummaryReportExcel',$data);
				return;
			}else{
				$this->data['title']=$title;
				$this->data['lyingMoreDays']=$lyingMoreDays;
				$this->data['garmentsFromDate']=$garmentsFromDate;
				$this->data['garmentsToDate']=$garmentsToDate;
				$this->data['heading']="Garments Item Lying Summary";
				$this->data['rslt_lyingSummary']=$rslt_lyingSummary;
				$this->load->library('m_pdf');	
				$html=$this->load->view('garmentsItemLyingSummaryReportPdf',$this->data, true); 
				$pdfFilePath ="garmentsItemLyingSummaryReportPdf-".time()."-download.pdf";
				$pdf = $this->m_pdf->load();
				$pdf->useSubstitutions = true; 
				$html = mb_convert_encoding($html, 'UTF-8', 'UTF-8');
				$stylesheet = file_get_contents('assets/stylesheets/test.css');
				$pdf->WriteHTML($stylesheet,1);
				$pdf->WriteHTML($html,2);
				$pdf->Output($pdfFilePath, "I");
				return;
			}
		}																							// lying summary end
		else if($sumOrDtlOpt=="detail")
		{
			$sql_lyingDetail="SELECT * FROM (
			SELECT Vessel_Name,Import_Rotation_No,discharge_dt,cont_number,SupFlag,TRIM(BL_No) AS BL,weight,Commodity,Description_of_Goods,CONCAT(Notify_code,' ',  Notify_name,' ', Notify_address) AS Importer, location,terminal,size, 
			TEUs,d, day
			FROM (
			SELECT DISTINCT cont_number,igm_details.Import_Rotation_No, discharge_dt,IF(igm_supplimentary_detail.igm_detail_id IS NULL ,'Main IGM','Assigned') AS SupFlag,
			(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=yard_lying_info.rotation ) AS Vessel_Name,
			(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,
			igm_details.BL_No,igm_details.weight,igm_details.Description_of_Goods,igm_details.Notify_code, igm_details.Notify_name, 
			igm_details.Notify_address,
			location,terminal,igm_detail_container.cont_size AS size,IF(igm_detail_container.cont_size=20,1,2) AS TEUs,
			TIMESTAMPDIFF(HOUR,yard_lying_info.discharge_dt,NOW()) AS hr,
			(SELECT FLOOR(hr/24)) as day,
			CONCAT((SELECT FLOOR(hr/24)),' Days ',(SELECT hr%24),' Hrs') AS d
			FROM igm_detail_container
			INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id
			INNER JOIN yard_lying_info ON yard_lying_info.id=igm_detail_container.cont_number AND igm_details.Import_Rotation_No=yard_lying_info.rotation
			LEFT JOIN igm_supplimentary_detail ON igm_supplimentary_detail.igm_detail_id=igm_details.id

			UNION 

			SELECT DISTINCT igm_sup_detail_container.cont_number,igm_supplimentary_detail.Import_Rotation_No,discharge_dt,'Suppliment IGM' AS SupFlag,
			(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=yard_lying_info.rotation ) AS Vessel_Name,
			(SELECT commudity_desc FROM commudity_detail WHERE commudity_code=igm_detail_container.commudity_code) AS Commodity,
			igm_supplimentary_detail.BL_No,igm_supplimentary_detail.weight,igm_supplimentary_detail.Description_of_Goods,igm_supplimentary_detail.Notify_code,
			igm_supplimentary_detail.Notify_name, igm_supplimentary_detail.Notify_address,location,terminal,igm_sup_detail_container.cont_size AS size,
			IF(igm_sup_detail_container.cont_size=20,1,2) AS TEUs,
			TIMESTAMPDIFF(HOUR,yard_lying_info.discharge_dt,NOW()) AS hr,
			(SELECT FLOOR(hr/24)) as day,
			CONCAT((SELECT FLOOR(hr/24)),' Days ',(SELECT hr%24),' Hrs') AS d
			FROM igm_sup_detail_container
			INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id
			INNER JOIN yard_lying_info ON yard_lying_info.id=igm_sup_detail_container.cont_number AND igm_supplimentary_detail.Import_Rotation_No=yard_lying_info.rotation
			LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_supplimentary_detail.igm_detail_id
			) AS a
			WHERE Supflag!='Assigned'
			AND (
			UCASE(Description_of_Goods) LIKE UCASE('%FAB%') 
			OR UCASE(Description_of_Goods) LIKE UCASE('%YARN%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%APPAR%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%GARM%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%DYEING%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%CLOTH%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%KNIT%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%DENIM%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%THREAD%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%MECH%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%VISCOSE%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%POLYESTER%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%EXPORT%ORIENTED%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%textile%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%Finishing%agent%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%Oven%interlin%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%Dyes%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%Taffeta%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%soda%ash%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%Chemical%')
			OR UCASE(Description_of_Goods) LIKE UCASE('%cotton%')
			)
			) AS b
			WHERE day>='$lyingMoreDays' AND Import_Rotation_No IN (SELECT DISTINCT rotation FROM yard_lying_info WHERE DATE(discharge_dt) BETWEEN '$garmentsFromDate' AND '$garmentsToDate')
			ORDER BY 1,2,3";
	
			$rslt_lyingDetail=$this->bm->dataSelectDb1($sql_lyingDetail);
			
			$data['heading']="Garments Item Lying Detail";
			$data['rslt_lyingDetail']=$rslt_lyingDetail;
			
			if($viewType == "html")
			{
				$this->load->view('garmentsItemLyingDetailReportPdf',$data);
				return;
			}
			else if($viewType == "excel")
			{
				$this->load->view('garmentsItemLyingDetailReportExcel',$data);
				return;
			}
			else
			{
						
				$this->data['title']=$title;
				$this->data['lyingMoreDays']=$lyingMoreDays;
				$this->data['garmentsFromDate']=$garmentsFromDate;
				$this->data['garmentsToDate']=$garmentsToDate;
				$this->data['heading']="Garments Item Lying Detail";
				$this->data['rslt_lyingDetail']=$rslt_lyingDetail;
				$this->load->view('garmentsItemLyingDetailReportPdf',$data);
				/*$this->load->library('m_pdf');				
				$html=$this->load->view('garmentsItemLyingDetailReportPdf',$this->data, true); 
				$pdfFilePath ="garmentsItemLyingDetailReportPdf-".time()."-download.pdf";
				$pdf = $this->m_pdf->load();
				$pdf->useSubstitutions = true;
				$html = mb_convert_encoding($html, 'UTF-8', 'UTF-8');
				$stylesheet = file_get_contents('assets/stylesheets/test.css');
				$pdf->WriteHTML($stylesheet,1);
				$pdf->WriteHTML($html,2);
				$pdf->Output($pdfFilePath, "I");*/
				return;		
			}					
		}																									// lying detail
		
	}
	// Garments Item Lying And Delivery Info Form New  -- end
	
	
	
     //item wise summary and details start
    function itemWiseSummaryDetailsForm()					// 2020-06-14
    {
        $session_id = $this->session->userdata('value');
        $LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
        {
            $this->logout();

        }
        else
        {
            $g_query = "";
            // $goodsList = "";
            $g_query ="SELECT c.commudity_code AS id, c.commudity_desc AS c_name FROM commudity_detail AS c
              ORDER BY c_name ASC";

            $commGoodsData  = $this->bm->dataSelectDb1($g_query);
            // print_r($rtnGoodsList); exit()
            $data['goodsList']  = $commGoodsData;
            $data['msg']="";
            $data['title']="ITEM WISE SUMMARY AND DETAILS REPORT ...";
            // $this->load->view('header5');
            // $this->load->view('getItemWiseSummaryDeatailsForm',$data);
            // $this->load->view('footer_1');
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('getItemWiseSummaryDeatailsForm',$data);
			$this->load->view('jsAssets');
        }
    }
	
	function itemWiseSummaryDetailsFormAction()				// 2020-06-14
    {
        $item = $this->input->post('item');
        $goodsfromdate = $this->input->post('goodsfromdate');
        $goodstodate = $this->input->post('goodstodate');
        $options = $this->input->post('options');
        $group_by = $this->input->post('group_by');
        $search_value = $this->input->post('search_value');

        if($options == 'details')
        {
            if($search_value)
			{
				$goodsQuery ="SELECT igm_details.Import_Rotation_No,igm_masters.Vessel_Name,igm_detail_container.cont_number,igm_detail_container.cont_size,igm_detail_container.cont_height,
				commudity_detail.commudity_desc,
				SUM(igm_detail_container.cont_gross_weight)/1000 AS tonage, 
				igm_details.NotifyDesc
				FROM igm_detail_container 
				INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id
				INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
				INNER JOIN commudity_detail  ON commudity_detail.commudity_code = igm_detail_container.commudity_code
				WHERE igm_detail_container.commudity_code='$item'  AND Notify_name LIKE '%$search_value%' 
				AND DATE(igm_details.file_clearence_date) BETWEEN '$goodsfromdate' AND '$goodstodate'
				GROUP BY igm_details.Import_Rotation_No";
                $goodsResult = $this->bm->dataSelectDb1($goodsQuery);
			}
			else
			{
				$goodsQuery ="SELECT igm_details.Notify_name,igm_details.Import_Rotation_No,igm_masters.Vessel_Name,
				igm_detail_container.cont_number,igm_detail_container.cont_size,igm_detail_container.cont_height,
				commudity_detail.commudity_desc,
				(igm_detail_container.cont_gross_weight)/1000 AS tonage, 
				igm_details.NotifyDesc
				FROM igm_detail_container 
				INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id
				INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
				INNER JOIN commudity_detail  ON commudity_detail.commudity_code = igm_detail_container.commudity_code
				WHERE igm_detail_container.commudity_code='$item'AND DATE(igm_details.file_clearence_date) BETWEEN '$goodsfromdate' AND '$goodstodate'";
                $goodsResult = $this->bm->dataSelectDb1($goodsQuery);
            }
        }
		else
		{
            if($group_by == 'rotation')
			{
				$goodsQuery ="SELECT val,mnt,commudity_desc,(SUM(cont_gross_weight)/1000) AS tonnagefrom, Notify_name
				FROM (
				SELECT igm_details.Import_Rotation_No AS val,MONTHNAME(file_clearence_date) AS mnt,commudity_desc,cont_gross_weight,Notify_name FROM igm_details 
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id 
				INNER JOIN commudity_detail  ON commudity_detail.commudity_code = igm_detail_container.commudity_code
				WHERE igm_detail_container.commudity_code='$item' AND DATE(igm_details.file_clearence_date) BETWEEN '$goodsfromdate' AND '$goodstodate'
				AND Notify_name LIKE '%$search_value%' 
				) 
				AS tbl GROUP BY val";

                $goodsResult = $this->bm->dataSelectDb1($goodsQuery);
                $data['mnt'] = $goodsResult[0]['mnt'];
            }
			else
			{
                $goodsQuery ="SELECT val,mnt,commudity_desc,(SUM(cont_gross_weight)/1000) AS tonnagefrom, Notify_name
				FROM (
				SELECT igm_details.Notify_name AS val,MONTHNAME(file_clearence_date) AS mnt,commudity_desc,cont_gross_weight,Notify_name FROM igm_details 
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id 
				INNER JOIN commudity_detail  ON commudity_detail.commudity_code = igm_detail_container.commudity_code
				WHERE igm_detail_container.commudity_code='$item' AND DATE(igm_details.file_clearence_date) BETWEEN '$goodsfromdate' AND '$goodstodate'
				AND Notify_name LIKE '%$search_value%' 
				) 
				AS tbl GROUP BY val";

                $goodsResult = $this->bm->dataSelectDb1($goodsQuery);
                $data['mnt'] = $goodsResult[0]['mnt'];
			}
        }
		
        $data['goodsResult'] = $goodsResult;
        $data['options'] = $options;
        $data['goodsfromdate'] = $goodsfromdate;
        $data['goodstodate'] = $goodstodate;
        $data['search_value'] = $search_value;
        $data['group_by'] = $group_by;
        $this->load->view('itemWiseGoodsSummaryDetailsList',$data);
    }

	function itemWiseLyingSummaryDetailsForm()			// 2020-06-16
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
        {
            $this->logout();

        }
        else
        {
            $g_query = "";
            // $goodsList = "";

            $g_query ="SELECT c.commudity_code AS id, c.commudity_desc AS c_name FROM commudity_detail AS c
              ORDER BY c_name ASC";

            $commGoodsData  = $this->bm->dataSelectDb1($g_query);
            // print_r($rtnGoodsList); exit()
            $data['goodsList']  = $commGoodsData;
            $data['msg']="";
            $data['title']="ITEM WISE LYING REPORT ...";            
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('itemWiseLyingSummaryDetailsForm',$data);
			$this->load->view('jsAssets');
        }
	}

	function itemWiseLyingSummaryDetailsReport()			// 2020-06-16
	{
		$item = $this->input->post('item');
        $goodsfromdate = $this->input->post('goodsfromdate');
        $goodstodate = $this->input->post('goodstodate');
        $options = $this->input->post('options');
        $group_by = $this->input->post('group_by');
        $search_value = $this->input->post('search_value');

		 $container_query ="SELECT id
		FROM inv_unit
		INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
		WHERE inv_unit_fcy_visit.transit_state='S40_YARD' AND inv_unit.category='IMPRT'"; 
		
		/*  $container_query ="SELECT id FROM (SELECT sparcsn4.inv_unit.id, TIMESTAMPDIFF(DAY,sparcsn4.inv_unit_fcy_visit.time_in,NOW()) AS lying_days
		FROM sparcsn4.inv_unit
		INNER JOIN sparcsn4.inv_unit_fcy_visit ON sparcsn4.inv_unit_fcy_visit.unit_gkey=sparcsn4.inv_unit.gkey
		WHERE sparcsn4.inv_unit_fcy_visit.transit_state='S40_YARD' AND category='IMPRT' ORDER BY sparcsn4.inv_unit.gkey DESC 
		) AS tmp WHERE lying_days<=30";   */
		$containerResult = $this->bm->dataSelect($container_query);
		//print_r($containerResult);

		$data['containerResult'] = $containerResult;
        $data['item'] = $item;
       // $data['goodsResult'] = $goodsResult;
        $data['options'] = $options;
        $data['goodsfromdate'] = $goodsfromdate;
        $data['goodstodate'] = $goodstodate;
        $data['search_value'] = $search_value;
        $data['group_by'] = $group_by;
        $this->load->view('itemWiseLyingGoodsList',$data);		
	}

	//Importer wise Lying Report
	function importerWiseLyingReportForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();

		}
		else
		{
			$data['msg']="";
			$data['title']="GOODS AND IMPORTER WISE LYING REPORT ..."; 
			$strrcvAllQry = "SELECT DISTINCT  igm_details.Notify_name FROM igm_details 
							WHERE Notify_name!='' AND Notify_name IS NOT NULL ORDER BY Notify_name ASC ";	
			$rsltAllQry  = $this->bm->dataSelectDb1($strrcvAllQry);									
			$data['rsltAllQry']=$rsltAllQry;
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('importerWiseLyingForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function importerWiseLyingReport()			// 2020-06-16
	{
		$importer = trim($this->input->post('importer'));
		$goods_name = $this->input->post('goods_name');
		$sCriteria = trim($this->input->post('sCriteria'));

		$options = $this->input->post("options");
 
		$container_query ="SELECT id,inv_unit.visit_state, inv_unit.category,inv_unit.create_time 
		FROM inv_unit
		INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
		WHERE inv_unit_fcy_visit.transit_state='S40_YARD' AND inv_unit.category='IMPRT'";

		
		//return;
		$containerResult = $this->bm->dataSelect($container_query);
		$data['containerResult'] = $containerResult; 
		
		$importerName="SELECT Notify_name AS rtnValue FROM igm_details WHERE Notify_code='$importer'";			
		$importerName=$this->bm->dataReturnDb1($importerName);

        $data['importerName'] = $importerName;
        $data['importer'] = $importer;
        $data['goods_name'] = $goods_name;
        $data['sCriteria'] = $sCriteria;
        $data['options'] = $options;
       
        $this->load->view('importerWiseLyingReport',$data);		
	}
	

	function igmInfoByBl()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			
			/* $query = "SELECT DISTINCT gkey, id FROM sparcsn4.road_gates WHERE life_cycle_state='ACT'";
			$gateList = $this->bm->dataSelect($query);
				
			$data['gateList']=$gateList; */
			$data['title']="IGM Info by BL Number(s)";
			//echo $data['title'];

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('igmInfoByBlForm',$data);
			$this->load->view('jsAssets');
		}	
	}
	
	function igmInfoByBlAction()
	{
		$fileType=$this->input->post('fileOptions');
		$bl_nums=trim($this->input->post('bl_nums'));
		

		$bl_num = explode(',', $bl_nums);
		//print_r($bl_num);
		//$bls='("'.implode('", "', $bl_num).'")';
		$bls=join("','",$bl_num);
		//echo $bls;
		//echo $newarray;	
	  			
			$str="SELECT Import_Rotation_No,
			(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=igm_details.Import_Rotation_No) AS vsl_name,
			Line_No,Consignee_code,Consignee_name,Consignee_address,
			cont_number,cont_size,cont_gross_weight,cont_seal_number,cont_status,cont_height

			FROM igm_details
			INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id

			WHERE BL_No IN ('$bls')


			UNION

			SELECT Import_Rotation_No,
			(SELECT Vessel_Name FROM igm_masters WHERE Import_Rotation_No=igm_supplimentary_detail.Import_Rotation_No) AS vsl_name,
			Line_No,Consignee_code,Consignee_name,Consignee_address,
			cont_number,cont_size,cont_gross_weight,cont_seal_number,cont_status,cont_height

			FROM igm_supplimentary_detail
			INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id

			WHERE BL_No IN ('$bls')";		
		
		//return;
		
		$data['title']="IGM Info by BL Number(s)";
		$result = $this->bm->dataSelectDb1($str);

		$data['result']=$result;			
		$data['bl_nums']=$bl_nums;			
		$data['date']=@$date;	
		$data['fileType']=$fileType;
		if($fileType == "html"){
			$this->load->view('cssAssets');
			$this->load->view('igmInfoByBlView',$data);
			$this->load->view('jsAssets');
		}else if($fileType == "xl"){
			$this->load->view('igmInfoByBlView',$data);
		}
	}
	
		
	function dgDischargeSummary()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
		$data['title']="DG CONTAINERS DISCHARGE SUMMARY LIST.";
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('dischargeSummaryListDGform',$data);
		$this->load->view('jsAssets');
		}	
	}
		
	function dgDischargeSummaryPerform(){
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
	if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$rotation=$this->input->post('rotation');
			$data['rotation']=$rotation;
			$data['title']="DG CONTAINERS DISCHARGE SUMMARY LIST.";
			$this->load->view('dischargeSummaryListDGContainer',$data);
		}	
	}
	
	function dgDischargeList(){
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="DG CONTAINERS DISCHARGE LIST.";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('dischargeListDGform',$data);
			$this->load->view('jsAssets');
		}	
	}
	
	function dgDischargeListPerform(){
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
	if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$rotation=$this->input->post('rotation');
			$fileOptions=$this->input->post('options');
			//echo $fileOptions;
			$data['rotation']=$rotation;
			$data['fileOptions']=$fileOptions;
			$data['title']="DG CONTAINERS DISCHARGE LIST.";
			$this->load->view('dischargeListDGContainer',$data);
		}	
	}
	
	function dgSummaryReportCatrgoryWise()
	{
			$cat=$this->uri->segment(3);
			$rot1=$this->uri->segment(4);				
			$rot2=$this->uri->segment(5);	
			$rotation=$rot1.'/'.$rot2;			
			$data['cat']=$cat;
			$data['rotation']=$rotation;
			$this->load->view('dgSummaryReportCatrgoryWiseView',$data);					
	}
		
		
	//SUMON- Eqipment Booking 
	function dailyEquipmentBookingOpPosition()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{	
			
			$data['msg']="";
			if($this->input->post('delete'))
			{
				$eid=$this->input->post('eid');
				$deleteSql="DELETE FROM ctmsmis.mis_equipment_op_booking_pos WHERE ctmsmis.mis_equipment_op_booking_pos.id='$eid'";
				$deleteStat=$this->bm->dataDeleteDb2($deleteSql);
				$data['msg']="<font color='red'><b>Data Deleted.</b></font>";
			}	
			
			$rslt_sql="SELECT id, `workshop_zone`, `equipment`, `equip_num`,non_operational,equip_supply, `updated_by`, `update_time` FROM ctmsmis.equip_assign_detail";
			$result=$this->bm->dataSelectDb2($rslt_sql);			
			$data['result']=$result;
				
			//$query = "SELECT id, eguip_no, op_name, yard, shift,date FROM ctmsmis.mis_equipment_op_booking_pos WHERE DATE = DATE(NOW()) ORDER BY DATE DESC";
			// $query = "SELECT id, eguip_no, op_name, yard, shift,date FROM ctmsmis.mis_equipment_op_booking_pos ORDER BY DATE DESC";
			$query = "SELECT id, eguip_no, op_name, yard, shift,date FROM ctmsmis.mis_equipment_op_booking_pos WHERE DATE = DATE(NOW()) ORDER BY DATE DESC";
			$bookingEquiList = $this->bm->dataSelectDb2($query);
				
			$data['bookingEquiList']=$bookingEquiList;
			$data['title']="Equipment Booking Operatior Position(GCB)";
			$data['editFlag']=0;
			$msg="";
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('dailyEquipmentBookingOpPosition',$data);
			$this->load->view('jsAssetsList');
			
		}	
	}
	
	
		
	
	function dailyEquipmentBookingOpPositionAction()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{			
			$login_id = $this->session->userdata('login_id');	
			$date=$this->input->post('eqpdate');
			$gcb=$this->input->post('gcb');

			$shift_no=$this->input->post('shift_no');
			$equip_no=$this->input->post('eguip_no');
			$op_name=$this->input->post('op_name');
			$yard_name=$this->input->post('yard_name');
						
			if($this->input->post('update'))
			{		
				$equipID=$this->input->post('equipID');
				$updateSql="UPDATE ctmsmis.mis_equipment_op_booking_pos set eguip_no ='$equip_no', op_name='$op_name', shift='$shift_no', date='$date',
				 created_by='$login_id', yard='$yard_name', created_at=now() where ctmsmis.mis_equipment_op_booking_pos.id='$equipID'";
				// return;
				$updateStat=$this->bm->dataUpdatedb2($updateSql);
				
				if($updateStat==1)
					$data['msg']="<font color='green'><b>Data succesfully updated</b></font>";
				else
					$data['msg']="<font color='red'><b>Updation failed</b></font>";				
			}
					
			else
			{				
				$insertQuery="insert into ctmsmis.mis_equipment_op_booking_pos (eguip_no, op_name, shift, date, yard, created_by, created_at,terminal) 
							values ('$equip_no','$op_name','$shift_no','$date','$yard_name','$login_id',now(),'$gcb')";
							// echo $insertQuery;return;
				$entryStat=$this->bm->dataInsertDb2($insertQuery);
				if($entryStat==1)
				{
					$data['msg']="<font color='green'><b>Data Successfully Inserted.</b></font>";
				}
				else
				{
					$data['msg']="<font color='red'><b>Data Not Inserted.</b></font>";
				}
			}
			$query = "SELECT id, eguip_no, op_name, yard, shift,date FROM ctmsmis.mis_equipment_op_booking_pos WHERE DATE = DATE(NOW()) AND  terminal NOT IN ('CCT','NCT')   ORDER BY DATE DESC";
			// $query = "SELECT id, eguip_no, op_name, yard, shift,date FROM ctmsmis.mis_equipment_op_booking_pos ORDER BY DATE DESC";
			$bookingEquiList = $this->bm->dataSelectDb2($query);
				
			$data['bookingEquiList']=$bookingEquiList;
			$data['title']="Equipment Booking Operatior Position";
			$data['editFlag']=0;
			$msg="";
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('dailyEquipmentBookingOpPosition',$data);
			$this->load->view('jsAssetsList');
		}	
	}
	
	function dailyEquipmentBookingOpPositionEdit()
	{
        $session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{           
            $eqiID= $this->input->post('eqiID');
                
			$select_sql="SELECT id, eguip_no, op_name, yard, shift, date FROM ctmsmis.mis_equipment_op_booking_pos 
			where mis_equipment_op_booking_pos.id='$eqiID'";
			
			$select_result=$this->bm->dataSelectDb2($select_sql);			
			$data['select_result']=$select_result;
			
			$query = "SELECT id, eguip_no, op_name, yard, shift,date FROM ctmsmis.mis_equipment_op_booking_pos WHERE DATE = DATE(NOW()) AND  terminal NOT IN ('CCT','NCT')  ORDER BY DATE DESC";
			// $query = "SELECT id, eguip_no, op_name, yard, shift,date FROM ctmsmis.mis_equipment_op_booking_pos ORDER BY DATE DESC";
			$bookingEquiList=$this->bm->dataSelectDb2($query);			
			$data['bookingEquiList']=$bookingEquiList;

			$data['editFlag']=1;
			$msg="";
			$data['title']="Equipment Booking Operatior Position";
			$data['msg']=$msg;

			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('dailyEquipmentBookingOpPosition',$data);
			$this->load->view('jsAssetsList');
        }
	}
	
	function dailyEquipmentBookingOpPositionSearch()
	{
        $session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{	
			$data['msg']="";
			$opDate = $this->input->post('opDate');
			$opShift = $this->input->post('opShift');
			if($opShift=='All')		
				$shift=" ";			
			else
				$shift=" and shift = '$opShift' ";
	
			 $query = "SELECT id, eguip_no, op_name, yard, shift,date FROM ctmsmis.mis_equipment_op_booking_pos WHERE DATE = '$opDate'  
			$shift AND (terminal NOT IN ('CCT','NCT') OR terminal IS NULL) ORDER BY DATE DESC";
			$bookingEquiList = $this->bm->dataSelectDb2($query);
				
			$data['bookingEquiList']=$bookingEquiList;
			$data['title']="Equipment Booking Operatior Position";
			
			$data['editFlag']=0;
			$msg="";
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('dailyEquipmentBookingOpPosition',$data);
			$this->load->view('jsAssetsList');
		}	
	}


	//Equipment Assign To Labour Starts 2/11/2020

	function equipmentAssignToLabourForm(){
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{

			// $num_row = "SELECT COUNT(*) as rtnValue FROM ctmsmis.lasLaborAssignToEquipemnt";
			// $segment_three = $this->uri->segment(3);
			
			// $config = array();
			// $config["base_url"] = site_url("report/equipmentAssignToLabourForm/$segment_three");
			
			// $config["total_rows"] = $this->bm->dataReturn($num_row);
			// $config["per_page"] = 10;
			// $offset = $this->uri->segment(4, 0);
			// $config["uri_segment"] = 4;
			// $limit=$config["per_page"];
			
			// $this->pagination->initialize($config);

			// $page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;
			
			// $start=$page;


			// $query = "SELECT id,laborDtlid,equipmentid,sdate,edate,labor_shift, ctmsmis.lasLabourDetailInfo.LaborID 
			// FROM ctmsmis.lasLaborAssignToEquipemnt
			// INNER JOIN ctmsmis.lasLabourDetailInfo ON ctmsmis.lasLabourDetailInfo.LaborDetailsID = ctmsmis.lasLaborAssignToEquipemnt.laborDtlid ORDER BY laborDtlid DESC limit $start,$limit";
			
			$query = "SELECT id,laborDtlid,equipmentid,sdate,edate,labor_shift, ctmsmis.lasLabourDetailInfo.LaborID 
			FROM ctmsmis.lasLaborAssignToEquipemnt
			INNER JOIN ctmsmis.lasLabourDetailInfo ON ctmsmis.lasLabourDetailInfo.LaborDetailsID = ctmsmis.lasLaborAssignToEquipemnt.laborDtlid ORDER BY laborDtlid DESC";
			$labEqip = $this->bm->dataSelectDb2($query);

			$labourQuery = "SELECT LaborID,LaborDetailsID FROM ctmsmis.lasLabourDetailInfo ORDER BY LaborDetailsID DESC";
			$labourInfo = $this->bm->dataSelectDb2($labourQuery);

			$equipmentQuery = "SELECT DISTINCT equipmentid FROM ctmsmis.lasLaborAssignToEquipByDate";
			$equipInfo = $this->bm->dataSelectDb2($equipmentQuery);

			$data['title'] = "Equipment Assign to Labour";
			// $data['links'] = $this->pagination->create_links();
			// $data['start'] = $start;
			$data['labEqip'] = $labEqip;
			$data['labourInfo'] = $labourInfo;
			$data['equipInfo'] = $equipInfo;
			$data['msg'] = "";

			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('equipmentAssignToLabourForm',$data);
			$this->load->view('jsAssetsList');

		}
	}

	function equipmentAssignToLabourInsert(){
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$laborId = $this->input->post('labourId');
			$equipment = $this->input->post('equipment');
			$shift = $this->input->post('shift');
			$fromDate = $this->input->post('fromDate');
			$toDate = $this->input->post('toDate');
			$ip_address = $_SERVER['REMOTE_ADDR'];
			$msg = "";

			if(isset($_POST['save'])){
				// $query = "SELECT COUNT(*) AS rtnValue from ctmsmis.lascategoryinformation WHERE CategoryName = '$catName'";
				// $rtnValue = $this->bm->dataReturn($query);
			
				// if($rtnValue>0){
				// 	$msg = "<font color='red'><b>Category Name already exist!</b></font>";

				// }else{
					$query = "INSERT INTO ctmsmis.lasLaborAssignToEquipemnt (laborDtlid,equipmentid,labor_shift,sdate,edate,ipaddress,created_by,created) VALUES('$laborId','$equipment','$shift','$fromDate','$toDate','$ip_address','$login_id',now())";

					$insertStat = $this->bm->dataInsertDb2($query);

					if($insertStat)
					{								
						$msg = "<font color='green'><b>Data Inserted successfully</b></font>";
					}
					else
					{
						$msg = "<font color='red'><b>Data Cannot be Inserted</b></font>";
					}
				// }

			}else if(isset($_POST['update'])){
				$id = $this->input->post('cngKey');
				// $query = "SELECT COUNT(*) AS rtnValue from ctmsmis.lascategoryinformation WHERE CategoryName = '$catName' AND CategoryID NOT IN($id)";
				
				// $rtnValue = $this->bm->dataReturn($query);
				
				// if($rtnValue>0){
				// 	$msg = "<font color='red'><b>Category Name already exist!</b></font>";

				// }else{
					$query="UPDATE ctmsmis.lasLaborAssignToEquipemnt SET laborDtlid = '$laborId',equipmentid = '$equipment',labor_shift = '$shift',sdate = '$fromDate',edate = '$toDate',ipaddress = '$ip_address',created_by='$login_id',created = now() WHERE id = '$id'";

					$updateStat = $this->bm->dataUpdateDb2($query);

					if($updateStat)
					{								
						$msg = "<font color='green'><b>Data Updated successfully</b></font>";
					}
					else
					{
						$msg = "<font color='red'><b>Data Cannot be Updated</b></font>";
					}
				// }
			}

			// $num_row = "SELECT COUNT(*) as rtnValue FROM ctmsmis.lasLaborAssignToEquipemnt";
			// $segment_three = $this->uri->segment(3);
			
			// $config = array();
			// $config["base_url"] = site_url("report/equipmentAssignToLabourForm/$segment_three");
			
			// $config["total_rows"] = $this->bm->dataReturn($num_row);
			// $config["per_page"] = 10;
			// $offset = $this->uri->segment(4, 0);
			// $config["uri_segment"] = 4;
			// $limit=$config["per_page"];
			
			// $this->pagination->initialize($config);

			// $page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;
			
			// $start=$page;


			// $query = "SELECT id,laborDtlid,equipmentid,sdate,edate,labor_shift, ctmsmis.lasLabourDetailInfo.LaborID 
			// FROM ctmsmis.lasLaborAssignToEquipemnt
			// INNER JOIN ctmsmis.lasLabourDetailInfo ON ctmsmis.lasLabourDetailInfo.LaborDetailsID = ctmsmis.lasLaborAssignToEquipemnt.laborDtlid ORDER BY laborDtlid DESC limit $start,$limit";
			$query = "SELECT id,laborDtlid,equipmentid,sdate,edate,labor_shift, ctmsmis.lasLabourDetailInfo.LaborID 
			FROM ctmsmis.lasLaborAssignToEquipemnt
			INNER JOIN ctmsmis.lasLabourDetailInfo ON ctmsmis.lasLabourDetailInfo.LaborDetailsID = ctmsmis.lasLaborAssignToEquipemnt.laborDtlid ORDER BY laborDtlid DESC";
			$labEqip = $this->bm->dataSelectDb2($query);

			$labourQuery = "SELECT LaborID,LaborDetailsID FROM ctmsmis.lasLabourDetailInfo ORDER BY LaborDetailsID DESC";
			$labourInfo = $this->bm->dataSelectDb2($labourQuery);

			$equipmentQuery = "SELECT DISTINCT equipmentid FROM ctmsmis.lasLaborAssignToEquipByDate";
			$equipInfo = $this->bm->dataSelectDb2($equipmentQuery);


			$data['title'] = "Equipment Assign to Labour";
			// $data['links'] = $this->pagination->create_links();
			// $data['start'] = $start;
			$data['labEqip'] = $labEqip;
			$data['labourInfo'] = $labourInfo;
			$data['equipInfo'] = $equipInfo;
			$data['msg'] = $msg;

			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('equipmentAssignToLabourForm',$data);
			$this->load->view('jsAssetsList');

		}
	}

	function equipmentAssignToLabourAction(){
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$id = $this->input->post('key');
			$msg = "";

			if(isset($_POST['edit'])){
				$query="SELECT * FROM ctmsmis.lasLaborAssignToEquipemnt WHERE id = '$id'";
				$labEqipById = $this->bm->dataSelectDb2($query);
				// $getLabour = $labEqipById[0]['laborDtlid'];
				// $labourDtlId = "SELECT LaborID as rtnValue FROM ctmsmis.lasLabourDetailInfo WHERE LaborDetailsID='$getLabour'";
				// $laborId = $this->bm->dataReturn($labourDtlId);
				$data['labEqipById'] = $labEqipById;
				// $data['laborId']=$laborId;

			}else if($_POST['delete']){
				$query="DELETE FROM ctmsmis.lasLaborAssignToEquipemnt WHERE id = '$id'";
				$deleteStat = $this->bm->dataDeleteDb2($query);

				if($deleteStat)
				{								
					$msg = "<font color='green'><b>Data Deleted successfully</b></font>";
				}
				else
				{
					$msg = "<font color='red'><b>Data Cannot be Deleted</b></font>";
				}
			}

			// $num_row = "SELECT COUNT(*) as rtnValue FROM ctmsmis.lasLaborAssignToEquipemnt";
			// $segment_three = $this->uri->segment(3);
			
			// $config = array();
			// $config["base_url"] = site_url("report/equipmentAssignToLabourForm/$segment_three");
			
			// $config["total_rows"] = $this->bm->dataReturn($num_row);
			// $config["per_page"] = 10;
			// $offset = $this->uri->segment(4, 0);
			// $config["uri_segment"] = 4;
			// $limit=$config["per_page"];
			
			// $this->pagination->initialize($config);

			// $page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;
			
			// $start=$page;


			// $query = "SELECT id,laborDtlid,equipmentid,sdate,edate,labor_shift, ctmsmis.lasLabourDetailInfo.LaborID 
			// FROM ctmsmis.lasLaborAssignToEquipemnt
			// INNER JOIN ctmsmis.lasLabourDetailInfo ON ctmsmis.lasLabourDetailInfo.LaborDetailsID = ctmsmis.lasLaborAssignToEquipemnt.laborDtlid ORDER BY laborDtlid DESC limit $start,$limit";
			$query = "SELECT id,laborDtlid,equipmentid,sdate,edate,labor_shift, ctmsmis.lasLabourDetailInfo.LaborID 
			FROM ctmsmis.lasLaborAssignToEquipemnt
			INNER JOIN ctmsmis.lasLabourDetailInfo ON ctmsmis.lasLabourDetailInfo.LaborDetailsID = ctmsmis.lasLaborAssignToEquipemnt.laborDtlid ORDER BY laborDtlid DESC";
			$labEqip = $this->bm->dataSelectDb2($query);

			$labourQuery = "SELECT LaborID,LaborDetailsID FROM ctmsmis.lasLabourDetailInfo ORDER BY LaborDetailsID DESC";
			$labourInfo = $this->bm->dataSelectDb2($labourQuery);

			$equipmentQuery = "SELECT DISTINCT equipmentid FROM ctmsmis.lasLaborAssignToEquipByDate";
			$equipInfo = $this->bm->dataSelectDb2($equipmentQuery);

				
			// $data['berthOpList']=$berthOpList;
			// $data['cateList']=$cateList;

			$data['title'] = "Equipment Assign to Labour";
			// $data['links'] = $this->pagination->create_links();
			// $data['start'] = $start;
			$data['labEqip'] = $labEqip;
			$data['labourInfo'] = $labourInfo;
			$data['equipInfo'] = $equipInfo;
			$data['msg'] = $msg;

			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('equipmentAssignToLabourForm',$data);
			$this->load->view('jsAssetsList');

		}
	}

	//Equipment Assign To Labour Ends...

	//Gang Assign To Vessel Starts  3/11/2020

	function gangAssignToVesselForm(){
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{

			$query = "SELECT * FROM ctmsmis.lasVslWiseGangInfo ORDER BY ID DESC";
			$gangAssign = $this->bm->dataSelectDb2($query);

			$gangQuery = "SELECT GangID,GangInformationID FROM ctmsmis.lasGangInfo";
			$gangInfo = $this->bm->dataSelectDb2($gangQuery);

			$vesselQuery = "      SELECT argo_carrier_visit.id, vsl_vessels.name
			FROM argo_carrier_visit
			INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
			INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
			INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
			WHERE argo_carrier_visit.phase IN ('20INBOUND','30ARRIVED','40WORKING','50COMPLETE','60DEPARTED')
			ORDER BY argo_carrier_visit.phase";
			$vesselInfo = $this->bm->dataSelect($vesselQuery);

			$data['title'] = "Gang Assign to Vessel";
			$data['gangAssign'] = $gangAssign;
			$data['gangInfo'] = $gangInfo;
			$data['vesselInfo'] = $vesselInfo;
			$data['msg'] = "";
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('gangAssignToVesselForm',$data);
			$this->load->view('jsAssetsList');

		}
	}
	
	
	function gangAssignToVesselInsert(){
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$gangId = $this->input->post('gangId');
			$vesselId = $this->input->post('vesselId');
			$ip_address = $_SERVER['REMOTE_ADDR'];


			$query = "INSERT INTO ctmsmis.lasVslWiseGangInfo (GangID,VesselDetailsID,ipaddress,created_by,created) VALUES('$gangId','$vesselId','$ip_address','$login_id',now())";

			$insertStat = $this->bm->dataInsertDb2($query);

			$msg = "";

			if($insertStat)
			{								
				$msg = "<font color='green'><b>Data Inserted successfully</b></font>";
			}
			else
			{
				$msg = "<font color='red'><b>Data Cannot be Inserted</b></font>";
			}

			$query = "SELECT * FROM ctmsmis.lasVslWiseGangInfo ORDER BY ID DESC";
			$gangAssign = $this->bm->dataSelectDb2($query);

			$gangQuery = "SELECT GangID,GangInformationID FROM ctmsmis.lasGangInfo";
			$gangInfo = $this->bm->dataSelectDb2($gangQuery);

			$vesselQuery = "SELECT argo_carrier_visit.id, vsl_vessels.name
			FROM argo_carrier_visit
			INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
			INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
			INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
			WHERE argo_carrier_visit.phase IN ('20INBOUND','30ARRIVED','40WORKING','50COMPLETE','60DEPARTED')
			ORDER BY argo_carrier_visit.phase";
			$vesselInfo = $this->bm->dataSelect($vesselQuery);

			$data['title'] = "Gang Assign to Vessel";
			$data['gangAssign'] = $gangAssign;
			$data['gangInfo'] = $gangInfo;
			$data['vesselInfo'] = $vesselInfo;
			$data['msg'] = $msg;
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('gangAssignToVesselForm',$data);
			$this->load->view('jsAssetsList');

		}
	}
	
	//Gang Assign To Vessel Ends...

	//Labour Assign To Gang Starts 4/11/2020

	function labourAssignToGangForm(){
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{

			$gang_str= "SELECT DISTINCT GangID, GangInformationID FROM ctmsmis.lasGangInfo";
			
			$gangList = $this->bm->dataSelectDb2($gang_str);
			
			
			

			$labourQuery = "SELECT * FROM ctmsmis.lasLabourDetailInfo";
			$labourInfo = $this->bm->dataSelectDb2($labourQuery);

			$data['title'] = "Labour Assign to Gang";
			// $data["links"] = $this->pagination->create_links();
			// $data['start'] = $start;
			$data['gangList']=$gangList;
			$data['labourInfo'] = $labourInfo;
			$data['msg'] = "";

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('labourAssignToGangForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	
	function labourAssignToGangInsert(){
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$laborId = $this->input->post('labourId');
			$gangId = $this->input->post('gangId');
			$startDate = $this->input->post('sDate');
			$endDate = date('Y-m-d', strtotime($startDate . " - 1 day"));
			$ip_address = $_SERVER['REMOTE_ADDR'];
			$msg = "";

			if(isset($_POST['save'])){

				$eDateUpdate = "UPDATE ctmsmis.lasGangWiseLaborInfo SET eDate = '$endDate', UserID = '$login_id',IpAddress = '$ip_address',DateTime = now() WHERE ctmsmis.lasGangWiseLaborInfo.GangInformationID = (SELECT GangINformationID FROM ctmsmis.lasLabourDetailInfo WHERE ctmsmis.lasLabourDetailInfo.LaborDetailsID='$laborId') AND ctmsmis.lasGangWiseLaborInfo.LaborDetailsID = '$laborId'";
				$updateStat2 = $this->bm->dataUpdateDb2($eDateUpdate);

				$labourDtlUpdate = "UPDATE ctmsmis.lasLabourDetailInfo SET GangInformationID='$gangId',IpAddress='$ip_address',UserID='$login_id',DateTime= NOW() WHERE ctmsmis.lasLabourDetailInfo.LaborDetailsID='$laborId'";
				$updateStat1 = $this->bm->dataUpdateDb2($labourDtlUpdate);
				

				$gangWiseLabourInsert = "INSERT INTO ctmsmis.lasGangWiseLaborInfo (GangInformationID,LaborDetailsID,UserID,IpAddress,sDate,DateTime) VALUES('$gangId','$laborId','$login_id','$ip_address','$startDate',NOW())";
				$insertStat = $this->bm->dataInsertDb2($gangWiseLabourInsert);

				if($insertStat && $updateStat1 && $updateStat2)
				{								
					$msg = "<font color='green'><b>Data Changed successfully!</b></font>";
					echo "1";
				}
				else
				{
					$msg = "<font color='red'><b>Data Cannot be Changed!</b></font>";
					echo "0";
				}

			}


			$gang_str= "SELECT DISTINCT GangID, GangInformationID FROM ctmsmis.lasGangInfo";
			
			$gangList = $this->bm->dataSelectDb2($gang_str);

			$labourQuery = "SELECT * FROM ctmsmis.lasLabourDetailInfo";
			$labourInfo = $this->bm->dataSelectDb2($labourQuery);

			$data['title'] = "Labour Assign to Gang";
			$data['gangList']=$gangList;
			$data['labourInfo'] = $labourInfo;
			$data['msg'] = $msg;
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('labourAssignToGangForm',$data);
			$this->load->view('jsAssets');

		}
	}


	 //Labour Assign to Gang Ends...
	
	
	
	 //Labour Info Entry for CCT Lasher

	
	
	
	
	  function labourInfoEntryLasher(){
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{	
			$data['msg']="";
			if($this->input->post('delete'))
			{
				$labor_id=$this->input->post('labor_id');
				$deleteSql="DELETE FROM ctmsmis.lasLabourDetailInfo WHERE lasLabourDetailInfo.LaborID='$labor_id'";
				// $deleteStat=$this->bm->dataDelete($deleteSql);
				$deleteStat=$this->bm->dataDeleteDb2($deleteSql);
				
			}	
				
			$query = "SELECT LaborDetailsID,LaborID, LaborName, PresentAddress, PermanentAddress,  CategoryName, lasLabourDetailInfo.GangInformationID,GangID, Skilled, berthname,
			DateofBirth, DateofJoining, ContactNumber, lasLabourDetailInfo.Remarks, lasLabourDetailInfo.UserID, lasLabourDetailInfo.IpAddress FROM ctmsmis.lasLabourDetailInfo
			INNER JOIN ctmsmis.lasCateoryInformation ON lasCateoryInformation.CategoryID = lasLabourDetailInfo.CategoryID
			LEFT JOIN ctmsmis.lasGangInfo ON lasGangInfo.GangInformationID=lasLabourDetailInfo.GangInformationID order by LaborDetailsID desc";
			$laborInfoList = $this->bm->dataSelectDb2($query);

			$berthOpStr = "SELECT Organization_Name FROM organization_profiles WHERE Org_Type_id=30 AND AIN_No IS NOT NULL";
			$berthOpList = $this->bm->dataSelectDb1($berthOpStr);

			$gang_str= "SELECT DISTINCT GangID, GangInformationID FROM ctmsmis.lasGangInfo";
			
			$gangList = $this->bm->dataSelectDb2($gang_str);
			
			$category_str= "SELECT DISTINCT CategoryName, CategoryID FROM ctmsmis.lasCateoryInformation";
			$cateList = $this->bm->dataSelectDb2($category_str);
				
			$data['berthOpList']=$berthOpList;
			$data['cateList']=$cateList;
			$data['gangList']=$gangList;
			$data['laborInfoList']=$laborInfoList;
				
			$data['title']="Labour Entry Form CCT Lasher";
			$data['editFlag']=0;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('labourInfoEntryLasher',$data);
			$this->load->view('jsAssets');
    	}
	 }
	
	
	
	
		function labourInfoEntryLasherPerform()
	  {
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id = $this->session->userdata('login_id');	
			$labor_dtl_id=$this->input->post('labor_dtl_id');
			$labor_id=$this->input->post('labor_id');
			$labor_name=$this->input->post('labor_name');
			$category=$this->input->post('category');
			$gang=$this->input->post('gang');
			$skills=$this->input->post('skills');
			$terminal_op=$this->input->post('terminal_op');
			$pres_addr=$this->input->post('pres_addr');
			$per_addr=$this->input->post('per_addr');
			$date_of_berth=$this->input->post('date_of_berth');
			$date_of_join=$this->input->post('date_of_join');
			$contact_no=$this->input->post('contact_no');
			$remarks=$this->input->post('remarks');
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			$rtnValue=0;
		   
			
			if($this->input->post('update'))
			{
				//$prev_gang_id=$this->input->post('prev_gang_id');
				
			 	 $updateSql="UPDATE ctmsmis.lasLabourDetailInfo set LaborName ='$labor_name', CategoryID='$category', GangInformationID='$gang', 
				 Skilled='$skills', berthname='$terminal_op',PresentAddress='$pres_addr', PermanentAddress='$per_addr' ,DateofBirth='$date_of_berth', DateofJoining='$date_of_join', ContactNumber='$contact_no', Remarks='$remarks'
				 where ctmsmis.lasLabourDetailInfo.LaborDetailsID='$labor_dtl_id'";
				
				$updateStat=$this->bm->dataUpdatedb2($updateSql);
				
				if($updateStat==1)
				{
				 $updateSql="UPDATE ctmsmis.lasGangWiseLaborInfo set GangInformationID='$gang'
					where ctmsmis.lasGangWiseLaborInfo.LaborDetailsID='$labor_dtl_id' and lasGangWiseLaborInfo.sDate='$date_of_join'";
				
					$updateStat=$this->bm->dataUpdatedb2($updateSql);
					
					$data['msg']="<font color='green'><b>Data succesfully updated</b></font>";
				}
				else
					$data['msg']="<font color='red'><b>Updation failed</b></font>";				
			}
					
			else
			{	
				$sqlUser = "SELECT  count(LaborID) as rtnValue FROM ctmsmis.lasLabourDetailInfo WHERE lasLabourDetailInfo.LaborID='$labor_id'";
				$rtnValue = $this->bm->dataReturnDb2($sqlUser);
				
				if($rtnValue>0)					
				{
						$data['msg']="<font color='red'><b>The Labor ID Already exist.</b></font>";
				}
				else
				{	
			
					$insertQuery="insert into ctmsmis.lasLabourDetailInfo ( LaborID, LaborName, PresentAddress, PermanentAddress, CategoryID, GangInformationID, Skilled, berthname, DateofBirth, DateofJoining, ContactNumber, Remarks, UserID, IpAddress ) values
							('$labor_id','$labor_name','$pres_addr','$per_addr','$category', $gang, '$skills','$terminal_op','$date_of_berth',
							'$date_of_join', '$contact_no','$remarks', '$login_id', '$ipaddr')";
					$entryStat=$this->bm->dataInsertDb2($insertQuery);
					if($entryStat==1)
					{
						
						$laborDetailsStr = "SELECT LaborDetailsID AS rtnValue FROM ctmsmis.lasLabourDetailInfo ORDER BY LaborDetailsID DESC LIMIT 1";
						$rtnValue = $this->bm->dataReturnDb2($laborDetailsStr);
						
						$insertQuery="insert into ctmsmis.lasGangWiseLaborInfo (GangInformationID, LaborDetailsID, UserID, IpAddress, sDate ) values
							('$gang,','$rtnValue', '$login_id', '$ipaddr','$date_of_join')";
						$entryStat=$this->bm->dataInsertDb2($insertQuery);
				
						$data['msg']="<font color='green'><b>Data Successfully Inserted.</b></font>";
					}
					else
					{
						$data['msg']="<font color='red'><b>Data Not Inserted.</b></font>";
					}
				}
			}	
				
			$query = "SELECT LaborDetailsID,LaborID, LaborName, PresentAddress, PermanentAddress,  CategoryName, lasLabourDetailInfo.GangInformationID,GangID, Skilled, berthname,
			DateofBirth, DateofJoining, ContactNumber, lasLabourDetailInfo.Remarks, lasLabourDetailInfo.UserID, lasLabourDetailInfo.IpAddress FROM ctmsmis.lasLabourDetailInfo
			INNER JOIN ctmsmis.lasCateoryInformation ON lasCateoryInformation.CategoryID = lasLabourDetailInfo.CategoryID
			LEFT JOIN ctmsmis.lasGangInfo ON lasGangInfo.GangInformationID=lasLabourDetailInfo.GangInformationID order by LaborDetailsID desc";
			$laborInfoList = $this->bm->dataSelectDb2($query);

			$berthOpStr = "SELECT Organization_Name FROM organization_profiles WHERE Org_Type_id=30 AND AIN_No IS NOT NULL";
			$berthOpList = $this->bm->dataSelectDb1($berthOpStr);

			$gang_str= "SELECT DISTINCT GangID, GangInformationID FROM ctmsmis.lasGangInfo";
			
			$gangList = $this->bm->dataSelectDb2($gang_str);
			
			$category_str= "SELECT DISTINCT CategoryName, CategoryID FROM ctmsmis.lasCateoryInformation";
			$cateList = $this->bm->dataSelectDb2($category_str);
				
			$data['berthOpList']=$berthOpList;
			$data['cateList']=$cateList;
			$data['gangList']=$gangList;
			$data['laborInfoList']=$laborInfoList;
				
			//$data['laborInfoList']=$laborInfoList;
			$data['title']="Labour Entry Form CCT Lasher";
			$data['editFlag']=0;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('labourInfoEntryLasher',$data);
			$this->load->view('jsAssets');
		}	
	}
	
	function labourInfoEntryLasherList()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{	
			$sql_user_num="SELECT count(*) as rtnValue FROM ctmsmis.lasLabourDetailInfo
				INNER JOIN ctmsmis.lasCateoryInformation ON lasCateoryInformation.CategoryID = lasLabourDetailInfo.CategoryID
				LEFT JOIN ctmsmis.lasGangInfo ON lasGangInfo.GangInformationID=lasLabourDetailInfo.GangInformationID order by LaborDetailsID desc ";			
			$segment_three = $this->uri->segment(3);				
			$config = array();
			$config["base_url"] = site_url("report/labourInfoEntryLasherList/$segment_three");
			
			$config["total_rows"] = $this->bm->dataReturnDb2($sql_user_num);
			
			//echo "hh : ".$config["total_rows"];
			$config["per_page"] = 20;
			$offset = $this->uri->segment(4, 0);
			$config["uri_segment"] = 4;
			$limit=$config["per_page"];
			
			$this->pagination->initialize($config);
			$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;				
			$start=$page; 
			$data['msg']="";
			if($this->input->post('delete'))
			{
				$labor_id=$this->input->post('laborId');
				$deleteSql="DELETE FROM ctmsmis.lasLabourDetailInfo WHERE lasLabourDetailInfo.LaborID='$labor_id'";
				$deleteStat=$this->bm->dataDeleteDb2($deleteSql);
				//$data['msg']="<font color='red'><b>Data Deleted.</b></font>"; */
			}	
			$query = "SELECT LaborDetailsID,LaborID, LaborName, PresentAddress, PermanentAddress,  CategoryName, 			 lasLabourDetailInfo.GangInformationID,GangID, Skilled, berthname,
				DateofBirth, DateofJoining, ContactNumber, lasLabourDetailInfo.Remarks, lasLabourDetailInfo.UserID, lasLabourDetailInfo.IpAddress FROM ctmsmis.lasLabourDetailInfo
				INNER JOIN ctmsmis.lasCateoryInformation ON lasCateoryInformation.CategoryID = lasLabourDetailInfo.CategoryID
				LEFT JOIN ctmsmis.lasGangInfo ON lasGangInfo.GangInformationID=lasLabourDetailInfo.GangInformationID order by LaborDetailsID desc";
			$laborInfoList = $this->bm->dataSelectDb2($query);
			
	
				
			$data['laborInfoList']=$laborInfoList;
			$data['start']=$start;
			$data["links"] = $this->pagination->create_links();
			$data['title']="Labour Info List For CCT Lasher";
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('labourInfoEntryLasherList',$data);
			$this->load->view('jsAssetsList');
    	}
	}
	
	function labourInfoEntryLasherEdit()
	{
        $session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{           
            $laborId= $this->input->post('laborId');
			$query = "SELECT LaborDetailsID,LaborID, LaborName, PresentAddress, PermanentAddress,  CategoryName, lasLabourDetailInfo.CategoryID,lasLabourDetailInfo.GangInformationID,GangID, Skilled, berthname, 
			DateofBirth, DateofJoining, ContactNumber, lasLabourDetailInfo.Remarks, lasLabourDetailInfo.UserID, lasLabourDetailInfo.IpAddress FROM ctmsmis.lasLabourDetailInfo
			INNER JOIN ctmsmis.lasCateoryInformation ON lasCateoryInformation.CategoryID = ctmsmis.lasLabourDetailInfo.CategoryID
			LEFT JOIN ctmsmis.lasGangInfo ON lasGangInfo.GangInformationID=ctmsmis.lasLabourDetailInfo.GangInformationID 
			where ctmsmis.lasLabourDetailInfo.LaborDetailsID='$laborId'";
			$select_result = $this->bm->dataSelectDb2($query);
                		
			$data['select_result']=$select_result;
			$berthOpStr = "SELECT Organization_Name FROM cchaportdb.organization_profiles WHERE Org_Type_id=30 AND AIN_No IS NOT NULL";
			$berthOpList = $this->bm->dataSelectDb1($berthOpStr);

		     $gang_str= "SELECT DISTINCT GangID, GangInformationID FROM ctmsmis.lasGangInfo";
			
			$gangList = $this->bm->dataSelectDb2($gang_str);
		    $category_str= "SELECT DISTINCT CategoryName, CategoryID FROM ctmsmis.lasCateoryInformation";
			$cateList = $this->bm->dataSelectDb2($category_str);
				
			$data['berthOpList']=$berthOpList;
			$data['cateList']=$cateList;
			$data['gangList']=$gangList;

		

			$data['editFlag']=1;
			$msg="";
			$data['title']="Labour Entry Form CCT Lasher";
			$data['msg']=$msg;
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('labourInfoEntryLasher',$data);
			$this->load->view('jsAssets');
        }
	}
	
	//Gang Starts--------------
	function gangEntryForm()
	{	
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id = $this->session->userdata('login_id');	

			// $str="SELECT * FROM ctmsmis.lasganginformation ORDER BY GangInformationID DESC";
			// $rtnGangList = $this->bm->dataSelect($str);					
			// $data['rtnGangList']=$rtnGangList;
			
			
			$sql_tot_gang="select count(*) as rtnValue from ctmsmis.lasGangInfo";			
			$segment_three = $this->uri->segment(3);				
			$config = array();
			$config["base_url"] = site_url("report/gangEntryForm/$segment_three");
			
			$config["total_rows"] = $this->bm->dataReturnDb2($sql_tot_gang);
			$trow = $this->bm->dataReturnDb2($sql_tot_gang);
			$config["per_page"] = 5;
			$offset = $this->uri->segment(4, 0);
			$config["uri_segment"] = 4;
			$limit=$config["per_page"];
			
			$this->pagination->initialize($config);
			$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;				
			$start=$page;
			
			$str="SELECT * FROM ctmsmis.lasGangInfo ORDER BY GangInformationID DESC";
			$rtnGangList = $this->bm->dataSelectDb2($str);
			$data['rtnGangList']=$rtnGangList;
			$data['start']=$start;
			$data["links"] = $this->pagination->create_links();
			$data['tableTitle']="Gang LIST";
			
			$msg="";
			$frmType="new";
			$data['frmType']=$frmType;
			$data['msg']=$msg;
			$data['title']="Gang Entry Form...";
			$data['login_id']=$login_id;
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('GangForm',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	function GangEntry()
	{
		$login_id = $this->session->userdata('login_id');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$gangID=$this->input->post('gangID');
			$gangName=$this->input->post('gangName');
			$rqrdLbr=$this->input->post('rqrdLbr');
			$gangRemarks=$this->input->post('gangRemarks');
			$frmType=$this->input->post('frmType');
			$cnt=0;
			
			if($frmType=="new")
			{						
				$sql_cnt_duplicate="SELECT COUNT(*) AS rtnValue FROM ctmsmis.lasGangInfo WHERE GangID='$gangID'";
				$cnt=$this->bm->dataReturnDb2($sql_cnt_duplicate);
				if($cnt>0)
					{
						$msg="<font color='red'><b>Sorry! Gang ID already exists.</b></font>";
					}
				else
					{
						$sql_gangEntry="INSERT INTO ctmsmis.lasGangInfo(GangID,GangName,RequiredLabor,Remarks,UserID,IpAddress,DateTime)
						VALUES('$gangID','$gangName','$rqrdLbr','$gangRemarks','$login_id','$ipaddr',now())";
									
						if($this->bm->dataInsertDb2($sql_gangEntry))
						{
							$msg="<font color='green'><b>Successfully inserted</b></font>";
						}
						else
						{
							$msg="<font color='red'><b>Entry failed</b></font>";
						}
					}
			}
			else
			{
				
				$gangByID=$this->input->post('gangByID');
				$sql_cnt_duplicate="SELECT COUNT(*) AS rtnValue 
							FROM ctmsmis.lasGangInfo 
							WHERE GangID='$gangID' AND GangInformationID NOT IN($gangByID)";
				$cnt=$this->bm->dataReturnDb2($sql_cnt_duplicate);
				if($cnt>0)
					{
						$msg="<font color='red'><b>Sorry! Gang ID already exists.</b></font>";
					}
				else
					{
														
						$sql_gangEntry="UPDATE ctmsmis.lasGangInfo 
								SET GangID='$gangID',GangName='$gangName',RequiredLabor='$rqrdLbr',Remarks='$gangRemarks' 
								WHERE GangInformationID='$gangByID'";
									
						if($this->bm->dataUpdatedb2($sql_gangEntry))
						{
							$msg="<font color='green'><b>Successfully Updated!</b></font>";
						}
						else
						{
							$msg="<font color='red'><b>Update failed!</b></font>";
						}
					}
			}
									
			// $str="SELECT * FROM ctmsmis.lasganginformation ORDER BY GangInformationID DESC";
			// $rtnGangList = $this->bm->dataSelect($str);					
			// $data['rtnGangList']=$rtnGangList;
			
			
			$sql_tot_gang="select count(*) as rtnValue from ctmsmis.lasGangInfo";			
			$segment_three = $this->uri->segment(3);				
			$config = array();
			$config["base_url"] = site_url("report/GangEntry/$segment_three");
			
			$config["total_rows"] = $this->bm->dataReturnDb2($sql_tot_gang);
			$trow = $this->bm->dataReturnDb2($sql_tot_gang);
			$config["per_page"] = 5;
			$offset = $this->uri->segment(4, 0);
			$config["uri_segment"] = 4;
			$limit=$config["per_page"];
			
			$this->pagination->initialize($config);
			$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;				
			$start=$page;
			
			$str="SELECT * FROM ctmsmis.lasGangInfo ORDER BY GangInformationID DESC";
			$rtnGangList = $this->bm->dataSelectDb2($str);
			$data['rtnGangList']=$rtnGangList;
			$data['start']=$start;
			$data["links"] = $this->pagination->create_links();
			$data['tableTitle']="Gang LIST";
			
			
			$data['frmType']=$frmType;
			$data['msg']=$msg;
			$data['title']="Gang Entry Form...";
			$data['login_id']=$login_id;
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('GangForm',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	function GangUpdate()
	{
		$login_id = $this->session->userdata('login_id');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$gangInfoID=$this->input->post('editID');
														
			$str="SELECT * FROM ctmsmis.lasGangInfo WHERE GangInformationID='$gangInfoID'";
			$editGangInfo = $this->bm->dataSelectDb2($str);					
			$data['editGangInfo']=$editGangInfo;	

			// $str="SELECT * FROM ctmsmis.lasganginformation ORDER BY GangInformationID DESC";
			// $rtnGangList = $this->bm->dataSelect($str);					
			// $data['rtnGangList']=$rtnGangList;

			$sql_tot_gang="select count(*) as rtnValue from ctmsmis.lasGangInfo";			
			$segment_three = $this->uri->segment(3);				
			$config = array();
			$config["base_url"] = site_url("report/GangUpdate/$segment_three");
			
			$config["total_rows"] = $this->bm->dataReturnDb2($sql_tot_gang);
			$trow = $this->bm->dataReturnDb2($sql_tot_gang);
			$config["per_page"] = 5;
			$offset = $this->uri->segment(4, 0);
			$config["uri_segment"] = 4;
			$limit=$config["per_page"];
			
			$this->pagination->initialize($config);
			$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;				
			$start=$page;
			
			$str="SELECT * FROM ctmsmis.lasGangInfo ORDER BY GangInformationID DESC";
			$rtnGangList = $this->bm->dataSelectDb2($str);
			$data['rtnGangList']=$rtnGangList;
			$data['start']=$start;
			$data["links"] = $this->pagination->create_links();
			$data['tableTitle']="Gang LIST";
			
			$frmType = "edit";
			$msg="";
			
			$data['frmType']=$frmType;
			$data['msg']=$msg;
			$data['title']="Gang Edit Form...";
			$data['login_id']=$login_id;
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('GangForm',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	function GangDelete()
	{
		$login_id = $this->session->userdata('login_id');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$gangInfoID=$this->input->post('deleteID');
														
			$str="DELETE FROM ctmsmis.lasGangInfo WHERE GangInformationID='$gangInfoID'";
			$deleteGangInfo = $this->bm->dataDeleteDb2($str);					
			$data['deleteGangInfo']=$deleteGangInfo;
			if($deleteGangInfo)
			{
				$msg="<font color='green'><b>Data Deleted!</b></font>";
			}
			else
			{
				$msg="<font color='red'><b>Failed!</b></font>";
			}

			// $str="SELECT * FROM ctmsmis.lasganginformation ORDER BY GangInformationID DESC";
			// $rtnGangList = $this->bm->dataSelect($str);					
			// $data['rtnGangList']=$rtnGangList;


			$sql_tot_gang="select count(*) as rtnValue from ctmsmis.lasGangInfo";			
			$segment_three = $this->uri->segment(3);				
			$config = array();
			$config["base_url"] = site_url("report/GangDelete/$segment_three");
			
			$config["total_rows"] = $this->bm->dataReturnDb2($sql_tot_gang);
			$trow = $this->bm->dataReturnDb2($sql_tot_gang);
			$config["per_page"] = 5;
			$offset = $this->uri->segment(4, 0);
			$config["uri_segment"] = 4;
			$limit=$config["per_page"];
			
			$this->pagination->initialize($config);
			$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;				
			$start=$page;
			
			$str="SELECT * FROM ctmsmis.lasGangInfo ORDER BY GangInformationID DESC limit $start,$limit";
			$rtnGangList = $this->bm->dataSelectDb2($str);
			$data['rtnGangList']=$rtnGangList;
			$data['start']=$start;
			$data["links"] = $this->pagination->create_links();
			$data['tableTitle']="Gang LIST";
			
			$frmType = "new";
			$data['frmType']=$frmType;
			$data['msg']=$msg;
			$data['title']="Gang Edit Form...";
			$data['login_id']=$login_id;
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('GangForm',$data);
			$this->load->view('jsAssetsList');
		}
	}
    //Gang Ends---------------  
	
	//Labour Category Starts-------

	function labourCategoryForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$num_row = "SELECT COUNT(*) as rtnValue FROM ctmsmis.lasCateoryInformation";
			$segment_three = $this->uri->segment(3);
			
			$config = array();
			$config["base_url"] = site_url("report/labourCategoryForm/$segment_three");
			
			$config["total_rows"] = $this->bm->dataReturnDb2($num_row);
			$config["per_page"] = 10;
			$offset = $this->uri->segment(4, 0);
			$config["uri_segment"] = 4;
			$limit=$config["per_page"];
			
			$this->pagination->initialize($config);

			$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;
			
			$start=$page;


			$query = "SELECT * FROM ctmsmis.lasCateoryInformation ORDER BY DateTime DESC";

			$catInf = $this->bm->dataSelectDb2($query);

			$msg = "";
			$data['title'] = "Labour Category";
			$data["links"] = $this->pagination->create_links();
			$data['start'] = $start;
			$data['catInf'] = $catInf;
			$data['msg'] = $msg;
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');		
			$this->load->view('labourCategoryForm',$data);
			$this->load->view('jsAssetsList');		
		}
	}
	
	function labourCategoryInsert()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$catName = trim($this->input->post('category'));
			$remarks = $this->input->post('remarks');
			$ip_address = $_SERVER['REMOTE_ADDR'];
			

			if(isset($_POST['save'])){
				$query = "SELECT COUNT(*) AS rtnValue from ctmsmis.lasCateoryInformation WHERE CategoryName = '$catName'";
				$rtnValue = $this->bm->dataReturnDb2($query);
			
				if($rtnValue>0){
					$msg = "<font color='red'><b>Category Name already exist!</b></font>";

				}else{
					$query = "INSERT INTO ctmsmis.lasCateoryInformation (CategoryName,Remarks,UserID,IpAddress,DateTime) VALUES('$catName','$remarks','$login_id','$ip_address',now())";

					$insertStat = $this->bm->dataInsertDb2($query);

					if($insertStat)
					{								
						$msg = "<font color='green'><b>Data Inserted successfully</b></font>";
					}
					else
					{
						$msg = "<font color='red'><b>Data Cannot be Inserted</b></font>";
					}
				}

			}else if(isset($_POST['update'])){
				$id = $this->input->post('cngKey');

				$query = "SELECT COUNT(*) AS rtnValue from ctmsmis.lasCateoryInformation WHERE CategoryName = '$catName' AND CategoryID NOT IN($id)";
				
				$rtnValue = $this->bm->dataReturnDb2($query);
				
				if($rtnValue>0){
					$msg = "<font color='red'><b>Category Name already exist!</b></font>";

				}else{
					$query="UPDATE ctmsmis.lasCateoryInformation SET CategoryName = '$catName',Remarks = '$remarks',UserID = '$login_id',IpAddress = '$ip_address',DateTime = now() WHERE CategoryID = '$id'";

					$updateStat = $this->bm->dataUpdateDb2($query);

					if($updateStat)
					{								
						$msg = "<font color='green'><b>Data Updated successfully</b></font>";
					}
					else
					{
						$msg = "<font color='red'><b>Data Cannot be Updated</b></font>";
					}
				}
			}

			$num_row = "SELECT COUNT(*) as rtnValue FROM ctmsmis.lasCateoryInformation";
			$segment_three = $this->uri->segment(3);
			
			$config = array();
			$config["base_url"] = site_url("report/labourCategoryInsert/$segment_three");
			
			$config["total_rows"] = $this->bm->dataReturnDb2($num_row);
			$config["per_page"] = 10;
			$offset = $this->uri->segment(4, 0);
			$config["uri_segment"] = 4;
			$limit=$config["per_page"];
			
			$this->pagination->initialize($config);

			$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;
			
			$start=$page;


			$query = "SELECT * FROM ctmsmis.lasCateoryInformation ORDER BY DateTime DESC";

			$catInf = $this->bm->dataSelectDb2($query);

			$data['title'] = "Labour Category";
			$data["links"] = $this->pagination->create_links();
			$data['start'] = $start;
			$data['catInf'] = $catInf;
			$data['msg'] = $msg;
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');		
			$this->load->view('labourCategoryForm',$data);
			$this->load->view('jsAssetsList');			
		}
	}
	
	function labourCategoryAction(){
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$id = $this->input->post('key');
			
			if(isset($_POST['edit'])){
				$query="SELECT * FROM ctmsmis.lasCateoryInformation WHERE CategoryID = '$id'";
				$catInfById = $this->bm->dataSelectDb2($query);
				$data['catInfoById'] = $catInfById;
				$msg = "";

			}else if(isset($_POST['delete'])){
				$query="DELETE FROM ctmsmis.lasCateoryInformation WHERE CategoryID = '$id'";
				$deleteStat = $this->bm->dataDeleteDb2($query);

				if($deleteStat)
				{								
					$msg = "<font color='green'><b>Data Deleted successfully</b></font>";
				}
				else
				{
					$msg = "<font color='red'><b>Data Cannot be Deleted</b></font>";
				}
			}

			$num_row = "SELECT COUNT(*) as rtnValue FROM ctmsmis.lasCateoryInformation";
			$segment_three = $this->uri->segment(3);
			
			$config = array();
			$config["base_url"] = site_url("report/labourCategoryAction/$segment_three");
			
			$config["total_rows"] = $this->bm->dataReturnDb2($num_row);
			$config["per_page"] = 10;
			$offset = $this->uri->segment(4, 0);
			$config["uri_segment"] = 4;
			$limit=$config["per_page"];
			
			$this->pagination->initialize($config);

			$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;
			
			$start=$page;


			$query = "SELECT * FROM ctmsmis.lasCateoryInformation ORDER BY DateTime DESC";

			$catInf = $this->bm->dataSelectDb2($query);

			$data['title'] = "Labour Category";
			$data["links"] = $this->pagination->create_links();
			$data['start'] = $start;
			$data['catInf'] = $catInf;
			$data['msg'] = $msg;
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');		
			$this->load->view('labourCategoryForm',$data);
			$this->load->view('jsAssetsList');

		}
	}

	//Labour Category Ends...
	
	// P Shed Tally Entry Starts--------------
	function pShedTallyEntryWithIgmInfoForm()
	{	
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="TALLY ENTRY FORM WITH IGM INFORMATION(P Shed)";
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('pShedTallyEntryForm',$data);
			$this->load->view('jsAssets');
		}
	}

	function pShedTallyEntryFormWithIgmContInfo()
	{	
			
		$session_id = $this->session->userdata('value');			
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$org_Type_id = $this->session->userdata('org_Type_id');
			$login_id = $this->session->userdata('login_id');
			if($this->input->post('rotation') && $this->input->post('cont'))
			{
				$rotation=trim($this->input->post('rotation'));
				$cont=trim($this->input->post('cont'));
				
				$cntquery="SELECT COUNT(lcl_assignment_detail.igm_detail_id) AS rtnValue
				FROM lcl_assignment_detail
				INNER JOIN igm_details ON igm_details.id=lcl_assignment_detail.igm_detail_id
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'";
				
				// $cntrslt=$this->bm->dataReturnDb1($cntquery);
				$cntrslt=1;//assign 1 for temporary to skip assignment 
				
				
				if($cntrslt==0)
				{
					$data['title']="TALLY ENTRY FORM WITH IGM INFORMATION...";
					$data['msg']="Please provide assignment for the container";
					$data['assigned']=0;
					$data['rotation']=$rotation;
					$data['cont']=$cont;
					$data['login_id']=$login_id;
					$this->load->view('pShedTallyEntryFormView',$data);
					
					//return;
					//exchange_btn_status;
				} 
			}
			else
			{
				$cont=$this->uri->segment(3);
				$rot_year=$this->uri->segment(4);
				$rot_no=$this->uri->segment(5);
				$rotation=$rot_year.'/'.$rot_no;
				
				$cntquery="SELECT COUNT(lcl_assignment_detail.igm_detail_id) AS rtnValue
				FROM lcl_assignment_detail
				INNER JOIN igm_details ON igm_details.id=lcl_assignment_detail.igm_detail_id
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'";
				
				$cntrslt=$this->bm->dataReturnDb1($cntquery);
				
				if($cntrslt==0)
				{
					$data['title']="TALLY ENTRY FORM WITH IGM INFORMATION...";
					$data['msg']="Please provide assignment for the container";
					$data['assigned']=0;
					$data['rotation']=$rotation;
					$data['cont']=$cont;
					$data['login_id']=$login_id;
					$this->load->view('pShedTallyEntryFormView',$data);
					
					//return;
				}
			}
			
			$chkExistShedTallyQry="select count(id) as id from shed_tally_info WHERE  import_rotation='$rotation' and cont_number='$cont'";
			$rtnExistShedTally = $this->bm->dataSelectDb1($chkExistShedTallyQry);
			$cntExist = $rtnExistShedTally[0]['id'];								
			
			$tbl = "sup_detail";
		
			//Cont_gross_weight and cont_seal_number added
			if($cntExist<1)
			{
				$sqlContainer="SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
				FROM igm_supplimentary_detail 
				LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id					
				WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'
				ORDER BY 2";
				
				$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
				FROM igm_supplimentary_detail 
				LEFT JOIN igm_details ON igm_details.id=igm_supplimentary_detail.igm_detail_id
				LEFT JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
				LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id	
				WHERE igm_masters.Import_Rotation_No= '$rotation' AND igm_sup_detail_container.cont_number='$cont'";
			}
			else
			{
				$sqlContainerCheck="SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
				FROM igm_supplimentary_detail 
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'
				ORDER BY 2";				

				$rtnContainerListCheck = $this->bm->dataSelectDb1($sqlContainerCheck);
				$cntCheck = count($rtnContainerListCheck);
				
				if($cntCheck==0)
				{
					$sqlContainer = "select * from (select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rotation' and cont_number='$cont'					
					) tbl1
					union
					select * from (SELECT shed_tally_info.igm_detail_id AS id,
					import_rotation AS Import_Rotation_No,
					BL_No,
					shed_tally_info.cont_number,
					cont_size,
					Cont_gross_weight,
					cont_seal_number,
					Pack_Description,
					Pack_Marks_Number,
					Pack_Number,
					ConsigneeDesc,
					NotifyDesc FROM shed_tally_info LEFT JOIN igm_details ON shed_tally_info.igm_detail_id=igm_details.id LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id WHERE shed_tally_info.import_rotation='$rotation' AND shed_tally_info.cont_number='$cont' AND BL_NO IS NOT NULL 
					) tbl2";		

					$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
					FROM igm_details 
					LEFT JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
					LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id	
					WHERE igm_masters.Import_Rotation_No= '$rotation' AND igm_detail_container.cont_number='$cont'";
				}
				else
				{
					$sqlContainer="select * from (SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,
					cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					FROM igm_supplimentary_detail 
					LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id					
					WHERE Import_Rotation_No='$rotation' AND cont_number='$cont'
					) tbl1
					union
					select * from (SELECT shed_tally_info.igm_sup_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,
					shed_tally_info.cont_number, cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,
					NotifyDesc FROM shed_tally_info 
					LEFT JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
					LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id 
					WHERE shed_tally_info.import_rotation='$rotation' and shed_tally_info.cont_number='$cont' and BL_NO is null
					)tbl2";
					
					$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
					FROM igm_supplimentary_detail 
					LEFT JOIN igm_details ON igm_details.id=igm_supplimentary_detail.igm_detail_id
					LEFT JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
					LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id	
					WHERE igm_masters.Import_Rotation_No= '$rotation' AND igm_sup_detail_container.cont_number='$cont'";
				}										
			}
			//echo $sqlContainer;
			
			$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
			$cnt = count($rtnContainerList);				
									
			//Cont_gross_weight and cont_seal_number added
			if($cnt==0)
			{
				$tbl = "detail";
				if($cntExist<1)
				{
					$sqlContainer = "select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					LEFT join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rotation' and cont_number='$cont'
					order by 2";
				}
				else
				{
					$sqlContainer = "select * from (select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rotation' and cont_number='$cont'					
					) tbl1
					union
					select * from (SELECT shed_tally_info.igm_detail_id AS id,
					import_rotation AS Import_Rotation_No,
					BL_No,
					shed_tally_info.cont_number,
					cont_size,
					Cont_gross_weight,
					cont_seal_number,
					Pack_Description,
					Pack_Marks_Number,
					Pack_Number,
					ConsigneeDesc,
					NotifyDesc FROM shed_tally_info LEFT JOIN igm_details ON shed_tally_info.igm_detail_id=igm_details.id LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id WHERE shed_tally_info.import_rotation='$rotation' AND shed_tally_info.cont_number='$cont' AND BL_NO IS NOT NULL 
					)tbl2";
				}
				
				$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
				
				$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
				FROM igm_details 
				LEFT JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
				LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id	
				WHERE igm_masters.Import_Rotation_No= '$rotation' AND igm_detail_container.cont_number='$cont'";
			}
			
			// query for devonestop - remove later
			$chkExchangeDoneQuery="select count(id) as chkVal from shed_tally_info where import_rotation='$rotation' and cont_number='$cont' and exchange_done_status=1";
			
			if($org_Type_id==59)			//CPA Shed Users
			{
				$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
				FROM shed_tally_info 
				WHERE import_rotation='$rotation' AND cont_number='$cont' AND cpa_exchange_done_status=1";
			}
			else if($org_Type_id==30)		// Berth Operator
			{					
				$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
				FROM shed_tally_info 
				WHERE import_rotation='$rotation' AND cont_number='$cont' AND berth_exchange_done_status=1";
			}
			else if($org_Type_id==4)		// FF
			{					
				$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
				FROM shed_tally_info 
				WHERE import_rotation='$rotation' AND cont_number='$cont' AND ff_exchange_done_status=1";
			}
			
			$chkList = $this->bm->dataSelectDb1($chkExchangeDoneQuery);
			$chkVal= $chkList[0]['chkVal'];
			if($chkVal>0)
			{
				//$data['update_btn_status']=0;
				$data['view_btn_status']=1;  //previously 0; 1 for exchange done; alter if necessary
				$data['save_btn_status']=0;
				$data['exchange_btn_status']=0;
				$data['msgExchange']="Exchange Done";
			}
			else
			{
				// query for devonestop - remove later
				$chkExchangeDoneQuery="select count(id) as chkVal from shed_tally_info where import_rotation='$rotation' and cont_number='$cont' and exchange_done_status=0";
				
				if($org_Type_id==59)			//CPA Shed Users
				{
					$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
					FROM shed_tally_info 
					WHERE import_rotation='$rotation' AND cont_number='$cont' AND cpa_exchange_done_status=0";
				}
				else if($org_Type_id==30)		// Berth Operator
				{					
					$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
					FROM shed_tally_info 
					WHERE import_rotation='$rotation' AND cont_number='$cont' AND berth_exchange_done_status=0";
				}
				else if($org_Type_id==4)		// FF
				{					
					$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
					FROM shed_tally_info 
					WHERE import_rotation='$rotation' AND cont_number='$cont' AND ff_exchange_done_status=0";
				}
		
				$chkList = $this->bm->dataSelectDb1($chkExchangeDoneQuery);
				$chkVal= $chkList[0]['chkVal'];
				if($chkVal>0)
				{
					//$data['update_btn_status']=1;
					$data['view_btn_status']=1;
					$data['exchange_btn_status']=1;
					$data['save_btn_status']=1;
				}
				else
				{
					//$data['update_btn_status']=0;
					$data['view_btn_status']=0;
					$data['exchange_btn_status']=0;
					$data['save_btn_status']=1;
				}
			}
			$login_id = $this->session->userdata('login_id');
														
			$rslt_vesselname_seal=$this->bm->dataSelectDb1($sql_vesselname_seal);
			
			$data['rslt_vesselname_seal']=$rslt_vesselname_seal;
			
			$data['assigned']=1;		
			$data['rotation']=$rotation;
			$data['tbl']=$tbl;
			$data['cont']=$cont;
			$data['stat']="";
			$data['login_id']=$login_id;
			
			
			$data['rtnContainerList']=$rtnContainerList; //"$rtnContainerList" returns selected data for table
			$this->load->view('pShedTallyEntryFormView',$data);
		}
	}
	
	function pShedSaveTallyRcv()
		{	
			$imdg=$this->input->post('imdgClass');			
			$weight=$this->input->post('weight');
			$storageArea=$this->input->post('storageArea');	
			$totalPck=$this->input->post('totalPck');
			$rcv_unit=$this->input->post('rcv_unit');
			$actualmarks=$this->input->post('actualmarks');
			$remark=$this->input->post('remark');			
			$dtlId=$this->input->post('dtlId');
			$rot=$this->input->post('rot');
			$cont=strtoupper(trim($this->input->post('cont')));
			$tbl=$this->input->post('tbl');
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			$login_id = $this->session->userdata('login_id');
			$org_Type_id = $this->session->userdata('org_Type_id');
			$date = date('dmy');
			$dtlDate = date('my');
			$igmDetailQuery="select MAX(id) as rtnValue from shed_tally_info";	
		
			$igmDetailId = $this->bm->dataReturnDb1($igmDetailQuery);
			$igmDetailId_no = $igmDetailId+1;
			$igmDetailNumber=$dtlDate."00".$igmDetailId_no;
			 
			$strChkTallySheetEntry="select count(id) as id from shed_tally_info WHERE  import_rotation='$rot' and cont_number='$cont'";
			$rtnExistTallySheet = $this->bm->dataSelectDb1($strChkTallySheetEntry);
			$tallyExist = $rtnExistTallySheet[0]['id'];
			if($tallyExist>0)
			{
				$strGetTallyInformation= "select distinct tally_sheet_no,wr_date,tally_sheet_number from shed_tally_info WHERE  import_rotation='$rot' and cont_number='$cont'";
				$rtnGetTallyInformation = $this->bm->dataSelectDb1($strGetTallyInformation);
				
				$tallySheetNo=$rtnGetTallyInformation[0]['tally_sheet_no'];
				$wrDate=$rtnGetTallyInformation[0]['wr_date'];
				$tallySheetNumber=$rtnGetTallyInformation[0]['tally_sheet_number'];
				if($tbl=="sup_detail")
				{
					if($dtlId=="" || $dtlId==0)
						{
							
							$str = "insert into shed_tally_info(igm_sup_detail_id,import_rotation,cont_number,update_by,ip_addr,remarks,last_update,
							tally_sheet_no,actual_marks,total_pack,wr_date,shed_yard,tally_sheet_number,imdg,weight,rcv_unit)
							values('$igmDetailNumber','$rot','$cont','$login_id','$ipaddr','$remark',now(),'$tallySheetNo','$actualmarks',$totalPck,date(now()),'$storageArea','$tallySheetNumber','$imdg','$weight','$rcv_unit')";
						}
					else
						{
							
							$str = "insert into shed_tally_info(igm_sup_detail_id,import_rotation,cont_number,update_by,ip_addr,remarks,
								last_update,tally_sheet_no,actual_marks,total_pack,wr_date,shed_yard,
								tally_sheet_number,imdg,weight,rcv_unit)
								values('$dtlId','$rot','$cont','$login_id','$ipaddr','$remark',now(),'$tallySheetNo','$actualmarks',
								$totalPck,'$wrDate','$storageArea','$tallySheetNumber','$imdg','$weight','$rcv_unit')";
						}
				}
				else
				{
					if($dtlId=="" || $dtlId==0)
						{
							$maxtally_sheet_no = "";
							$str = "insert into shed_tally_info(igm_sup_detail_id,import_rotation,cont_number,update_by,ip_addr,remarks,last_update,tally_sheet_no,actual_marks,total_pack,wr_date,shed_yard,tally_sheet_number,imdg,weight,rcv_unit)
							values('$igmDetailNumber','$rot','$cont','$login_id','$ipaddr','$remark',now(),
							'$maxtally_sheet_no','$actualmarks',$totalPck,date(now()),'$storageArea','$tallySheetNumber'
							,'$imdg','$weight','$rcv_unit')";
						}
					else
						{
							$str = "insert into shed_tally_info(igm_detail_id,import_rotation,cont_number,update_by,ip_addr,
								remarks,last_update,tally_sheet_no,actual_marks,total_pack,wr_date,
								shed_yard,tally_sheet_number,imdg,weight,rcv_unit)
								values('$dtlId','$rot','$cont','$login_id','$ipaddr','$remark',now(),
								'$tallySheetNo','$actualmarks',$totalPck,'$wrDate',
								'$storageArea','$tallySheetNumber','$imdg','$weight','$rcv_unit')";
						}
				}
				$stat = $this->bm->dataInsertDB1($str);
				if($stat==1)
				{					
					$data['stat']="<font color='blue'><b>Sucessfully inserted</b></font>";
					$data['view_btn_status']=1;
					$data['exchange_btn_status']=1;
					$data['save_btn_status']=1;
				}
			}
			else
			{
				// echo "NEW DATA";	
				$tally_sheet_noQuery="select MAX(tally_sheet_no) as rtnValue from shed_tally_info";
				$tally_sheet_no = $this->bm->dataReturnDb1($tally_sheet_noQuery);
				
				$maxtally_sheet_no = $tally_sheet_no+1;
				//$igmDetailId_no = $igmDetailId+1;
				
				$size=strlen($maxtally_sheet_no);
				
				if($size==1)
				{
				//	 $tallySheetNumber="TSN"."-".$date."000".$maxtally_sheet_no;
					 $tallySheetNumber=$storageArea."-".$date."000".$maxtally_sheet_no;
					 //$igmDetailNumber=$dtlDate.$maxtally_sheet_no.$igmDetailId_no;
				}
				else if($size==2)
				{
				//	 $tallySheetNumber="TSN"."-".$date."00".$maxtally_sheet_no;
					$tallySheetNumber=$storageArea."-".$date."00".$maxtally_sheet_no;
					//$igmDetailNumber=$dtlDate.$maxtally_sheet_no.$igmDetailId_no;
				}
				else if($size==3)
				{
				//	 $tallySheetNumber="TSN"."-".$date."0".$maxtally_sheet_no;
					 $tallySheetNumber=$storageArea."-".$date."0".$maxtally_sheet_no;
					 //$igmDetailNumber=$dtlDate.$maxtally_sheet_no.$igmDetailId_no;
				}
				else 
				{
				//	 $tallySheetNumber="TSN"."-".$date."".$maxtally_sheet_no;
					$tallySheetNumber=$storageArea."-".$date."".$maxtally_sheet_no;
					//$igmDetailNumber=$dtlDate.$maxtally_sheet_no.$igmDetailId_no;
				}
				if($tbl=="sup_detail")
						{
							if($dtlId=="" || $dtlId==0)
							{
									$str = "insert into shed_tally_info(igm_sup_detail_id,import_rotation,cont_number,update_by,ip_addr,remarks,last_update,
									tally_sheet_no,actual_marks,total_pack,wr_date,shed_yard,tally_sheet_number,imdg,weight,rcv_unit)
									values('$igmDetailNumber','$rot','$cont','$login_id','$ipaddr','$remark',now(),
									'$maxtally_sheet_no','$actualmarks',,$totalPck,date(now()),'$storageArea','$tallySheetNumber',
									'$imdg','$weight','$rcv_unit')";
							}
							else
							{
									$str = "insert into shed_tally_info(igm_sup_detail_id,import_rotation,cont_number,update_by,ip_addr,remarks,
									last_update,tally_sheet_no,actual_marks,total_pack,wr_date,shed_yard,
									tally_sheet_number,imdg,weight,rcv_unit)
									values('$dtlId','$rot','$cont','$login_id','$ipaddr','$remark',now(),
									'$maxtally_sheet_no','$actualmarks',$totalPck,date(now()),'$storageArea','$tallySheetNumber','$imdg','$weight','$rcv_unit')";
							}
						}
						else
						{
							if($dtlId=="" || $dtlId==0)
							{
								$str = "insert into shed_tally_info(igm_sup_detail_id,import_rotation,cont_number,update_by,ip_addr,remarks,last_update,
								tally_sheet_no,actual_marks,total_pack,wr_date,shed_yard,tally_sheet_number,imdg,weight,rcv_unit)
									values('$igmDetailNumber','$rot','$cont','$login_id','$ipaddr','$remark',now(),
									'$maxtally_sheet_no','$actualmarks',$totalPck,date(now()),'$storageArea','$tallySheetNumber','$imdg','$weight','$rcv_unit')";
							}
							else
							{
								$str = "insert into shed_tally_info(igm_detail_id,import_rotation,cont_number,update_by,ip_addr,remarks,last_update,
								tally_sheet_no,actual_marks,total_pack,wr_date,shed_yard,tally_sheet_number,imdg,weight,rcv_unit)
								values('$dtlId','$rot','$cont','$login_id','$ipaddr','$remark',now(),
								'$maxtally_sheet_no','$actualmarks',$totalPck,date(now()),'$storageArea','$tallySheetNumber','$imdg','$weight','$rcv_unit')";
							}
						}
					// echo $str;
					// echo "<br>";
					$stat = $this->bm->dataInsertDB1($str);  //comment out to stop insertion
						if($stat==1)
						{
							$data['stat']="<font color='blue'><b>Sucessfully inserted</b></font>";
							$data['view_btn_status']=1;
							$data['exchange_btn_status']=1;
							$data['save_btn_status']=1;
						}
			}
			$chkExistShedTallyQry="select count(id) as id from shed_tally_info WHERE  import_rotation='$rot' and cont_number='$cont'";
			$rtnExistShedTally = $this->bm->dataSelectDb1($chkExistShedTallyQry);
			
			$cntExist = $rtnExistShedTally[0]['id'];
					
			if($tbl=="sup_detail")
			{
				$tbl=="sup_detail";
				if($cntExist<1)
				{
					$sqlContainer = "select igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_supplimentary_detail 
					inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					where Import_Rotation_No='$rot' and cont_number='$cont'
					order by 2";
				}
				else
				{
					$sqlContainer = "select * from (SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,
									cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
									FROM igm_supplimentary_detail 
									LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id					
									WHERE Import_Rotation_No='$rot' AND cont_number='$cont'
									) tbl1
									union
									select * from (SELECT shed_tally_info.igm_sup_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,
									shed_tally_info.cont_number, cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,
									NotifyDesc FROM shed_tally_info 
									LEFT JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
									LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id 
									WHERE shed_tally_info.import_rotation='$rot' and shed_tally_info.cont_number='$cont' and BL_NO is null
									)tbl2";
					/*$sqlContainer="SELECT shed_tally_info.igm_sup_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,shed_tally_info.cont_number,
					cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					FROM shed_tally_info 
					LEFT JOIN igm_supplimentary_detail  ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
					LEFT JOIN  igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					WHERE  shed_tally_info.import_rotation='$rot' and shed_tally_info.cont_number='$cont'
					ORDER BY 2";*/
				}
			}						
			else
			{
				$tbl=="detail";
				if($cntExist<1)
				{
					$sqlContainer = "select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rot' and cont_number='$cont'
					order by 2
					";
				}
				else
				{
					// echo "dtl 2 ".$sqlContainer = "select * from (select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
									// from igm_details 
									// inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
									// where Import_Rotation_No='$rot' and cont_number='$cont'					
									// ) tbl1
									// union
									// select * from (SELECT shed_tally_info.igm_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,
									// shed_tally_info.cont_number, cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,
									// NotifyDesc FROM shed_tally_info 
									// LEFT JOIN igm_details ON shed_tally_info.igm_detail_id=igm_details.id 
									// LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id 
									// WHERE shed_tally_info.import_rotation='$rot' and shed_tally_info.cont_number='$cont' and BL_NO is null
									// )tbl2";
									
					$sqlContainer = "SELECT
					igm_details.id,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,
					Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					FROM igm_details 
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id 
					WHERE Import_Rotation_No='$rot' AND cont_number='$cont'

					UNION
		
					SELECT shed_tally_info.igm_detail_id AS id,Description_of_Goods,import_rotation AS Import_Rotation_No,BL_No, 
					shed_tally_info.cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,
					Pack_Number,ConsigneeDesc,NotifyDesc 
					FROM shed_tally_info 
					LEFT JOIN igm_details ON shed_tally_info.igm_detail_id=igm_details.id 
					LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id 
					WHERE shed_tally_info.import_rotation='$rot' AND shed_tally_info.cont_number='$cont' AND BL_NO IS NULL";
				}
			}
			//echo $sqlContainer;
			$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);			
			$data['assigned']=1;
			$data['rotation']=$rot;
			$data['cont']=$cont;
			$data['tbl']=$tbl;
				
			$data['rtnContainerList']=$rtnContainerList;
			
			//////////Redirect to Tally
			$org_Type_id = $this->session->userdata('org_Type_id');
			$login_id = $this->session->userdata('login_id');
			if($this->input->post('rot') && $this->input->post('cont'))
			{
				$rot=trim($this->input->post('rot'));
				$cont=trim($this->input->post('cont'));
				
				$cntquery="SELECT COUNT(lcl_assignment_detail.igm_detail_id) AS rtnValue
				FROM lcl_assignment_detail
				INNER JOIN igm_details ON igm_details.id=lcl_assignment_detail.igm_detail_id
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE Import_Rotation_No='$rot' AND cont_number='$cont'";
				
				// $cntrslt=$this->bm->dataReturnDb1($cntquery);
				$cntrslt=1;//assign 1 for temporary to skip assignment 
				
				
				if($cntrslt==0)
				{
					$data['title']="TALLY ENTRY FORM WITH IGM INFORMATION...";
					$data['msg']="Please provide assignment for the container";
					$data['assigned']=0;
					$data['rotation']=$rot;
					$data['cont']=$cont;
					$data['login_id']=$login_id;
					$this->load->view('pShedTallyEntryFormView',$data);
					
					//return;
					//exchange_btn_status;
				} 
			}
			else
			{
				$cont=$this->uri->segment(3);
				$rot_year=$this->uri->segment(4);
				$rot_no=$this->uri->segment(5);
				$rot=$rot_year.'/'.$rot_no;
				
				$cntquery="SELECT COUNT(lcl_assignment_detail.igm_detail_id) AS rtnValue
				FROM lcl_assignment_detail
				INNER JOIN igm_details ON igm_details.id=lcl_assignment_detail.igm_detail_id
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE Import_Rotation_No='$rot' AND cont_number='$cont'";
				
				$cntrslt=$this->bm->dataReturnDb1($cntquery);
				
				if($cntrslt==0)
				{
					$data['title']="TALLY ENTRY FORM WITH IGM INFORMATION...";
					$data['msg']="Please provide assignment for the container";
					$data['assigned']=0;
					$data['rotation']=$rot;
					$data['cont']=$cont;
					$data['login_id']=$login_id;
					$this->load->view('pShedTallyEntryFormView',$data);
					
					//return;
				}
			}
			
			$chkExistShedTallyQry="select count(id) as id from shed_tally_info WHERE  import_rotation='$rot' and cont_number='$cont'";
			$rtnExistShedTally = $this->bm->dataSelectDb1($chkExistShedTallyQry);
			$cntExist = $rtnExistShedTally[0]['id'];								
			
			$tbl = "sup_detail";
		
			//Cont_gross_weight and cont_seal_number added
			if($cntExist<1)
			{
				$sqlContainer="SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
				FROM igm_supplimentary_detail 
				LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id					
				WHERE Import_Rotation_No='$rot' AND cont_number='$cont'
				ORDER BY 2";
				
				$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
				FROM igm_supplimentary_detail 
				LEFT JOIN igm_details ON igm_details.id=igm_supplimentary_detail.igm_detail_id
				LEFT JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
				LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id	
				WHERE igm_masters.Import_Rotation_No= '$rot' AND igm_sup_detail_container.cont_number='$cont'";
			}
			else
			{
				$sqlContainerCheck="SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
				FROM igm_supplimentary_detail 
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				WHERE Import_Rotation_No='$rot' AND cont_number='$cont'
				ORDER BY 2";				

				$rtnContainerListCheck = $this->bm->dataSelectDb1($sqlContainerCheck);
				$cntCheck = count($rtnContainerListCheck);
				
				if($cntCheck==0)
				{
					$sqlContainer = "select * from (select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rot' and cont_number='$cont'					
					) tbl1
					union
					select * from (SELECT shed_tally_info.igm_detail_id AS id,
					import_rotation AS Import_Rotation_No,
					BL_No,
					shed_tally_info.cont_number,
					cont_size,
					Cont_gross_weight,
					cont_seal_number,
					Pack_Description,
					Pack_Marks_Number,
					Pack_Number,
					ConsigneeDesc,
					NotifyDesc FROM shed_tally_info LEFT JOIN igm_details ON shed_tally_info.igm_detail_id=igm_details.id LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id WHERE shed_tally_info.import_rotation='$rot' AND shed_tally_info.cont_number='$cont' AND BL_NO IS NOT NULL 
					) tbl2";		

					$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
					FROM igm_details 
					LEFT JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
					LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id	
					WHERE igm_masters.Import_Rotation_No= '$rot' AND igm_detail_container.cont_number='$cont'";
				}
				else
				{
					$sqlContainer="select * from (SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,
					cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					FROM igm_supplimentary_detail 
					LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id					
					WHERE Import_Rotation_No='$rot' AND cont_number='$cont'
					) tbl1
					union
					select * from (SELECT shed_tally_info.igm_sup_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,
					shed_tally_info.cont_number, cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,
					NotifyDesc FROM shed_tally_info 
					LEFT JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
					LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id 
					WHERE shed_tally_info.import_rotation='$rot' and shed_tally_info.cont_number='$cont' and BL_NO is null
					)tbl2";
					
					$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
					FROM igm_supplimentary_detail 
					LEFT JOIN igm_details ON igm_details.id=igm_supplimentary_detail.igm_detail_id
					LEFT JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
					LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id	
					WHERE igm_masters.Import_Rotation_No= '$rot' AND igm_sup_detail_container.cont_number='$cont'";
				}										
			}
			//echo $sqlContainer;
			
			$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
			$cnt = count($rtnContainerList);				
									
			//Cont_gross_weight and cont_seal_number added
			if($cnt==0)
			{
				$tbl = "detail";
				if($cntExist<1)
				{
					$sqlContainer = "select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					LEFT join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rot' and cont_number='$cont'
					order by 2";
				}
				else
				{
					$sqlContainer = "select * from (select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rot' and cont_number='$cont'					
					) tbl1
					union
					select * from (SELECT shed_tally_info.igm_detail_id AS id,
					import_rotation AS Import_Rotation_No,
					BL_No,
					shed_tally_info.cont_number,
					cont_size,
					Cont_gross_weight,
					cont_seal_number,
					Pack_Description,
					Pack_Marks_Number,
					Pack_Number,
					ConsigneeDesc,
					NotifyDesc FROM shed_tally_info LEFT JOIN igm_details ON shed_tally_info.igm_detail_id=igm_details.id LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id WHERE shed_tally_info.import_rotation='$rot' AND shed_tally_info.cont_number='$cont' AND BL_NO IS NOT NULL 
					)tbl2";
				}
				
				$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
				
				$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
				FROM igm_details 
				LEFT JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
				LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id	
				WHERE igm_masters.Import_Rotation_No= '$rot' AND igm_detail_container.cont_number='$cont'";
			}
			
			// query for devonestop - remove later
			$chkExchangeDoneQuery="select count(id) as chkVal from shed_tally_info where import_rotation='$rot' and cont_number='$cont' and exchange_done_status=1";
			
			if($org_Type_id==59)			//CPA Shed Users
			{
				$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
				FROM shed_tally_info 
				WHERE import_rotation='$rot' AND cont_number='$cont' AND cpa_exchange_done_status=1";
			}
			else if($org_Type_id==30)		// Berth Operator
			{					
				$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
				FROM shed_tally_info 
				WHERE import_rotation='$rot' AND cont_number='$cont' AND berth_exchange_done_status=1";
			}
			else if($org_Type_id==4)		// FF
			{					
				$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
				FROM shed_tally_info 
				WHERE import_rotation='$rot' AND cont_number='$cont' AND ff_exchange_done_status=1";
			}
			
			$chkList = $this->bm->dataSelectDb1($chkExchangeDoneQuery);
			$chkVal= $chkList[0]['chkVal'];
			if($chkVal>0)
			{
				//$data['update_btn_status']=0;
				$data['view_btn_status']=1;  //previously 0; 1 for exchange done; alter if necessary
				$data['save_btn_status']=0;
				$data['exchange_btn_status']=0;
				$data['msgExchange']="Exchange Done";
			}
			else
			{
				// query for devonestop - remove later
				$chkExchangeDoneQuery="select count(id) as chkVal from shed_tally_info where import_rotation='$rot' and cont_number='$cont' and exchange_done_status=0";
				
				if($org_Type_id==59)			//CPA Shed Users
				{
					$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
					FROM shed_tally_info 
					WHERE import_rotation='$rot' AND cont_number='$cont' AND cpa_exchange_done_status=0";
				}
				else if($org_Type_id==30)		// Berth Operator
				{					
					$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
					FROM shed_tally_info 
					WHERE import_rotation='$rot' AND cont_number='$cont' AND berth_exchange_done_status=0";
				}
				else if($org_Type_id==4)		// FF
				{					
					$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
					FROM shed_tally_info 
					WHERE import_rotation='$rot' AND cont_number='$cont' AND ff_exchange_done_status=0";
				}
		
				$chkList = $this->bm->dataSelectDb1($chkExchangeDoneQuery);
				$chkVal= $chkList[0]['chkVal'];
				if($chkVal>0)
				{
					//$data['update_btn_status']=1;
					$data['view_btn_status']=1;
					$data['exchange_btn_status']=1;
					$data['save_btn_status']=1;
				}
				else
				{
					//$data['update_btn_status']=0;
					$data['view_btn_status']=0;
					$data['exchange_btn_status']=0;
					$data['save_btn_status']=1;
				}
			}
			$login_id = $this->session->userdata('login_id');
														
			$rslt_vesselname_seal=$this->bm->dataSelectDb1($sql_vesselname_seal);
			
			$data['rslt_vesselname_seal']=$rslt_vesselname_seal;
			
			$data['assigned']=1;		
			$data['rotation']=$rot;
			$data['tbl']=$tbl;
			$data['cont']=$cont;
			
			$data['viewType']="search";
			$data['login_id']=$login_id;
			
			
			$data['rtnContainerList']=$rtnContainerList; //"$rtnContainerList" returns selected data for table
			$this->load->view('pShedTallyEntryFormView',$data);
			
		}
		
		function pShedDeleteTallyRcv()
		{	
			$tallyID=$this->uri->segment(3);
			$cont=$this->uri->segment(4);
			$rot=str_replace("_","/",$this->uri->segment(5));
			$tbl=$this->uri->segment(6);
			//return;
			$login_id = $this->session->userdata('login_id');
			
			$strDelQuery = "delete from shed_tally_info where id=$tallyID";
			$statDel = $this->bm->dataInsertDB1($strDelQuery);
			if($statDel==1)
			{
				$data['stat']="<font color='red'><b>Sucessfully Deleted.</b></font>";
				$data['view_btn_status']=1;
				$data['save_btn_status']=1;
				$data['exchange_btn_status']=1;
			}
			
			$chkExistShedTallyQry="select count(id) as id from shed_tally_info WHERE  import_rotation='$rot' and cont_number='$cont'";
			$rtnExistShedTally = $this->bm->dataSelectDb1($chkExistShedTallyQry);
			
			$cntExist = $rtnExistShedTally[0]['id'];
					
			if($tbl=="sup_detail")
			{
				$tbl=="sup_detail";
				if($cntExist<1)
				{
					$sqlContainer = "select igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_supplimentary_detail 
					inner join igm_sup_detail_container on igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					where Import_Rotation_No='$rot' and cont_number='$cont'
					order by 2";
				}
				else
				{
					$sqlContainer = "select * from (SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,
									cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
									FROM igm_supplimentary_detail 
									LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id					
									WHERE Import_Rotation_No='$rot' AND cont_number='$cont'
									) tbl1
									union
									select * from (SELECT shed_tally_info.igm_sup_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,
									shed_tally_info.cont_number, cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,
									NotifyDesc FROM shed_tally_info 
									LEFT JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
									LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id 
									WHERE shed_tally_info.import_rotation='$rot' and shed_tally_info.cont_number='$cont' and BL_NO is null
									)tbl2";
					/*$sqlContainer="SELECT shed_tally_info.igm_sup_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,shed_tally_info.cont_number,
					cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					FROM shed_tally_info 
					LEFT JOIN igm_supplimentary_detail  ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
					LEFT JOIN  igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
					WHERE  shed_tally_info.import_rotation='$rot' and shed_tally_info.cont_number='$cont'
					ORDER BY 2";*/
				}
			}						
			else
			{
				$tbl=="detail";
				if($cntExist<1)
				{
					$sqlContainer = "select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rot' and cont_number='$cont'
					order by 2
					";
				}
				else
				{
					// echo "dtl 2 ".$sqlContainer = "select * from (select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
									// from igm_details 
									// inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
									// where Import_Rotation_No='$rot' and cont_number='$cont'					
									// ) tbl1
									// union
									// select * from (SELECT shed_tally_info.igm_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,
									// shed_tally_info.cont_number, cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,
									// NotifyDesc FROM shed_tally_info 
									// LEFT JOIN igm_details ON shed_tally_info.igm_detail_id=igm_details.id 
									// LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id 
									// WHERE shed_tally_info.import_rotation='$rot' and shed_tally_info.cont_number='$cont' and BL_NO is null
									// )tbl2";
									
					$sqlContainer = "SELECT
					igm_details.id,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,
					Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					FROM igm_details 
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id 
					WHERE Import_Rotation_No='$rot' AND cont_number='$cont'

					UNION
		
					SELECT shed_tally_info.igm_detail_id AS id,Description_of_Goods,import_rotation AS Import_Rotation_No,BL_No, 
					shed_tally_info.cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,
					Pack_Number,ConsigneeDesc,NotifyDesc 
					FROM shed_tally_info 
					LEFT JOIN igm_details ON shed_tally_info.igm_detail_id=igm_details.id 
					LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id 
					WHERE shed_tally_info.import_rotation='$rot' AND shed_tally_info.cont_number='$cont' AND BL_NO IS NULL";
				}
			}
		
			$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);			
			$data['assigned']=1;
			$data['rotation']=$rot;
			$data['cont']=$cont;
			$data['tbl']=$tbl;
				
			$data['rtnContainerList']=$rtnContainerList;
			
			//////////Redirect to Tally
			$org_Type_id = $this->session->userdata('org_Type_id');
			$login_id = $this->session->userdata('login_id');
			if($this->input->post('rot') && $this->input->post('cont'))
			{
				$rot=trim($this->input->post('rot'));
				$cont=trim($this->input->post('cont'));
				
				$cntquery="SELECT COUNT(lcl_assignment_detail.igm_detail_id) AS rtnValue
				FROM lcl_assignment_detail
				INNER JOIN igm_details ON igm_details.id=lcl_assignment_detail.igm_detail_id
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE Import_Rotation_No='$rot' AND cont_number='$cont'";
				
				// $cntrslt=$this->bm->dataReturnDb1($cntquery);
				$cntrslt=1;//assign 1 for temporary to skip assignment 
				
				
				if($cntrslt==0)
				{
					$data['title']="TALLY ENTRY FORM WITH IGM INFORMATION...";
					$data['msg']="Please provide assignment for the container";
					$data['assigned']=0;
					$data['rotation']=$rot;
					$data['cont']=$cont;
					$data['login_id']=$login_id;
					//$this->load->view('pShedTallyEntryFormView',$data);
					
					//return;
					//exchange_btn_status;
				} 
			}
			else
			{
				// echo "runs";
				// echo "<br>";
				// echo $cont=$this->uri->segment(3);
				// echo "<br>";
				// echo $rot_year=$this->uri->segment(4);
				// echo "<br>";
				// echo $rot_no=$this->uri->segment(5);
				// echo "<br>";
				// echo $rot=$rot_year.'/'.$rot_no;
				
				$cntquery="SELECT COUNT(lcl_assignment_detail.igm_detail_id) AS rtnValue
				FROM lcl_assignment_detail
				INNER JOIN igm_details ON igm_details.id=lcl_assignment_detail.igm_detail_id
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE Import_Rotation_No='$rot' AND cont_number='$cont'";
				
				$cntrslt=$this->bm->dataReturnDb1($cntquery);
				
				if($cntrslt==0)
				{
					$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
						FROM igm_details 
						LEFT JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
						LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id	
						WHERE igm_masters.Import_Rotation_No= '$rot' AND igm_detail_container.cont_number='$cont'";
					$rslt_vesselname_seal = $this->bm->dataSelectDb1($sql_vesselname_seal);
					if(count($rslt_vesselname_seal)==0)
					{
						$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
						FROM igm_supplimentary_detail 
						LEFT JOIN igm_details ON igm_details.id=igm_supplimentary_detail.igm_detail_id
						LEFT JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
						LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id	
						WHERE igm_masters.Import_Rotation_No= '$rot' AND igm_sup_detail_container.cont_number='$cont'";
						$rslt_vesselname_seal = $this->bm->dataSelectDb1($sql_vesselname_seal);
					}
					$data['title']="TALLY ENTRY FORM WITH IGM INFORMATION...";
					$data['msg']="Please provide assignment for the container";
					$data['assigned']=0;
					$data['rotation']=$rot;
					$data['cont']=$cont;
					$data['login_id']=$login_id;
					$data['view_btn_status']=1;
					$data['exchange_btn_status']=1;
					$data['rslt_vesselname_seal']=$rslt_vesselname_seal;
					//$this->load->view('pShedTallyEntryFormView',$data);
					
					//return;
				}
			}
			
			$chkExistShedTallyQry="select count(id) as id from shed_tally_info WHERE  import_rotation='$rot' and cont_number='$cont'";
			$rtnExistShedTally = $this->bm->dataSelectDb1($chkExistShedTallyQry);
			$cntExist = $rtnExistShedTally[0]['id'];								
			
			$tbl = "sup_detail";
		
			//Cont_gross_weight and cont_seal_number added
			if($cntExist<1)
			{
				$sqlContainer="SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
				FROM igm_supplimentary_detail 
				LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id					
				WHERE Import_Rotation_No='$rot' AND cont_number='$cont'
				ORDER BY 2";
				
				$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
				FROM igm_supplimentary_detail 
				LEFT JOIN igm_details ON igm_details.id=igm_supplimentary_detail.igm_detail_id
				LEFT JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
				LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id	
				WHERE igm_masters.Import_Rotation_No= '$rot' AND igm_sup_detail_container.cont_number='$cont'";
			}
			else
			{
				$sqlContainerCheck="SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
				FROM igm_supplimentary_detail 
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				WHERE Import_Rotation_No='$rot' AND cont_number='$cont'
				ORDER BY 2";				

				$rtnContainerListCheck = $this->bm->dataSelectDb1($sqlContainerCheck);
				$cntCheck = count($rtnContainerListCheck);
				
				if($cntCheck==0)
				{
					$sqlContainer = "select * from (select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rot' and cont_number='$cont'					
					) tbl1
					union
					select * from (SELECT shed_tally_info.igm_detail_id AS id,
					import_rotation AS Import_Rotation_No,
					BL_No,
					shed_tally_info.cont_number,
					cont_size,
					Cont_gross_weight,
					cont_seal_number,
					Pack_Description,
					Pack_Marks_Number,
					Pack_Number,
					ConsigneeDesc,
					NotifyDesc FROM shed_tally_info LEFT JOIN igm_details ON shed_tally_info.igm_detail_id=igm_details.id LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id WHERE shed_tally_info.import_rotation='$rot' AND shed_tally_info.cont_number='$cont' AND BL_NO IS NOT NULL 
					) tbl2";		

					$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
					FROM igm_details 
					LEFT JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
					LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id	
					WHERE igm_masters.Import_Rotation_No= '$rot' AND igm_detail_container.cont_number='$cont'";
				}
				else
				{
					$sqlContainer="select * from (SELECT igm_supplimentary_detail.id,master_BL_No,Description_of_Goods,Import_Rotation_No,BL_No,cont_number,
					cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					FROM igm_supplimentary_detail 
					LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id					
					WHERE Import_Rotation_No='$rot' AND cont_number='$cont'
					) tbl1
					union
					select * from (SELECT shed_tally_info.igm_sup_detail_id as id,master_BL_No,Description_of_Goods,import_rotation as Import_Rotation_No,BL_No,
					shed_tally_info.cont_number, cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,
					NotifyDesc FROM shed_tally_info 
					LEFT JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
					LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id 
					WHERE shed_tally_info.import_rotation='$rot' and shed_tally_info.cont_number='$cont' and BL_NO is null
					)tbl2";
					
					$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
					FROM igm_supplimentary_detail 
					LEFT JOIN igm_details ON igm_details.id=igm_supplimentary_detail.igm_detail_id
					LEFT JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
					LEFT JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id	
					WHERE igm_masters.Import_Rotation_No= '$rot' AND igm_sup_detail_container.cont_number='$cont'";
				}										
			}
			//echo $sqlContainer;
			
			$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
			$cnt = count($rtnContainerList);				
									
			//Cont_gross_weight and cont_seal_number added
			if($cnt==0)
			{
				$tbl = "detail";
				
				if($cntExist<1)
				{
					$sqlContainer = "select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					LEFT join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rot' and cont_number='$cont'
					order by 2";
				}
				else
				{
					$sqlContainer = "select * from (select igm_details.id,Import_Rotation_No,BL_No,cont_number,cont_size,Cont_gross_weight,cont_seal_number,Pack_Description,Pack_Marks_Number,Pack_Number,ConsigneeDesc,NotifyDesc 
					from igm_details 
					inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id
					where Import_Rotation_No='$rot' and cont_number='$cont'					
					) tbl1
					union
					select * from (SELECT shed_tally_info.igm_detail_id AS id,
					import_rotation AS Import_Rotation_No,
					BL_No,
					shed_tally_info.cont_number,
					cont_size,
					Cont_gross_weight,
					cont_seal_number,
					Pack_Description,
					Pack_Marks_Number,
					Pack_Number,
					ConsigneeDesc,
					NotifyDesc FROM shed_tally_info LEFT JOIN igm_details ON shed_tally_info.igm_detail_id=igm_details.id LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id WHERE shed_tally_info.import_rotation='$rot' AND shed_tally_info.cont_number='$cont' AND BL_NO IS NOT NULL 
					)tbl2";
				}
				
				$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
				
				$sql_vesselname_seal="SELECT Vessel_Name,cont_seal_number,cont_size 
				FROM igm_details 
				LEFT JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
				LEFT JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id	
				WHERE igm_masters.Import_Rotation_No= '$rot' AND igm_detail_container.cont_number='$cont'";
			}
			
			// query for devonestop - remove later
			$chkExchangeDoneQuery="select count(id) as chkVal from shed_tally_info where import_rotation='$rot' and cont_number='$cont' and exchange_done_status=1";
			
			if($org_Type_id==59)			//CPA Shed Users
			{
				$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
				FROM shed_tally_info 
				WHERE import_rotation='$rot' AND cont_number='$cont' AND cpa_exchange_done_status=1";
			}
			else if($org_Type_id==30)		// Berth Operator
			{					
				$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
				FROM shed_tally_info 
				WHERE import_rotation='$rot' AND cont_number='$cont' AND berth_exchange_done_status=1";
			}
			else if($org_Type_id==4)		// FF
			{					
				$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
				FROM shed_tally_info 
				WHERE import_rotation='$rot' AND cont_number='$cont' AND ff_exchange_done_status=1";
			}
			
			$chkList = $this->bm->dataSelectDb1($chkExchangeDoneQuery);
			$chkVal= $chkList[0]['chkVal'];
			if($chkVal>0)
			{
				//$data['update_btn_status']=0;
				$data['view_btn_status']=1;  //previously 0; 1 for exchange done; alter if necessary
				$data['save_btn_status']=0;
				$data['exchange_btn_status']=0;
				$data['msgExchange']="Exchange Done";
			}
			else
			{
				// query for devonestop - remove later
				$chkExchangeDoneQuery="select count(id) as chkVal from shed_tally_info where import_rotation='$rot' and cont_number='$cont' and exchange_done_status=0";
				
				if($org_Type_id==59)			//CPA Shed Users
				{
					$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
					FROM shed_tally_info 
					WHERE import_rotation='$rot' AND cont_number='$cont' AND cpa_exchange_done_status=0";
				}
				else if($org_Type_id==30)		// Berth Operator
				{					
					$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
					FROM shed_tally_info 
					WHERE import_rotation='$rot' AND cont_number='$cont' AND berth_exchange_done_status=0";
				}
				else if($org_Type_id==4)		// FF
				{					
					$chkExchangeDoneQuery="SELECT COUNT(id) AS chkVal 
					FROM shed_tally_info 
					WHERE import_rotation='$rot' AND cont_number='$cont' AND ff_exchange_done_status=0";
				}
		
				$chkList = $this->bm->dataSelectDb1($chkExchangeDoneQuery);
				$chkVal= $chkList[0]['chkVal'];
				if($chkVal>0)
				{
					//$data['update_btn_status']=1;
					$data['view_btn_status']=1;
					$data['exchange_btn_status']=1;
					$data['save_btn_status']=1;
				}
				else
				{
					//$data['update_btn_status']=0;
					$data['view_btn_status']=0;
					$data['exchange_btn_status']=0;
					$data['save_btn_status']=1;
				}
			}
			$login_id = $this->session->userdata('login_id');
														
			$rslt_vesselname_seal=$this->bm->dataSelectDb1($sql_vesselname_seal);
			
			$data['rslt_vesselname_seal']=$rslt_vesselname_seal;
			
			$data['assigned']=1;		
			$data['rotation']=$rot;
			$data['tbl']=$tbl;
			$data['cont']=$cont;
			
			$data['viewType']="search";
			$data['login_id']=$login_id;
			
			
			$data['rtnContainerList']=$rtnContainerList; //"$rtnContainerList" returns selected data for table
			$this->load->view('pShedTallyEntryFormView',$data);
		}
	// P Shed Tally Entry Ends----------------
	
	//P Shed Tally List Starts--------------
		function pShedTallyListForm()
		{	
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$str="SELECT tally_sheet_number,import_rotation,cont_number,SUM(rcv_pack) AS rcv_pack,SUM(flt_pack) AS flt_pack,SUM(shed_loc) AS shed_loc,loc_first,wr_date,shed_yard,SUM(total_pack) as total_pack,
				SUM(shed_tally_info.weight) AS weight
				FROM shed_tally_info
				INNER JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
				GROUP BY tally_sheet_number
				ORDER BY shed_tally_info.id DESC";
				
				$rtnContainerList = $this->bm->dataSelectDb1($str);
				$data['rtnContainerList']=$rtnContainerList;
				$data['title']="TALLY LIST REPORT(P Shed)";
				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('pShedtallyListForm',$data);
				$this->load->view('jsAssetsList');
			}
		}

		function pShedTallyFormList()
		{
			$ddl_imp_rot_no=$this->input->post('ddl_imp_rot_no');
			$ddl_cont_no=$this->input->post('ddl_cont_no');
					
			/* $str="SELECT tally_sheet_number,import_rotation,cont_number,igm_supplimentary_detail.BL_NO,rcv_pack,flt_pack,
				shed_loc,loc_first,wr_date,shed_yard FROM shed_tally_info
				INNER JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
				where import_rotation='$ddl_imp_rot_no' and cont_number='$ddl_cont_no'"; */
				
			$str="SELECT tally_sheet_number,import_rotation,cont_number,SUM(rcv_pack) AS rcv_pack,SUM(flt_pack) AS flt_pack,SUM(shed_loc) AS shed_loc,loc_first,wr_date,shed_yard,SUM(total_pack) as total_pack,SUM(shed_tally_info.weight) AS weight  
			FROM shed_tally_info
			INNER JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
			WHERE import_rotation='$ddl_imp_rot_no' AND cont_number='$ddl_cont_no'";	
					
			$rtnContainerList = $this->bm->dataSelectDb1($str);
			//echo $rtnContainerList[0]['verify_number']."  fdfdfd";
			$data['rtnContainerList']=$rtnContainerList;
			$data['title']="TALLY LIST REPORT(P Shed)";
			$data['vNum']=@$rtnContainerList[0]['BL_NO'];
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('pShedtallyListForm',$data);
			$this->load->view('jsAssetsList');
			
		}	
	//P Shed Tally List Ends----------------

	//Shed Bill Urls - Starts

	function shedBillUrls()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title'] = "SHED BILL URLs";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('shedBillUrls',$data);
			$this->load->view('jsAssets');		
		}
	}

	//Shed Bil Urls  - Ends
	
	
	function cnfAssignmentForm()
	{
		
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{			
			$data['title']="C&F Assignment";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('cnfAssignmentForm',$data);
			$this->load->view('jsAssets');		
		}	
		
	}
	
	function cnfAssignmentView()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$cfLic=trim($this->input->post('cfLic'));
			$fromDate=trim($this->input->post('fromDate'));
			$toDate=trim($this->input->post('toDate'));
			$strAssign = "select * from ctmsmis.tmp_oracle_assignment where cf_lic='$cfLic'
			and assignmentDate between '$fromDate' and '$toDate'";	
			$resAssign=$this->bm->dataSelectDb2($strAssign);
			
			$data['fromDate']=$fromDate;
			$data['toDate']=$toDate;
			$data['cfLic']=$cfLic;						
			$data['resAssign']=$resAssign;						
			$data['head']="PROPOSED EMPTY AND EMPTY CONTAINER REPORT";						
										
			$this->load->view('cnfAssignmentView',$data);
		}
		
	}
	
	function cfAppraismentListForm()
	{
		
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{			
			$data['title']="C&F Assignment";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('cfAppraismentListForm',$data);
			$this->load->view('jsAssets');		
		}	
		
	}
	
	function cfAppraismentListView()
	{
		
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$fromDate=trim($this->input->post('fromDate'));
			$strAssign = "select * from ctmsmis.tmp_oracle_assignment where mfdch_value='APPCUS'
			and assignmentDate = '$fromDate' order by Yard_No,Block_No";	
			$resAssign=$this->bm->dataSelectDb2($strAssign);
			
			$data['fromDate']=$fromDate;					
			$data['resAssign']=$resAssign;						
			$data['head']="Custom Appraise List";						
										
			$this->load->view('cfAppraismentListView',$data);
		}	
		
	}
	
	
	function special_assignmentForSecurityForm()
	{
		
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			
		$data['title']="Special Assignment";
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('special_assignmentForSecurityForm',$data);
		$this->load->view('jsAssets');		
		}	
		
	}
		
    function special_assignmentForSecurity()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$dt=trim($this->input->post('date'));
			// echo $dt;return;
			// $dt = null;
			if($dt=="" or $dt==null)
			{
				$msg = "<font color='red'>Please provide a date</font>";
				$data['msg']=$msg;
				$data['title']="Special Assignment";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('special_assignmentForSecurityForm',$data);
				$this->load->view('jsAssets');	
				return;
			}
			else if($this->validateDate($dt)!=true)
			{
				$msg = "<font color='red'>Please provide correct date format</font>";
				$data['msg']=$msg;
				$data['title']="Special Assignment";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('special_assignmentForSecurityForm',$data);
				$this->load->view('jsAssets');	
				return;
			}
			
			else
			{
		
			$sql_special_assignment="select distinct a.gkey,a.id as cont_no,k.name AS cnf,
			CONCAT(k.address_line1,k.address_line2) AS cnf_addr, b.flex_date01, a.gkey, a.id AS cont_no,
			to_char(b.flex_date01,'yyyy-mm-dd') AS assignDt, j.bl_nbr, k.gkey AS bizu_gkey,
			config_metafield_lov.mfdch_value, mfdch_desc, b.last_pos_slot, to_char(srv_event.created,'yyyy-mm-dd') AS created,
			srv_event.created AS created1, vsl_vessel_visit_details.ib_vyg AS rot_no, 
			substr(nominal_length, -2) AS siz, 
			substr(ref_equip_type.nominal_height,-2)/10 AS height, 
			vsl_vessels.name  AS v_name 
			FROM srv_event 
			INNER JOIN inv_unit a ON a.gkey = srv_event.applied_to_gkey 
			INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey = a.gkey 
			INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=b.actual_ib_cv
			INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
			INNER JOIN vsl_vessels ON vsl_vessel_visit_details.vessel_gkey=vsl_vessels.gkey 
			INNER JOIN ref_equipment ON ref_equipment.gkey =  a.eq_gkey
			INNER JOIN ref_equip_type ON ref_equipment.eqtyp_gkey = ref_equip_type.gkey 
			INNER JOIN inv_goods j ON j.gkey = a.goods 
			LEFT JOIN ref_bizunit_scoped k ON k.gkey = j.consignee_bzu 
			INNER JOIN config_metafield_lov ON a.flex_string01 = config_metafield_lov.mfdch_value 
			INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey = srv_event.gkey 

			where (srv_event.created BETWEEN  to_date(CONCAT('$dt',' 00:00:00'),'yyyy-mm-dd hh24-mi-ss') AND to_date(CONCAT('$dt',' 23:59:59'),'yyyy-mm-dd hh24-mi-ss'))
			and event_type_gkey = '31426' AND (metafield_id = 'unitFlexString01' or metafield_id = 'ufvFlexDate01') 
			AND to_char(srv_event.created,'yyyy-mm-dd')=to_char(b.flex_date01,'yyyy-mm-dd')";
	

			$rslt_special_assignment=$this->bm->dataSelect($sql_special_assignment);
			$this->data['rslt_special_assignment']=$rslt_special_assignment;
			$this->data['dt']=$dt;

			$this->load->library('m_pdf');
			$pdf->use_kwt = true;
			//$this->data['ddl_imp_rot_no']=$ddl_imp_rot_no;
			//$this->data['title']="Country Wise Import Report";

			$html=$this->load->view('special_assignmentForSecurity',$this->data, true); 
			$pdfFilePath ="On_Dated_".date("d-m-Y")."_Urgent_Delivery_Assignment.pdf";

			//actually, you can pass mPDF parameter on this load() function
			$pdf = $this->m_pdf->load();
			//$pdf->SetWatermarkText('CPA CTMS');
			$pdf->showWatermarkText = true;	
							
			$stylesheet = file_get_contents('resources/styles/test.css'); // external css
			date_default_timezone_set('Asia/Dhaka');
			//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO}|Date:  {DATE M d, Y h:i:sa}');
			$pdf->WriteHTML($html,2);
			$pdf->Output($pdfFilePath, "I"); // For Show Pdf	
		}
		}
	}



	//C&f Certify Section - Starts

	function cnfCertifySection()
	{		
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
			
		}
		else
		{
			$data['msg']="";
			$data['title']="Assignment Request Form";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('myCnfCertifySection',$data);
			$this->load->view('jsAssets');
		}	
	
	}

	function cnfCertifyList()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
			
		}
		else
		{	
			$ddl_imp_cont_no=$this->input->post('ddl_imp_cont_no');
			$ddl_imp_bl_no=$this->input->post('ddl_imp_bl_no');
			
			// if($ddl_imp_cont_no == null || $ddl_imp_bl_no == null){
				
			// 	$data['msg']="";
			// 	$data['title']="Location \ Certify";
			// 	$this->load->view('cssAssets');
			// 	$this->load->view('headerTop');
			// 	$this->load->view('sidebar');
			// 	$this->load->view('mycnfCertifySection',$data);
			// 	$this->load->view('jsAssets');
			
			// }
			// else
			// {

				if($ddl_imp_cont_no!="")
				{
					$sqlBl="select BL_No,igm_details.Import_Rotation_No from igm_details inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id where cont_number='$ddl_imp_cont_no' order by igm_detail_container.id desc limit 1";
					$rtnBlList = $this->bm->dataSelectDb1($sqlBl);
					if($rtnBlList!=null){
						$rtnBlNo= $rtnBlList[0]['BL_No'];
						$rtnRotation= $rtnBlList[0]['Import_Rotation_No'];
					}
				}
				else
				{
					$sqlBl="select BL_No,igm_details.Import_Rotation_No from igm_details inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id where BL_No='$ddl_imp_bl_no' order by igm_detail_container.id desc limit 1";
					$rtnBlList = $this->bm->dataSelectDb1($sqlBl);
					if($rtnBlList!=null){
						$rtnBlNo= $rtnBlList[0]['BL_No'];
						$rtnRotation= $rtnBlList[0]['Import_Rotation_No'];
					}
					//$rtnBlNo=$ddl_imp_bl_no;
				}
				
				if($rtnBlList!=null){
					$sqlContainer="select igm_details.id,cont_number,igm_details.Import_Rotation_No,(select Vessel_Name from igm_masters 
					where igm_masters.id=igm_details.IGM_id) as vsl_name,igm_details.BL_No,
					cont_size,cont_height,off_dock_id,
					(select Organization_Name from organization_profiles where organization_profiles.id=igm_detail_container.off_dock_id) as offdock_name,
					cont_status,cont_seal_number,cont_iso_type from igm_detail_container 
					inner join igm_details on igm_details.id=igm_detail_container.igm_detail_id 
					where igm_details.BL_No='$rtnBlNo' and igm_details.Import_Rotation_No='$rtnRotation'
					union
					select igm_details.id,cont_number,igm_details.Import_Rotation_No,(select Vessel_Name from igm_masters 
					where igm_masters.id=igm_supplimentary_detail.igm_master_id) as vsl_name,igm_details.BL_No,
					cont_size,cont_height,off_dock_id,
					(select Organization_Name from organization_profiles where organization_profiles.id=igm_sup_detail_container.off_dock_id) as offdock_name,
					cont_status,cont_seal_number,cont_iso_type from igm_sup_detail_container 
					inner join igm_supplimentary_detail on igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id 
					inner join igm_details on igm_details.id=igm_supplimentary_detail.igm_detail_id
					where igm_supplimentary_detail.BL_No='$rtnBlNo' and igm_details.Import_Rotation_No='$rtnRotation'
					";
					
					//echo $sqlContainer;
					$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
					$data['rtnContainerList']=$rtnContainerList;

				}

				$sqlAssignType = "SELECT gkey,mfdch_value FROM sparcsn4.config_metafield_lov WHERE mfdch_metafield=331";
				$assignType = $this->bm->dataSelect($sqlAssignType);
				$data['assignType'] = $assignType;

				$data['title']="Assignment Request Form";
				$data['msg'] = "";
				$data['containerNo']=$ddl_imp_cont_no;
				$data['blNo']=$ddl_imp_bl_no;
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('mycnfCertifyListHtml',$data);
				$this->load->view('jsAssets');
			// }
		}
	}

	function cnfCertifyInsert()
	{
		$session_id = $this->session->userdata('value');
		$login_id = $this->session->userdata('login_id');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
			
		}
		else
		{
			$total = $this->input->post('total');
			$igmId = $this->input->post('ignDetailId');
			$rotNo = $this->input->post('rotNo');
			$blNo = $this->input->post('blNo');
			$sts = $this->input->post('save');
			$done=0;
			for($i=0;$i<$total;$i++){
				$assignType = $this->input->post('assignType'.$i);
				$assignmentDate = $this->input->post('assignmentDate'.$i);
				$cont = $this->input->post('cont'.$i);
				$mfdchQuery = "SELECT mfdch_value,mfdch_desc FROM sparcsn4.config_metafield_lov WHERE gkey='$assignType'";
				$mfdch = $this->bm->dataSelect($mfdchQuery);
				$mfdch_value = $mfdch[0]['mfdch_value'];
				$mfdch_desc = $mfdch[0]['mfdch_desc'];
				
				if($sts == "Save")
				{	
					$unitQuery = "SELECT sparcsn4.inv_unit.gkey FROM sparcsn4.inv_unit
					INNER JOIN sparcsn4.inv_unit_fcy_visit ON sparcsn4.inv_unit_fcy_visit.unit_gkey=sparcsn4.inv_unit.gkey
					INNER JOIN sparcsn4.argo_carrier_visit ON sparcsn4.argo_carrier_visit.gkey=sparcsn4.inv_unit_fcy_visit.actual_ib_cv
					INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessel_visit_details.vvd_gkey=sparcsn4.argo_carrier_visit.cvcvd_gkey
					WHERE ib_vyg='$rotNo' AND sparcsn4.inv_unit.id='$cont'";
					$unitGkeyVal = $this->bm->dataSelect($unitQuery);
					$unitGkey = $unitGkeyVal[0]['gkey'];

					$Query = "INSERT INTO assignment_request_data(igm_detail_id,unit_gkey,mfdch_value,mfdch_desc,assignmentDate,cont_number,rotation,requested_by,requested_org) VALUES('$igmId','$unitGkey','$mfdch_value','$mfdch_desc','$assignmentDate','$cont','$rotNo','$login_id','')";
					$stat = $this->bm->dataInsertDB1($Query);
				}
				else if($sts == "Update")
				{

					$Query = "UPDATE assignment_request_data SET mfdch_value='$mfdch_value',mfdch_desc='$mfdch_desc',assignmentDate='$assignmentDate',requested_by='$login_id',requested_org='' WHERE cont_number='$cont' AND rotation='$rotNo'";
					$stat = $this->bm->dataUpdateDB1($Query);

				}
				
				if($stat){
					$done++;
				}

			}

			if($total == $done)
			{
				$msg = "<font color='green'><b>All Data Saved successfully!</b></font>";
			}
			else if($done<$total && $done>0)
			{
				$msg = "<font color='yellow'><b>Partial Data Saved!</b></font>";
			}
			else
			{
				$msg = "<font color='red'><b>Data Can not Be Saved!</b></font>";
			}
			

			$data['msg']=$msg;



			$sqlBl="select BL_No,igm_details.Import_Rotation_No from igm_details inner join igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id where BL_No='$blNo' order by igm_detail_container.id desc limit 1";
			$rtnBlList = $this->bm->dataSelectDb1($sqlBl);
			$rtnBlNo= $rtnBlList[0]['BL_No'];
			$rtnRotation= $rtnBlList[0]['Import_Rotation_No'];

					
			$sqlContainer="select igm_details.id,cont_number,igm_details.Import_Rotation_No,(select Vessel_Name from igm_masters 
			where igm_masters.id=igm_details.IGM_id) as vsl_name,igm_details.BL_No,
			cont_size,cont_height,off_dock_id,
			(select Organization_Name from organization_profiles where organization_profiles.id=igm_detail_container.off_dock_id) as offdock_name,
			cont_status,cont_seal_number,cont_iso_type from igm_detail_container 
			inner join igm_details on igm_details.id=igm_detail_container.igm_detail_id 
			where igm_details.BL_No='$rtnBlNo' and igm_details.Import_Rotation_No='$rtnRotation'
			union
			select igm_details.id,cont_number,igm_details.Import_Rotation_No,(select Vessel_Name from igm_masters 
			where igm_masters.id=igm_supplimentary_detail.igm_master_id) as vsl_name,igm_details.BL_No,
			cont_size,cont_height,off_dock_id,
			(select Organization_Name from organization_profiles where organization_profiles.id=igm_sup_detail_container.off_dock_id) as offdock_name,
			cont_status,cont_seal_number,cont_iso_type from igm_sup_detail_container 
			inner join igm_supplimentary_detail on igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id 
			inner join igm_details on igm_details.id=igm_supplimentary_detail.igm_detail_id
			where igm_supplimentary_detail.BL_No='$rtnBlNo' and igm_details.Import_Rotation_No='$rtnRotation'
			";
			
			//echo $sqlContainer;
			$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
			$data['rtnContainerList']=$rtnContainerList;

			$sqlAssignType = "SELECT gkey,mfdch_value FROM sparcsn4.config_metafield_lov WHERE mfdch_metafield=331";
			$assignType = $this->bm->dataSelect($sqlAssignType);
			$data['assignType'] = $assignType;

			// $data['containerNo']=$ddl_imp_cont_no;
			$data['containerNo']="";
			$data['blNo']=$blNo;
			$data['title']="Assignment Request Form";
			// $this->load->view('header5');
			// $this->load->view('myoneStopIgmCertifyListHtml1',$data);
			// $this->load->view('footer_1');
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('mycnfCertifyListHtml',$data);
			$this->load->view('jsAssets');


		}
	}

	//C&F Certify Section Ends

	//Be File Upload --Starts

	function beFileUpload()
	{
		$session_id = $this->session->userdata('value');
		$login_id = $this->session->userdata('login_id');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$fileName=$_FILES["beFile"]["name"];
			$imp_rot=$this->input->post('imp_rot');
			$bl_no=$this->input->post('bl_no');

			move_uploaded_file($_FILES["beFile"]["tmp_name"],$_SERVER['DOCUMENT_ROOT']."/resources/cnfBE/".$_FILES["beFile"]["name"]);			
			rename($_SERVER['DOCUMENT_ROOT']."/resources/cnfBE/".$_FILES["beFile"]["name"],$_SERVER['DOCUMENT_ROOT']."/resources/cnfBE/".$fileName);

			// echo "Done!";
			$this->lclAssignmentCertifyList($imp_rot,$bl_no);
			
		}
	}

	//Be File Upload --Ends

	// truckReport - start	
		
	// function truckReport()
	// {
	// 	$login_id = $this->session->userdata('login_id');
	// 	$session_id = $this->session->userdata('value');
	// 	$LoginStat = $this->session->userdata('LoginStat');
	
	// 	if($LoginStat!="yes")
	// 	{
	// 		$this->logout();
	// 	}
	// 	else
	// 	{			
	// 		$org_Type_id = $this->session->userdata('org_Type_id');
	// 		$dateCond = "";
	// 		//--------
	// 		$dt = new DateTime('now', new DateTimezone('Asia/Dhaka'));
	// 		$date = $dt->format('Y-m-d');
	// 		$meridiemVal = $dt->format('A');
			
	// 		$fromDtTime = "";
	// 		$toDtTime = "";
			
	// 		$todayDt = "";
	// 		$strTodayDt = "SELECT DATE(NOW()) AS tdt";
	// 		$dtRes = $this->bm->dataSelectDb1($strTodayDt);
	// 		for($k=0;$k<count($dtRes);$k++)
	// 		{
	// 			$todayDt=$dtRes[$k]['tdt'];
	// 		}
			
	// 		$tomorrowDt = "";
	// 		$strTomorrowDt = "select (CURDATE() + INTERVAL 1 DAY) as tomDt";
	// 		$tomorrowDtRes = $this->bm->dataSelectDb1($strTomorrowDt);
	// 		for($l=0;$l<count($tomorrowDtRes);$l++)
	// 		{
	// 			$tomorrowDt=$tomorrowDtRes[$l]['tomDt'];
	// 		}
			
	// 		$prevDt = "";
	// 		$strPrevDt = "select (CURDATE() - INTERVAL 1 DAY) as previousDt";
	// 		$prevDtRes = $this->bm->dataSelectDb1($strPrevDt);
	// 		for($m=0;$m<count($prevDtRes);$m++)
	// 		{
	// 			$prevDt=$prevDtRes[$m]['previousDt'];
	// 		}
						
	// 		$currentHour = 0;
	// 		$strCurHour = "select hour(now()) as curHour";
	// 		$curHourRes = $this->bm->dataSelectDb1($strCurHour);
	// 		for($n=0;$n<count($curHourRes);$n++)
	// 		{
	// 			$currentHour=$curHourRes[$n]['curHour'];
	// 		}
			
			
	// 		$dateCondition = "";
	// 		if($meridiemVal=="AM" && ($currentHour>=00 && $currentHour<=07))
	// 		{
	// 			$fromDtTime = $prevDt." 08:00:00";
	// 			$toDtTime = $todayDt." 07:59:59";
	// 			$dateCondition = " (do_truck_details_entry.last_update BETWEEN '$fromDtTime' and '$toDtTime')";
	// 		}
	// 		else
	// 		{
	// 			$fromDtTime = $todayDt." 08:00:00";
	// 			$toDtTime = $tomorrowDt." 07:59:59";
	// 			$dateCondition = " (do_truck_details_entry.last_update BETWEEN '$fromDtTime' and '$toDtTime')";
	// 		}
	// 		//--------
	// 		if($this->input->post('uriSegment'))		// for search
	// 		{
	// 			// echo "post";				
	// 			$truckDate=$this->input->post('truckDate');								
	// 			$uriSegment=$this->input->post('uriSegment');	
				
				

	// 			if($org_Type_id == 2){
	// 				$dateCondTotal = " WHERE DATE(do_truck_details_entry.last_update)=DATE(NOW()) AND paid_status = '1' AND update_by = '$login_id'";
	// 			}else{
	// 				$dateCondTotal = " WHERE DATE(do_truck_details_entry.last_update)=DATE(NOW()) AND paid_status = '1'";
	// 			}

	// 			if($uriSegment == "gateIn")
	// 			{
					
	// 				if($org_Type_id == 2){
	// 					$dateCond = " AND (paid_status = '1' OR paid_status = '2') AND do_truck_details_entry.update_by = '$login_id' AND";
	// 				}else{
	// 					$dateCond = " AND (paid_status = '1' OR paid_status = '2') AND";
	// 				}
					
	// 			}
	// 			else if($uriSegment == "insidePort")
	// 			{
	// 				if($org_Type_id == 2){
	// 					$dateCond = " AND DATE(do_truck_details_entry.gate_in_time)='$truckDate' AND do_truck_details_entry.update_by = '$login_id'";
	// 				}else{
	// 					$dateCond = " AND DATE(do_truck_details_entry.gate_in_time)='$truckDate'";
	// 				}
	// 			}
	// 			else if($uriSegment == "gateOut")
	// 			{
	// 				if($org_Type_id == 2){
	// 					$dateCond = " AND DATE(do_truck_details_entry.gate_out_time)='$truckDate' AND do_truck_details_entry.update_by = '$login_id'";
	// 				}else{
	// 					$dateCond = " AND DATE(do_truck_details_entry.gate_out_time)='$truckDate'";
	// 				}
	// 			}
	// 		}
	// 		else
	// 		{
	// 			// echo "uri";		
	// 			$uriSegment = $this->uri->segment(3);
				
				
	// 			if($org_Type_id == 2){
	// 				$dateCondTotal = " WHERE DATE(do_truck_details_entry.last_update)=DATE(NOW()) AND paid_status = '1' AND update_by = '$login_id'";
	// 			}else{
	// 				$dateCondTotal = " WHERE DATE(do_truck_details_entry.last_update)=DATE(NOW()) AND paid_status = '1'";
	// 			}

	// 			$truckDate = date("Y-m-d");
	// 			if($uriSegment == "gateIn")
	// 			{
	// 				if($org_Type_id == 2){
	// 					$dateCond = " AND (paid_status = '1' OR paid_status = '2') AND do_truck_details_entry.update_by = '$login_id' AND";
	// 				}else{
	// 					$dateCond = " AND (paid_status = '1' OR paid_status = '2') AND";
	// 				}
					
	// 			}
	// 			else if($uriSegment == "paid")
	// 			{
	// 				if($org_Type_id == 2){
	// 					$dateCond = " AND paid_status = '1' AND do_truck_details_entry.update_by = '$login_id' AND";
	// 				}else{
	// 					$dateCond = " AND paid_status = '1' AND";
	// 				}
					
	// 			}
	// 			else if($uriSegment == "notpaid")
	// 			{
	// 				if($org_Type_id == 2){
	// 					$dateCond = " AND paid_status = '2' AND do_truck_details_entry.update_by = '$login_id' AND";
	// 				}else{
	// 					$dateCond = " AND paid_status = '2' AND";
	// 				}
					
	// 			}
	// 			else if($uriSegment == "insidePort")
	// 			{
	// 				if($org_Type_id == 2){
	// 					$dateCond = " AND DATE(do_truck_details_entry.gate_in_time)='$truckDate' AND do_truck_details_entry.update_by = '$login_id'";
	// 				}else{
	// 					$dateCond = " AND DATE(do_truck_details_entry.gate_in_time)='$truckDate'";
	// 				}
	// 			}
	// 			else if($uriSegment == "gateOut")
	// 			{
	// 				if($org_Type_id == 2){
	// 					$dateCond = " AND DATE(do_truck_details_entry.gate_out_time)='$truckDate' AND do_truck_details_entry.update_by = '$login_id'";
	// 				}else{
	// 					$dateCond = " AND DATE(do_truck_details_entry.gate_out_time)='$truckDate'";
	// 				}
	// 			}
	// 		}
	// 		if($uriSegment == "gateIn")
	// 		{
	// 			$title="TRUCK TO GATE IN";
				
	// 			$sql_truckReport = "SELECT do_truck_details_entry.id AS trucVisitId, do_truck_details_entry.verify_number,do_truck_details_entry.truck_id,driver_name,users.u_name AS cnf_name, gate_in_time,gate_out_time, do_truck_details_entry.assistant_name,
	// 			cont_no
	// 			FROM do_truck_details_entry
	// 			LEFT JOIN users ON users.login_id=do_truck_details_entry.update_by
	// 			LEFT JOIN do_information ON do_information.verify_no=do_truck_details_entry.verify_number
	// 			WHERE gate_in_status = '0'".$dateCond.$dateCondition;
	// 			//Previous Code------
	// 			// $sql_truckReport = "SELECT do_truck_details_entry.id AS trucVisitId, do_truck_details_entry.verify_number,do_truck_details_entry.truck_id,driver_name,users.u_name AS cnf_name, gate_in_time,gate_out_time, do_truck_details_entry.assistant_name,
	// 			// cont_no
	// 			// FROM do_truck_details_entry
	// 			// LEFT JOIN users ON users.login_id=do_truck_details_entry.update_by
	// 			// LEFT JOIN do_information ON do_information.verify_no=do_truck_details_entry.verify_number
	// 			// WHERE gate_in_status = '0'".$dateCond;
	// 		}
	// 		else if($uriSegment == "paid")
	// 		{
	// 			$title="TRUCK TO GATE IN (Paid)";
				
	// 			$sql_truckReport = "SELECT do_truck_details_entry.id AS trucVisitId, do_truck_details_entry.verify_number,do_truck_details_entry.truck_id,driver_name,users.u_name AS cnf_name, gate_in_time,gate_out_time, do_truck_details_entry.assistant_name,
	// 			cont_no
	// 			FROM do_truck_details_entry
	// 			LEFT JOIN users ON users.login_id=do_truck_details_entry.update_by
	// 			LEFT JOIN do_information ON do_information.verify_no=do_truck_details_entry.verify_number
	// 			WHERE gate_in_status = '0'".$dateCond.$dateCondition;
	// 			//Previous Code------
	// 			// $sql_truckReport = "SELECT do_truck_details_entry.id AS trucVisitId, do_truck_details_entry.verify_number,do_truck_details_entry.truck_id,driver_name,users.u_name AS cnf_name, gate_in_time,gate_out_time, do_truck_details_entry.assistant_name,
	// 			// cont_no
	// 			// FROM do_truck_details_entry
	// 			// LEFT JOIN users ON users.login_id=do_truck_details_entry.update_by
	// 			// LEFT JOIN do_information ON do_information.verify_no=do_truck_details_entry.verify_number
	// 			// WHERE gate_in_status = '0'".$dateCond;
	// 		}
	// 		else if($uriSegment == "notpaid")
	// 		{
	// 			$title="TRUCK TO GATE IN (Unpaid)";
				
	// 			$sql_truckReport = "SELECT do_truck_details_entry.id AS trucVisitId, do_truck_details_entry.verify_number,do_truck_details_entry.truck_id,driver_name,users.u_name AS cnf_name, gate_in_time,gate_out_time, do_truck_details_entry.assistant_name,
	// 			cont_no
	// 			FROM do_truck_details_entry
	// 			LEFT JOIN users ON users.login_id=do_truck_details_entry.update_by
	// 			LEFT JOIN do_information ON do_information.verify_no=do_truck_details_entry.verify_number
	// 			WHERE gate_in_status = '0'".$dateCond.$dateCondition;
	// 			//Previous Code------
	// 			// $sql_truckReport = "SELECT do_truck_details_entry.id AS trucVisitId, do_truck_details_entry.verify_number,do_truck_details_entry.truck_id,driver_name,users.u_name AS cnf_name, gate_in_time,gate_out_time, do_truck_details_entry.assistant_name,
	// 			// cont_no
	// 			// FROM do_truck_details_entry
	// 			// LEFT JOIN users ON users.login_id=do_truck_details_entry.update_by
	// 			// LEFT JOIN do_information ON do_information.verify_no=do_truck_details_entry.verify_number
	// 			// WHERE gate_in_status = '0'".$dateCond;
	// 		}
	// 		else if($uriSegment == "insidePort")
	// 		{
	// 			$title="WAITING TRUCK INSIDE THE PORT";
				
	// 			$sql_truckReport = "SELECT do_truck_details_entry.id AS trucVisitId, do_truck_details_entry.verify_number,do_truck_details_entry.truck_id,driver_name,users.u_name AS cnf_name, gate_in_time,gate_out_time, do_truck_details_entry.assistant_name,
	// 			cont_no
	// 			FROM do_truck_details_entry
	// 			LEFT JOIN users ON users.login_id=do_truck_details_entry.update_by
	// 			LEFT JOIN do_information ON do_information.verify_no=do_truck_details_entry.verify_number
	// 			WHERE gate_in_status = '1' AND gate_out_status='0'".$dateCond;
	// 		}
	// 		else if($uriSegment == "gateOut")
	// 		{
	// 			$title="TRUCK GATE OUT";
	// 			if($org_Type_id == 2){
	// 				$dateCond = " AND (do_truck_details_entry.gate_out_time BETWEEN '$fromDtTime' and '$toDtTime')
	// 							AND do_truck_details_entry.update_by = '$login_id'";
	// 			}else{
	// 				$dateCond = " AND (do_truck_details_entry.gate_out_time BETWEEN '$fromDtTime' and '$toDtTime')";
	// 			}
	// 			$sql_truckReport = "SELECT do_truck_details_entry.id AS trucVisitId, do_truck_details_entry.verify_number,
	// 			do_truck_details_entry.truck_id,driver_name,users.u_name AS cnf_name, gate_in_time,gate_out_time, do_truck_details_entry.assistant_name,
	// 			cont_no
	// 			FROM do_truck_details_entry
	// 			LEFT JOIN users ON users.login_id=do_truck_details_entry.update_by
	// 			LEFT JOIN do_information ON do_information.verify_no=do_truck_details_entry.verify_number
	// 			WHERE gate_out_status='1'".$dateCond;							
	// 		}

	// 		else if($uriSegment == "total")
	// 		{
	// 			$title="Total Truck";
	// 			if($org_Type_id == 2){
	// 				$dateCondTotal = " WHERE paid_status != '0' AND update_by = '$login_id' AND";
	// 			}else{
	// 				$dateCondTotal = " WHERE paid_status != '0' AND";
	// 			}
				
	// 			$sql_truckReport = "SELECT do_truck_details_entry.id AS trucVisitId,TIMEDIFF(TIME(gate_out_time),
	// 			TIME(gate_in_time)) AS timedif, do_truck_details_entry.verify_number,do_truck_details_entry.truck_id,
	// 			driver_name,users.u_name AS cnf_name, gate_in_time,gate_out_time, do_truck_details_entry.assistant_name,
	// 			cont_no
	// 			FROM do_truck_details_entry
	// 			LEFT JOIN users ON users.login_id=do_truck_details_entry.update_by
	// 			LEFT JOIN do_information ON do_information.verify_no=do_truck_details_entry.verify_number".$dateCondTotal.$dateCondition;

	// 		}
			

	// 		// echo $sql_truckReport;

	// 		// return;
	// 		$rslt_truckReport = $this->bm->dataSelectDb1($sql_truckReport);
			
	// 		//$title="TRUCK REPORT FORM";
			
	// 		$msg="";
			
	// 		if($this->input->post('reportDownload'))
	// 		{				
	// 			if($this->input->post('fileOptions')=="pdf")
	// 			{			
	// 				$this->data['title']=$title;
	// 				$this->data['uriSegment']=$uriSegment;		
	// 				$this->data['truckDate']=$truckDate;		
	// 				$this->data['rslt_truckReport']=$rslt_truckReport;	
					
	// 				$this->load->library('m_pdf');
	// 				$html=$this->load->view('truckReportPDF',$this->data, true); 
	// 				$pdfFilePath ="truckReportPDF-".time()."-download.pdf";
	// 				$pdf = $this->m_pdf->load();
	// 				$stylesheet = file_get_contents('assets/stylesheets/test.css');			
	// 				$pdf->WriteHTML($stylesheet,1);
	// 				$pdf->WriteHTML($html,2);
	// 				$pdf->Output($pdfFilePath, "I"); // For Show Pdf
	// 			}
	// 			else if($this->input->post('fileOptions')=="xl")
	// 			{					
	// 				$data['title']=$title;
	// 				$data['uriSegment']=$uriSegment;
	// 				$data['msg']=$msg;
	// 				$data['truckDate']=$truckDate;
	// 				$data['rslt_truckReport']=$rslt_truckReport;
	// 				$this->load->view('truckReportExcel',$data);
	// 			}
	// 		}
	// 		else
	// 		{				
	// 			$data['title']=$title;
	// 			$data['uriSegment']=$uriSegment;
	// 			$data['msg']=$msg;
	// 			$data['truckDate']=$truckDate;
	// 			$data['rslt_truckReport']=$rslt_truckReport;
				
	// 			$this->load->view('cssAssets');
	// 			$this->load->view('headerTop');
	// 			$this->load->view('sidebar');
	// 			$this->load->view('truckReportForm',$data);
	// 			$this->load->view('jsAssets');
	// 		}										
	// 	}
	// }

	function truckReport()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{			
			$org_Type_id = $this->session->userdata('org_Type_id');
			$dateCond = "";
			//--------
			$dt = new DateTime('now', new DateTimezone('Asia/Dhaka'));
			$date = $dt->format('Y-m-d');
			$meridiemVal = $dt->format('A');
			
			$fromDtTime = "";
			$toDtTime = "";
			
			$todayDt = "";
			$strTodayDt = "SELECT DATE(NOW()) AS tdt";
			$dtRes = $this->bm->dataSelectDb1($strTodayDt);
			for($k=0;$k<count($dtRes);$k++)
			{
				$todayDt=$dtRes[$k]['tdt'];
			}
			
			$tomorrowDt = "";
			$strTomorrowDt = "select (CURDATE() + INTERVAL 1 DAY) as tomDt";
			$tomorrowDtRes = $this->bm->dataSelectDb1($strTomorrowDt);
			for($l=0;$l<count($tomorrowDtRes);$l++)
			{
				$tomorrowDt=$tomorrowDtRes[$l]['tomDt'];
			}
			
			$prevDt = "";
			$strPrevDt = "select (CURDATE() - INTERVAL 1 DAY) as previousDt";
			$prevDtRes = $this->bm->dataSelectDb1($strPrevDt);
			for($m=0;$m<count($prevDtRes);$m++)
			{
				$prevDt=$prevDtRes[$m]['previousDt'];
			}
						
			$currentHour = 0;
			$strCurHour = "select hour(now()) as curHour";
			$curHourRes = $this->bm->dataSelectDb1($strCurHour);
			for($n=0;$n<count($curHourRes);$n++)
			{
				$currentHour=$curHourRes[$n]['curHour'];
			}
			
			
			$dateCondition = "";
			if($meridiemVal=="AM" && ($currentHour>=00 && $currentHour<=07))
			{
				$fromDtTime = $prevDt." 08:00:00";
				$toDtTime = $todayDt." 07:59:59";
				$dateCondition = " (do_truck_details_entry.last_update BETWEEN '$fromDtTime' and '$toDtTime')";
			}
			else
			{
				$fromDtTime = $todayDt." 08:00:00";
				$toDtTime = $tomorrowDt." 07:59:59";
				$dateCondition = " (do_truck_details_entry.last_update BETWEEN '$fromDtTime' and '$toDtTime')";
			}

			//--------
			if($this->input->post('uriSegment'))		// for search
			{
				// echo "post";				
				$truckDate=$this->input->post('truckDate');								
				$uriSegment=$this->input->post('uriSegment');	

				if($uriSegment == "gateIn")
				{
					$title="TRUCK TO GATE IN";

					if($org_Type_id == 2){
						$dateCond = "gate_in_status = '0' AND (paid_status = '1' OR paid_status = '2') AND do_truck_details_entry.update_by = '$login_id' AND ".$dateCondition;
					}else{
						$dateCond = "gate_in_status = '0' AND (paid_status = '1' OR paid_status = '2') AND ".$dateCondition;
					}
					
				}
				else if($uriSegment == "paid")
				{
					$title="TRUCK TO GATE IN (PAID)";

					if($org_Type_id == 2){
						$dateCond = "gate_in_status = '0' AND paid_status = '1' AND do_truck_details_entry.update_by = '$login_id' AND ".$dateCondition;
					}else{
						$dateCond = "gate_in_status = '0' AND paid_status = '1' AND ".$dateCondition;
					}
					
				}
				else if($uriSegment == "notpaid")
				{
					$title="TRUCK TO GATE IN (UNPAID)";

					if($org_Type_id == 2){
						$dateCond = " gate_in_status = '0' AND paid_status = '2' AND do_truck_details_entry.update_by = '$login_id' AND ".$dateCondition;
					}else{
						$dateCond = " gate_in_status = '0' AND paid_status = '2' AND ".$dateCondition;
					}
					
				}
				else if($uriSegment == "insidePort")
				{
					$title="WAITING TRUCK INSIDE THE PORT";

					if($org_Type_id == 2){
						$dateCond = " gate_in_status = '1' AND gate_out_status='0' AND DATE(do_truck_details_entry.gate_in_time)='$truckDate' AND do_truck_details_entry.update_by = '$login_id'";
					}else{
						$dateCond = " gate_in_status = '1' AND gate_out_status='0' AND DATE(do_truck_details_entry.gate_in_time)='$truckDate'";
					}
				}
				else if($uriSegment == "gateOut")
				{
					$title="TRUCK GATE OUT";

					if($org_Type_id == 2){
						$dateCond = " gate_out_status='1' AND (do_truck_details_entry.gate_out_time BETWEEN '$fromDtTime' and '$toDtTime')
						AND do_truck_details_entry.update_by = '$login_id'";
					}else{
						$dateCond = " gate_out_status='1' AND (do_truck_details_entry.gate_out_time BETWEEN '$fromDtTime' and '$toDtTime')";
					}
				}
				else
				{
					$title="Total Truck";

					if($org_Type_id == 2){
						$dateCond = " paid_status != '0' AND update_by = '$login_id' AND ".$dateCondition;
					}else{
						$dateCond = " paid_status != '0' AND ".$dateCondition;
					}
				}
			}
			else
			{
				// echo "uri";		
				$uriSegment = $this->uri->segment(3);			
				
				
				$truckDate = date("Y-m-d");

				if($uriSegment == "gateIn")
				{
					$title="TRUCK TO GATE IN";

					if($org_Type_id == 2){
						$dateCond = "gate_in_status = '0' AND (paid_status = '1' OR paid_status = '2') AND do_truck_details_entry.update_by = '$login_id' AND ".$dateCondition;
					}else{
						$dateCond = "gate_in_status = '0' AND (paid_status = '1' OR paid_status = '2') AND ".$dateCondition;
					}
					
				}
				else if($uriSegment == "paid")
				{
					$title="TRUCK TO GATE IN (PAID)";

					if($org_Type_id == 2){
						$dateCond = "gate_in_status = '0' AND paid_status = '1' AND do_truck_details_entry.update_by = '$login_id' AND ".$dateCondition;
					}else{
						$dateCond = "gate_in_status = '0' AND paid_status = '1' AND ".$dateCondition;
					}
					
				}
				else if($uriSegment == "notpaid")
				{
					$title="TRUCK TO GATE IN (UNPAID)";

					if($org_Type_id == 2){
						$dateCond = " gate_in_status = '0' AND paid_status = '2' AND do_truck_details_entry.update_by = '$login_id' AND ".$dateCondition;
					}else{
						$dateCond = " gate_in_status = '0' AND paid_status = '2' AND ".$dateCondition;
					}
					
				}
				else if($uriSegment == "insidePort")
				{
					$title="WAITING TRUCK INSIDE THE PORT";

					if($org_Type_id == 2){
						$dateCond = " gate_in_status = '1' AND gate_out_status='0' AND DATE(do_truck_details_entry.gate_in_time)='$truckDate' AND do_truck_details_entry.update_by = '$login_id'";
					}else{
						$dateCond = " gate_in_status = '1' AND gate_out_status='0' AND DATE(do_truck_details_entry.gate_in_time)='$truckDate'";
					}
				}
				else if($uriSegment == "gateOut")
				{
					$title="TRUCK GATE OUT";

					if($org_Type_id == 2){
						$dateCond = " gate_out_status='1' AND (do_truck_details_entry.gate_out_time BETWEEN '$fromDtTime' and '$toDtTime')
						AND do_truck_details_entry.update_by = '$login_id'";
					}else{
						$dateCond = " gate_out_status='1' AND (do_truck_details_entry.gate_out_time BETWEEN '$fromDtTime' and '$toDtTime')";
					}
				}
				else
				{
					$title="Total Truck";

					if($org_Type_id == 2){
						$dateCond = " paid_status != '0' AND update_by = '$login_id' AND ".$dateCondition;
					}else{
						$dateCond = " paid_status != '0' AND ".$dateCondition;
					}
				}
			}

			if($uriSegment == "total")
			{
				$sql_truckReport = "SELECT do_truck_details_entry.id AS trucVisitId, do_truck_details_entry.verify_number,do_truck_details_entry.truck_id,driver_name,users.u_name AS cnf_name, gate_in_time,gate_out_time, do_truck_details_entry.assistant_name, cont_no,do_truck_details_entry.paid_collect_by,do_truck_details_entry.paid_status FROM do_truck_details_entry LEFT JOIN users ON users.login_id=do_truck_details_entry.update_by LEFT JOIN do_information ON do_information.verify_no=do_truck_details_entry.verify_number
				WHERE gate_out_status='1' AND (do_truck_details_entry.gate_out_time BETWEEN '$fromDtTime' AND '$toDtTime')
				UNION
				SELECT do_truck_details_entry.id AS trucVisitId, do_truck_details_entry.verify_number,do_truck_details_entry.truck_id,driver_name,users.u_name AS cnf_name, gate_in_time,gate_out_time, do_truck_details_entry.assistant_name,
				cont_no,do_truck_details_entry.paid_collect_by,do_truck_details_entry.paid_status
				FROM do_truck_details_entry
				LEFT JOIN users ON users.login_id=do_truck_details_entry.update_by
				LEFT JOIN do_information ON do_information.verify_no=do_truck_details_entry.verify_number
				WHERE ".$dateCond." ORDER BY paid_collect_by";
			}
			else
			{
				$sql_truckReport = "SELECT do_truck_details_entry.id AS trucVisitId, do_truck_details_entry.verify_number,do_truck_details_entry.truck_id,driver_name,users.u_name AS cnf_name, gate_in_time,gate_out_time, do_truck_details_entry.assistant_name,
				cont_no,do_truck_details_entry.paid_collect_by,do_truck_details_entry.paid_status
				FROM do_truck_details_entry
				LEFT JOIN users ON users.login_id=do_truck_details_entry.update_by
				LEFT JOIN do_information ON do_information.verify_no=do_truck_details_entry.verify_number
				WHERE ".$dateCond." ORDER BY paid_collect_by";	
			}
			

			// echo $sql_truckReport;

			// return;
			$rslt_truckReport = $this->bm->dataSelectDb1($sql_truckReport);
			
			//$title="TRUCK REPORT FORM";
			
			$msg="";
			
			if($this->input->post('reportDownload'))
			{				
				if($this->input->post('fileOptions')=="pdf")
				{			
					$this->data['title']=$title;
					$this->data['uriSegment']=$uriSegment;		
					$this->data['truckDate']=$truckDate;		
					$this->data['rslt_truckReport']=$rslt_truckReport;	
					
					$this->load->library('m_pdf');
					$html=$this->load->view('truckReportPDF',$this->data, true); 
					$pdfFilePath ="truckReportPDF-".time()."-download.pdf";
					$pdf = $this->m_pdf->load();
					$stylesheet = file_get_contents('assets/stylesheets/test.css');			
					$pdf->WriteHTML($stylesheet,1);
					$pdf->WriteHTML($html,2);
					$pdf->Output($pdfFilePath, "I"); // For Show Pdf
				}
				else if($this->input->post('fileOptions')=="xl")
				{					
					$data['title']=$title;
					$data['uriSegment']=$uriSegment;
					$data['msg']=$msg;
					$data['truckDate']=$truckDate;
					$data['rslt_truckReport']=$rslt_truckReport;
					$this->load->view('truckReportExcel',$data);
				}
			}
			else
			{				
				$data['title']=$title;
				$data['uriSegment']=$uriSegment;
				$data['msg']=$msg;
				$data['truckDate']=$truckDate;
				$data['rslt_truckReport']=$rslt_truckReport;
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('truckReportForm',$data);
				$this->load->view('jsAssets');
			}										
		}
	}

	function truckReportPending()
	{
		$login_id = $this->session->userdata('login_id');
		$org_license = $this->session->userdata('org_license');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['truckPaid'] = $this->uri->segment(3);
			$data['truckNotPaid'] = $this->uri->segment(4);

			$data['title']="Truck to Gate in Pending";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('truckReportPending',$data);
			$this->load->view('jsAssets');
		}
	}

	function truckStatusChange()
	{
		$login_id = $this->session->userdata('login_id');
		$org_license = $this->session->userdata('org_license');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$msg = "";
			$truckDtlsEntryId= $this->input->post('truckDtlsEntryId');
			$uriSegment= $this->input->post('uriSegment');
			if($uriSegment == "gateIn")
			{
				$str = "UPDATE do_truck_details_entry 
					SET do_truck_details_entry.gate_in_status='1',do_truck_details_entry.gate_in_time=NOW() 
					WHERE do_truck_details_entry.id='$truckDtlsEntryId'";
				
				
				$title="TRUCK TO GATE IN";
				
				$sql_truckReport = "SELECT do_truck_details_entry.id,do_truck_details_entry.verify_number,do_truck_details_entry.truck_id,driver_name,verify_info_fcl.be_no,cnf_name,cont_number
				FROM do_truck_details_entry
				INNER JOIN verify_info_fcl ON verify_info_fcl.verify_number=do_truck_details_entry.verify_number
				LEFT JOIN certify_info_fcl ON certify_info_fcl.be_no=verify_info_fcl.be_no
				LEFT JOIN do_information ON do_information.verify_no=do_truck_details_entry.verify_number
				WHERE gate_in_status = '0'AND DATE(do_truck_details_entry.last_update)=DATE(NOW())";
				
			}
			else if($uriSegment == "insidePort")
			{
				$str = "UPDATE do_truck_details_entry 
					SET do_truck_details_entry.gate_out_status='1',do_truck_details_entry.gate_out_time=NOW() 
					WHERE do_truck_details_entry.id='$truckDtlsEntryId'";
					
				$title="WAITING TRUCK INSIDE THE PORT";
				
				$sql_truckReport = "SELECT do_truck_details_entry.id,do_truck_details_entry.verify_number,do_truck_details_entry.truck_id,driver_name,verify_info_fcl.be_no,cnf_name,gate_in_time,cont_no
				FROM do_truck_details_entry
				INNER JOIN verify_info_fcl ON verify_info_fcl.verify_number=do_truck_details_entry.verify_number
				LEFT JOIN certify_info_fcl ON certify_info_fcl.be_no=verify_info_fcl.be_no
				LEFT JOIN do_information ON do_information.verify_no=do_truck_details_entry.verify_number
				WHERE gate_in_status = '1' AND gate_out_status='0' AND DATE(do_truck_details_entry.last_update)=DATE(NOW())";
			}
			
			$statUpdate = $this->bm->dataInsertDB1($str);
			if($statUpdate ==1)
			{
				$msg="Update Successful";
			}
			else
			{
				$msg="Sorry! Something went wrong!";
			}
			
			$rslt_truckReport = $this->bm->dataSelectDb1($sql_truckReport);
			
			$truckDate = date("Y-m-d");

			$data['title']=$title;
			$data['uriSegment']=$uriSegment;
			$data['msg']=$msg;
			$data['truckDate']=$truckDate;
			$data['rslt_truckReport']=$rslt_truckReport;
				
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('truckReportForm',$data);
			$this->load->view('jsAssets');


		}
	}
	




	function assignmentListForm_2($msg=null)
	{
		
		$login_id = $this->session->userdata('login_id');
		$org_license = $this->session->userdata('org_license');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$org_Type_id = $this->session->userdata('org_Type_id');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{			
			// $this->bm->updateAssignmet();
			$data['msg'] = $msg;
			$cond = "";
			if($this->input->post('search'))
			{					
				// check container with query
				$contSearch = $this->input->post('contSearch');
				
				 $strAssignment = "SELECT event_gkey,unit_gkey,cont_no,freight_kind,flex_date01,assignDt,last_pos_slot,seal_nbr1,siz,height,cf_lic,cf_name,mlo,cvcvd_gkey,mfdch_value,
				(SELECT mfdch_desc FROM config_metafield_lov WHERE mfdch_value=tbl.mfdch_value) AS mfdch_desc,
			   
			   (SELECT ib_vyg FROM vsl_vessel_visit_details
			   WHERE vvd_gkey=cvcvd_gkey
			   ) AS imt_rot,
			   
			   (SELECT vsl_vessels.name FROM vsl_vessel_visit_details
			   INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
			   WHERE vvd_gkey=cvcvd_gkey
			   ) AS v_name
			    FROM (
			   SELECT DISTINCT srv_event.gkey AS event_gkey,a.gkey AS unit_gkey,a.id AS cont_no,a.freight_kind,
			   b.flex_date01,to_date(b.flex_date01) AS assignDt,b.last_pos_slot,a.seal_nbr1,
							(select substr(ref_equip_type.nominal_length,-2) from ref_equip_type 
			   INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
			   INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
			   INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
			   where inv_unit_fcy_visit.unit_gkey=a.gkey fetch first 1 rows only
			   ) as siz,
			   
			   CAST(
			   (select substr(ref_equip_type.nominal_height,-2) from ref_equip_type 
			   INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
			   INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
			   INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
			   where inv_unit_fcy_visit.unit_gkey=a.gkey fetch first 1 rows only
			   )
			   AS DECIMAL(10,1)
			   )  AS height,
			
				   (SELECT k.id FROM inv_goods j
			   LEFT JOIN ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
			   WHERE j.gkey = a.goods
			   ) AS cf_lic,
			   
			   (SELECT k.name FROM inv_goods j
			   LEFT JOIN ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
			   WHERE j.gkey = a.goods
			   ) AS cf_name,
			   (SELECT k.name FROM ref_bizunit_scoped k WHERE k.gkey=a.line_op) AS mlo,
			   (SELECT cvcvd_gkey FROM argo_carrier_visit WHERE gkey=b.actual_ib_cv) AS cvcvd_gkey,
			   a.flex_string01 AS mfdch_value
			   FROM srv_event 
			   INNER JOIN inv_unit a ON a.gkey = srv_event.applied_to_gkey
			   INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey = a.gkey
			   INNER JOIN  srv_event_field_changes ON srv_event_field_changes.event_gkey = srv_event.gkey
			   WHERE a.id='$contSearch' AND event_type_gkey=4
			   AND (metafield_id = 'unitFlexString01' OR metafield_id = 'ufvFlexDate01')
			   ) tbl  WHERE mfdch_value IS NOT NULL AND mfdch_value !='CANCEL' AND assignDt=cast(CURRENT_DATE as date)
			   ";

		
				$resAssignment = $this->bm->dataSelect($strAssignment);
				// echo $strAssignment;return;
				for($i=0;$i<count($resAssignment);$i++)
				{			
					$event_gkey = $resAssignment[$i]["EVENT_GKEY"];
					$unit_gkey = $resAssignment[$i]["UNIT_GKEY"];
					$cont_no = $resAssignment[$i]["CONT_NO"];
					$freight_kind = $resAssignment[$i]["FREIGHT_KIND"];
					$flex_date01 = $resAssignment[$i]["FLEX_DATE01"];
					$assignDt = $resAssignment[$i]["ASSIGNDT"];
					$last_pos_slot = $resAssignment[$i]["LAST_POS_SLOT"];
					// $Yard_No = $resAssignment[$i]["Yard_No"];
					// $Block_No = $resAssignment[$i]["Block_No"];
					$seal_nbr1 = $resAssignment[$i]["SEAL_NBR1"];
					$size = $resAssignment[$i]["SIZE"];
					$height = $resAssignment[$i]["HEIGHT"];
					$cf_lic = $resAssignment[$i]["CF_LIC"];
					$cf_name = str_replace("'","",$resAssignment[$i]["CF_NAME"]);
					// $cf_sms_number = $resAssignment[$i]["SMS_NUMBER"];
					// $mlo = $resAssignment[$i]["mlo"];
					$mlo = str_replace("'","",$resAssignment[$i]["MLO"]);
					$cvcvd_gkey = $resAssignment[$i]["CVCVD_GKEY"];
					$mfdch_value = $resAssignment[$i]["MFDCH_VALUE"];
					 $mfdch_desc = $resAssignment[$i]["MFDCH_DESC"];
					$imt_rot = $resAssignment[$i]["IMT_ROT"];
					$v_name = $resAssignment[$i]["V_NAME"];
					
					$strBl = "SELECT BL_No AS rtnValue FROM igm_details 
					INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
					WHERE igm_details.Import_Rotation_No='$imt_rot' AND igm_detail_container.cont_number='$cont_no'";
					$BL_NoList = $this->bm->dataSelectDb1($strBl);
					$BL_No = "";
					for($bl=0;$bl<count($BL_NoList);$bl++)
					{
						$BL_No = $BL_NoList[$bl]["rtnValue"];
					}
					
					$strchk = "SELECT COUNT(*) AS rtnValue FROM ctmsmis.tmp_oracle_assignment WHERE unit_gkey='$unit_gkey'";
					//$chk = $this->bm->dataReturn($strchk);
					$chk = $this->bm->dataReturnDb2($strchk);
					if($chk==0)
					{
						$strInsrt = "INSERT INTO ctmsmis.tmp_oracle_assignment(unit_gkey,cont_no,cf_lic,cf_name,cf_sms_number,cont_status,slot,size,height,
						v_name,rot_no,mlo,bl_no,assignmentDate,flex_date01,mfdch_value,mfdch_desc,Yard_No,Block_No,remarks,seal_nbr1,event_gkey) 
						VALUES ('$unit_gkey','$cont_no','$cf_lic','$cf_name','$cf_sms_number','$freight_kind','$last_pos_slot','$size','$height',
						'$v_name','$imt_rot','$mlo','$BL_No','$assignDt','$flex_date01','$mfdch_value','$mfdch_desc',
						'$Yard_No','$Block_No','','$seal_nbr1','$event_gkey')";
						//$this->bm->dataInsert($strInsrt);
						$this->bm->dataInsertDb2($strInsrt);
					}
					else
					{
						$strUpdate = "UPDATE ctmsmis.tmp_oracle_assignment 
						SET assignmentDate='$assignDt',mfdch_value='$mfdch_value',mfdch_desc='$mfdch_desc',
						slot='$last_pos_slot',Yard_No='$Yard_No',Block_No='$Block_No',event_gkey='$event_gkey' 
						WHERE unit_gkey='$unit_gkey'";
						//$this->bm->dataUpdate($strUpdate);
						$this->bm->dataUpdatedb2($strUpdate);
					}
					
					
				}
				// return;
				$cond = " WHERE cont_no='$contSearch' AND cf_lic='$org_license' AND assignmentDate BETWEEN DATE(NOW()) AND DATE_ADD(DATE(NOW()), INTERVAL 1 DAY)";
				// $cond = " WHERE cont_no='$contSearch'";
																
			}
			else
			{
				// $cond = " WHERE cf_lic='$org_license' AND cf_lic!='' AND assignmentDate>=DATE(NOW())";
				$cond = " WHERE cf_lic='$org_license' AND cf_lic!='' AND assignmentDate BETWEEN DATE(NOW()) AND DATE_ADD(DATE(NOW()), INTERVAL 1 DAY)";
			}

			$sql_assignmentList = "";
			if($org_Type_id==2)		// c&F
			{
				$sql_assignmentList = "SELECT DISTINCT cont_no,rot_no,mlo,cf_name AS cf,cont_status,size,ROUND(height,1) AS height,slot AS carrentPosition,Yard_No,Block_No,mfdch_value,assignmentDate,custom_remarks,unit_gkey 
				FROM ctmsmis.tmp_oracle_assignment ".$cond." ORDER BY assignmentDate DESC LIMIT 1000";
				

			}
			else if($org_Type_id==3)		// devcustom
			{
				// uncomment later
				// $sql_assignmentList = "SELECT cont_no,rot_no,mlo,cf_name AS cf,cont_status,size,ROUND(height,1) AS height,slot AS carrentPosition,Yard_No,Block_No,mfdch_value,assignmentDate,custom_remarks,unit_gkey 
				// FROM ctmsmis.tmp_oracle_assignment
				// WHERE Block_No = 'NCY'".$cond." ORDER BY assignmentDate DESC
				// LIMIT 10";
				
				$sql_assignmentList = "SELECT DISTINCT cont_no,rot_no,mlo,cf_name AS cf,cont_status,size,ROUND(height,1) AS height,slot AS carrentPosition,Yard_No,Block_No,mfdch_value,assignmentDate,custom_remarks,unit_gkey 
				FROM ctmsmis.tmp_oracle_assignment
				".$cond." ORDER BY assignmentDate DESC LIMIT 1000";								
			}
			else if($org_Type_id==62)		// devcustom
			{				
				$sql_assignmentList = "SELECT DISTINCT cont_no,rot_no,mlo,cf_name AS cf,cont_status,size,ROUND(height,1) AS height,slot AS carrentPosition,Yard_No,Block_No,mfdch_value,assignmentDate,custom_remarks,unit_gkey 
				FROM ctmsmis.tmp_oracle_assignment
				".$cond." ORDER BY assignmentDate DESC LIMIT 1000";
			}
			else
			{
				

				$sql_assignmentList = "SELECT DISTINCT cont_no,rot_no,mlo,cf_name AS cf,cont_status,size,ROUND(height,1) AS height,slot AS carrentPosition,Yard_No,Block_No,mfdch_value,assignmentDate,custom_remarks,unit_gkey 
				FROM ctmsmis.tmp_oracle_assignment
				".$cond." ORDER BY assignmentDate DESC LIMIT 1000";
			}
			// echo $sql_assignmentList;return;
			$rslt_assignmentList=$this->bm->dataSelectDb2($sql_assignmentList);
			$status=count($rslt_assignmentList)	;	
			
			// 2021-04-21 - start	- work on custom_remarks
			if(count($rslt_assignmentList)==0)
			{
				$sql_cnfGkey = "SELECT gkey AS rtnValue FROM ref_bizunit_scoped WHERE id='$org_license'";
				$cnfGkey = $this->bm->dataReturn($sql_cnfGkey);																
				
			
			        $sql_assignmentList="	
					SELECT DISTINCT a.gkey, b.unit_gkey,a.id AS cont_no,k.name  AS cnf,a.freight_kind AS cont_status,
					
					(SELECT ib_vyg FROM argo_carrier_visit
					INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
					WHERE argo_carrier_visit.gkey=b.actual_ib_cv
					) AS rot_no,
			
					CONCAT(k.address_line1,k.address_line2) AS cnf_addr,
					b.flex_date01,
					
					(select substr(ref_equip_type.nominal_length,-2) from ref_equip_type 
					INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
					INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
					INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
					where inv_unit_fcy_visit.unit_gkey=a.gkey fetch first 1 rows only
					) as siz,
					(select substr(ref_equip_type.nominal_height,-2) from ref_equip_type 
					INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
					INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
					INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
					where inv_unit_fcy_visit.unit_gkey=a.gkey fetch first 1 rows only
					) AS height,
						
					to_char(b.flex_date01,'YYYY-MM-DD') AS assignmentDate, j.bl_nbr, k.gkey AS bizu_gkey, config_metafield_lov.mfdch_value,
					mfdch_desc,'' AS custom_remarks,
					b.last_pos_slot
						
					FROM inv_unit a
					INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey = a.gkey
					INNER JOIN inv_goods j ON j.gkey = a.goods
					INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=a.gkey	
					LEFT JOIN ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
					INNER JOIN config_metafield_lov ON a.flex_string01 = config_metafield_lov.mfdch_value	
					WHERE
					(b.flex_date01 BETWEEN to_date(CONCAT(CURRENT_DATE,' 00:00:00'),'YYYY-MM-DD HH24-MI-SS' ) AND to_date(CONCAT(CURRENT_DATE,' 23:59:59'),'YYYY-MM-DD HH24-MI-SS')) AND j.consignee_bzu ='$cnfGkey' AND config_metafield_lov.mfdch_value!='CANCEL'
					 ";
				    $rslt_assignmentList=$this->bm->dataSelect($sql_assignmentList);
			}
			
			// 2021-04-21 - end
			
			$data['rslt_assignmentList']=$rslt_assignmentList;
			$data['org_Type_id']=$org_Type_id;
			$data['status']=$status;
			
			$data['title']="Assignment List";
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('assignmentListForm_2',$data);
			$this->load->view('jsAssetsList');
		}
	}




	function assignmentCustomRemaksEntry($msg=null)
	{
		$login_id = $this->session->userdata('login_id');
		$org_license = $this->session->userdata('org_license');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$org_Type_id = $this->session->userdata('org_Type_id');
		$remarks_rot = $this->input->post('remarks_rot');
		$remarks_cont = $this->input->post('remarks_cont');
		$custom_remarks = $this->input->post('custom_remarks');
		
		
		// $Query = "UPDATE ctmsmis.tmp_oracle_assignment SET custom_remarks='$custom_remarks', custom_block_st='Blocked', cus_block_by='$login_id' 
		// WHERE ctmsmis.tmp_oracle_assignment.cont_no='$remarks_cont' and ctmsmis.tmp_oracle_assignment.rot_no='$remarks_rot'";
		
		$Query = "UPDATE ctmsmis.tmp_oracle_assignment 
		SET custom_remarks='$custom_remarks', custom_block_st='Blocked',block_update_by='$login_id', block_update_dt=NOW(), cus_block_by='$login_id' 
		WHERE ctmsmis.tmp_oracle_assignment.cont_no='$remarks_cont' AND ctmsmis.tmp_oracle_assignment.rot_no='$remarks_rot'";
					//return;
		$stat = $this->bm->dataUpdate($Query);
			
					
		// $this->bm->updateAssignmet();
		$data['msg'] = $msg;
		$cond = "";
		if($this->input->post('search'))
		{ 
			
			
			if($searchBy == "rotation")
			{
				$cond = " AND rot_no='$searchVal'";
			}
			else if($searchBy == "cont")
			{
				$cond = " AND cont_no='$searchVal'";
			}
			else if($searchBy == "bl")
			{
				$cond = "";
			}				
			else if($searchBy == "beNo")
			{
				$cond = "";
			}
			else if($searchBy == "verificationNo")
			{
				$cond = "";
			}					
		}
		$sql_assignmentList = "";
		if($org_Type_id==2 and $org_Type_id==3)		// c&F
		{
			$sql_assignmentList = "SELECT cont_no,rot_no,mlo,cf_name AS cf,cont_status,size,ROUND(height,1) AS height,slot AS carrentPosition,Yard_No,Block_No,mfdch_value,assignmentDate,custom_remarks
			FROM ctmsmis.tmp_oracle_assignment
			WHERE cf_lic='$org_license' AND assignmentDate>=DATE(NOW()) ".$cond." ORDER BY assignmentDate DESC";
		}
		else if($org_Type_id==3)		// devcustom
		{					
			// uncomment later
			// $sql_assignmentList = "SELECT cont_no,rot_no,mlo,cf_name AS cf,cont_status,size,ROUND(height,1) AS height,slot AS carrentPosition,Yard_No,Block_No,mfdch_value,assignmentDate,custom_remarks,unit_gkey 
			// FROM ctmsmis.tmp_oracle_assignment
			// WHERE Block_No = 'NCY'".$cond." ORDER BY assignmentDate DESC
			// LIMIT 10";		

			$sql_assignmentList = "SELECT cont_no,rot_no,mlo,cf_name AS cf,cont_status,size,ROUND(height,1) AS height,slot AS carrentPosition,Yard_No,Block_No,mfdch_value,assignmentDate,custom_remarks,unit_gkey 
			FROM ctmsmis.tmp_oracle_assignment
			WHERE Block_No = 'NCY' AND cf_lic='$org_license'".$cond." ORDER BY assignmentDate DESC
			LIMIT 10";

		}
		else
		{
			$sql_assignmentList = "SELECT cont_no,rot_no,mlo,cf_name AS cf,cont_status,size,ROUND(height,1) AS height,slot AS carrentPosition,Yard_No,Block_No,mfdch_value,assignmentDate,custom_remarks
			FROM ctmsmis.tmp_oracle_assignment
			WHERE Block_No = 'NCY' ".$cond." ORDER BY assignmentDate DESC";
		}
		
		$rslt_assignmentList=$this->bm->dataSelectDb2($sql_assignmentList);			
		$data['rslt_assignmentList']=$rslt_assignmentList;
		$data['org_Type_id']=$org_Type_id;
		
		$data['title']="Assignment List";
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('assignmentListForm_2',$data);
		$this->load->view('jsAssets');
		
	}
	// truck entry for fcl with verify number	- 2021-01-16
	// function editTruckQty()
	// {
		
		// $login_id = $this->session->userdata('login_id');
		// $org_license = $this->session->userdata('org_license');
	
		// $truck_qty=$this->input->post('truck_qty');
		// $verifyNumber=$this->input->post('verifyNumber');
		// $updateMsg = "";
		// $strUpdateTruckQty = "UPDATE cchaportdb.verify_info_fcl SET no_of_truck='$truck_qty' where verify_number='$verifyNumber'";
		// $resUpdateTruckQty = $this->bm->dataUpdateDB1($strUpdateTruckQty);
		
		// if($resUpdateTruckQty==1)
		// {
			// $updateMsg ="<font color='green' size=2>Truck Quantity Updated Succesfully!</font>";
		// }
		// else
		// {
			// $updateMsg ="<font color='red' size=2>Truck Quantity Update Failed!</font>";
		// }
						
		// // $updateMsg ="<font color='blue' size=2>Truck Quantity Updated Succesfully!</font>";
			
		// $cond = "";
		// if($this->input->post('search'))
		// {
			// $searchBy = $this->input->post('searchBy');
			// $value = $this->input->post('value');
			
			// if($searchBy == "bl")
			// {
				// $cond = "";
			// }
			// else if($searchBy == "cont")
			// {
				// $cond = " AND a.id='$value'";
			// }					
		// }
			
		// $sql_assignmentList = "SELECT a.id AS cont_no, 
		// b.flex_string10 AS rot_no, 
		// g.id AS mlo, 
		// k.name AS cf, 
		// a.freight_kind AS cont_status, 
		// (SELECT RIGHT(sparcsn4.ref_equip_type.nominal_length,2) FROM ref_equip_type 
		// INNER JOIN sparcsn4.ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
		// INNER JOIN sparcsn4.inv_unit_equip ON inv_unit_equip.eq_gkey=ref_equipment.gkey
		// WHERE sparcsn4.inv_unit_equip.unit_gkey=a.gkey
		// ) AS size,
		// (SELECT RIGHT(sparcsn4.ref_equip_type.nominal_height,2)/10 FROM ref_equip_type 
		// INNER JOIN sparcsn4.ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
		// INNER JOIN sparcsn4.inv_unit_equip ON inv_unit_equip.eq_gkey=ref_equipment.gkey
		// WHERE sparcsn4.inv_unit_equip.unit_gkey=a.gkey
		// ) AS height,
		// IFNULL((SELECT SUBSTRING(sparcsn4.srv_event_field_changes.new_value,7) FROM sparcsn4.srv_event INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey WHERE sparcsn4.srv_event.applied_to_gkey=a.gkey AND sparcsn4.srv_event.event_type_gkey IN(18,13,16) AND sparcsn4.srv_event_field_changes.new_value IS NOT NULL AND sparcsn4.srv_event_field_changes.new_value !='' AND sparcsn4.srv_event_field_changes.new_value !='Y-CGP-.' AND sparcsn4.srv_event.gkey<(SELECT sparcsn4.srv_event.gkey FROM sparcsn4.srv_event INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey WHERE sparcsn4.srv_event.event_type_gkey=4 AND sparcsn4.srv_event.applied_to_gkey=a.gkey AND metafield_id='unitFlexString01' AND new_value IS NOT NULL ORDER BY sparcsn4.srv_event_field_changes.gkey DESC LIMIT 1) ORDER BY sparcsn4.srv_event.gkey DESC LIMIT 1),(SELECT SUBSTRING(sparcsn4.srv_event_field_changes.new_value,7) FROM sparcsn4.srv_event INNER JOIN sparcsn4.srv_event_field_changes ON sparcsn4.srv_event_field_changes.event_gkey=sparcsn4.srv_event.gkey WHERE sparcsn4.srv_event.applied_to_gkey=a.gkey AND sparcsn4.srv_event.event_type_gkey IN(18,13,16) ORDER BY sparcsn4.srv_event_field_changes.gkey DESC LIMIT 1)) AS carrentPosition, 
		// (SELECT ctmsmis.cont_yard(carrentPosition)) AS Yard_No
		// FROM sparcsn4.inv_unit a 
		// INNER JOIN sparcsn4.inv_unit_fcy_visit b ON b.unit_gkey=a.gkey 
		// INNER JOIN sparcsn4.ref_bizunit_scoped g ON a.line_op = g.gkey 
		// INNER JOIN sparcsn4.config_metafield_lov ON a.flex_string01=config_metafield_lov.mfdch_value 
		// INNER JOIN sparcsn4.inv_goods j ON j.gkey = a.goods 
		// LEFT JOIN sparcsn4.ref_bizunit_scoped k ON k.gkey = j.consignee_bzu 
		// WHERE k.id='$org_license' AND DATE(b.flex_date01)>=DATE(NOW())".$cond;; 
			// // AND config_metafield_lov.mfdch_value NOT IN ('CANCEL','OCD','APPCUS','APPOTH','APPREF')".$cond;
			
		// $rslt_assignmentList=$this->bm->dataSelect($sql_assignmentList);			
		// $data['rslt_assignmentList']=$rslt_assignmentList;
		// $data['updateMsg'] = $updateMsg;
		
		// $data['title'] = "Assignment List";
		// $this->load->view('cssAssets');
		// $this->load->view('headerTop');
		// $this->load->view('sidebar');
		// $this->load->view('assignmentListForm_2',$data);
		// $this->load->view('jsAssets');	
	// }
	
	function editTruckQty()
	{		
		$login_id = $this->session->userdata('login_id');
		$org_license = $this->session->userdata('org_license');
		$ip_addr = $_SERVER['REMOTE_ADDR'];
	
		$trk_id=$this->input->post('trk_id');		
		$truck_qty=$this->input->post('truck_qty_'.$trk_id);
		
		$rot_no=$this->input->post('rot_no');
		$cont_no=$this->input->post('cont_no');
		$beNo=$this->input->post('beNo');
				
		// check exist
		$sql_chkExist = "SELECT COUNT(*) AS rtnValue 
		FROM verify_info_fcl 
		WHERE rotation='$rot_no' AND cont_number='$cont_no'";
		$rslt_chkExist = $this->bm->dataSelectDb1($sql_chkExist);
		$cnt = $rslt_chkExist[0]['rtnValue'];
		//---
		
		// entry of number of truck in verify info fcl
		$sql_igmDtlContId = "SELECT igm_details.id AS igm_dtl_id,igm_detail_container.id AS igm_dtl_cont_id
		FROM igm_details
		INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
		WHERE Import_Rotation_No='$rot_no' AND cont_number='$cont_no'";
		$rslt_igmDtlContId = $this->bm->dataSelectDb1($sql_igmDtlContId);
		$igmDtlId = $rslt_igmDtlContId[0]['igm_dtl_id'];				
		$igmDtlContId = $rslt_igmDtlContId[0]['igm_dtl_cont_id'];				
		
		$msg = "";
		// if($this->input->post('saveQty')=="Save")
		// {			
			// $sql_insertQtyTruck = "INSERT INTO verify_info_fcl(be_no,igm_detail_cont_id,rotation,cont_number,no_of_truck,truck_no_by,truck_no_time)
			// VALUES('$beNo','$igmDtlContId','$rot_no','$cont_no','$truck_qty','$login_id',NOW())";
			
			// if($this->bm->dataInsertDB1($sql_insertQtyTruck))
				// $msg = "<font color='green'><b>Truck number entered succesfully.</b></font>";
		// }
		// else if($this->input->post('saveQty')=="Update")
		// {
			// $sql_updateQtyTruck = "UPDATE verify_info_fcl
			// SET no_of_truck = '$truck_qty'
			// WHERE igm_detail_cont_id = '$igmDtlContId'";
			
			// if($this->bm->dataUpdateDB1($sql_updateQtyTruck))
				// $msg = "<font color='green'><b>Truck number updated succesfully.</b></font>";
		// }	
		
		if($cnt==0)
		{
			$sql_insertQtyTruck = "INSERT INTO verify_info_fcl(be_no,igm_detail_id,igm_detail_cont_id,rotation,cont_number,no_of_truck,truck_no_by,truck_no_time)
			VALUES('$beNo','$igmDtlId','$igmDtlContId','$rot_no','$cont_no','$truck_qty','$login_id',NOW())";
			
			if($this->bm->dataInsertDB1($sql_insertQtyTruck))
				$msg = "<font color='green'><b>Truck number entered succesfully.</b></font>";
		}
		else
		{
			$sql_updateQtyTruck = "UPDATE verify_info_fcl
			SET no_of_truck = '$truck_qty'
			WHERE igm_detail_cont_id = '$igmDtlContId'";
			
			if($this->bm->dataUpdateDB1($sql_updateQtyTruck))
				$msg = "<font color='green'><b>Truck number updated succesfully.</b></font>";
		}
		
		$this->assignmentListForm_2($msg);
	}
	
	//Token Demand Request Starts-----------------
		function tokenDemandRequestForm()
		{	
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="Demand Request Form";
			
				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('tokenDemandRequestForm',$data);
				$this->load->view('jsAssetsList');
			}
		}
		
		function dataSheetForConsigneeBillPDF()
		{	
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{	
				
				$this->load->library('m_pdf');
				$html=$this->load->view('dataSheetForConsigneeBillPDF',$this->data, true); //load the pdf_output.php by passing our data and get all data in $html varriable.
				 
				$pdfFilePath ="dataSheetForConsigneeBillPDF-".time()."-download.pdf";

				$pdf = $this->m_pdf->load();
				$pdf->allow_charset_conversion = true;
				$pdf->charset_in = 'iso-8859-4';
				$stylesheet = file_get_contents('assets/stylesheets/test.css'); // external css
				//	$pdf->useSubstitutions = true; // optional - just as an example
					
				//$pdf->setFooter('Prepared By : '.$login_id.'|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
					
				$pdf->WriteHTML($stylesheet,1);
				$pdf->WriteHTML($html,2);
					 
				$pdf->Output($pdfFilePath, "I"); // For Show Pdf
			}
		}
	//Token Demand Request Ends-------------------
	
	//DG Container Lying Report Starts------------------------------
		function myDGContainer()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="DG Container Lying Form...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('myDGContainerLyingForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function myDGContainerLyingReport()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$title="DG Container Lying Report";
				
				$sCriteria=$this->input->post('sCriteria');
				$yard=$this->input->post('yard_no');
				$block=$this->input->post('block');
				$srotation=$this->input->post('srotation');
				$fdate=$this->input->post('fdate');
				$todate=$this->input->post('todate');
				$fileOptions=$this->input->post('fileOptions');
				//return;
				$data['title']=$title;
				$data['sCriteria']=$sCriteria;
				$data['srotation']=$srotation;
				$data['yard']=$yard;
				$data['block']=$block;
				$data['fdate']=$fdate;
				$data['todate']=$todate;
				$data['fileOptions']=$fileOptions;

				$this->load->view('myReportDGContainerLyingList',$data);
				
			}
		}
		//DG Container Delivery Report Ends------------------------------------------
		
		//DG Container Delivery Report Starts-----------------------------------------
		function dg_report()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$title="DG Container Delivery Report Form";
				$msg="";
				$data['title']=$title;
				$data['msg']=$msg;
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('dgContDeliveryRptForm',$data);
				$this->load->view('jsAssets');
			}
		}

		function dgContDelivery_action()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$title="DG Container Delivery Report";
				
				$sCriteria=$this->input->post('sCriteria');
				$srotation=$this->input->post('srotation');
				$fdate=$this->input->post('fdate');
				$ldate=$this->input->post('ldate');
				$fileOptions=$this->input->post('fileOptions');
				//$rptOptions=$this->input->post('rptOptions');
				
				$data['title']=$title;
				$data['sCriteria']=$sCriteria;
				$data['srotation']=$srotation;
				$data['fdate']=$fdate;
				$data['ldate']=$ldate;
				$data['fileOptions']=$fileOptions;
				//$data['rptOptions']=$rptOptions;
				
				$this->load->view('dgContDeliveryRpt',$data);
			}
		}

		//DG Container Delivery Report Ends-------------------------------------------

		function mailTest()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				//sending mail start----------------------------
		
				// include_once("SendEmailController.php");
				// require_once('mailer/class.smtp.php');
				// $this->load->library('../controllers/SendEmailController');
				
				// $subject="Test Mail";
				// $body="Please check the attached files.";
				// $emailClient="kaws.med@gmail.com";
				
				// $sendEmailController =new SendEmailController();
				// return;
									
				// $sendEmail=$sendEmailController->sendEmail($subject,$body,$emailClient,$pdfFilePath_cartTicket,$pdfFilePath_Bill,$pdfFilePath_releaseorder);
				// $sendEmail=$this->SendEmailController->sendEmail($subject,$body,$emailClient,"","","");
				
				//sending mail end

			}
		}
		
		
// Sumon -- Operator wise Equipment Handling Performance
		
		function operatorWiseEquipmentHandling()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="OPERATOR'S RTG HANDLING PERFORMANCE";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('operatorWiseEquipmentHandling',$data);
				$this->load->view('jsAssets');
			}	
		}
		
		function operatorWiseEquipmentHandlingPerform()
		{
			$type=$this->input->post('options');
					
			$data['type']=$type;
			$fromdate=$this->input->post('fromdate');
			$shift=$this->input->post('shift');
			$todate=$this->input->post('todate');
			$data['fromdate']=$fromdate;
			$data['shift']=$shift;
			$data['todate']=$todate;
			
			if($shift=="timewise")
			{
				$fromtime=$this->input->post('fromtime');
				$data['fromtime']=$fromtime.":00";
				$totime=$this->input->post('totime');
				$data['totime']=$totime.":00";
			}
			//echo $data['toTime'];
			//return;
			$this->load->view('operatorWiseEquipmentHandlingPerformanceView',$data);
			$this->load->view('myclosebar');		
		}
		
//ASIF START FOR QGC HANDELING START 5/5/21

function operatorWiseEquipmentHandlingQGC()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="OPERATOR'S QGC HANDLING PERFORMANCE";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('operatorWiseEquipmentHandlingQGC',$data);
				$this->load->view('jsAssets');
			}	
		}
		
		function operatorWiseEquipmentHandlingPerformQGC()
		{
			$type=$this->input->post('options');
					
			$data['type']=$type;
			$fromdate=$this->input->post('fromdate');
			$shift=$this->input->post('shift');
			$todate=$this->input->post('todate');
			$data['fromdate']=$fromdate;
			$data['shift']=$shift;
			$data['todate']=$todate;
			
			if($shift=="timewise")
			{
				$fromtime=$this->input->post('fromtime');
				$data['fromtime']=$fromtime.":00";
				$totime=$this->input->post('totime');
				$data['totime']=$totime.":00";
			}
			//echo $data['toTime'];
			//return;
			$this->load->view('operatorWiseEquipmentHandlingPerformanceViewQGC',$data);
			$this->load->view('myclosebar');		
		}
		


//ASIF START FOR QGC HANDELING END		5/5/21
		
		function operatorWiseSCHandling()
		{
			//print_r($this->session->all_userdata());
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="OPERATOR'S SC HANDLING PERFORMANCE";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('operatorWiseSCHandling',$data);
				$this->load->view('jsAssets');
			}	
		}
		
		function operatorWiseSCHandlingPerform()
		{
			$type=$this->input->post('options');
					
			$data['type']=$type;
			$fromdate=$this->input->post('fromdate');
			$shift=$this->input->post('shift');
			$todate=$this->input->post('todate');
			$data['fromdate']=$fromdate;
			$data['shift']=$shift;
			$data['todate']=$todate;
			
			if($shift=="timewise")
			{
				$fromtime=$this->input->post('fromtime');
				$data['fromtime']=$fromtime.":00";
				$totime=$this->input->post('totime');
				$data['totime']=$totime.":00";
			}
			//echo $data['toTime'];
			//return;
			$this->load->view('operatorWiseSCHandlingPerformanceView',$data);
			$this->load->view('myclosebar');		
		}
		
		
		//SUMON-- All lying container list 		
		function lyingContainerListform()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']=" Container Lying Report View...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('lyingContainerListform',$data);
				$this->load->view('jsAssets');
			}
		}
		

		
		function lyingContainerListView()
		{
			
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$title="Lying Report";
				$fileOptions=$this->input->post('fileOptions');
				$lim=$this->input->post('lim');
				
				$data['title']=$title;

				$data['lim']=$lim;
				$data['fileOptions']=$fileOptions;

				$this->load->view('lyingContainerListView',$data);
				
			}
		}
		
		
		function slotWiseLyingContainer()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']=" Lying Report View...";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('slotWiseLyingContainerForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		
		function slotWiseLyingContainerPerform()
		{
			$session_id = $this->session->userdata('value');

			 $cont_type=$this->input->post('cont_type');
			 $day_slot=$this->input->post('day_slot');

			$data['cont_type']=$cont_type;
			$data['day_slot']=$day_slot;
			$this->load->view('slotWiseLyingContainerReportView',$data);

		}
		
		function assignmentCNFContainerList()
		{
			$consignee_bzu=$this->uri->segment(3);
			$fromdate=$this->uri->segment(4);
			$cnfName=$this->uri->segment(5);

			$data['fromdate']=$fromdate;
			$data['consignee_bzu']=$consignee_bzu;
			
			$str="SELECT DISTINCT a.gkey,a.id AS cont_no,k.name  AS cnf,CONCAT(k.address_line1,k.address_line2) AS cnf_addr,flex_date01,mfdch_desc,
				j.bl_nbr, k.gkey AS bizu_gkey, config_metafield_lov.mfdch_value,to_char(b.flex_date01,'yyyy-mm-dd') AS assignDt
				FROM inv_unit a
				INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey = a.gkey
				INNER JOIN inv_goods j ON j.gkey = a.goods
				LEFT JOIN ref_bizunit_scoped k ON k.gkey = j.shipper_bzu
				INNER JOIN config_metafield_lov ON a.flex_string01 = config_metafield_lov.mfdch_value
				WHERE to_char(b.flex_date01,'yyyy-mm-dd') = '$fromdate' AND j.shipper_bzu = '$consignee_bzu' 
				AND config_metafield_lov.mfdch_value!='CANCEL'";
			$rslt_str=$this->bm->dataselect($str);
			

			$data['cnfName']=$rslt_str[0]['cnf'];
			//$data['type']=$type;
			$this->load->view('cssAssets');
			$this->load->view('assignmentCNFContainerListView',$data);
			$this->load->view('jsAssets');							
		}

		//Monthly Assignment Report   -- Start

		function monthlyAssignmentReportForm()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$title="Monthly Assignment Report";
				$msg="";
				$data['title']=$title;
				$data['msg'] = $msg;

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('monthlyAssignmentReport',$data);
				$this->load->view('jsAssets');
			}
		}

		function monthlyAssignmentReport()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$cnfName = $this->input->post("cnf");
				$year = $this->input->post("year");
				$month = $this->input->post("month");



				
				
				$query = "  SELECT cnf,assignDt,COUNT(cont_no) AS cnt FROM (
					SELECT DISTINCT a.gkey,a.id AS cont_no,k.name  AS cnf,
					CONCAT(k.address_line1,k.address_line2) AS cnf_addr,
					flex_date01,
                    cast(b.flex_date01 as date) AS assignDt,
                    j.bl_nbr, k.gkey AS bizu_gkey, config_metafield_lov.mfdch_value,
					mfdch_desc 
					FROM inv_unit a
					INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey = a.gkey
					INNER JOIN inv_goods j ON j.gkey = a.goods
					LEFT JOIN ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
					INNER JOIN config_metafield_lov ON a.flex_string01 = config_metafield_lov.mfdch_value
					WHERE to_char(b.flex_date01,'Mon') = '$month' AND EXTRACT(year from b.flex_date01) = '$year' AND k.name LIKE '%$cnfName%'  AND config_metafield_lov.mfdch_value!='CANCEL'
					)  tbl GROUP BY assignDt,cnf";

				$monthlycnfReport = $this->bm->dataSelect($query);
				$data['monthlycnfReport'] = $monthlycnfReport;
				
				$data['cnfName'] = $cnfName;
				$data['year'] = $year;
				$data['month'] = $month;

				$title="Monthly Assignment Report";
				$msg="";
				$data['title']=$title;
				$data['msg'] = $msg;

				//$this->load->view('cssAssets');
				//$this->load->view('headerTop');
				//$this->load->view('sidebar');
				$this->load->view('monthlyAssignmentReport',$data);
				//$this->load->view('jsAssets');
			}
		}

		//Monthly Assignment Report   -- End

		//Yearly Assignment Report   -- Start

		function yearlyAssignmentReportForm()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$title="Yearly Assignment Report";
				$msg="";
				$data['title']=$title;
				$data['msg'] = $msg;

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('yearlyAssignmentReportForm',$data);
				$this->load->view('jsAssets');
			}
		}

		function yearlyAssignmentReport()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{

				$cnfName = $this->input->post("cnf");
				$year = $this->input->post("year");

				
				// $query = "SELECT cnf,COUNT(cont_no) AS cnt ,fa,mnth,mnt,mn,monthname FROM (
				// 	SELECT DISTINCT a.gkey,a.id AS cont_no,k.name  AS cnf,b.flex_date01 as fa,
				// 	CONCAT(k.address_line1,k.address_line2) AS cnf_addr,
                //     cast(b.flex_date01 as date) AS mnth,
                //     EXTRACT(year from b.flex_date01) AS mnt,
                //     EXTRACT(month from b.flex_date01) AS mn,
               	// 	to_char(b.flex_date01,'Mon')  AS monthname,    
				// 	j.bl_nbr, k.gkey AS bizu_gkey, config_metafield_lov.mfdch_value,
				// 	mfdch_desc 
				// 	FROM inv_unit a
				// 	INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey = a.gkey
				// 	INNER JOIN inv_goods j ON j.gkey = a.goods
				// 	LEFT JOIN ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
				// 	INNER JOIN config_metafield_lov ON a.flex_string01 = config_metafield_lov.mfdch_value
				// 	WHERE EXTRACT(year from b.flex_date01) = '$year'  AND k.name LIKE '%$cnfName%' AND config_metafield_lov.mfdch_value!='CANCEL'
				// 	) tbl GROUP BY cnf,fa,mnth,mnt,mn,monthname";
				$query = "
				SELECT cnf,assignDt,COUNT(cont_no) AS cnt ,fa,mnth,year,monthname FROM (
		SELECT DISTINCT a.gkey,a.id AS cont_no,k.name  AS cnf,b.flex_date01 as fa,
		CONCAT(k.address_line1,k.address_line2) AS cnf_addr,
		cast(b.flex_date01 as date) AS assignDt,
		EXTRACT(year from b.flex_date01) AS year,
		EXTRACT(month from b.flex_date01) AS mnth,
		to_char(b.flex_date01,'Mon')  AS monthname,    
		j.bl_nbr, k.gkey AS bizu_gkey, config_metafield_lov.mfdch_value,
		mfdch_desc 
		FROM inv_unit a
		INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey = a.gkey
		INNER JOIN inv_goods j ON j.gkey = a.goods
		LEFT JOIN ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
		INNER JOIN config_metafield_lov ON a.flex_string01 = config_metafield_lov.mfdch_value
		WHERE EXTRACT(year from b.flex_date01) = '$year' AND k.name LIKE '%$cnfName%'  AND config_metafield_lov.mfdch_value!='CANCEL'
		) tbl GROUP BY assignDt,cnf,fa,mnth,year,monthname";

				$yearlycnfReport = $this->bm->dataSelect($query);
				$data['yearlycnfReport'] = $yearlycnfReport;
				$data['cnfName'] = $cnfName;
				$data['year'] = $year;

				$title="Yearly Assignment Report";
				$msg="";
				$data['title']=$title;
				$data['msg'] = $msg;

				//$this->load->view('cssAssets');
				//$this->load->view('headerTop');
				//$this->load->view('sidebar');
				$this->load->view('yearlyAssignmentReport',$data);
				//$this->load->view('jsAssets');
			}
		}

		//Yearly Assignment Report   -- End
		
		function icdInBoundOutBoundReport()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="ICD INBOUND OUTBOUND REPORT...";
				
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('icd_InBoundOutBoundReport',$data);
				$this->load->view('jsAssets');

				
			}
		
		}
			
			
		
		function icdInBoundOutBoundReportAction()
		{
					
			$be_entry_date=$this->input->post('be_entry_date');
			$options = $this->input->post('options');
			
			
			$sql_icd_inbound = "";
		
			if($options=="in"){
			
			
			// $sql_icd_inbound = "SELECT sparcsn4.inv_unit.id,inv_unit.freight_kind,  sparcsn4.vsl_vessel_visit_details.ib_vyg AS rot_no,sparcsn4.vsl_vessels.name AS v_name, RIGHT(sparcsn4.ref_equip_type.nominal_length,2) AS size, RIGHT(sparcsn4.ref_equip_type.nominal_height,2)/10 AS height, DATE(sparcsn4.argo_carrier_visit.ata) AS ata, sparcsn4.inv_unit_fcy_visit.last_pos_slot,inv_unit_fcy_visit.time_in, inv_unit_fcy_visit.time_out 
			// FROM sparcsn4.inv_unit 
			// INNER JOIN sparcsn4.inv_goods ON sparcsn4.inv_unit.goods=sparcsn4.inv_goods.gkey
			// INNER JOIN sparcsn4.inv_unit_fcy_visit ON sparcsn4.inv_unit_fcy_visit.unit_gkey=sparcsn4.inv_unit.gkey 
			// INNER JOIN sparcsn4.argo_carrier_visit ON sparcsn4.argo_carrier_visit.gkey=sparcsn4.inv_unit_fcy_visit.actual_ib_cv
			// INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessel_visit_details.vvd_gkey=sparcsn4.argo_carrier_visit.cvcvd_gkey 
			// INNER JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey 
			// INNER JOIN sparcsn4.inv_unit_equip ON sparcsn4.inv_unit_equip.unit_gkey=inv_unit.gkey 
			// INNER JOIN sparcsn4.ref_equipment ON sparcsn4.ref_equipment.gkey=sparcsn4.inv_unit_equip.eq_gkey 
			// INNER JOIN sparcsn4.ref_equip_type ON sparcsn4.ref_equip_type.gkey=sparcsn4.ref_equipment.eqtyp_gkey 
			// WHERE  sparcsn4.inv_unit.category='IMPRT' AND sparcsn4.inv_goods.destination=2592 AND 
			// DATE(sparcsn4.inv_unit_fcy_visit.time_in)= '$be_entry_date'"; 


			$sql_icd_inbound = "SELECT inv_unit.id,inv_unit.freight_kind,  substr(ref_equip_type.nominal_length,-2)AS siz, substr(ref_equip_type.nominal_height,-2) AS height,vsl_vessel_visit_details.ib_vyg AS rot_no,vsl_vessels.name AS v_name,    to_date(argo_carrier_visit.ata) AS ata, inv_unit_fcy_visit.last_pos_slot,inv_unit_fcy_visit.time_in, inv_unit_fcy_visit.time_out 
			FROM inv_unit 
			INNER JOIN inv_goods ON inv_unit.goods=inv_goods.gkey
			INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey 
			INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
			INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey 
			INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey 
            INNER JOIN ref_equipment ON ref_equipment.gkey=INV_UNIT.eq_gkey
			INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey
            
			WHERE  inv_unit.category='IMPRT' AND inv_goods.destination='2592' AND 
			to_date(inv_unit_fcy_visit.time_in)= '$be_entry_date'"; 
			
			$rslt_sql_icd_inbound = $this->bm->dataSelect($sql_icd_inbound);
			
			//$this->load->library('M_pdf');
			//$iopdf->use_kwt = true;

			//--
			$this->data['rslt_sql_icd_inbound']=$rslt_sql_icd_inbound;
			$this->data['be_entry_date']=$be_entry_date;

			//$pdf = $this->iopdf->load();

			////$pdf->SetWatermarkText('CPA CTMS');
			//$pdf->showWatermarkText = true;

			$this->load->view('icdInBoundReportpdf.php',$this->data);

			//$pdfFilePath ="date_wise_bill_of_entry_report-".time()."-download.pdf";

			//$pdf->useSubstitutions = true;
			//$pdf->setFooter('|Page {PAGENO} of {nb}|');
			//	$pdf->WriteHTML($stylesheet,1);
			//$pdf->WriteHTML($html,2);

			//$pdf->Output($pdfFilePath, "I");
			}
			
			else{
				
			}
		}
		
		
		
		function pangaonInBoundOutBoundReport()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="Pangaon In Bound Out Bound Report";

				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('pangoanInBoundOutBoundReport',$data);
				$this->load->view('jsAssetsList');
			}
		
		}
		
		function pangaonInBoundOutBoundReportAction()
		{	
			
			$be_entry_date=$this->input->post('be_entry_date');
			$options = $this->input->post('options');
			
			
			$sql_pangaon_inbound = "";
		
			if($options=="in"){
			
			
			// $sql_pangaon_inbound = "SELECT sparcsn4.inv_unit.id,inv_unit.freight_kind,  sparcsn4.vsl_vessel_visit_details.ib_vyg AS rot_no,sparcsn4.vsl_vessels.name AS v_name, RIGHT(sparcsn4.ref_equip_type.nominal_length,2) AS size, RIGHT(sparcsn4.ref_equip_type.nominal_height,2)/10 AS height, DATE(sparcsn4.argo_carrier_visit.ata) AS ata, sparcsn4.inv_unit_fcy_visit.last_pos_slot,inv_unit_fcy_visit.time_in, inv_unit_fcy_visit.time_out 
			// FROM sparcsn4.inv_unit 
			// INNER JOIN sparcsn4.inv_goods ON sparcsn4.inv_unit.goods=sparcsn4.inv_goods.gkey
			// INNER JOIN sparcsn4.inv_unit_fcy_visit ON sparcsn4.inv_unit_fcy_visit.unit_gkey=sparcsn4.inv_unit.gkey 
			// INNER JOIN sparcsn4.argo_carrier_visit ON sparcsn4.argo_carrier_visit.gkey=sparcsn4.inv_unit_fcy_visit.actual_ib_cv
			// INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessel_visit_details.vvd_gkey=sparcsn4.argo_carrier_visit.cvcvd_gkey 
			// INNER JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey 
			// INNER JOIN sparcsn4.inv_unit_equip ON sparcsn4.inv_unit_equip.unit_gkey=inv_unit.gkey 
			// INNER JOIN sparcsn4.ref_equipment ON sparcsn4.ref_equipment.gkey=sparcsn4.inv_unit_equip.eq_gkey 
			// INNER JOIN sparcsn4.ref_equip_type ON sparcsn4.ref_equip_type.gkey=sparcsn4.ref_equipment.eqtyp_gkey 
			// WHERE  sparcsn4.inv_unit.category='IMPRT' AND sparcsn4.inv_goods.destination=5235 AND 
			// DATE(sparcsn4.inv_unit_fcy_visit.time_in)= '$be_entry_date'"; 

			 $sql_pangaon_inbound = " SELECT inv_unit.id,inv_unit.freight_kind, substr(ref_equip_type.nominal_length,-2)AS siz, substr(ref_equip_type.nominal_height,-2) AS height,  to_date(argo_carrier_visit.ata) AS ata,  vsl_vessel_visit_details.ib_vyg AS rot_no,vsl_vessels.name AS v_name,inv_unit_fcy_visit.last_pos_slot,inv_unit_fcy_visit.time_in, inv_unit_fcy_visit.time_out 
			FROM inv_unit 
			INNER JOIN inv_goods ON inv_unit.goods=inv_goods.gkey
			INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey 
			INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
			INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey 
			INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey 
			INNER JOIN ref_equipment ON ref_equipment.gkey=INV_UNIT.eq_gkey
            INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey
            
          
			WHERE  inv_unit.category='IMPRT' AND inv_goods.destination='5235' AND 
			to_date(inv_unit_fcy_visit.time_in)= '$be_entry_date'"; 



			
			$rslt_sql_pangaon_inbound = $this->bm->dataSelect($sql_pangaon_inbound);
			
			//$this->load->library('M_pdf');
			//$iopdf->use_kwt = true;

			//--
			$this->data['rslt_sql_pangaon_inbound']=$rslt_sql_pangaon_inbound;
			$this->data['be_entry_date']=$be_entry_date;

			//$pdf = $this->iopdf->load();

			////$pdf->SetWatermarkText('CPA CTMS');
			//$pdf->showWatermarkText = true;

			$this->load->view('pangaonInBoundReportpdf.php',$this->data);

			//$pdfFilePath ="date_wise_bill_of_entry_report-".time()."-download.pdf";

			//$pdf->useSubstitutions = true;
			//$pdf->setFooter('|Page {PAGENO} of {nb}|');
			//	$pdf->WriteHTML($stylesheet,1);
			//$pdf->WriteHTML($html,2);

			//$pdf->Output($pdfFilePath, "I");
			}
			
			else{
				
			}
		}

		//Yard Wise Lying DG Container List  -- Start

		function yardWiseLyingDGContListForm()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$title="Yard Wise Lying DG Container List";
				$msg="";
				$data['title']=$title;
				//$data['msg'] = $msg;

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('yardWiseLyingDGContListForm',$data);
				$this->load->view('jsAssets');
			}
		}

		function yardWiseLyingDGContList()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{

				$options = $this->input->post("options");
				$yard = $this->input->post("yard");;

				$title="Yard Wise Lying DG Container List";
				$data['title']=$title;
				$data['yard']=$yard;

				$data['options']=$options;

				//$data['msg'] = $msg;

				
				$this->load->view('yardWiseDGLyingContainerList',$data);
			}
		}

		//Yard Wise Lying DG Container List  -- End
		
		//LCL Delivery List -- Start

		function lcldeliveryList()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$cnfLic = $this->session->userdata('org_license');

				$org_Type_id = $this->session->userdata('org_Type_id');

				if($org_Type_id == 2)
				{
					$str="SELECT shed_tally_info.verify_number, shed_tally_info.igm_detail_id, shed_tally_info.igm_sup_detail_id, igm_supplimentary_detail.BL_No, igm_supplimentary_detail.weight_unit, tally_sheet_number,shed_tally_info.import_rotation,shed_tally_info.cont_number,SUM(rcv_pack) AS rcv_pack,SUM(flt_pack) AS flt_pack,SUM(shed_loc) AS shed_loc,loc_first,wr_date,shed_yard, lcl_dlv_assignment.cp_no, verify_other_data.cnf_lic_no, verify_other_data.do_date, assignment_request_data.assignmentDate
					FROM shed_tally_info
					LEFT JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
					INNER JOIN lcl_dlv_assignment ON (lcl_dlv_assignment.bl_no=igm_supplimentary_detail.BL_No AND lcl_dlv_assignment.rot_no=igm_supplimentary_detail.Import_Rotation_No)
					INNER JOIN verify_other_data ON verify_other_data.shed_tally_id=shed_tally_info.id
					LEFT JOIN assignment_request_data 
					ON assignment_request_data.cont_number= shed_tally_info.cont_number AND assignment_request_data.rotation=shed_tally_info.import_rotation
					GROUP BY tally_sheet_number
					ORDER BY verify_other_data.id DESC LIMIT 500";
				}
				else if($org_Type_id == 59)
				{
					$str="SELECT shed_tally_info.verify_number, shed_tally_info.igm_detail_id, shed_tally_info.igm_sup_detail_id, igm_supplimentary_detail.BL_No, igm_supplimentary_detail.weight_unit, tally_sheet_number,shed_tally_info.import_rotation,shed_tally_info.cont_number,SUM(rcv_pack) AS rcv_pack,SUM(flt_pack) AS flt_pack,SUM(shed_loc) AS shed_loc,loc_first,wr_date,shed_yard, lcl_dlv_assignment.cp_no, verify_other_data.cnf_lic_no, verify_other_data.do_date, assignment_request_data.assignmentDate
					FROM shed_tally_info
					LEFT JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
					INNER JOIN lcl_dlv_assignment ON (lcl_dlv_assignment.bl_no=igm_supplimentary_detail.BL_No AND lcl_dlv_assignment.rot_no=igm_supplimentary_detail.Import_Rotation_No)
					INNER JOIN verify_other_data ON verify_other_data.shed_tally_id=shed_tally_info.id
					LEFT JOIN assignment_request_data 
					ON assignment_request_data.cont_number= shed_tally_info.cont_number AND assignment_request_data.rotation=shed_tally_info.import_rotation
					GROUP BY tally_sheet_number
					ORDER BY verify_other_data.id DESC LIMIT 500";
				}
				else
				{
					$str="SELECT shed_tally_info.verify_number, shed_tally_info.igm_detail_id, shed_tally_info.igm_sup_detail_id, igm_supplimentary_detail.BL_No, igm_supplimentary_detail.weight_unit, tally_sheet_number,shed_tally_info.import_rotation,shed_tally_info.cont_number,SUM(rcv_pack) AS rcv_pack,SUM(flt_pack) AS flt_pack,SUM(shed_loc) AS shed_loc,loc_first,wr_date,shed_yard, lcl_dlv_assignment.cp_no, verify_other_data.cnf_lic_no, verify_other_data.do_date, assignment_request_data.assignmentDate
					FROM shed_tally_info
					LEFT JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
					INNER JOIN lcl_dlv_assignment ON (lcl_dlv_assignment.bl_no=igm_supplimentary_detail.BL_No AND lcl_dlv_assignment.rot_no=igm_supplimentary_detail.Import_Rotation_No)
					INNER JOIN verify_other_data ON verify_other_data.shed_tally_id=shed_tally_info.id
					LEFT JOIN assignment_request_data 
					ON assignment_request_data.cont_number= shed_tally_info.cont_number AND assignment_request_data.rotation=shed_tally_info.import_rotation
					GROUP BY tally_sheet_number
					ORDER BY verify_other_data.id DESC LIMIT 500";
				}
				
				$rtnContainerList = $this->bm->dataSelectDb1($str);
				$data['rtnContainerList']=$rtnContainerList;

				$yard_query = "SELECT DISTINCT shed_yard FROM shed_tally_info WHERE shed_yard LIKE '%Shed%' OR shed_yard IN ('CFS/CCT','CFS/NCT')";
				$yardList = $this->bm->dataSelectDb1($yard_query);
				$data['yardList']=$yardList;

				$data['org_Type_id'] = $org_Type_id;
				$data['title']="LCL Delivery List";
				$data['msg'] = "";
				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('lcldeliveryList',$data);
				$this->load->view('jsAssetsList');
			}
		}

		function lcldeliverySearch(){
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$yard = $this->input->post("yard");
				$date = $this->input->post("date");

				$cnfLic = $this->session->userdata('org_license');
				$org_Type_id = $this->session->userdata('org_Type_id');

				if($org_Type_id == 2)
				{
					$str="SELECT shed_tally_info.verify_number, shed_tally_info.igm_detail_id, shed_tally_info.igm_sup_detail_id, igm_supplimentary_detail.BL_No, igm_supplimentary_detail.weight_unit, tally_sheet_number,shed_tally_info.import_rotation,shed_tally_info.cont_number,SUM(rcv_pack) AS rcv_pack,SUM(flt_pack) AS flt_pack,SUM(shed_loc) AS shed_loc,loc_first,wr_date,shed_yard, lcl_dlv_assignment.cp_no, verify_other_data.cnf_lic_no, verify_other_data.do_date, assignment_request_data.assignmentDate
					FROM shed_tally_info
					LEFT JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
					LEFT JOIN lcl_dlv_assignment ON (lcl_dlv_assignment.bl_no=igm_supplimentary_detail.BL_No AND lcl_dlv_assignment.rot_no=igm_supplimentary_detail.Import_Rotation_No)
					INNER JOIN verify_other_data ON verify_other_data.shed_tally_id=shed_tally_info.id
					LEFT JOIN assignment_request_data 
					ON assignment_request_data.cont_number= shed_tally_info.cont_number AND assignment_request_data.rotation=shed_tally_info.import_rotation
					WHERE wr_date='$date' AND shed_yard='$yard'
					GROUP BY tally_sheet_number
					ORDER BY verify_other_data.id DESC LIMIT 500";
					
					
				}
				else if($org_Type_id == 59 || $org_Type_id == 62)
				{
					$str="SELECT shed_tally_info.verify_number, shed_tally_info.igm_detail_id, shed_tally_info.igm_sup_detail_id, igm_supplimentary_detail.BL_No, igm_supplimentary_detail.weight_unit, tally_sheet_number,shed_tally_info.import_rotation,shed_tally_info.cont_number,SUM(rcv_pack) AS rcv_pack,SUM(flt_pack) AS flt_pack,SUM(shed_loc) AS shed_loc,loc_first,wr_date,shed_yard, lcl_dlv_assignment.cp_no, verify_other_data.cnf_lic_no, verify_other_data.do_date, assignment_request_data.assignmentDate
					FROM shed_tally_info
					LEFT JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
					LEFT JOIN lcl_dlv_assignment ON (lcl_dlv_assignment.bl_no=igm_supplimentary_detail.BL_No AND lcl_dlv_assignment.rot_no=igm_supplimentary_detail.Import_Rotation_No)
					INNER JOIN verify_other_data ON verify_other_data.shed_tally_id=shed_tally_info.id
					LEFT JOIN assignment_request_data 
					ON assignment_request_data.cont_number= shed_tally_info.cont_number AND assignment_request_data.rotation=shed_tally_info.import_rotation
					WHERE wr_date='$date' AND shed_yard='$yard'
					GROUP BY tally_sheet_number
					ORDER BY verify_other_data.id DESC LIMIT 500";
				}

				$rtnContainerList = $this->bm->dataSelectDb1($str);
				$data['rtnContainerList']=$rtnContainerList;

				$yard_query = "SELECT DISTINCT shed_yard FROM shed_tally_info WHERE shed_yard LIKE '%Shed%' OR shed_yard IN ('CFS/CCT','CFS/NCT')";
				$yardList = $this->bm->dataSelectDb1($yard_query);
				$data['yardList']=$yardList;

				$data['org_Type_id'] = $org_Type_id;
				$data['title']="LCL Delivery List";
				$data['msg'] = "";
				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('lcldeliveryList',$data);
				$this->load->view('jsAssetsList');
			}
		}

		function viewDeliveryInfo()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$rot = $this->input->post('rotation');
				$bl = $this->input->post('blNo');
				$cp_no = $this->input->post('cp_no');
				$verify_no = $this->input->post('verify_no');
				$cnf_lic_no = $this->input->post('cnf_lic_no');
				$assignmentDate = $this->input->post('assignmentDate');
				$igm_sup_dtl_id = $this->input->post('igm_sup_dtl_id');

				$noOfTruckQuery = "SELECT no_of_truck FROM assignment_request_data WHERE rotation = '$rot' AND bl = '$bl'";
				$noOfTruckRslt = $this->bm->dataSelectDB1($noOfTruckQuery);
				$noOfTruck = "";
				for($i=0;$i<count($noOfTruckRslt);$i++){
					$noOfTruck = $noOfTruckRslt[$i]['no_of_truck'];
				}
				
				// $query = "SELECT id,igm_sup_dtl_id,rot_no,bl_no,cp_no,cnf_lic_no,no_of_truck FROM lcl_dlv_assignment WHERE id='$id'";
				// $rslt_query = $this->bm->dataSelectDb1($query);

				// for($i=0;$i<count($rslt_query);$i++){
					// $rot = $rslt_query[0]['rot_no'];
					// $bl = $rslt_query[0]['bl_no'];
					// $igm_sup_dtl_id = $rslt_query[0]['igm_sup_dtl_id'];
					// $cp_no = $rslt_query[0]['cp_no'];
					// $cnf_lic_no = $rslt_query[0]['cnf_lic_no'];
					// $no_of_truck = $rslt_query[0]['no_of_truck'];
				// }

				$data['noOfTruck'] = $noOfTruck;
				$data['flag'] = "1";
				$data['msg'] = "";
				$data['rot'] = $rot;
				$data['bl'] = $bl;
				$data['cp_no'] = $cp_no;
				$data['verify_no'] = $verify_no;
				$data['assignmentDate'] = $assignmentDate;
				$data['cnf_lic_no'] = $cnf_lic_no;
				$data['igm_sup_dtl_id'] = $igm_sup_dtl_id;

				$data['title']="View Delivery Info";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('viewDeliveryInfo',$data);
				$this->load->view('jsAssets');
			}
		}

		function entryDlvInfo()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$rot = $this->input->post('rot_no');
				$bl = $this->input->post('bl_no');
				$cp = $this->input->post('cp');
				$cnfLic = $this->input->post('cnfLic');
				$noOfTruck = $this->input->post('noOfTruck');   // No. Of Truck
				$verify_no = $this->input->post('verify_no');   // No. Of Truck
				$assign_dt = $this->input->post('assign_dt');   // No. Of Truck

				$igm_sup_dtl_id = $this->input->post('igm_sup_dtl_id');
				$ipaddr = $_SERVER['REMOTE_ADDR'];
				$org_Type_id = $this->session->userdata('org_Type_id');

				$data['org_Type_id'] = $org_Type_id;

				$chkExist = "SELECT COUNT(*) as rtnValue FROM lcl_dlv_assignment WHERE rot_no = '$rot' AND bl_no = '$bl' ";
				$row = $this->bm->dataReturnDB1($chkExist);

				if($row>0){
					$updateQuery = "UPDATE lcl_dlv_assignment SET igm_sup_dtl_id = '$igm_sup_dtl_id' , no_of_truck = '$noOfTruck' , cp_no = '$cp' , cnf_lic_no = '$cnfLic' , entry_by = '$login_id' , entry_at = NOW() , entry_ip = '$ipaddr' , deliveryDt = '$assign_dt' WHERE rot_no = '$rot' AND bl_no = '$bl'";

					if($this->bm->dataInsertDB1($updateQuery))
					$msg = "<font color='green'><b>Delivery Info updated succesfully.</b></font>";

				} else {
					$insertQuery = "INSERT INTO lcl_dlv_assignment(igm_sup_dtl_id,rot_no,bl_no,no_of_truck,cp_no,cnf_lic_no, verify_num, entry_by,entry_at,entry_ip,deliveryDt) VALUES('$igm_sup_dtl_id','$rot','$bl','$noOfTruck','$cp','$cnfLic','$verify_no','$login_id',NOW(),'$ipaddr','$assign_dt')";

					if($this->bm->dataInsertDB1($insertQuery))
					$msg = "<font color='green'><b>Delivery Info entered succesfully.</b></font>";
				}


				$str="SELECT shed_tally_info.igm_detail_id, shed_tally_info.igm_sup_detail_id, igm_supplimentary_detail.BL_No, igm_supplimentary_detail.weight_unit, tally_sheet_number,import_rotation,cont_number,SUM(rcv_pack) AS rcv_pack,SUM(flt_pack) AS flt_pack,SUM(shed_loc) AS shed_loc,loc_first,wr_date,shed_yard
				FROM shed_tally_info
				INNER JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id = igm_supplimentary_detail.id
				GROUP BY tally_sheet_number
				ORDER BY shed_tally_info.id DESC LIMIT 50";
				
				$rtnContainerList = $this->bm->dataSelectDb1($str);
				$data['rtnContainerList']=$rtnContainerList;

				$query = "SELECT * FROM lcl_dlv_assignment";
				$rslt_query = $this->bm->dataSelectDb1($query);

				$data['title']="LCL Delivery Assignment";
				$data['msg'] = $msg;
				$data['rslt_query'] = $rslt_query;

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('lcldeliveryAssignment',$data);
				$this->load->view('jsAssets');

				// if($row>0){
					// $query = "SELECT * FROM lcl_dlv_assignment";
					// $rslt_query = $this->bm->dataSelectDb1($query);

					// $data['title']="LCL Delivery Assignment";
					// $data['msg'] = $msg;
					// $data['rslt_query'] = $rslt_query;

					// $this->load->view('cssAssets');
					// $this->load->view('headerTop');
					// $this->load->view('sidebar');
					// $this->load->view('lcldeliveryAssignment',$data);
					// $this->load->view('jsAssets');

				// } else {
				// 	$data['msg'] = $msg;
				// 	$data['title']="LCL Delivery List";
				// 	$this->load->view('cssAssetsList');
				// 	$this->load->view('headerTop');
				// 	$this->load->view('sidebar');
				// 	$this->load->view('lcldeliveryList',$data);
				// 	$this->load->view('jsAssetsList');
				// }
			}
		}

		//LCL Delivery List  -- End

		//Last 24 Hrs Cont. Handling Report   -- Start
	
		function last24HrContHandlingForm()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$title="Last 24 Hours Cont. Handling Form";
				$msg="";
				$data['title']=$title;

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('last24HrContHandlingForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function last24HrContHandling()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$date = $this->input->post("date");
				$yard = $this->input->post("yard");

			/*	$query = "SELECT berth, Block_No,SUM(imp20) AS imp20,SUM(imp40) AS imp40,SUM(move_kind) AS keepDlv,(SUM(imp20)+SUM(imp40)*2) AS impteus
				FROM (
				SELECT sparcsn4.inv_unit.id,sparcsn4.vsl_vessel_visit_details.ib_vyg,LEFT(ctmsmis.berth_for_cont(sparcsn4.vsl_vessel_visit_details.vvd_gkey,sparcsn4.inv_unit_fcy_visit.time_in),3) AS berth,
				inv_unit_fcy_visit.last_pos_slot,
				(SELECT ctmsmis.cont_yard(inv_unit_fcy_visit.last_pos_slot)) AS Yard_No, 
				(SELECT ctmsmis.cont_block(inv_unit_fcy_visit.last_pos_slot, Yard_No)) AS Block_No,
				(CASE WHEN RIGHT(sparcsn4.ref_equip_type.nominal_length,2)=20 AND 
				sparcsn4.inv_unit_fcy_visit.time_in BETWEEN CONCAT(DATE_ADD('$date',INTERVAL -1 DAY),' 08:00:00') AND CONCAT('$date',' 07:59:59') THEN 1 ELSE 0 END)  AS imp20,
				(CASE WHEN RIGHT(sparcsn4.ref_equip_type.nominal_length,2)!=20 AND 
				sparcsn4.inv_unit_fcy_visit.time_in BETWEEN CONCAT(DATE_ADD('$date',INTERVAL -1 DAY),' 08:00:00') AND CONCAT('$date',' 07:59:59')  THEN 1 ELSE 0 END)  AS imp40,
				(SELECT IF(move_kind='YARD',1,0) 
				FROM sparcsn4.srv_event 
				INNER JOIN sparcsn4.inv_move_event ON sparcsn4.inv_move_event.mve_gkey=sparcsn4.srv_event.gkey
				INNER JOIN sparcsn4.xps_che ON (sparcsn4.xps_che.gkey=sparcsn4.inv_move_event.che_fetch OR sparcsn4.xps_che.gkey=sparcsn4.inv_move_event.che_carry OR sparcsn4.xps_che.gkey=sparcsn4.inv_move_event.che_put)
				WHERE sparcsn4.srv_event.created BETWEEN  CONCAT(DATE_ADD('$date',INTERVAL -1 DAY),' 08:00:00') AND CONCAT('$date',' 07:59:59') AND creator='-xps-' AND move_kind='YARD' LIMIT 1) AS move_kind,
				0 AS exp20,0 AS exp40
				FROM sparcsn4.inv_unit
				INNER JOIN sparcsn4.inv_unit_fcy_visit ON sparcsn4.inv_unit_fcy_visit.unit_gkey=sparcsn4.inv_unit.gkey
				INNER JOIN sparcsn4.argo_carrier_visit ON sparcsn4.argo_carrier_visit.gkey=sparcsn4.inv_unit_fcy_visit.actual_ib_cv
				INNER JOIN sparcsn4.vsl_vessel_visit_details ON sparcsn4.vsl_vessel_visit_details.vvd_gkey=sparcsn4.argo_carrier_visit.cvcvd_gkey
				INNER JOIN sparcsn4.vsl_vessel_berthings ON sparcsn4.vsl_vessel_berthings.vvd_gkey=sparcsn4.vsl_vessel_visit_details.vvd_gkey
				INNER JOIN sparcsn4.argo_quay ON sparcsn4.argo_quay.gkey=sparcsn4.vsl_vessel_berthings.quay
				INNER JOIN sparcsn4.inv_unit_equip ON sparcsn4.inv_unit_equip.unit_gkey=sparcsn4.inv_unit.gkey
				INNER JOIN sparcsn4.ref_equipment ON sparcsn4.ref_equipment.gkey=sparcsn4.inv_unit_equip.eq_gkey
				INNER JOIN sparcsn4.ref_equip_type ON sparcsn4.ref_equip_type.gkey=sparcsn4.ref_equipment.eqtyp_gkey
				WHERE sparcsn4.argo_carrier_visit.phase IN ('30ARRIVED','40WORKING')  
				) AS imptbl WHERE berth='$yard'  GROUP BY Block_No";*/

				$query="SELECT inv_unit.id,vsl_vessel_visit_details.ib_vyg,
						inv_unit_fcy_visit.last_pos_slot,
						vsl_vessel_visit_details.vvd_gkey,to_char(inv_unit_fcy_visit.time_in,'yyyy-mm-dd hh24:mi:ss') as time_in,
						(CASE WHEN substr(ref_equip_type.nominal_length,-2)=20 AND 
						inv_unit_fcy_visit.time_in BETWEEN to_date(CONCAT('$date', ' 08:00:00'),'yyyy-mm-dd hh24:mi:ss')-1 AND to_date(CONCAT('$date',' 07:59:59'),'yyyy-mm-dd hh24:mi:ss') THEN 1 ELSE 0 END)  AS imp20,
						(CASE WHEN substr(ref_equip_type.nominal_length,-2)!=20 AND 
						inv_unit_fcy_visit.time_in BETWEEN to_date(CONCAT('$date', ' 08:00:00'),'yyyy-mm-dd hh24:mi:ss')-1 AND to_date(CONCAT('$date',' 07:59:59'),'yyyy-mm-dd hh24:mi:ss') THEN 1 ELSE 0 END)  AS imp40,

						(SELECT 
						(CASE
						WHEN move_kind='YARD' THEN '1' ELSE '0'

						END)

						FROM srv_event 
						INNER JOIN inv_move_event ON inv_move_event.mve_gkey=srv_event.gkey
						INNER JOIN xps_che ON (xps_che.gkey=inv_move_event.che_fetch OR xps_che.gkey=inv_move_event.che_carry OR xps_che.gkey=inv_move_event.che_put)
						WHERE srv_event.created  BETWEEN to_date(CONCAT('$date', ' 08:00:00'),'yyyy-mm-dd hh24:mi:ss')-1 AND to_date(CONCAT('$date',' 07:59:59'),'yyyy-mm-dd hh24:mi:ss')  
						AND creator='-xps-' AND move_kind='YARD' FETCH FIRST 1 ROWS ONLY ) AS move_kind,
						0 AS exp20,0 AS exp40
						FROM inv_unit
						INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
						INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
						INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
						INNER JOIN vsl_vessel_berthings ON vsl_vessel_berthings.vvd_gkey=vsl_vessel_visit_details.vvd_gkey
						INNER JOIN argo_quay ON argo_quay.gkey=vsl_vessel_berthings.quay
						INNER JOIN ref_equipment ON ref_equipment.gkey=inv_unit.eq_gkey
						INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey
                        WHERE argo_carrier_visit.phase IN ('30ARRIVED','40WORKING')";
					
						

				$rslt = $this->bm->dataSelect($query);
				$resultList;
				$groupList;
				$allBlock;
				$uniqueBlock;

				$j=0;
				for($i=0;$i<count($rslt);$i++){
                    $berth="";
					$vvd_gkey="";
				    $time_in="";
					$lastPosition="";
					$vvd_gkey=$rslt[$i]['VVD_GKEY'];
					$time_in=$rslt[$i]['TIME_IN'];
					$lastPosition=$rslt[$i]['LAST_POS_SLOT'];
					$sqlBerth="select LEFT(ctmsmis.berth_for_cont('$vvd_gkey','$time_in'),3) AS rtnValue";
					$berth=$this->bm->dataReturnDb2($sqlBerth);
					//	$berth="GCB";
                   if($berth==$yard){
						$yardNo="";
						$blockNo="";
						$sqlYardNo="SELECT ctmsmis.cont_yard('$lastPosition') AS rtnValue";
					    $yardNo=$this->bm->dataReturnDb2($sqlYardNo);
						$blockNoQuery="SELECT ctmsmis.cont_block('$lastPosition', '$yardNo') AS rtnValue";
					    $blockNo=$this->bm->dataReturnDb2($blockNoQuery);
						$resultList[$j]['ID']=$rslt[$i]['ID'];
						$resultList[$j]['IB_VYG']=$rslt[$i]['IB_VYG'];
						$resultList[$j]['VVD_GKEY']=$rslt[$i]['VVD_GKEY'];
						$resultList[$j]['LAST_POS_SLOT']=$rslt[$i]['LAST_POS_SLOT'];
						$resultList[$j]['TIME_IN']=$rslt[$i]['TIME_IN'];
						$resultList[$j]['IMP20']=$rslt[$i]['IMP20'];
						$resultList[$j]['IMP40']=$rslt[$i]['IMP40'];
						$resultList[$j]['MOVE_KIND']=$rslt[$i]['MOVE_KIND'];
						$resultList[$j]['EXP20']=$rslt[$i]['EXP20'];
						$resultList[$j]['EXP40']=$rslt[$i]['EXP40'];
						$resultList[$j]['berth']=$berth;
						$resultList[$j]['Yard_No']=$yardNo;
						$resultList[$j]['Block_No']=$blockNo;
						if($blockNo !='' and $blockNo !=null ){
                           $allBlock[$j]=$blockNo;
					    }
					   $j++;
					}

				}
				$uniqueBlock=array_unique($allBlock);
				$mainResultList;
				foreach($uniqueBlock as $key=> $singleBlock ){
					$p=0;
					$imp20=0;
					$imp40=0;
					$keepDlv=0;
					$impteus=0;
					$resultBerth=$resultList[$key]['berth'];
					$resultBlock=$resultList[$key]['Block_No'];

                    for($r=0;$r<count($resultList);$r++){
						$tempBlock="";
						$tempBlock=	$resultList[$r]['Block_No'];

						if($singleBlock==$tempBlock){
							$imp20=$imp20+$resultList[$r]['IMP20'];
							$imp40=$imp40+$resultList[$r]['IMP40'];
							$keepDlv=$keepDlv+$resultList[$r]['MOVE_KIND'];
						}
							
					}
					$impteus=($imp20+$imp40)*2;
					$mainResultList[$p]['berth']=$resultBerth;
					$mainResultList[$p]['Block_No']=$resultBlock;
					$mainResultList[$p]['imp20']=$imp20;
					$mainResultList[$p]['imp40']=$imp40;
					$mainResultList[$p]['keepDlv']=	$keepDlv;

					$mainResultList[$p]['impteus']=$impteus;
					$p++;

				}
		
				$data['rslt']=$mainResultList;
				$data['date'] = $date;
				$data['yard'] = $yard;

				$this->load->view('last24HrContHandlingReport',$data);
			}
		}

	

		//Last 24 Hrs Cont. Handling Report   -- End

		//vessel details show - start

		function vesselDetailsShow()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$date = $this->input->post('date');
				$data['vesselDate'] = $date;
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('dashboard',$data);
				$this->load->view('jsAssets');
			}
		}

		//vessel details show - end

		//Head Delivery Register  -- Start

		function headDeliveryRegister()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="Head Delivery Register Report";
				//echo $data['title'];
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('headDeliveryRegisterForm',$data);
				$this->load->view('jsAssets');
			}
		}

		//Head Delivery Register  -- End

		function lcldeliveryAssignment()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$query = "SELECT * FROM lcl_dlv_assignment";
				$rslt_query = $this->bm->dataSelectDb1($query);

				$data['title']="LCL Delivery Assignment";
				$data['msg'] = "";
				$data['rslt_query'] = $rslt_query;

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('lcldeliveryAssignment',$data);
				$this->load->view('jsAssets');

			}
		}

		function lcldeliveryAssignmentEdit()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$id = $this->input->post("id");
				$rot = "";
				$bl = "";
				$igm_sup_dtl_id = "";
				$cp_no = "";
				$cnf_lic_no = "";
				$no_of_truck = "";

				$query = "SELECT id,igm_sup_dtl_id,rot_no,bl_no,cp_no, verify_num,deliveryDt AS assignmentDate, cnf_lic_no,no_of_truck FROM lcl_dlv_assignment WHERE id='$id'";
				$rslt_query = $this->bm->dataSelectDb1($query);

				for($i=0;$i<count($rslt_query);$i++){
					$rot = $rslt_query[0]['rot_no'];
					$bl = $rslt_query[0]['bl_no'];
					$igm_sup_dtl_id = $rslt_query[0]['igm_sup_dtl_id'];
					$cp_no = $rslt_query[0]['cp_no'];
					$cnf_lic_no = $rslt_query[0]['cnf_lic_no'];
					$no_of_truck = $rslt_query[0]['no_of_truck'];
					$verify_num = $rslt_query[0]['verify_num'];
					$assignmentDate = $rslt_query[0]['assignmentDate'];
				}

				$data['verify_no'] = $verify_num;
				$data['assignmentDate'] = $assignmentDate;
				$data['id'] = $id;
				$data['rot'] = $rot;
				$data['bl'] = $bl;
				$data['igm_sup_dtl_id'] = $igm_sup_dtl_id;
				$data['cp_no'] = $cp_no;
				$data['cnf_lic_no'] = $cnf_lic_no;
				$data['no_of_truck'] = $no_of_truck;
				$data['msg'] = "";
				$data['flag'] = "edit";

				$data['title']="Edit Delivery Info";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('viewDeliveryInfo',$data);
				$this->load->view('jsAssets');

			}
		}

		// DG Container By Rotation  -- Start

		function dgContainerByRotation()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="DG Container By Rotation";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('dgContainerByRotation',$data);
				$this->load->view('jsAssets');
			}
		}

		function dgContainerByRotationReport()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$fileOptions = $this->input->post('fileOptions');
				$rotation = $this->input->post('rotation');
				
				$data['fileOptions']=$fileOptions;
				$data['rotation']=$rotation;
				$data['title']="DG Container By Rotation";
				
				$this->load->view('dgContainerByRotationReport',$data);
			}
		}

		// DG Container By Rotation  -- End

		// Valuable Item By Rotation  -- Start

		function valuableItemByRotation()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="Valuable Item By Rotation";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('valuableItemByRotation',$data);
				$this->load->view('jsAssets');
			}
		}

		function valuableItemByRotationReport()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$fileOptions = $this->input->post('fileOptions');
				$rotation = $this->input->post('rotation');
				
				$data['fileOptions']=$fileOptions;
				$data['rotation']=$rotation;
				$data['title']="Valuable Item By Rotation";
				
				$this->load->view('valuableItemByRotationReport',$data);
			}
		}

		// Valuable Item By Rotation  -- End

		##BL Wise Auction Cancel Form(Safayat)
		public function blWiseAucCancel()
		{
			# code...

			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			
			$data['msg'] = "";

			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$data['title']="BL Wise Auction Cancel Form";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('blWiseAucCancelForm',$data);
				$this->load->view('jsAssets');
			}
		}

		public function blWiseAucCancelAction()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
				
			}
			else
			{
				$login_id = $this->session->userdata('login_id');
				$user_ip=$_SERVER['REMOTE_ADDR'];

				$rot_no = $this->input->post('rot_no');
				$bl_no = $this->input->post('bl_no');

				$select_query = "SELECT igm_details.id as id, igm_detail_container.cont_number as cont_number , 'dtl' AS flag FROM igm_details
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE igm_details.Import_Rotation_No='$rot_no' AND igm_details.BL_No='$bl_no'
				
				UNION
				
				SELECT igm_supplimentary_detail.id as id, igm_sup_detail_container.cont_number as cont_number, 'sup_dtl' AS flag FROM igm_supplimentary_detail
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				WHERE igm_supplimentary_detail.Import_Rotation_No='$rot_no' AND igm_supplimentary_detail.master_BL_No='$bl_no'";

				$result_query = $this->bm->dataSelectDb1($select_query);

				$result_chk = 0;
				
				if(count($result_query))
				{
				$checkCont = $result_query[0]['cont_number'];
				
				$check_query = "SELECT COUNT(id) AS rtnValue
				FROM auction_cancel_log
				WHERE cont_no = '$checkCont' AND rot_no = '$rot_no';";
				
				$result_chk =  $this->bm->dataReturnDB1($check_query);
				}

				if(count($result_query)>0)
				{
					$data['msg']='Added for cancelation';
				}
				else {
					$data['msg']='The BL number for the rotation not found!!!';
				}
				
				if($result_chk == 0)
				{
					for($i=0; $i<count($result_query); $i++)
					{
						$cont_no = $result_query[$i]['cont_number'];
						$id = $result_query[$i]['id'];
						if($result_query[$i]['flag']=='dtl')
						{
							
							$insert_query = "INSERT INTO auction_cancel_log (cont_no, rot_no, dtl_no, cancel_by, update_time)
							VALUES ('$cont_no','$rot_no','$id','$login_id',NOW())";
						
							$this->bm->dataInsertDB1($insert_query);
						}
						else {
							
							$insert_query = "INSERT INTO auction_cancel_log (cont_no, rot_no, sup_dtl_no, cancel_by, update_time)
							VALUES ('$cont_no','$rot_no','$id','$login_id',NOW())";

							$this->bm->dataInsertDB1($insert_query);
						}
					}
				}
				else 
				{
					$data['msg'] = 'Already added to the list!';
				}

				$data['title']="BL Wise Auction Cancel Form";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('blWiseAucCancelForm',$data);
				$this->load->view('jsAssets');
				

			}
		}

		// Assignment Request Search By Date  -- Start

		function assignmentRequestSearchByDateForm()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['msg'] = "";
				$data['flag'] = 0;
				$data['title'] = "Assignment Request Search By Date";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('assignmentRequestSearchByDate',$data);
				$this->load->view('jsAssets');
			}
		}

		function assignmentRequestSearchByDateReport()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$date = $this->input->post('date');

				$query = "SELECT * FROM assignment_request_data WHERE assignmentDate = '$date' AND requested_by = '$login_id'";
				$rslt_query = $this->bm->dataSelectDb1($query);

				$data['requestRslt'] = $rslt_query;
				$data['date'] = $date;
				$data['msg'] = "";
				$data['flag'] = 1;
				$data['title'] = "Assignment Request List Report";
				$this->load->view('assignmentRequestSearchByDateReport',$data);
			}
		}

		// Assignmnet Request Search By Date  -- End
		
		function verifyNoList()
		{		
			$sql = "SELECT * FROM (
			SELECT id,verify_number,rotation,cont_number,bl_no 
			FROM verify_info_fcl 
			WHERE verify_number IS NOT NULL ORDER BY id DESC LIMIT 1000) AS tblfcl
			UNION ALL
			SELECT * FROM(
			SELECT shed_tally_info.id,verify_number,import_rotation AS rotation,shed_tally_info.cont_number,igm_supplimentary_detail.BL_No AS bl_no
			FROM shed_tally_info 
			INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=shed_tally_info.igm_sup_detail_id
			INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
			LEFT JOIN igm_details ON igm_details.id=igm_supplimentary_detail.igm_detail_id
			WHERE verify_number IS NOT NULL AND import_rotation IS NOT NULL AND shed_tally_info.cont_number IS NOT NULL
			ORDER BY id DESC LIMIT 1000 ) AS tbl";
			$verifyNoList = $this->bm->dataSelectDb1($sql);
			
			$data['verifyNoList'] = $verifyNoList;
			$data['title'] = "Verification No List";
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('VerifyNoList',$data);
			$this->load->view('jsAssetsList');		
		}

		//Assignment Request List  -- Start

		function assignmentRequestList(){
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$query = "SELECT * FROM assignment_request_data WHERE requested_by = '$login_id' order by assignmentDate DESC"; 
				$rslt_query = $this->bm->dataSelectDb1($query); //cchaportdb
				
				$data['requestRslt'] = $rslt_query;
				$data['msg'] = "";
				$data['title'] = "Assignment Request List";
				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('assignmentRequestList',$data);
				$this->load->view('jsAssetsList');
			}
		}

		//Assignment Request List  -- End

		// Assign Equipment  -- Start

		function assignmentEquipmentForm()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{	
				$data['title'] = "Assignment & Equipment Form";
				$data['msg'] = "";
				$data['flag'] = "";

				$query = "SELECT DISTINCT mfdch_value,mfdch_desc FROM ctmsmis.tmp_oracle_assignment WHERE mfdch_desc != '' ORDER BY Yard_No,Block_No,mfdch_value,flex_date01,bl_no";
				$rslt = $this->bm->dataSelectDb2($query);
				$data['rslt']=$rslt;

				$equipQuery = "SELECT equipment_id,equipment_name FROM used_equipment";
				$equipRslt = $this->bm->dataSelectDB1($equipQuery);
				$data['equipRslt']=$equipRslt;

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('assignmentEquipmentForm',$data);
				$this->load->view('jsAssets');
			}
		}

		function assignmentEquipmentEntry()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');

			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{	
				$action = $this->input->post('save');

				$msg = "";
				$contType = $this->input->post("contType");
				$assignmentDt = $this->input->post("date");
				$ip_addr = $_SERVER['REMOTE_ADDR'];

				//$rowCount = $this->input->post("rowCount");
				$equip = "";

				$stat = 0;

				if($action == "save")
				{
					if($contType == "LCL")
					{
						$rot = $this->input->post("rot");
						$bl = $this->input->post("bl");
						$noOfTruck = $this->input->post("noOfTruck");

						$sqlContainer="select igm_details.id,'dtl' AS flag,cont_number,igm_details.Import_Rotation_No,(select Vessel_Name from igm_masters 
						where igm_masters.id=igm_details.IGM_id) as vsl_name,igm_details.BL_No,
						cont_size,cont_height,off_dock_id,
						(select Organization_Name from organization_profiles where organization_profiles.id=igm_detail_container.off_dock_id) as offdock_name,
						cont_status,cont_seal_number,cont_iso_type from igm_detail_container 
						inner join igm_details on igm_details.id=igm_detail_container.igm_detail_id 
						where igm_details.BL_No='$bl' and igm_details.Import_Rotation_No='$rot'
						union
						select igm_supplimentary_detail.id,'sup' AS flag,cont_number,igm_details.Import_Rotation_No,(select Vessel_Name from igm_masters 
						where igm_masters.id=igm_supplimentary_detail.igm_master_id) as vsl_name,igm_details.BL_No,
						cont_size,cont_height,off_dock_id,
						(select Organization_Name from organization_profiles where organization_profiles.id=igm_sup_detail_container.off_dock_id) as offdock_name,
						cont_status,cont_seal_number,cont_iso_type from igm_sup_detail_container 
						inner join igm_supplimentary_detail on igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id 
						inner join igm_details on igm_details.id=igm_supplimentary_detail.igm_detail_id
						where igm_supplimentary_detail.BL_No='$bl' and igm_details.Import_Rotation_No='$rot'";
						
						//echo $sqlContainer;
						$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);
						//var_dump($rtnContainerList);

						$igmId = "";
						$cont = "";
						$action = "";
						for($j=0;$j<count($rtnContainerList);$j++){
							$igmId = $rtnContainerList[$j]['id'];
							$cont = $rtnContainerList[$j]['cont_number'];
							$action = $rtnContainerList[$j]['flag'];
						}

							$unitQuery = "SELECT inv_unit.gkey FROM inv_unit
									INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
									INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
									INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
									WHERE ib_vyg='$rot' AND inv_unit.id='$cont'";
							$unitGkeyVal = $this->bm->dataSelect($unitQuery);

							$unitGkey = "";
							for($k=0;$k<count($unitGkeyVal);$k++){
								$unitGkey = $unitGkeyVal[$k]['gkey'];
							} 

							//Don't have requested organization;

							if($action == "dtl")
							{
								$insertQuery = "INSERT INTO assignment_request_data(igm_detail_id,unit_gkey,mfdch_value,mfdch_desc,assignmentDate,rotation,bl,cont_number,cont_status,no_of_truck,requested_by,ip_addr,requested_time,requested_org) VALUES('$igmId','$unitGkey','','','$assignmentDt','$rot','$bl','$cont','$contType','$noOfTruck','$login_id','$ip_addr',NOW(),'')";
								$stat = $this->bm->dataInsertDB1($insertQuery);
							}
							else if($action == "sup")
							{
								$insertQuery = "INSERT INTO assignment_request_data(igm_sup_dtl_id,unit_gkey,mfdch_value,mfdch_desc,assignmentDate,rotation,bl,cont_number,cont_status,no_of_truck,requested_by,ip_addr,requested_time,requested_org) VALUES('$igmId','$unitGkey','','','$assignmentDt','$rot','$bl','$cont','$contType','$noOfTruck','$login_id','$ip_addr',NOW(),'')";
								$stat = $this->bm->dataInsertDB1($insertQuery);
							}

							$assignmentIdQuery = "SELECT id FROM assignment_request_data WHERE rotation = '$rot' AND bl='$bl'";
							$assignmentIdRslt = $this->bm->dataSelectDB1($assignmentIdQuery);
							$assignmentId = "";
							for($k=0;$k<count($assignmentIdRslt);$k++){
								$assignmentId = $assignmentIdRslt[$k]['id'];
							}

							// for($i=0;$i<$rowCount;$i++){
							// 	$equip = $this->input->post("option".$i);
							// 	if($equip != "" || $equip != null){
							// 		$assignEquip = "INSERT INTO equip_for_assignment(assign_id,equip_id) VALUES('$assignmentId','$equip')";
							// 		$this->bm->dataInsertDB1($assignEquip);
							// 	}
							// }
							
							$equip = $this->input->post("option");
							$assignEquip = "INSERT INTO equip_for_assignment(assign_id,equip_id) VALUES('$assignmentId','$equip')";
							$this->bm->dataInsertDB1($assignEquip);

					}
					else if($contType == "FCL")
					{
						$assignmentType = $this->input->post("assignmentType");

						$assignmentDescQuery = "SELECT mfdch_desc FROM ctmsmis.tmp_oracle_assignment 
												WHERE mfdch_value='$assignmentType' LIMIT 1";
						$assignmentDescRslt = $this->bm->dataSelectDb2($assignmentDescQuery);
						$assignmentDesc = "";
						for($i=0;$i<count($assignmentDescRslt);$i++){
							$assignmentDesc = $assignmentDescRslt[$i]['mfdch_desc'];
						}

						$container = $this->input->post("cont");
						$conts = explode(",",$container);
						for($i=0;$i<count($conts);$i++){
							$cont = trim($conts[$i]);

							$sqlBl="select BL_No,igm_details.Import_Rotation_No from igm_details 
							INNER JOIN igm_detail_container on igm_detail_container.igm_detail_id=igm_details.id 
							WHERE cont_number='$cont' order by igm_detail_container.id desc limit 1";
							$rtnBlList = $this->bm->dataSelectDb1($sqlBl);
							$bl = "";
							$rot = "";
							if($rtnBlList!=null){
								$bl = $rtnBlList[0]['BL_No'];
								$rot = $rtnBlList[0]['Import_Rotation_No'];
							}

							$edoDateQuery = "SELECT valid_upto_dt FROM shed_mlo_do_info WHERE imp_rot = '$rot' AND bl_no = '$bl' LIMIT 1";
							$edoDateRslt = $this->bm->dataSelectDb1($edoDateQuery);
							$edoDate = "";
							for($y=0;$y<count($edoDateRslt);$y++){
								$edoDate = $edoDateRslt[$y]['valid_upto_dt'];
							}
							// echo $edoDate;
							$edoDate = strtotime($edoDate);
							// echo $edoDate = date('Y-m-d',$edoDate);
							$assignmentDate = strtotime($assignmentDt);
							$dateDiff = $edoDate - $assignmentDate;
							$diff = round($dateDiff / (60 * 60 * 24));

							if($diff<0){
								$msg = "<font color='red' size='3'>Assignment Date must be before the EDO date...</font>";

								$query = "SELECT DISTINCT mfdch_value,mfdch_desc FROM ctmsmis.tmp_oracle_assignment WHERE mfdch_desc != '' ORDER BY Yard_No,Block_No,mfdch_value,flex_date01,bl_no";
								$rslt = $this->bm->dataSelectDb2($query);
								$data['rslt']=$rslt;

								$equipQuery = "SELECT equipment_id,equipment_name FROM used_equipment";
								$equipRslt = $this->bm->dataSelectDB1($equipQuery);
								$data['equipRslt']=$equipRslt;

								$data['title'] = "Assignment & Equipment Form";
								$data['msg'] = $msg;
								$data['flag'] = "";

								$this->load->view('cssAssets');
								$this->load->view('headerTop');
								$this->load->view('sidebar');
								$this->load->view('assignmentEquipmentForm',$data);
								$this->load->view('jsAssets');
								return;
							}

							$sqlContainer="select igm_details.id,'dtl' AS flag,cont_number,igm_details.Import_Rotation_No,(select Vessel_Name from igm_masters 
							where igm_masters.id=igm_details.IGM_id) as vsl_name,igm_details.BL_No,
							cont_size,cont_height,off_dock_id,
							(select Organization_Name from organization_profiles where organization_profiles.id=igm_detail_container.off_dock_id) as offdock_name,
							cont_status,cont_seal_number,cont_iso_type from igm_detail_container 
							inner join igm_details on igm_details.id=igm_detail_container.igm_detail_id 
							where igm_details.BL_No='$bl' and igm_details.Import_Rotation_No='$rot' AND cont_number='$cont'
							union
							select igm_supplimentary_detail.id,'sup' AS flag,cont_number,igm_details.Import_Rotation_No,(select Vessel_Name from igm_masters 
							where igm_masters.id=igm_supplimentary_detail.igm_master_id) as vsl_name,igm_details.BL_No,
							cont_size,cont_height,off_dock_id,
							(select Organization_Name from organization_profiles where organization_profiles.id=igm_sup_detail_container.off_dock_id) as offdock_name,
							cont_status,cont_seal_number,cont_iso_type from igm_sup_detail_container 
							inner join igm_supplimentary_detail on igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id 
							inner join igm_details on igm_details.id=igm_supplimentary_detail.igm_detail_id
							where igm_supplimentary_detail.BL_No='$bl' and igm_details.Import_Rotation_No='$rot' AND cont_number='$cont'";
							
							//echo $sqlContainer;
							$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);

							$igmId = "";
							$action = "";
							for($j=0;$j<count($rtnContainerList);$j++){
								$igmId = $rtnContainerList[$j]['id'];
								$action = $rtnContainerList[$j]['flag'];
							}

							$unitQuery = "SELECT inv_unit.gkey FROM inv_unit
									INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
									INNER JOIN argo_carrier_visit ON argo_carrier_visit.gkey=inv_unit_fcy_visit.actual_ib_cv
									INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_carrier_visit.cvcvd_gkey
									WHERE ib_vyg='$rot' AND inv_unit.id='$cont'";
							$unitGkeyVal = $this->bm->dataSelect($unitQuery);
							$unitGkey = "";
							for($j=0;$j<count($unitGkeyVal);$j++){
								$unitGkey = $unitGkeyVal[$j]['gkey'];
							}

							//Don't Have assignment Type, Assignment Type Description, requested Organization;

							if($action == "dtl")
							{
								$insertQuery = "INSERT INTO assignment_request_data(igm_detail_id,unit_gkey,mfdch_value,mfdch_desc,assignmentDate,rotation,bl,cont_number,cont_status,requested_by,ip_addr,requested_time,requested_org) VALUES('$igmId','$unitGkey','','','$assignmentDt','$rot','$bl','$cont','$contType','$login_id','$ip_addr',NOW(),'')";
								$stat = $this->bm->dataInsertDB1($insertQuery);
							}
							else if($action == "sup")
							{
								$insertQuery = "INSERT INTO assignment_request_data(igm_sup_dtl_id,unit_gkey,mfdch_value,mfdch_desc,assignmentDate,rotation,bl,cont_number,cont_status,requested_by,ip_addr,requested_time,requested_org) VALUES('$igmId','$unitGkey','','','$assignmentDt','$rot','$bl','$cont','$contType','$login_id','$ip_addr',NOW(),'')";
								$stat = $this->bm->dataInsertDB1($insertQuery);
							}

							$assignmentIdQuery = "SELECT id FROM assignment_request_data WHERE rotation = '$rot' AND bl='$bl'";
							$assignmentIdRslt = $this->bm->dataSelectDB1($assignmentIdQuery);
							$assignmentId = "";
							for($k=0;$k<count($assignmentIdRslt);$k++){
								$assignmentId = $assignmentIdRslt[$k]['id'];
							}

							// for($j=0;$j<$rowCount;$j++){
							// 	$equip = $this->input->post("option".$j);
							// 	if($equip != "" || $equip != null){
							// 		$assignEquip = "INSERT INTO equip_for_assignment(assign_id,equip_id) VALUES('$assignmentId','$equip')";
							// 		$this->bm->dataInsertDB1($assignEquip);
							// 	}
							// }

							$equip = $this->input->post("option");
							$assignEquip = "INSERT INTO equip_for_assignment(assign_id,equip_id) VALUES('$assignmentId','$equip')";
							$this->bm->dataInsertDB1($assignEquip);
						}
					}
				}
				else if($action == "update")
				{
					if($contType == "LCL")
					{
						$id = $this->input->post("id");
						$noOfTruck = $this->input->post("noOfTruck");

						$updateQuery = "UPDATE assignment_request_data set assignmentDate = '$assignmentDt', no_of_truck = '$noOfTruck', requested_by = '$login_id', ip_addr = '$ip_addr' , requested_time = NOW() WHERE id = '$id' ";
						$stat = $this->bm->dataUpdateDB1($updateQuery);

						$deletePrevEquipQuery = "DELETE FROM equip_for_assignment WHERE assign_id = '$id'";
						$this->bm->dataDeleteDB1($deletePrevEquipQuery);

						// for($i=0;$i<$rowCount;$i++){
						// 	$equip = $this->input->post("option".$i);
						// 	if($equip != "" || $equip != null){
						// 		$assignEquip = "INSERT INTO equip_for_assignment(assign_id,equip_id) VALUES('$id','$equip')";
						// 		$this->bm->dataInsertDB1($assignEquip);
						// 	}
						// }

						$equip = $this->input->post("option");
						$assignEquip = "INSERT INTO equip_for_assignment(assign_id,equip_id) VALUES('$id','$equip')";
						$this->bm->dataInsertDB1($assignEquip);
					}
					else if($contType == "FCL")
					{
						$id = $this->input->post("id");
						$assignmentType = $this->input->post("assignmentType");
						$edoDate = $this->input->post("edoDate");

						$edoDate = strtotime($edoDate);
						// echo $edoDate = date('Y-m-d',$edoDate);
						$assignmentDate = strtotime($assignmentDt);
						$dateDiff = $edoDate - $assignmentDate;
						$diff = round($dateDiff / (60 * 60 * 24));

						if($diff<0){
							$msg = "<font color='red' size='3'>Assignment Date must be before the EDO date...</font>";

							$assignmentQuery = "SELECT * FROM assignment_request_data 
							WHERE assignment_request_data.id = '$id'";
							$assignmentData = $this->bm->dataSelectDB1($assignmentQuery);
							$data['assignmentData'] = $assignmentData;

							$query = "SELECT DISTINCT mfdch_value,mfdch_desc FROM ctmsmis.tmp_oracle_assignment WHERE mfdch_desc != '' ORDER BY Yard_No,Block_No,mfdch_value,flex_date01,bl_no";
							$rslt = $this->bm->dataSelectDb2($query);
							$data['rslt']=$rslt;

							$equipQuery = "SELECT equipment_id,equipment_name FROM used_equipment";
							$equipRslt = $this->bm->dataSelectDB1($equipQuery);
							$data['equipRslt']=$equipRslt;

							$data['title'] = "Assignment & Equipment Edit Form";
							$data['msg'] = $msg;
							$data['flag'] = 'edit';

							$this->load->view('cssAssets');
							$this->load->view('headerTop');
							$this->load->view('sidebar');
							$this->load->view('assignmentEquipmentForm',$data);
							$this->load->view('jsAssets');
							return;
						}
						
						$assignmentDescQuery = "SELECT mfdch_desc FROM ctmsmis.tmp_oracle_assignment WHERE mfdch_value='$assignmentType' LIMIT 1";
						$assignmentDescRslt = $this->bm->dataSelectDb2($assignmentDescQuery);
						$assignmentDesc = "";
						for($i=0;$i<count($assignmentDescRslt);$i++){
							$assignmentDesc = $assignmentDescRslt[$i]['mfdch_desc'];
						}

						$updateQuery = "UPDATE assignment_request_data set mfdch_value = '$assignmentType' , mfdch_desc = '$assignmentDesc' , assignmentDate = '$assignmentDt' , requested_by = '$login_id' ,ip_addr = '$ip_addr' , requested_time = NOW() WHERE id='$id'";
						$stat = $this->bm->dataUpdateDB1($updateQuery);

						$deletePrevEquipQuery = "DELETE FROM equip_for_assignment WHERE assign_id = '$id'";
						$this->bm->dataDeleteDB1($deletePrevEquipQuery);

						// for($j=0;$j<$rowCount;$j++){
						// 	$equip = $this->input->post("option".$j);
						// 	if($equip != "" || $equip != null){
						// 		$assignEquip = "INSERT INTO equip_for_assignment(assign_id,equip_id) VALUES('$id','$equip')";
						// 		$this->bm->dataInsertDB1($assignEquip);
						// 	}
						// }

						$equip = $this->input->post("option");
						$assignEquip = "INSERT INTO equip_for_assignment(assign_id,equip_id) VALUES('$id','$equip')";
						$this->bm->dataInsertDB1($assignEquip);
					}
				}
				
				if($stat == 1){
					$msg = "<font color='green' size='3'>Data Inserted / Updated Successfully!</font>";
				}else{
					$msg = "<font color='red' size='3'>Data couldn't be Inserted / Updated! Please Try Again...</font>";
				}

				$query = "SELECT DISTINCT mfdch_value,mfdch_desc FROM ctmsmis.tmp_oracle_assignment WHERE mfdch_desc != '' ORDER BY Yard_No,Block_No,mfdch_value,flex_date01,bl_no";
				$rslt = $this->bm->dataSelectDb2($query);
				$data['rslt']=$rslt;

				$equipQuery = "SELECT equipment_id,equipment_name FROM used_equipment";
				$equipRslt = $this->bm->dataSelectDB1($equipQuery);
				$data['equipRslt']=$equipRslt;

				$data['title'] = "Assignment & Equipment Form";
				$data['msg'] = $msg;
				$data['flag'] = "";

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('assignmentEquipmentForm',$data);
				$this->load->view('jsAssets');
			}
		}
		
		function assignmentEquipmentFormEdit()
		{
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');

			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$id = $this->input->post('id');

				echo $assignmentQuery = "SELECT * FROM assignment_request_data 
				WHERE assignment_request_data.id = '$id'";
				$assignmentData = $this->bm->dataSelectDB1($assignmentQuery); //cchaportdb
				$data['assignmentData'] = $assignmentData;

				$query = "SELECT DISTINCT mfdch_value,mfdch_desc 
							FROM ctmsmis.tmp_oracle_assignment 
							WHERE mfdch_desc != '' ORDER BY Yard_No,Block_No,mfdch_value,flex_date01,bl_no";
				$rslt = $this->bm->dataSelectDb2($query); //ctmsmis
				$data['rslt']=$rslt;

				$equipQuery = "SELECT equipment_id,equipment_name FROM used_equipment";
				$equipRslt = $this->bm->dataSelectDB1($equipQuery); //cchaportdb
				$data['equipRslt']=$equipRslt;

				$data['title'] = "Assignment & Equipment Edit Form";
				$data['msg'] = "";
				$data['flag'] = 'edit';

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('assignmentEquipmentForm',$data);
				$this->load->view('jsAssets');
			}
		}

		// Assign Equipment  -- End
		
		function confirmByCounter()
		{
			$login_id = $this->session->userdata('login_id');
			$verifyNumber = $this->input->post('verify_number');
			$contStatus = $this->input->post('cont_status');
			
			if($verifyNumber!="")
			{
				if($contStatus == "FCL")
				{
					$sql_chkConfirm = "SELECT counter_confirm_flag AS rtnValue
					FROM verify_info_fcl
					WHERE verify_number='$verifyNumber'";
					$chkConfirm = $this->bm->dataReturnDB1($sql_chkConfirm);
					
					if($chkConfirm==0)
					{
						// generate PR number
						$sql_maxPrSl="SELECT IFNULL(MAX(pr_sl),0)+1 AS rtnValue
						FROM verify_info_fcl
						WHERE DATE(counter_confirm_at)=DATE(NOW())";
						$maxPrSl = $this->bm->dataReturnDB1($sql_maxPrSl);
						
						$date = date('dmy');
					   
						$size=strlen($maxPrSl);
						$newPrNo = "";
						if($size==1)
						{
							$newPrNo="PR-".$date."000".$maxPrSl;
						}
						else if($size==2)
						{
							$newPrNo="PR-".$date."00".$maxPrSl;
						}
						else if($size==3)
						{
							$newPrNo="PR-".$date."0".$maxPrSl;
						}
						else 
						{
							$newPrNo="PR-".$date."".$maxPrSl;
						}
						
						$sql_updateConfirmFlag = "UPDATE verify_info_fcl
						SET pr_sl='$maxPrSl',pr_number='$newPrNo',counter_confirm_flag='1',counter_confirm_by='$login_id',counter_confirm_at=NOW()
						WHERE verify_number='$verifyNumber'";
						$this->bm->dataUpdateDB1($sql_updateConfirmFlag);						
					}
				}
				else
				{
					$sql_chkConfirm = "SELECT counter_confirm_flag AS rtnValue
					FROM shed_tally_info
					WHERE verify_number='$verifyNumber'";
					$chkConfirm = $this->bm->dataReturnDB1($sql_chkConfirm);
					
					if($chkConfirm==0)
					{
						// generate PR number
						$sql_maxPrSl="SELECT IFNULL(MAX(pr_sl),0)+1 AS rtnValue
						FROM shed_tally_info
						WHERE DATE(counter_confirm_at)=DATE(NOW())";
						$maxPrSl = $this->bm->dataReturnDB1($sql_maxPrSl);
						
						$date = date('dmy');
					   
						$size=strlen($maxPrSl);
						$newPrNo = "";
						if($size==1)
						{
							$newPrNo="PR-".$date."000".$maxPrSl;
						}
						else if($size==2)
						{
							$newPrNo="PR-".$date."00".$maxPrSl;
						}
						else if($size==3)
						{
							$newPrNo="PR-".$date."0".$maxPrSl;
						}
						else 
						{
							$newPrNo="PR-".$date."".$maxPrSl;
						}
						
						$sql_updateConfirmFlag = "UPDATE shed_tally_info
						SET pr_sl='$maxPrSl',pr_number='$newPrNo',counter_confirm_flag='1',counter_confirm_by='$login_id',counter_confirm_at=NOW()
						WHERE verify_number='$verifyNumber'";
						$this->bm->dataUpdateDB1($sql_updateConfirmFlag);												
					}
				}
			}
			
			// $this->releaseOrderForm();
			redirect('/report/releaseOrderForm', 'refresh');
		}
		
		// Delivery from offdock - start
		function dlvFromOffdock()
		{
			$title = "Delivery From Offdock";	
			$rslt_igmInfo = null;		
			$msg = "";
			
			$data['title']=$title;		
			$data['rslt_igmInfo'] = $rslt_igmInfo;		
			$data['msg'] = $msg;
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('dlvFromOffdock',$data);
			$this->load->view('jsAssetsList');
		}
		
		function dlvFromOffdockAction($rotNo=null,$blNo=null,$msg=null)
		{
			$title = "Delivery From Offdock";	
			
			$cNo = trim($this->input->post('cNo'));				// reg_num
			$cYear = trim($this->input->post('cYear'));			// reg_year
			
			if($rotNo==null and $blNo==null)
			{			
				$rotNo = trim($this->input->post('rotNo'));
				$blNo = trim($this->input->post('blNo'));
			}		
			
			// $msg = "";
			$sql_igmInfo = "";
			
			if($rotNo != "" and $blNo != "")			// if rotation and bl 
			{
				$sql_igmInfo = "SELECT igm_details.id AS igm_id,'' AS igm_sup_id,Import_Rotation_No,BL_No,Pack_Number,Pack_Description,LEFT(Description_of_Goods,100) AS Description_of_Goods,weight,ConsigneeDesc,NotifyDesc,Exporter_name,Exporter_address,Notify_code,Notify_name,Notify_address,Consignee_code,Consignee_name,Consignee_address,
				igm_detail_container.id AS dtl_cont_id,cont_number,cont_size,cont_gross_weight,cont_weight,cont_seal_number,cont_status,cont_height,cont_iso_type,off_dock_id
				FROM igm_details
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE igm_details.Import_Rotation_No='$rotNo' AND igm_details.BL_No='$blNo'";
			}
			else if($cNo != "" and $cYear != "")		// if c number and c year is given, get the rotation and bl first, then proceed
			{
				$sql_rotBl = "SELECT sad_info.id AS sad_id,manif_num,REPLACE(manif_num,' ','/') AS rotNo,reg_no,reg_date,sad_info.reg_year,exporter_name,consignee_name,dec_code,dec_name,
				sad_container.id AS sad_cont_id,cont_number,cont_type,freight_kind,sad_container.goods_desc AS cont_goods_desc,
				sad_item.goods_desc AS item_goods_desc,sum_declare AS blNo
				FROM sad_info
				INNER JOIN sad_container ON sad_container.sad_id=sad_info.id
				INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
				WHERE reg_no='$cNo' AND YEAR(reg_date)='$cYear'
				LIMIT 1";
				
				$rslt_rotBl = $this->bm->dataSelectDB1($sql_rotBl);
				
				for($i=0;$i<count($rslt_rotBl);$i++)
				{
					$manif_num = $rslt_rotBl[$i]['manif_num'];
					$manif_num = preg_replace('/\s+/', ' ',$manif_num);			// replace multiple space with single space
					$manif_num = str_replace(" ","/",$manif_num);
					
					$rotNo = str_replace("301/","",$manif_num);								
					$blNo = $rslt_rotBl[$i]['blNo'];
				}
				
				$sql_igmInfo = "SELECT igm_details.id AS igm_id,'' AS igm_sup_id,Import_Rotation_No,BL_No,Pack_Number,Pack_Description,LEFT(Description_of_Goods,100) AS Description_of_Goods,weight,ConsigneeDesc,NotifyDesc,Exporter_name,Exporter_address,Notify_code,Notify_name,Notify_address,Consignee_code,Consignee_name,Consignee_address,
				igm_detail_container.id AS dtl_cont_id,cont_number,cont_size,cont_gross_weight,cont_weight,cont_seal_number,cont_status,cont_height,cont_iso_type,off_dock_id
				FROM igm_details
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE igm_details.Import_Rotation_No='$rotNo' AND igm_details.BL_No='$blNo'";
			}
			else
			{
				$msg = "<font color='red'><b>Please provide correct data.</b></font>";
			}
			
			$rslt_igmInfo = $this->bm->dataSelectDB1($sql_igmInfo);
			
			if(count($rslt_igmInfo)==0)				// if not data found in igm_details, check in igm_supplimentary_detail
			{
				$sql_igmInfo = "SELECT '' AS igm_id,igm_supplimentary_detail.id AS igm_sup_id,Import_Rotation_No,BL_No,Pack_Number,Pack_Description,LEFT(Description_of_Goods,100) AS Description_of_Goods,weight,ConsigneeDesc,NotifyDesc,Exporter_name,Exporter_address,Notify_code,Notify_name,Notify_address,Consignee_code,Consignee_name,Consignee_address,
				igm_sup_detail_container.id AS dtl_cont_id,cont_number,cont_size,cont_gross_weight,cont_weight,cont_seal_number,cont_status,cont_height,cont_iso_type,off_dock_id
				FROM igm_supplimentary_detail
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				WHERE igm_supplimentary_detail.Import_Rotation_No='$rotNo' AND igm_supplimentary_detail.BL_No='$blNo'";
				$rslt_igmInfo = $this->bm->dataSelectDB1($sql_igmInfo);
			}
					// print_r($rslt_igmInfo);return;		
			
			$releaseStat = 0;
			$igmId = "";
			$igmSupId = "";
			
			if(count($rslt_igmInfo)>0)
			{
				// if result found, check release status
				$igmId = $rslt_igmInfo[0]['igm_id'];			
				$igmSupId = $rslt_igmInfo[0]['igm_sup_id'];
							
				$sql_releaseStat = "";
				$releaseStat = 0;
				
				$rslt_ntsData = null;
				if($igmId!="")
				{
					$sql_ntsData = "SELECT verify_no,verify_date,cp_no,cp_date
					FROM oracle_nts_data
					WHERE igm_detail_id='$igmId'
					ORDER BY cp_date DESC
					LIMIT 1";				

					$rslt_ntsData = $this->bm->dataSelectDB1($sql_ntsData);	
						
					$sql_releaseStat = "SELECT COUNT(*) AS rtnValue
					FROM dlv_from_offdock
					WHERE igm_dtl_id='$igmId'";
					$releaseStat = $this->bm->dataReturnDB1($sql_releaseStat);

					// if($releaseStat==1)
					// {
						// $sql_ntsData = "SELECT verify_no,verify_date,cp_no,cp_date
						// FROM oracle_nts_data
						// WHERE igm_detail_id='$igmId'
						// ORDER BY cp_date DESC
						// LIMIT 1";
						// // return;

						// $rslt_ntsData = $this->bm->dataSelectDB1($sql_ntsData);					
					// }															
				}
				else if($igmSupId!="")
				{
					$sql_ntsData = "SELECT verify_no,verify_date,cp_no,cp_date
					FROM oracle_nts_data
					WHERE igm_sup_detail_id='$igmSupId'
					ORDER BY cp_date DESC
					LIMIT 1";

					$rslt_ntsData = $this->bm->dataSelectDB1($sql_ntsData);	
						
					$sql_releaseStat = "SELECT COUNT(*) AS rtnValue
					FROM dlv_from_offdock
					WHERE igm_sup_dtl_id='$igmSupId'";		
					$releaseStat = $this->bm->dataReturnDB1($sql_releaseStat);		

					// if($releaseStat==1)
					// {
						// $sql_ntsData = "SELECT verify_no,verify_date,cp_no,cp_date
						// FROM oracle_nts_data
						// WHERE igm_sup_detail_id='$igmSupId'
						// ORDER BY cp_date DESC
						// LIMIT 1";
						// // return;
						
						// $rslt_ntsData = $this->bm->dataSelectDB1($sql_ntsData);					
					// }
				}
				else
				{				
					$msg = "<font color='red'><b>no release state.</b></font>";
				}
				
				$data['rslt_ntsData'] = $rslt_ntsData;															
			}
			else
			{
				$msg = "<font color='red'><b>No data found in IGM.</b></font>";
			}
			
			$data['rslt_igmInfo'] = $rslt_igmInfo;
			$data['igmId'] = $igmId;
			$data['igmSupId'] = $igmSupId;
			$data['title'] = $title;
			
			$data['releaseStat'] = $releaseStat;
			$data['msg'] = $msg;
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('dlvFromOffdock',$data);
			$this->load->view('jsAssetsList');
		}
		
		function releaseDlvCont()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$login_id = $this->session->userdata('login_id');
				$ipaddr = $_SERVER['REMOTE_ADDR'];
					
				$rlsRotNo = $this->input->post('rlsRotNo');
				$rlsBlNo = $this->input->post('rlsBlNo');
				
				$igmId = $this->input->post('igmId');
				$igmSupId = $this->input->post('igmSupId');		

				$title = "Delivery From Offdock";	
				$msg = "";		
				
				$sql_rlsChk="";
				if($igmId!="")
				{
					$sql_rlsChk = "SELECT COUNT(*) AS rtnValue
					FROM dlv_from_offdock
					WHERE igm_dtl_id='$igmId'";
				}
				else if($igmSupId!="")
				{
					$sql_rlsChk = "SELECT COUNT(*) AS rtnValue
					FROM dlv_from_offdock
					WHERE igm_sup_dtl_id='$igmSupId'";
				}
				$rlsChkDlvOffdock = $this->bm->dataReturnDB1($sql_rlsChk);
				// ---
						
				if($rlsChkDlvOffdock==0)
				{
					$sql_insertDlvOffdock = "INSERT INTO dlv_from_offdock(igm_dtl_id,igm_sup_dtl_id,rot_no,bl_no,release_by,release_at,ip_addr)
					VALUES('$igmId','$igmSupId','$rlsRotNo','$rlsBlNo','$login_id',NOW(),'$ipaddr')";
					$insertFlag = $this->bm->dataInsertDB1($sql_insertDlvOffdock);
					
					if($insertFlag==1)
					{
						$msg = "<font color='green'><b>Container(s) released.</b></font>";
					}
					else
					{
						$msg = "<font color='red'><b>Error occured.</b></font>";
					}									
				}
				else
				{
					echo "Error in release Checkk...";
				}

				$this->dlvFromOffdockAction($rlsRotNo,$rlsBlNo,$msg);			
			}
		}
		
		function dlvFromOffdockReportForm($msg=null)
		{
			$title = "Delivery Form Offdock";				
			
			$data['title']=$title;		
			$data['msg'] = $msg;
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('dlvFromOffdockReportForm',$data);
			$this->load->view('jsAssetsList');
		}
		
		function dlvFromOffdockReportAction()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$login_id=$this->session->userdata('login_id');
				$fromDate = $this->input->post('fromDate');
				$toDate = $this->input->post('toDate');			
				
				$sql_dlvFromOffdockRpt = "SELECT igm_dtl_id,igm_sup_dtl_id,

				IF(igm_dtl_id!=0,'dtl','sup') AS tbl,

				IF(igm_dtl_id!=0,
				(SELECT Pack_Number FROM igm_details WHERE id=igm_dtl_id),
				(SELECT Pack_Number FROM igm_supplimentary_detail WHERE id=igm_sup_dtl_id)) AS Pack_Number,
				IF(igm_dtl_id!=0,
				(SELECT Pack_Description FROM igm_details WHERE id=igm_dtl_id),
				(SELECT Pack_Description FROM igm_supplimentary_detail WHERE id=igm_sup_dtl_id)) AS Pack_Description,
				IF(igm_dtl_id!=0,
				(SELECT Description_of_Goods FROM igm_details WHERE id=igm_dtl_id),
				(SELECT Description_of_Goods FROM igm_supplimentary_detail WHERE id=igm_sup_dtl_id)) AS Description_of_Goods,

				IF(igm_dtl_id!=0,
				(SELECT verify_no FROM oracle_nts_data WHERE igm_detail_id=igm_dtl_id ORDER BY cp_date DESC LIMIT 1),
				(SELECT verify_no FROM oracle_nts_data WHERE igm_sup_detail_id=igm_sup_dtl_id ORDER BY cp_date DESC LIMIT 1)) AS verify_no,
				IF(igm_dtl_id!=0,
				(SELECT verify_date FROM oracle_nts_data WHERE igm_detail_id=igm_dtl_id ORDER BY cp_date DESC LIMIT 1),
				(SELECT verify_date FROM oracle_nts_data WHERE igm_sup_detail_id=igm_sup_dtl_id ORDER BY cp_date DESC LIMIT 1)) AS verify_date,
				IF(igm_dtl_id!=0,
				(SELECT cp_no FROM oracle_nts_data WHERE igm_detail_id=igm_dtl_id ORDER BY cp_date DESC LIMIT 1),
				(SELECT cp_no FROM oracle_nts_data WHERE igm_sup_detail_id=igm_sup_dtl_id ORDER BY cp_date DESC LIMIT 1)) AS cp_no,
				IF(igm_dtl_id!=0,
				(SELECT cp_date FROM oracle_nts_data WHERE igm_detail_id=igm_dtl_id ORDER BY cp_date DESC LIMIT 1),
				(SELECT cp_date FROM oracle_nts_data WHERE igm_sup_detail_id=igm_sup_dtl_id ORDER BY cp_date DESC LIMIT 1)) AS cp_date,

				rot_no,bl_no,
				release_by,release_at
				FROM dlv_from_offdock
				WHERE DATE(release_at) BETWEEN '$fromDate' AND '$toDate' AND release_by='$login_id'";
				// echo $sql_dlvFromOffdockRpt;return;
				$rslt_dlvFromOffdockRpt = $this->bm->dataSelectDB1($sql_dlvFromOffdockRpt);
				
				if(count($rslt_dlvFromOffdockRpt)>0)
				{						
					$title = "Delivery From Offdock Report";
					
					$data['title']=$title;
					$data['login_id']=$login_id;
					$data['fromDate']=$fromDate;
					$data['toDate']=$toDate;
					$data['rslt_dlvFromOffdockRpt']=$rslt_dlvFromOffdockRpt;
					// echo $title = "Delivery From Offdock Report";return;
					$this->load->view('dlvFromOffdockReport',$data);
				}
				else
				{
					$msg = "<font color='red'>No data found for this date.</font>";
					$this->dlvFromOffdockReportForm($msg);
				}
			}
		}
		// Delivery from offdock - end

		// Export equipment handling performance history  -- start

		function exportEquipmentHandlingHistory()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
		
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$data['title']="EXPORT EQUIPMENT HANDLING PERFORMANCE HISTORY...";

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('exportEquipmentHandlingHistoryForm',$data);
				$this->load->view('jsAssets');
			}	
		}
		
		function exportEquipmentHandlingHistoryView()
		{
			$type=$this->input->post('options');
					
			$data['type']=$type;
			$fromdate=$this->input->post('fromdate');
			$shift=$this->input->post('shift');
			$todate=$this->input->post('todate');
			$data['fromdate']=$fromdate;
			$data['shift']=$shift;
			$data['todate']=$todate;
			
			if($shift=="timewise")
			{
				$fromtime=$this->input->post('fromtime');
				$data['fromtime']=$fromtime.":00";
				$totime=$this->input->post('totime');
				$data['totime']=$totime.":00";
			}
			
			$this->load->view('exportEquipmentHandlingHistoryViewList',$data);
			$this->load->view('myclosebar');
		}

		// Export equipment handling performance history  -- end



		// container Details at Outer Anchorage -- start 

	function contatOuterAnchorageForm()
	
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			
			
			$data['title'] = "Container Details at Outer Anchorage";
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('contatOuterAnchorageForm',$data);
			$this->load->view('jsAssetsList');
		}
	}

	function contatOuterAnchorage()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$date = $this->input->post('date');
			
			$options = $this->input->post('fileOptions');

			if($options == 'html' || $options == 'xl')
			{
				$data['date'] = $date;
				$data['option'] = $options;
				// $this->load->view('cssAssets');
				$this->load->view('contatOuterAnchorage',$data);
				// $this->load->view('jsAssets');
			}
			else if($options == 'pdf')
			{
				$this->data['date'] = $date;
				$this->data['option'] = $options;

				$this->load->library('m_pdf');
				
				$html = $this->load->view('contatOuterAnchoragePdf',$this->data, true);
				 
				$pdfFilePath ="containeratOuterAnchorage-".time()."-download.pdf";

				$pdf = $this->m_pdf->load();
				$pdf->allow_charset_conversion = true;
				$pdf->charset_in = 'iso-8859-4';
				$stylesheet = file_get_contents('assets/stylesheets/test.css');
					
				$pdf->WriteHTML($stylesheet,1);
				$pdf->WriteHTML($html,2);
					 
				$pdf->Output($pdfFilePath, "I"); // For Show Pdf
			}
		}
	}

	// container Details at Outer Anchorage  -- end
	
	function releaseOrderPDF_static()
	{
		// $verify_num = "U32109210001";
		$verify_num = "U20107210001";
		$this->data['verify_num']=$verify_num;
		
		$strBill="SELECT igm_supplimentary_detail.id,IFNULL(SUM(rcv_pack+loc_first),0) AS rcv_pack,

		rcv_unit,igm_masters.Vessel_Name,Voy_No,igm_supplimentary_detail.Volume_in_cubic_meters,
		(SELECT actual_delv_pack FROM do_truck_details_entry WHERE verify_number='$verify_num') AS actual_delv_pack,	
		(SELECT gate_out_time FROM do_truck_details_entry WHERE verify_number='$verify_num') AS gate_out_time,		
		igm_supplimentary_detail.Notify_name,igm_supplimentary_detail.Notify_code,

		igm_supplimentary_detail.Import_Rotation_No,igm_sup_detail_container.cont_number,Pack_Marks_Number,shed_loc,
		shed_yard,Description_of_Goods,Notify_name,IFNULL(shed_tally_info.verify_number,0) AS verify_number,
		IFNULL(shed_tally_info.id,0) AS verify_id,igm_supplimentary_detail.Pack_Number,
		igm_supplimentary_detail.Pack_Description,igm_supplimentary_detail.BL_No,

		igm_sup_detail_container.cont_number,igm_sup_detail_container.cont_size,igm_sup_detail_container.cont_height,
		igm_sup_detail_container.cont_status,igm_sup_detail_container.cont_weight,igm_sup_detail_container.cont_iso_type,

		verify_other_data.cnf_name,IFNULL(NULLIF(shed_mlo_do_info.be_no,' '),verify_other_data.be_no) AS be_no,
		verify_other_data.be_date,bank_bill_recv.bill_no,bank_bill_recv.cp_no,
		RIGHT(bank_bill_recv.cp_year,2) AS cp_year,bank_bill_recv.cp_bank_code,bank_bill_recv.cp_unit,
		DATE(bank_bill_recv.recv_time) AS cp_date,igm_supplimentary_detail.Notify_address,igm_supplimentary_detail.Line_No,
		total_port,CONCAT(RIGHT(YEAR(bill_date),2),'/',CONCAT(IF(LENGTH(bill_generation_no)=1,'00000',
		IF(LENGTH(bill_generation_no)=2,'0000',IF(LENGTH(bill_generation_no)=3,'000',IF(LENGTH(bill_generation_no)=4,'00',
		IF(LENGTH(bill_generation_no)=5,'0',''))))),bill_generation_no)) AS master_bill_no,shed_bill_master.bill_date,VoyNo,
		verify_other_data.exit_note_number,pr_number
		FROM  igm_supplimentary_detail
		INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
		INNER JOIN igm_masters ON igm_supplimentary_detail.igm_master_id=igm_masters.id
		LEFT JOIN  shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
		LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
		LEFT JOIN shed_bill_master ON shed_bill_master.verify_no=shed_tally_info.verify_number
		LEFT JOIN bank_bill_recv ON bank_bill_recv.bill_no=shed_bill_master.bill_no
		LEFT JOIN vessels_berth_detail ON shed_bill_master.import_rotation=vessels_berth_detail.Import_Rotation_No
		LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.imp_rot=igm_supplimentary_detail.Import_Rotation_No AND igm_supplimentary_detail.BL_No=shed_mlo_do_info.bl_no
		WHERE shed_tally_info.verify_number='$verify_num' LIMIT 1";
		// echo $strBill;return;
		$rtnContainerList = $this->bm->dataSelectDb1($strBill);		
		$this->data['rtnContainerList']=$rtnContainerList;

		$strBillRcvInfo="select description,gl_code 
		from shed_bill_details 
		inner join shed_bill_master on shed_bill_master.bill_no=shed_bill_details.bill_no
		where shed_bill_master.verify_no='$verify_num'";
											
		$rtnBillRcvInfo = $this->bm->dataSelectDb1($strBillRcvInfo);
		$this->data['rtnBillRcvInfo']=$rtnBillRcvInfo;		
					
		$str="select concat(right(YEAR(bill_date),2),'/',concat(if(length(bill_generation_no)=1,'00000',if(length(bill_generation_no)=2,'0000',if(length(bill_generation_no)=3,'000',if(length(bill_generation_no)=4,'00',if(length(bill_generation_no)=5,'0',''))))),bill_generation_no)) as bill_no,verify_no,unit_no,cpa_vat_reg_no,ex_rate,bill_date,arraival_date,import_rotation,vessel_name,cl_date,bl_no,wr_date,wr_upto_date,importer_vat_reg_no,importer_name,cnf_lic_no,cnf_agent,be_no,be_date,ado_no,ado_date,ado_valid_upto,manifest_qty,cont_size,cont_height,bill_rcv_stat,if(bill_rcv_stat=1,'Paid','Not Paid') as paid_status 
		from shed_bill_master where verify_no='$verify_num'"; 
			
		$rtnBillList = $this->bm->dataSelectDb1($str);
		$this->data['rtnBillList']=$rtnBillList;			
			
		$unit_no="";
		$cpa_vat_reg_no="";
		$ex_rate="";
		$bill_rcv_stat="";
			
		if(count($rtnBillList)>0)
		{
			$unit_no=$rtnBillList[0]['unit_no'];
			$cpa_vat_reg_no=$rtnBillList[0]['cpa_vat_reg_no'];
			$ex_rate=$rtnBillList[0]['ex_rate'];
			$bill_rcv_stat=$rtnBillList[0]['bill_rcv_stat'];
		}			
											
		$this->load->library('m_pdf');
		$html=$this->load->view('releaseOrderFormViewPDF_static',$this->data, true); //load the pdf_output.php by passing our data and get all data in $html varriable.

		$pdfFilePath ="ReleaseOrder-".time()."-download.pdf";

		$pdf = $this->m_pdf->load();
		$pdf->allow_charset_conversion = true;
		$pdf->charset_in = 'iso-8859-4';
		// $stylesheet = file_get_contents('assets/stylesheets/test.css'); // external css
		$stylesheet = file_get_contents('assets/stylesheets/fontFamily.css'); // external css
		//	$pdf->useSubstitutions = true; // optional - just as an example

		// $pdf->setFooter('Prepared By : '.$login_id.'|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
		// $pdf->setFooter('Developed By : DataSoft|Page {PAGENO} of {nb}|Date {DATE j-m-Y}');
		$pdf->setFooter('||Page {PAGENO} of {nb}');

		$pdf->WriteHTML($stylesheet,1);
		$pdf->WriteHTML($html,2);

		$pdf->Output($pdfFilePath, "I"); // For Show Pdf
	}



	public function smsReportForm(){
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="Assignment SMS Report";
				
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('smsReportForm',$data);
			$this->load->view('jsAssets');
		}

	}

	public function smsReportView()
	{
		$login_id = $this->session->userdata('login_id');
		$date=$this->input->post('date');
		//  $query ="SELECT tmp_oracle_assignment.cont_no,  sms_transaction.sms_sending_time, sparcsn4.ref_bizunit_scoped.name AS cf_name
		//  FROM ctmsmis.sms_transaction 
		//  INNER JOIN ctmsmis.tmp_oracle_assignment ON tmp_oracle_assignment.unit_gkey=ctmsmis.sms_transaction.unit_gkey
		//  INNER JOIN sparcsn4.inv_unit ON sparcsn4.inv_unit.gkey=tmp_oracle_assignment.unit_gkey
		//  INNER JOIN sparcsn4.inv_goods ON sparcsn4.inv_goods.gkey=sparcsn4.inv_unit.goods
		//  INNER JOIN sparcsn4.ref_bizunit_scoped ON sparcsn4.ref_bizunit_scoped.gkey=sparcsn4.inv_goods.consignee_bzu
		// WHERE DATE(ctmsmis.sms_transaction.sms_sending_time)='$date' AND ctmsmis.sms_transaction.sms_status=1";


		 $query ="SELECT tmp_oracle_assignment.cont_no, tmp_oracle_assignment.unit_gkey, sms_transaction.sms_sending_time
		 FROM ctmsmis.sms_transaction 
		 INNER JOIN ctmsmis.tmp_oracle_assignment ON tmp_oracle_assignment.unit_gkey=ctmsmis.sms_transaction.unit_gkey
		
		WHERE DATE(ctmsmis.sms_transaction.sms_sending_time)='$date'AND ctmsmis.sms_transaction.sms_status=1";

		$sms_report = $this->bm->dataSelect($query);
		$data['sms_report']=$sms_report; 
		$data['date']=$date; 

		$this->load->view('smsReportView',$data);

		/* $this->load->library('M_pdf');
		$mpdf->use_kwt = true;

	
		$pdf = $this->m_pdf->load();

		$pdf->showWatermarkText = true;


		$html=$this->load->view('smsReportView',$this->data, true);

		$pdfFilePath ="smsReport_".time()."pdf";
		$pdf->useSubstitutions = true;

		$pdf->WriteHTML($html,2);

		$pdf->Output($pdfFilePath, "I");  */
			
	}

	////////////////////////////////////////////////////////////////////////Block Unblock//////////////////////////




	public function Date_wise_block_release_list()
	{
		$data['title']="Date Wise Block/Release List";
		$data['flag'] = 0;
				
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('date_wise_block_release_list',$data);
		$this->load->view('jsAssets');
	}
	

	public function date_wise_block_report_list()
	{
		
		
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$from_date=$this->input->post('from_date');
		$to_date=$this->input->post('to_date');
		
		if($LoginStat!="yes")
		{
			$this->logout();
			
		}
			else
		{
			
		
			
			// $sqlContainer=" 
			// SELECT cont_no, rotation_no, bl_ref, nbr_block_unblock_log.release_flag, 
			// IF (nbr_block_unblock_log.release_flag='RELEASE', entry_time,'') AS release_time, 
			// (SELECT entry_time  FROM nbr_block_unblock_log 
			// WHERE nbr_block_unblock_log.block_unblock_id=nbr_block_unblock_data.id
			// AND release_flag='DO_NOT_RELEASE' ORDER BY nbr_block_unblock_log.id DESC LIMIT 1) AS blockTime,update_time
			// FROM nbr_block_unblock_data 
			// INNER JOIN nbr_block_unblock_cont_no ON nbr_block_unblock_cont_no.block_unblock_id=nbr_block_unblock_data.id 
			// INNER JOIN nbr_block_unblock_log ON nbr_block_unblock_log.block_unblock_id=nbr_block_unblock_data.id
			// WHERE DATE(nbr_block_unblock_data.update_time) BETWEEN '$from_date' AND '$to_date'
			// ";
			
			$sqlContainer="SELECT nbr_block_unblock_cont_no.cont_no,rotation_no,bl_ref,nbr_block_unblock_data.release_flag,
			reg_no,reg_date,date(reg_date) as beDt,office_code,
			(select nbr_block_unblock_log.entry_time from nbr_block_unblock_log 
			where nbr_block_unblock_log.block_unblock_id=nbr_block_unblock_data.id and nbr_block_unblock_log.release_flag='DO_NOT_RELEASE'
			order by nbr_block_unblock_log.id desc limit 1) as block_time,
			(select nbr_block_unblock_log.entry_time from nbr_block_unblock_log 
			where nbr_block_unblock_log.block_unblock_id=nbr_block_unblock_data.id and nbr_block_unblock_log.release_flag='RELEASE'
			order by nbr_block_unblock_log.id desc limit 1) as release_time
			FROM nbr_block_unblock_cont_no
			INNER JOIN nbr_block_unblock_data ON nbr_block_unblock_cont_no.block_unblock_id=nbr_block_unblock_data.id
			WHERE DATE(nbr_block_unblock_data.update_time) BETWEEN '$from_date' AND '$to_date'
			ORDER BY DATE(nbr_block_unblock_data.update_time) DESC";
		
			$rtnBlList = $this->bm->dataSelectDb1($sqlContainer);
			$data['rtnBlList']=$rtnBlList;
			
			$data['from_date']=$from_date;	
			$data['to_date']=$to_date;	
			
			$data['title']="Date Wise Block/Release List";	
			$data['flag'] = 1;
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('date_wise_block_release_list',$data);
			$this->load->view('jsAssets');
			
			
		}
			
		
	}

	public function Container_bl_block_release_list()
	{
		
		$data['title']="Container / BL Block Release List";
		$data['flag'] = 0;
				
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('container_bl_block_release_list',$data);
		$this->load->view('jsAssets');
	}
	
	function Container_BL_BlockReleaseList()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
			
		}
		else
		{		
			$ddl_im_cont_no=$this->input->post('ddl_im_cont_no');
			$ddl_im_bl_no=$this->input->post('ddl_im_bl_no');

			if($ddl_im_cont_no!="")
			{
				//echo "here";
				$sqlContainer="SELECT nbr_block_unblock_data.id as rtnValue FROM nbr_block_unblock_data
				INNER JOIN nbr_block_unblock_cont_no ON nbr_block_unblock_cont_no.block_unblock_id=nbr_block_unblock_data.id
				WHERE cont_no='$ddl_im_cont_no'";
				//return;
				@$rtnConNo = $this->bm->dataReturnDB1($sqlContainer);
				//print_r($rtnConNo);
				//return;
				//$rtnConNo= @$rtnConList[0]['id'];
				if($rtnConNo=="")
				{
					 $sqlCon="SELECT  igm_detail_container.cont_number as cont_no, igm_details.Import_Rotation_No as rotation_no, igm_details.BL_No as bl_ref, 
						terminal,block,location,
						'RELEASE' AS release_flag, ' ' AS release_time, '' as blockTime
						FROM igm_detail_container
						INNER JOIN igm_details ON igm_detail_container.igm_detail_id=igm_details.id
						LEFT JOIN yard_lying_info ON yard_lying_info.id=igm_detail_container.cont_number AND yard_lying_info.rotation=igm_details.Import_Rotation_No
						WHERE igm_detail_container.cont_number='$ddl_im_cont_no'  AND cont_number NOT IN(SELECT cont_number 
						FROM igm_sup_detail_container
						INNER JOIN igm_supplimentary_detail ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
						WHERE igm_sup_detail_container.cont_number='$ddl_im_cont_no')
						
						UNION
						
						SELECT igm_sup_detail_container.cont_number as cont_no, igm_supplimentary_detail.Import_Rotation_No as rotation_no, igm_supplimentary_detail.BL_No as bl_ref,
						terminal,block,location,
						'RELEASE' AS release_flag,  ' ' AS release_time, '' as blockTime
						FROM igm_sup_detail_container
						INNER JOIN igm_supplimentary_detail ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
						LEFT JOIN yard_lying_info ON yard_lying_info.id=igm_sup_detail_container.cont_number AND yard_lying_info.rotation=igm_supplimentary_detail.Import_Rotation_No
						WHERE igm_sup_detail_container.cont_number='$ddl_im_cont_no' order by rotation_no limit 1";
				}
				else
				{

				    $sqlCon="SELECT cont_no, rotation_no, bl_ref, nbr_block_unblock_log.release_flag,reg_no,reg_date,
					IF (nbr_block_unblock_log.release_flag='RELEASE', entry_time,'') AS release_time, 
					terminal,block,location,
					(SELECT entry_time  FROM nbr_block_unblock_log 
					WHERE nbr_block_unblock_log.block_unblock_id=nbr_block_unblock_data.id
					AND release_flag='DO_NOT_RELEASE' ORDER BY nbr_block_unblock_log.id DESC LIMIT 1) AS blockTime
					FROM nbr_block_unblock_data 
					INNER JOIN nbr_block_unblock_cont_no ON nbr_block_unblock_cont_no.block_unblock_id=nbr_block_unblock_data.id 
					INNER JOIN nbr_block_unblock_log ON nbr_block_unblock_log.block_unblock_id=nbr_block_unblock_data.id
					LEFT JOIN yard_lying_info ON yard_lying_info.rotation=nbr_block_unblock_data.rotation_no AND nbr_block_unblock_cont_no.cont_no=yard_lying_info.id
					WHERE nbr_block_unblock_data.id='$rtnConNo' AND cont_no='$ddl_im_cont_no' ORDER BY nbr_block_unblock_log.id DESC LIMIT 1";
					
				}	
				//echo $sqlCon;
				//return;
					$rtnBlList = $this->bm->dataSelectDb1($sqlCon);
									//print_r($rtnBlList);
					//return;
					//$rtnBlNo= $rtnBlList[0]['release_flag'];

					$data['containerNo']=$ddl_im_cont_no;
					$data['blNo']=$ddl_im_bl_no;
					//$data['rtnBlNo']=$rtnBlNo;
					$data['rtnConNo']=$rtnConNo;
					$data['rtnBlList']=$rtnBlList;
					$data['title']="Container / BL Block Release List";
					$data['flag'] = 1;

					$this->load->view('cssAssets');
					$this->load->view('headerTop');
					$this->load->view('sidebar');
					$this->load->view('container_bl_block_release_list',$data);
					$this->load->view('jsAssets');
					
			}
			else
			{
				
					$sqlBl="SELECT cont_no, rotation_no, bl_ref, nbr_block_unblock_log.release_flag,reg_no,reg_date,
					IF (nbr_block_unblock_log.release_flag='RELEASE', entry_time,'') AS release_time, 
					terminal,block,location,
					(SELECT entry_time  FROM nbr_block_unblock_log 
					WHERE nbr_block_unblock_log.block_unblock_id=nbr_block_unblock_data.id
					AND release_flag='DO_NOT_RELEASE' ORDER BY nbr_block_unblock_log.id DESC LIMIT 1) AS blockTime
					FROM nbr_block_unblock_data 
					INNER JOIN nbr_block_unblock_cont_no ON nbr_block_unblock_cont_no.block_unblock_id=nbr_block_unblock_data.id 
					INNER JOIN nbr_block_unblock_log ON nbr_block_unblock_log.block_unblock_id=nbr_block_unblock_data.id
					LEFT JOIN yard_lying_info ON yard_lying_info.rotation=nbr_block_unblock_data.rotation_no AND nbr_block_unblock_cont_no.cont_no=yard_lying_info.id
					WHERE nbr_block_unblock_data.bl_ref='$ddl_im_bl_no'";
					//return;
				//die();		
				$rtnBlList = $this->bm->dataSelectDb1($sqlBl);
				//$rtnBlNo= $rtnBlList[0]['release_flag'];
				//$data['rtnBlNo']=$rtnBlNo;
				$data['blNo']=$ddl_im_bl_no;
				$data['containerNo']=$ddl_im_cont_no;
				$data['blNo']=$ddl_im_bl_no;
				$data['rtnBlList']=$rtnBlList;
				$data['title']="Container / BL Block Release List";
				$data['flag'] = 1;

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('container_bl_block_release_list_bl',$data);
				$this->load->view('jsAssets');
			}
		}
	}



/* 	function Container_BL_BlockReleaseList()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
			
		}
		else
		{
			
			$ddl_im_cont_no=$this->input->post('ddl_im_cont_no');
			$ddl_im_bl_no=$this->input->post('ddl_im_bl_no');


			if($ddl_im_cont_no!="")
			{
				$sqlContainer="SELECT nbr_block_unblock_data.id as rtnValue FROM nbr_block_unblock_data
				INNER JOIN nbr_block_unblock_cont_no ON nbr_block_unblock_cont_no.block_unblock_id=nbr_block_unblock_data.id
				WHERE cont_no='$ddl_im_cont_no'";
				@$rtnConNo = $this->bm->dataReturnDB1($sqlContainer);
				//$rtnConNo= @$rtnConList[0]['id'];

				$sqlCon="SELECT cont_no, rotation_no, bl_ref, nbr_block_unblock_log.release_flag, entry_time AS time_stamp FROM nbr_block_unblock_data
				INNER JOIN nbr_block_unblock_cont_no ON nbr_block_unblock_cont_no.block_unblock_id=nbr_block_unblock_data.id
				INNER JOIN nbr_block_unblock_log ON nbr_block_unblock_log.block_unblock_id=nbr_block_unblock_data.id
				WHERE nbr_block_unblock_data.id='$rtnConNo' AND cont_no='$ddl_im_cont_no'";
				//return;
				$rtnBlList = $this->bm->dataSelectDb1($sqlCon);
				//$rtnBlNo= $rtnBlList[0]['release_flag'];

				$data['containerNo']=$ddl_im_cont_no;
				$data['blNo']=$ddl_im_bl_no;
				//$data['rtnBlNo']=$rtnBlNo;
				$data['rtnConNo']=$rtnConNo;
				$data['rtnBlList']=$rtnBlList;
				$data['title']="Container / BL Block Release List";
				$data['flag'] = 1;

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('container_bl_block_release_list',$data);
				$this->load->view('jsAssets');
			}
			else
			{
				$sqlBl="SELECT cont_no, rotation_no, bl_ref, nbr_block_unblock_log.release_flag, entry_time AS time_stamp 
				FROM nbr_block_unblock_data
				INNER JOIN nbr_block_unblock_cont_no ON nbr_block_unblock_cont_no.block_unblock_id=nbr_block_unblock_data.id
				INNER JOIN nbr_block_unblock_log ON nbr_block_unblock_log.block_unblock_id=nbr_block_unblock_data.id
				WHERE bl_ref='$ddl_im_bl_no'";
				$rtnBlList = $this->bm->dataSelectDb1($sqlBl);

				$data['blNo']=$ddl_im_bl_no;
				$data['containerNo']=$ddl_im_cont_no;
				$data['blNo']=$ddl_im_bl_no;
				$data['rtnBlList']=$rtnBlList;
				$data['title']="Container / BL Block Release List";
				$data['flag'] = 1;

				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('container_bl_block_release_list',$data);
				$this->load->view('jsAssets');
			}
		}
	} */
	
	// mlo logo upload - start
		
	function orgLogoUploadForm()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');

		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$msg = "";

			// get mlo code list
			$orgId = $this->session->userdata('org_id');
			
			$sql_ainNo = "SELECT AIN_No AS rtnValue
			FROM organization_profiles
			WHERE id='$orgId'";
			$ainNo = $this->bm->dataReturnDB1($sql_ainNo);
			
			$sql_mloCodeList = "SELECT DISTINCT mlocode
			FROM igm_details
			WHERE Submitee_Id LIKE '$ainNo%' AND mlocode!=''";
			$rslt_mloCodeList = $this->bm->dataSelectDB1($sql_mloCodeList);
			
			// logo list - start
			$sql_logoList = "SELECT id,mlo_code,logo_path
							FROM organization_logo
							WHERE org_id='$orgId'";
			// echo $sql_logoList;return;
			$rslt_logoList = $this->bm->dataSelectDB1($sql_logoList);
			// logo list - end
			
			$data['msg']=$msg;
			
			$data['rslt_mloCodeList']=$rslt_mloCodeList;
			$data['rslt_logoList']=$rslt_logoList;
			
			$data['title']="Upload Organization Logo...";
																	
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('orgLogoUploadForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	function orgLogoUploadAction()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');

		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$msg = "";
			$orgId = $this->session->userdata('org_id');
			
			$ipAddress = $_SERVER['REMOTE_ADDR'];
			$mloCode = $this->input->post('mloCode');									
			$mloLogo=$_FILES["mloLogo"]["name"];	
			
			$ext = pathinfo($mloLogo, PATHINFO_EXTENSION);

			$mloLogoName = "logo_".$mloCode.".".$ext;
			// return;
			
			move_uploaded_file($_FILES["mloLogo"]["tmp_name"],$_SERVER['DOCUMENT_ROOT']."/assets/mloLogo/".$_FILES["mloLogo"]["name"]);			
			rename($_SERVER['DOCUMENT_ROOT']."/assets/mloLogo/".$_FILES["mloLogo"]["name"],$_SERVER['DOCUMENT_ROOT']."/assets/mloLogo/".$mloLogoName);
		
			// check if exist
			$sql_chkPrevLogo = "SELECT COUNT(*) AS rtnValue
			FROM organization_logo
			WHERE mlo_code='$mloCode'";
			$chkPrevLogo = $this->bm->dataReturnDB1($sql_chkPrevLogo);
			// echo "<br>";
			$stat = "";
			if($chkPrevLogo==0)
			{
				$sql_insertLogo = "INSERT INTO organization_logo(org_id,mlo_code,logo_path,entry_at,entry_by,entry_ip)
								VALUES('$orgId','$mloCode','$mloLogoName',NOW(),'$login_id','$ipAddress')";
				$stat = $this->bm->dataInsertDB1($sql_insertLogo);
			}
			else
			{
				$sql_updateLogo = "UPDATE organization_logo
								SET logo_path='$mloLogoName',update_at=NOW(),update_by='$login_id',update_ip='$ipAddress'
								WHERE mlo_code='$mloCode'";
				$stat = $this->bm->dataUpdateDB1($sql_updateLogo);
			}
				
			if($stat==1)
			{
				$msg = "<font color='green'>Logo updated successfully.</font>";
			}
			else
			{
				$msg = "<font color='red'>Logo updated successfully.</font>";
			}

			// logo list - start
			$sql_logoList = "SELECT id,mlo_code,logo_path
							FROM organization_logo
							WHERE org_id='$orgId'";
			$rslt_logoList = $this->bm->dataSelectDB1($sql_logoList);
			// logo list - end				
						
			
			$data['msg']=$msg;				
			
			$sql_ainNo = "SELECT AIN_No AS rtnValue
			FROM organization_profiles
			WHERE id='$orgId'";
			$ainNo = $this->bm->dataReturnDB1($sql_ainNo);
			
			$sql_mloCodeList = "SELECT DISTINCT mlocode
			FROM igm_details
			WHERE Submitee_Id LIKE '$ainNo%' AND mlocode!=''";
			$rslt_mloCodeList = $this->bm->dataSelectDB1($sql_mloCodeList);
			
			$data['msg']=$msg;
			
			$data['rslt_mloCodeList']=$rslt_mloCodeList;
			$data['rslt_logoList']=$rslt_logoList;
			
			$data['title']="Upload Organization Logo...";
																	
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('orgLogoUploadForm',$data);
			$this->load->view('jsAssetsList');				
		}						
	}
	
	function orgLogoDeletedForm()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');

		if($LoginStat!="yes")
		{
			$this->logout();
		}		
		else
		{
			
			$msg = "";
			// get mlo code list
			$logoId = $this->input->post('logoId');	
			
			// --
			$sql_logData = "SELECT id,org_id,mlo_code,logo_path
			FROM organization_logo
			WHERE id='$logoId'";
			$rslt_logData = $this->bm->dataSelectDB1($sql_logData);
			
			$prevId = $rslt_logData[0]['id'];
			$org_id = $rslt_logData[0]['org_id'];
			$mlo_code = $rslt_logData[0]['mlo_code'];
			$logo_path = $rslt_logData[0]['logo_path'];
			$ipAddress = $_SERVER['REMOTE_ADDR'];
			
			$sql_insertLog = "INSERT INTO organization_logo_delete_log(prev_id,org_id,mlo_code,logo_path,delete_at,delete_by,delete_ip)
							VALUES('$prevId','$org_id','$mlo_code','$logo_path',NOW(),'$login_id','$ipAddress')";
			$this->bm->dataInsertDB1($sql_insertLog);
			// --
			
			$strDel="DELETE FROM organization_logo where id='$logoId'";
			$stat = $this->bm->dataDeleteDB1($strDel);
			
			if($stat==1)
			{
				$msg = "<font color='green'><b>Successfully Deleted!</b></font>";
			}
			else
			{
				$msg = "<font color='red'><b>Please try again.</b></font>";
			}
			
			$data['msg']=$msg;
			
			// get mlo code list
			$orgId = $this->session->userdata('org_id');
			
			$sql_ainNo = "SELECT AIN_No AS rtnValue
			FROM organization_profiles
			WHERE id='$orgId'";
			//return;
			$ainNo = $this->bm->dataReturnDB1($sql_ainNo);
			
			$sql_mloCodeList = "SELECT DISTINCT mlocode
			FROM igm_details
			WHERE Submitee_Id LIKE '$ainNo%' AND mlocode!=''";
			$rslt_mloCodeList = $this->bm->dataSelectDB1($sql_mloCodeList);
			
			// logo list - start
			$sql_logoList = "SELECT id,mlo_code,logo_path
							FROM organization_logo
							WHERE org_id='$orgId'";
			$rslt_logoList = $this->bm->dataSelectDB1($sql_logoList);
			// logo list - end
			
			$data['msg']=$msg;
			
			$data['rslt_mloCodeList']=$rslt_mloCodeList;
			$data['rslt_logoList']=$rslt_logoList;
			
			$data['title']="Upload Organization Logo...";
																	
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('orgLogoUploadForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	// mlo logo upload - end
	
	// EDO Container Report Pdf Start 
	
	
	
	
	// EDO Container Report Pdf END 

	// Arrival At Outer Anchorage -- Start

	function outerAnchorageForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="Vessel Movement Report Form";
			$data['msg'] = "";

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('outerAnchorageForm',$data);
			$this->load->view('jsAssets');
		}
	}

	function movementReport()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$fromDate = $this->input->post("fromDate");
			$toDate = $this->input->post("toDate");

			$arrivalQuery = "SELECT vvd_gkey,ib_vyg,ob_vyg,dat,TIME,from_hr,to_hr,vsl_name,ves_captain,loa_cm,loa_meter,grt,nrt,name,cntry_name,
			ata,atd,basic_class,basic_clas,slFlag
			FROM(
			SELECT DISTINCT vsl_vessel_visit_details.vvd_gkey,ib_vyg,ob_vyg, 
			to_char(argo_carrier_visit.ata,'yyyy-mm-dd hh24-mi-ss') AS dat,SUBSTR(to_char((argo_carrier_visit.ata),'hh24mi:ss'),1,5) AS TIME,
			SUBSTR(to_char((argo_carrier_visit.ata),'hh24mi:ss'),1,5) AS from_hr, 
			SUBSTR(to_char((argo_carrier_visit.atd),'hh24mi:ss'),1,5) AS to_hr, 
			vsl_vessels.name AS vsl_name,vsl_vessels.ves_captain,vsl_vessel_classes.loa_cm, ROUND(((vsl_vessel_classes.loa_cm)/100), 2) AS loa_meter, 
			vsl_vessel_classes.gross_registered_ton AS grt,vsl_vessel_classes.net_registered_ton AS nrt, rb.name,ref_country.cntry_name,ata,atd,
			vsl_vessel_classes.basic_class,
			(CASE
			WHEN vsl_vessel_classes.basic_class='CELL'
			THEN 'CONTAINER'
			WHEN vsl_vessel_classes.basic_class='BBULK'
			THEN 'BREAK BULK'
			WHEN vsl_vessel_classes.basic_class='PSNGR'
			THEN 'PESSENGER'
			WHEN vsl_vessel_classes.basic_class='UNKNOWN'
			THEN vsl_vessel_classes.notes	
			ELSE vsl_vessel_classes.basic_class	
			END) AS basic_clas,
			(Case
			when vsl_vessel_classes.basic_class='CELL' then '1'
			else
			'2'
			End)AS slFlag
			
			FROM argo_carrier_visit
			INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
			INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
			INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
			INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
			INNER JOIN ref_bizunit_scoped r ON r.gkey=vsl_vessels.owner_gkey
			LEFT JOIN ref_agent_representation ra ON r.gkey=ra.bzu_gkey
			LEFT JOIN ref_bizunit_scoped rb ON ra.agent_gkey=rb.gkey
			LEFT JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
			WHERE cast(argo_carrier_visit.ata as date) BETWEEN to_date('$fromDate','yyyy-mm-dd') AND to_date('$toDate','yyyy-mm-dd')
			ORDER BY vsl_vessel_classes.basic_class ASC,argo_carrier_visit.ata ASC)  tbl ORDER BY slFlag ASC,basic_class ASC";
			// echo "arrivalQuery : ".$arrivalQuery;return;
			$arrivalData = $this->bm->dataSelect($arrivalQuery);

			$departQuery = "SELECT * FROM(SELECT DISTINCT vsl_vessel_visit_details.vvd_gkey,ib_vyg,
			to_char(argo_carrier_visit.atd,'yyyy-mm-dd') AS dat,vsl_vessels.name AS vsl_name,vsl_vessels.ves_captain,vsl_vessel_classes.loa_cm,
			ROUND(((vsl_vessel_classes.loa_cm)/100), 2) AS loa_meter,
			vsl_vessel_classes.gross_registered_ton AS grt,vsl_vessel_classes.net_registered_ton AS nrt,rb.name,ref_country.cntry_name,ata,atd,
			vsl_vessel_classes.basic_class,
			(CASE
			WHEN vsl_vessel_classes.basic_class='CELL'
			THEN 'CONTAINER'
			WHEN vsl_vessel_classes.basic_class='BBULK'
			THEN 'BREAK BULK'
			WHEN vsl_vessel_classes.basic_class='PSNGR'
			THEN 'PESSENGER'
			WHEN vsl_vessel_classes.basic_class='UNKNOWN'
			THEN vsl_vessel_classes.notes	
			ELSE vsl_vessel_classes.basic_class	
			END) AS basic_clas,
			(Case
			when vsl_vessel_classes.basic_class='CELL' then '1'
			else
			'2'
			End) AS slFlag
			
			FROM argo_carrier_visit
			INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
			INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
			INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
			INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
			INNER JOIN ref_bizunit_scoped r ON r.gkey=vsl_vessels.owner_gkey 
			LEFT JOIN ref_agent_representation ra ON r.gkey=ra.bzu_gkey 
			LEFT JOIN ref_bizunit_scoped rb ON ra.agent_gkey=rb.gkey 
			LEFT JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
			WHERE cast(argo_carrier_visit.atd as date) BETWEEN to_date('$fromDate','yyyy-mm-dd') AND to_date('$toDate','yyyy-mm-dd')
			ORDER BY vsl_vessel_classes.basic_class ASC,argo_carrier_visit.atd ASC)  tbl ORDER BY slFlag ASC,basic_class ASC";
			// echo "<br>departQuery : ".$departQuery;
			$departData = $this->bm->dataSelect($departQuery);

			$shiftQuery = "SELECT * FROM (
				SELECT vsl_vessel_visit_details.vvd_gkey AS vvd,ib_vyg,
				(SELECT COUNT(*) FROM vsl_vessel_berthings  WHERE vvd_gkey=vsl_vessel_visit_details.vvd_gkey) AS cnt,
				vsl_vessel_berthings.ata AS dat,
				vsl_vessels.name AS vsl_name,vsl_vessels.ves_captain,vsl_vessel_classes.loa_cm,
				ROUND(((vsl_vessel_classes.loa_cm)/100), 2) AS loa_meter,
				vsl_vessel_classes.gross_registered_ton AS grt,vsl_vessel_classes.net_registered_ton AS nrt,
				rb.name,ref_country.cntry_name,vsl_vessel_berthings.ata AS berthing_ata,vsl_vessel_berthings.atd AS berthing_atd,
				(CASE
				WHEN vsl_vessel_classes.basic_class='CELL'
				THEN 'CONTAINER'
				WHEN vsl_vessel_classes.basic_class='BBULK'
				THEN 'BREAK BULK'
				WHEN vsl_vessel_classes.basic_class='PSNGR'
				THEN 'PESSENGER'
				WHEN vsl_vessel_classes.basic_class='UNKNOWN'
				THEN vsl_vessel_classes.notes	
				ELSE vsl_vessel_classes.basic_class	
				END) AS basic_class,
				(Case
				when vsl_vessel_classes.basic_class='CELL' then '1'
				else
				'2'
				End) AS slFlag
				FROM argo_carrier_visit
				INNER JOIN argo_visit_details ON argo_visit_details.gkey=argo_carrier_visit.cvcvd_gkey
				INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vvd_gkey=argo_visit_details.gkey
				INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
				INNER JOIN vsl_vessel_classes ON vsl_vessel_classes.gkey=vsl_vessels.vesclass_gkey
				INNER JOIN ref_bizunit_scoped r ON r.gkey=vsl_vessels.owner_gkey 
				LEFT JOIN ref_agent_representation ra ON r.gkey=ra.bzu_gkey 
				LEFT JOIN ref_bizunit_scoped rb ON ra.agent_gkey=rb.gkey 
				LEFT JOIN ref_country ON ref_country.cntry_code=vsl_vessels.country_code
				INNER JOIN vsl_vessel_berthings ON vsl_vessel_berthings.vvd_gkey=vsl_vessel_visit_details.vvd_gkey
				WHERE cast(argo_carrier_visit.ata as date) BETWEEN to_date('$fromDate','yyyy-mm-dd') AND to_date('$toDate','yyyy-mm-dd')
				ORDER BY vsl_vessel_berthings.ata ASC)  tbl 
				WHERE cnt>1  ORDER BY slFlag ASC,basic_class ASC,DAT";
			// echo "<br>shiftQuery : ".$shiftQuery;return;
			$shiftData = $this->bm->dataSelect($shiftQuery);


			$this->data['arrivalData']=$arrivalData;
			$this->data['departData']=$departData;
			$this->data['shiftData']=$shiftData;
			$this->data['fromDate']=$fromDate;
			$this->data['toDate']=$toDate;
			
			$this->load->library('m_pdf');
			//$mpdf->use_kwt = true;
			
			$html=$this->load->view('outerAnchorage',$this->data, true); 
			$pdfFilePath ="movement_report-".time()."-download.pdf";
			$pdf = $this->m_pdf->load();
			$pdf->useSubstitutions = true; 
			$html = mb_convert_encoding($html, 'UTF-8', 'UTF-8');
			$pdf->WriteHTML($html,2);
			$pdf->Output($pdfFilePath, "I");
		}
	}

	// Arrival At Outer Anchorage -- End

	// EDO Verification Report(Date Wise) Start 
	

	
	// EDO Verification Report(Date Wise) End
// EDO Verification Report(Organization Wise) Start 
	
	
	
	
	// EDO Verification Report(Organization Wise) End	
	
	
	function orgUserReportForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		$data['title']="Organization User Report.";
		
		$str="SELECT id, Org_Type FROM tbl_org_types";			
		$orgTypeList = $this->bm->dataSelectDb1($str);
		$data['orgTypeList']=$orgTypeList;
		
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('orgUserReportForm',$data);
		$this->load->view('jsAssets');
	}
		
	function orgUserReportView()
	{		
		$org_type = $this->input->post('org_type');
		$org_cat = $this->input->post('org_cat');
		$str="SELECT  Org_Type as rtnValue FROM tbl_org_types WHERE id='$org_type'";			
		$orgTypeName = $this->bm->dataReturnDB1($str);
		
		if($org_cat=='single')
		{
			$ain_no = $this->input->post('ain_no');
			$str="SELECT tbl_org_types.id, Org_Type, Type_description, users.login_id, users.u_name, AIN_No_New, License_No, CONCAT(organization_profiles.Address_1, ' ', organization_profiles.Address_2) AS addr 
				FROM tbl_org_types
				INNER JOIN users ON tbl_org_types.id=users.org_Type_id
				LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id
				WHERE organization_profiles.AIN_No_New='$ain_no' OR organization_profiles.AIN_No='$ain_no'";	
			
		}
		else
		{
			$str="SELECT tbl_org_types.id, Org_Type, Type_description, users.login_id, users.u_name, AIN_No_New, License_No, CONCAT(organization_profiles.Address_1, ' ', organization_profiles.Address_2) AS addr 
				FROM tbl_org_types
				INNER JOIN users ON tbl_org_types.id=users.org_Type_id
				LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id
				WHERE users.org_Type_id='$org_type'";			
		}

		$orgTypeList = $this->bm->dataSelectDb1($str);
		//return;
		$data['orgTypeList']=$orgTypeList;
		$data['orgTypeName']=$orgTypeName;
		$this->load->view('orgUserReportView',$data);
 		
		/* $this->load->library('m_pdf');
				$mpdf->use_kwt = true;
				$mpdf->simpleTables = true;
				
		$this->data['orgTypeList']=$orgTypeList;
		$html=$this->load->view('orgUserReportView',$this->data, true); 
		$pdfFilePath ="orgUserReport.pdf";

		$pdf = $this->m_pdf->load();

		$pdf = new mPDF('utf-8', 'A4-L');  
		//$pdf->WriteHTML($content,2);
		$pdf->WriteHTML($html,2);
			
		$pdf->Output($pdfFilePath, "I"); */ 
	}
	
function importDischargeReportForm()
{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
		    
            $data['title']="Import Discharge Report Form";
			$data['msg']="";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('importDischargeReportForm',$data);
			$this->load->view('jsAssets');
		}
}

	function importDischargeReport()
	{	
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$org_id = $this->session->userdata("org_id");
		$org_type_id = $this->session->userdata('org_Type_id');

		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			//$this->load->library('m_pdf');
			//$mpdf->use_kwt = true;
			//$mpdf->simpleTables = true;						
			$rotation = $this->input->post("rotation");
		    $rptType=$this->input->post('fileOptions');
			
			$str="SELECT inv_unit.gkey, inv_unit.goods_and_ctr_wt_kg AS weight, inv_unit.freight_kind AS TYPE,
			(SELECT ref_equip_type.id FROM inv_unit
			INNER JOIN ref_equipment ON ref_equipment.gkey=inv_unit.eq_gkey
			INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey 
			INNER JOIN inv_unit_fcy_visit  ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
			WHERE inv_unit_fcy_visit.unit_gkey=inv_unit.gkey fetch first 1 rows only ) AS iso_code,
			(SELECT SUBSTR(ref_equip_type.nominal_length,-2) FROM ref_equip_type 
			INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey=ref_equip_type.gkey
			INNER JOIN inv_unit ON inv_unit.eq_gkey=ref_equipment.gkey
			INNER JOIN inv_unit_fcy_visit  ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
			WHERE inv_unit_fcy_visit.unit_gkey=inv_unit.gkey fetch first 1 rows only
			) AS Cont_Size,
			inv_unit_fcy_visit.time_in AS dischargetime, 	
			NVL((SELECT SUBSTR(srv_event_field_changes.new_value,1,7) FROM srv_event 
			INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey 
			WHERE srv_event.applied_to_gkey=inv_unit.gkey AND srv_event.event_type_gkey IN(18,13,16) 
			AND srv_event_field_changes.new_value IS NOT NULL AND srv_event_field_changes.new_value !=''
			AND srv_event_field_changes.new_value !='Y-CGP-.' AND srv_event.gkey<(SELECT srv_event.gkey 
			FROM srv_event 
			INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey 
			WHERE srv_event.event_type_gkey=4 AND srv_event.applied_to_gkey=inv_unit.gkey AND metafield_id='unitFlexString01'
			AND new_value IS NOT NULL ORDER BY srv_event_field_changes.gkey DESC  fetch first 1 rows only) 
			ORDER BY srv_event.gkey DESC  fetch first 1 rows only),(SELECT SUBSTR(srv_event_field_changes.new_value,1,7) 
			FROM srv_event 
			INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey
			WHERE srv_event.applied_to_gkey=inv_unit.gkey AND srv_event.event_type_gkey IN(18,13,16) 
			ORDER BY srv_event_field_changes.gkey DESC  fetch first 1 rows only)) AS carrentPosition,
			
			inv_unit.id,  ib_vyg, inv_unit.category,vsl_vessels.name AS vsl_name,
			(SELECT ref_bizunit_scoped.id  FROM ref_bizunit_scoped
			WHERE ref_bizunit_scoped.gkey=inv_unit.line_op
			) AS MLO
			
			FROM inv_unit 
			INNER JOIN inv_unit_fcy_visit  ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
			INNER JOIN argo_carrier_visit ON  inv_unit_fcy_visit.actual_ib_cv=argo_carrier_visit.gkey
			
			INNER JOIN vsl_vessel_visit_details ON argo_carrier_visit.cvcvd_gkey=vsl_vessel_visit_details.vvd_gkey
			INNER JOIN vsl_vessel_berthings ON vsl_vessel_berthings.vvd_gkey=vsl_vessel_visit_details.vvd_gkey
			INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
			INNER JOIN argo_quay ON argo_quay.gkey=vsl_vessel_berthings.quay
			WHERE vsl_vessel_visit_details.ib_vyg='$rotation'";
			
			
			$queryList = $this->bm-> dataSelect($str);
			$a=count($queryList);
		
			$countEmptTwenty=0;
			$countEmptFourty=0;
		    $countLadenTwenty=0;
			$countLadenFourty=0;
			$tuesLD=0;
			$tuesMT=0;
		   // $count=count($queryList);
			for($i=0; $i < count($queryList); $i++){

				if($queryList[$i]['TYPE']=="MTY"){
					if($queryList[$i]['CONT_SIZE']==20){
						$countEmptTwenty++;

					}
					else if($queryList[$i]['CONT_SIZE']==40 ){
						$countEmptFourty++;
					}

				}
				else{
					if($queryList[$i]['CONT_SIZE']==20){
						$countLadenTwenty++;

					}
					else if($queryList[$i]['CONT_SIZE']==40 ){
						$countLadenFourty++;
					}

				}

			}
			$tuesLD=($countLadenFourty*2) + $countLadenTwenty;
			$tuesMT=($countEmptFourty*2) + $countEmptTwenty;
			$disCountEmptTwenty=0;
			$disCountEmptFourty=0;
			$disCountLadenTwenty=0;
			$disCountLadenFourty=0;

			for($j=0; $i < count($queryList); $j++){
				if($queryList[$i]['DISCHARGETIME']==null){
					if($queryList[$i]['TYPE']=="MTY"){
						if($queryList[$i]['CONT_SIZE']==20){
							$disCountEmptTwenty++;
	
						}
						else if($queryList[$i]['CONT_SIZE']==40 ){
							$disCountEmptFourty++;
						}
	
					}
					else{
						if($queryList[$i]['CONT_SIZE']==20){
							$disCountLadenTwenty++;
	
						}
						else if($queryList[$i]['CONT_SIZE']==40 ){
							$disCountLadenFourty++;
						}
	
					}

				}
			}

			$this->data['queryList']=$queryList;
			$this->data['countEmptTwenty']=$countEmptTwenty;
			$this->data['countEmptFourty']=$countEmptFourty;
			$this->data['countLadenTwenty']=$countLadenTwenty;
			$this->data['countLadenFourty']=$countLadenFourty;
			$this->data['tuesLD']=$tuesLD;
			$this->data['tuesMT']=$tuesMT;
			$this->data['disCountEmptTwenty']=$disCountEmptTwenty;
			$this->data['disCountEmptFourty']=$disCountEmptFourty;
			$this->data['disCountLadenTwenty']=$disCountLadenTwenty;
			$this->data['disCountLadenFourty']=$disCountLadenFourty;
			$this->data['title']="Import Container Discahrge Report & Summary";
		
			if($rptType=="pdf"){
				$this->load->library('m_pdf');
				$html=$this->load->view('importDischargeReport',$this->data, true); 
			    $pdfFilePath ="importDischargeReport";
                $pdf = $this->m_pdf->load();
			    $pdf->SetWatermarkText('CPA CTMS');
			    $pdf->showWatermarkText = false;
				$stylesheet = file_get_contents('resources/styles/test.css');
				$pdf->WriteHTML($stylesheet,1);
			    $pdf->WriteHTML($html,2);
				$pdf->Output($pdfFilePath, "I");
					
				/*$this->load->library('m_pdf');
				//$mpdf = new mPDF('utf-8', 'A4-L');
				//$mpdf->use_kwt = true;
				//$mpdf->simpleTables = true;
				//$html=$this->load->view('importDischargeReport',$this->data, true); 
			    $pdfFilePath ="importDischargeReport";
				$pdf = $this->m_pdf->load();
				$pdf->setFooter('Developed By : DataSoft|Page {PAGENO}|Date {DATE j-m-Y}');
				$pdf = new mPDF('utf-8', 'A4-L');//have tried several of the formats
				$pdf->use_kwt = true;
				//$pdf->simpleTables = false;
				$html=$this->load->view('importDischargeReport',$this->data, true);
				$pdf->WriteHTML($html,2);
				$pdf->Output($pdfFilePath, "I");*/
			}
			if($rptType=="xl" || $rptType=="html" ){
				$data['queryList']=$queryList;
				$data['countEmptTwenty']=$countEmptTwenty;
				$data['countEmptFourty']=$countEmptFourty;
				$data['countLadenTwenty']=$countLadenTwenty;
				$data['countLadenFourty']=$countLadenFourty;
				$data['tuesLD']=$tuesLD;
				$data['tuesMT']=$tuesMT;
				$data['disCountEmptTwenty']=$disCountEmptTwenty;
				$data['disCountEmptFourty']=$disCountEmptFourty;
				$data['disCountLadenTwenty']=$disCountLadenTwenty;
				$data['disCountLadenFourty']=$disCountLadenFourty;
				$data['title']="Import Container Discahrge Report & Summary";
				$this->load->view('importDischargeReportExcelandHtml',$data);
			
			}
			
		}
	}


		// BlockWise Equipment Handling Report --start

		function blockWiseEquipmentHandlingReportForm()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');	
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$equipmentQuery = "SELECT DISTINCT logEquip FROM ctmsmis.mis_equip_log_in_out_info WHERE (logEquip LIKE 'RTG%') OR (logEquip LIKE 'SC%')
				OR (logEquip LIKE 'QGC%')";
				$equipmentRslt = $this->bm->dataSelectDb2($equipmentQuery);


				$data['equipment'] = $equipmentRslt;
				$data['title'] = "BlockWise Equipment Handling Report Form";
				$data['msg'] = "";
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('blockWiseEquipmentHandlingReportForm',$data);
				$this->load->view('jsAssets');
			}
		}

		function blockWiseEquipmentHandlingReport()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');	
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$fromDate = $this->input->post('fromdate');
				$toDate = $this->input->post('todate');
				$yard = $this->input->post('yard_no');
				$block = $this->input->post('block');
				$equipment = $this->input->post('equipment');
				$shift = $this->input->post('shift');
				$option = $this->input->post('options');
				$blockListQuery="SELECT DISTINCT block_cpa AS block FROM ctmsmis.yard_block
				 WHERE terminal='$yard' AND  block_cpa!='NULL' ORDER BY block ASC";
				$blockListRes=$this->bm->dataSelectDb2($blockListQuery);
				$blockList="";
				for($i=0;$i<count($blockListRes);$i++){
					$blockString="";
					$blockString=$blockListRes[$i]['block'];

					if($i==(count($blockListRes)-1)){
						$blockList=$blockList."'".$blockString."'";
					}
					else{
						$blockList=$blockList."'".$blockString."',";

					}

				}
				

				if($block == "")
				{
					$block = "All";
					$blkCond = "";
				}
				else{
					$blkCond = "AND Block_No='$block'";
					$blkCond = "AND sel_block='$block'";
				}

				if($equipment == "")
				{
					$equipment = "All";
					$eqCond = "AND ((full_name LIKE 'RTG%') OR (full_name LIKE 'SC%') OR (full_name LIKE 'QGC%')) ";
				}
				else
				{
					$eqCond = "AND full_name LIKE '$equipment'";
				}

				if($shift == 'a')
				{
					$fromDate = $fromDate." 08:00:00";
					$toDate = $toDate." 15:59:59";
					$dtCond = "srv_event.created BETWEEN to_date('$fromDate','yyyy-mm-dd hh24-mi-ss') AND to_date('$toDate','yyyy-mm-dd hh24-mi-ss')  AND";
				}
				else if($shift == 'b')
				{
					$fromDate = $fromDate." 16:00:00";
					$toDate = $toDate." 23:59:59";
					$dtCond = "srv_event.created BETWEEN to_date('$fromDate','yyyy-mm-dd hh24-mi-ss') AND to_date('$toDate','yyyy-mm-dd hh24-mi-ss')  AND";
				}
				else if($shift == 'c')
				{
					$fromDate = date('Y-m-d', strtotime('+1 day', strtotime($fromDate)))." 00:00:00";
					$toDate = date('Y-m-d', strtotime('+1 day', strtotime($toDate)))." 07:59:59";
					$dtCond = "srv_event.created BETWEEN to_date('$fromDate','yyyy-mm-dd hh24-mi-ss') AND to_date('$toDate','yyyy-mm-dd hh24-mi-ss')  AND";
				}
				else
				{
					$fromDate = $fromDate." 00:00:00";
					$toDate = $toDate." 23:59:59";
					$dtCond = "srv_event.created BETWEEN to_date('$fromDate','yyyy-mm-dd hh24-mi-ss') AND to_date('$toDate','yyyy-mm-dd hh24-mi-ss')  AND";
				}

			
				
				$query ="SELECT sel_block, full_name,SUM(IMPRT) AS IMPRT,SUM(EXPRT) AS EXPRT, SUM(con20) AS con20, SUM(con40) AS con40
				FROM (
				SELECT cont_no, full_name,  move_kind, sel_block,
				(CASE WHEN category='IMPRT' THEN 1 ELSE 0 END) AS IMPRT,
				(CASE WHEN category='EXPRT' THEN 1 ELSE 0 END) AS EXPRT,
				(CASE WHEN siz=20 THEN 1 ELSE 0 END) AS con20,
				(CASE WHEN siz>20 THEN 1 ELSE 0 END) AS con40
				
				FROM
				(
				SELECT inv_unit.id AS cont_no,
				substr(ref_equip_type.nominal_length,-2) AS siz,
				substr(concat(concat(REGEXP_SUBSTR( placed_by, '[^:]+', 1, 1),':'),REGEXP_SUBSTR( placed_by, '[^:]+', 1, 2 )),5) AS placed_by,
				full_name,move_kind,inv_unit.category, inv_move_event.to_pos_slot,
				sel_block 
				
				FROM srv_event 
				INNER JOIN inv_move_event ON inv_move_event.mve_gkey=srv_event.gkey
				INNER JOIN inv_unit ON  srv_event.applied_to_gkey=inv_unit.gkey
				INNER JOIN ref_equipment ON ref_equipment.gkey=inv_unit.eq_gkey
				INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey
				INNER JOIN xps_che ON (xps_che.gkey=inv_move_event.che_fetch OR xps_che.gkey=inv_move_event.che_carry OR xps_che.gkey=inv_move_event.che_put)
				INNER JOIN xps_chezone ON  xps_chezone.che_id=xps_che.id
				WHERE $dtCond srv_event.creator='-xps-' $eqCond AND sel_block IN ($blockList) $blkCond
				AND ((SELECT COUNT(placed_by) FROM xps_user 
				WHERE  xps_user.name =substr(concat(concat(REGEXP_SUBSTR( placed_by, '[^:]+', 1, 1),':'),REGEXP_SUBSTR( placed_by, '[^:]+', 1, 2 )),5) )<1)
				)  tbl1 )  final  GROUP BY sel_block, full_name";
				

				$rslt = $this->bm->dataSelect($query);

				if($option == 'html')
				{
					$data['fromDate'] = $fromDate;
					$data['toDate'] = $toDate;
					$data['yard'] = $yard;
					$data['block'] = $block;
					$data['equipment'] = $equipment;
					$data['rslt'] = $rslt;
					$this->load->view('blockWiseEquipmentHandlingReport',$data);
				}
				else
				{
					$this->data['fromDate'] = $fromDate;
					$this->data['toDate'] = $toDate;
					$this->data['yard'] = $yard;
					$this->data['block'] = $block;
					$this->data['equipment'] = $equipment;
					$this->data['rslt'] = $rslt;
					$this->load->library('m_pdf');

					$html=$this->load->view('blockWiseEquipmentHandlingReportpdf',$this->data, true); 
					$pdfFilePath ="blockWise_Equipment_Handling_Report-".time()."-download.pdf";
					$pdf = $this->m_pdf->load();
					$pdf->useSubstitutions = true; 
					$html = mb_convert_encoding($html, 'UTF-8', 'UTF-8');
					$stylesheet = file_get_contents('assets/stylesheets/test.css');
					$pdf->WriteHTML($stylesheet,1);
					$pdf->WriteHTML($html,2);
					$pdf->Output($pdfFilePath, "I");
				}
			}
		}

		// BlockWise Equipment Handling Report --end
		
		//Removal List of Overflow Yard - LCL - start
	
		function removal_list_form_lcl()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$modify=$this->uri->segment(3);
				
				if($modify=="overflow")
					$data['title']="REMOVAL LIST OF OVERFLOW YARD (LCL)...";
				else if($modify=="all")
					$data['title']="LIST OF CTMS ASSIGNMENT...";
				$data['modify']=$modify;

				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('removal_list_form_lcl',@$data);
				$this->load->view('jsAssetsList');
			}	
		}		

		function removal_list_report_lcl()
		{
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			
			if($LoginStat!="yes")
			{
				$this->logout();
			}
			else
			{
				$login_id = $this->session->userdata('login_id');
				
				//$mpdf->use_kwt = true;
					
				$assignment_date=$this->input->post('assignment_date');
				$modify=$this->input->post('modify');
				$options=$this->input->post('options');
				$sql_removal_list = "";	
				if($modify=="overflow")
				{				
					
					$sql_removal_list="SELECT cont_no, 
					(SELECT ref_bizunit_scoped.name 
					FROM ref_bizunit_scoped 
					INNER JOIN inv_goods ON inv_goods.consignee_bzu = ref_bizunit_scoped.gkey 
					WHERE inv_goods.gkey=tbl.goods ) AS cf, 
					(SELECT ref_bizunit_scoped.sms_number 
					FROM ref_bizunit_scoped 
					INNER JOIN inv_goods ON inv_goods.consignee_bzu = ref_bizunit_scoped.gkey 
					WHERE inv_goods.gkey=tbl.goods ) AS sms_number,
					cont_status, 
					NVL((SELECT substr(srv_event_field_changes.new_value,7) FROM srv_event INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey WHERE srv_event.applied_to_gkey=tbl.gkey AND srv_event.event_type_gkey IN(18,13,16) AND srv_event_field_changes.new_value IS NOT NULL AND srv_event_field_changes.new_value !='' AND srv_event_field_changes.new_value !='Y-CGP-.' AND srv_event.gkey < (SELECT srv_event.gkey FROM srv_event INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey WHERE srv_event.event_type_gkey=4 AND srv_event.applied_to_gkey=tbl.gkey AND metafield_id='unitFlexString01' AND new_value IS NOT NULL ORDER BY srv_event_field_changes.gkey DESC FETCH FIRST 1 ROWS ONLY) ORDER BY srv_event.gkey DESC FETCH FIRST 1 ROWS ONLY),(SELECT substr(srv_event_field_changes.new_value,7) FROM srv_event INNER JOIN srv_event_field_changes ON srv_event_field_changes.event_gkey=srv_event.gkey WHERE srv_event.applied_to_gkey=tbl.gkey AND srv_event.event_type_gkey IN(18,13,16) ORDER BY srv_event_field_changes.gkey DESC FETCH FIRST 1 ROWS ONLY)) AS slot, 
					rot_no, 
					(SELECT vsl_vessels.name 
					FROM vsl_vessels 
					INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vessel_gkey=vsl_vessels.gkey 
					WHERE vsl_vessel_visit_details.ib_vyg=tbl.rot_no FETCH FIRST 1 ROWS ONLY) AS v_name, 
					
					(SELECT substr(ref_equip_type.nominal_length,-2) FROM ref_equipment
					INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey
					INNER JOIN inv_unit ON ref_equipment.gkey=inv_unit.eq_gkey
					WHERE inv_unit.gkey=tbl.gkey) as siz,
					
					((SELECT substr(ref_equip_type.nominal_height,-2) FROM ref_equipment
					INNER JOIN ref_equip_type ON ref_equip_type.gkey=ref_equipment.eqtyp_gkey
					INNER JOIN inv_unit ON ref_equipment.gkey=inv_unit.eq_gkey
					WHERE inv_unit.gkey=tbl.gkey)/10) as height,
					
					
					(SELECT ref_bizunit_scoped.id 
					FROM ref_bizunit_scoped 
					WHERE gkey=tbl.line_op) AS mlo, 
					mfdch_value,mfdch_desc,seal_nbr1 
					FROM 
					(SELECT inv_unit.id AS cont_no,inv_unit.gkey,inv_unit.goods,inv_unit.line_op, inv_unit.freight_kind AS cont_status,inv_unit_fcy_visit.flex_string10 AS rot_no,inv_unit.remark,config_metafield_lov.mfdch_value AS mfdch_value, config_metafield_lov.mfdch_desc AS mfdch_desc,seal_nbr1 
					FROM inv_unit 
					INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey 
					INNER JOIN config_metafield_lov ON inv_unit.flex_string01=config_metafield_lov.mfdch_value 
					WHERE inv_unit_fcy_visit.flex_date01=to_date('$assignment_date','yyyy-mm-dd') AND config_metafield_lov.mfdch_value NOT IN ('CANCEL') AND inv_unit.freight_kind='LCL'
					) tbl WHERE remark LIKE 'overflow%'";
				}
				else{
					// no requirement for non-overflow - 2022-03-02
					$sql_removal_list="";
				}
				//echo $sql_removal_list;return;
				$rslt_removal_list=$this->bm->dataSelect($sql_removal_list);
				
				if($options=="pdf")
				{
					$data['rslt_removal_list']=$rslt_removal_list;
					$data['modify']=$modify;
					$data['options'] = 'pdf';
					
					if($modify=="overflow")
					{
						$data['heading']="Removal Tally of Overflow Yard (LCL)";
					}
					else
					{
						$data['heading']="List of CTMS Assignment";
					}

					$this->load->view('cssAssets');
					$this->load->view('removal_list_report_view_lcl',$data);
					$this->load->view('jsAssets');
				}
				else if($options=="excel")
				{
					$data['rslt_removal_list']=$rslt_removal_list;
					$data['modify']=$modify;
					
					if($modify=="overflow")
					{
						$data['heading']="Removal Tally of Overflow Yard (LCL)";
					}
					else
					{
						$data['heading']="List of CTMS Assignment";
					}
					$this->load->view('removal_list_report_view_excel_lcl',$data); 
				}
				else if($options=="html")
				{
					$data['rslt_removal_list']=$rslt_removal_list;
					$data['modify']=$modify;
					
					if($modify=="overflow")
					{
						$data['heading']="Removal Tally of Overflow Yard (LCL)";
					}
					else
					{
						$data['heading']="List of CTMS Assignment";
					}
					$this->load->view('removal_list_report_view_lcl',$data);
				}
			}
		}
		
		//Removal List of Overflow Yard - LCL - end
		
		
		function validateDate($date)
		{
			$format = 'Y-m-d';
			$d = DateTime::createFromFormat($format, $date);
			return $d && $d->format($format) == $date;
		}
		
	// release order - new code - start
	function roSubmitForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$org_Type_id = $this->session->userdata('org_Type_id');
		$org_id = $this->session->userdata('org_id');
		$data['org_Type_id']=$org_Type_id;
		$data['flag'] = 1;
		$login_id = $this->session->userdata('login_id');
		
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$msg = "";
			$submitStat = 0;
			
			$data['msg']=$msg;
			$data['submitStat']=$submitStat;
			$data['title']="RELEASE ORDER FORM";								
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			
			if($login_id == "testcf" or $login_id == "zakir" or $login_id == "devcf")
				$this->load->view('roForm_test_zakir',$data);
			else
				$this->load->view('roForm',$data);
			
			$this->load->view('jsAssets');
		}
	}

	function chkDataForRO()
	{
		$rotNo = $_GET['rotNo'];
		$rotNo = str_replace("_","/",$rotNo);
		$blNo = $_GET['blNo'];
				
		$sql_chkROSubmit = "SELECT id FROM release_order_record WHERE imp_rot='$rotNo' AND bl_no='$blNo'";
		$rslt_chkROSubmit = $this->bm->dataSelectDB1($sql_chkROSubmit);
		
		$stat = 0;
		$msg = "";
		
		if(count($rslt_chkROSubmit)>0)		// if RO exists - stop
		{
			$stat = 0;	
			$msg = "<font color='red'><b>Release Order is already submitted for $rotNo and $blNo</b></font>";
			$data['stat'] = $stat;
			$data['msg'] = $msg;
		
			echo json_encode($data);
		}
		else			// if RO doesn't exist - allow to proceed
		{
			// check in IGM
			$sql_chkSupDtl = "SELECT COUNT(*) AS rtnValue
							FROM igm_supplimentary_detail
							WHERE Import_Rotation_No='$rotNo' AND BL_No='$blNo'";
			$chkSupDtl = $this->bm->dataReturnDB1($sql_chkSupDtl);
			
			if($chkSupDtl == 0)
			{
				$sql_chkDtl = "SELECT COUNT(*) AS rtnValue
							FROM igm_details
							WHERE Import_Rotation_No='$rotNo' AND BL_No='$blNo'";
				$chkDtl = $this->bm->dataReturnDB1($sql_chkDtl);
				
				if($chkDtl == 0)
				{
					$stat = 0;	
					$msg = "<font color='red'><b>Rotation or BL No is wrong. Not found in IGM</b></font>";
					$data['stat'] = $stat;
					$data['msg'] = $msg;
				
					echo json_encode($data);
					return;
				}
				else
				{
					$stat = 1;		
					$msg = "<font color='green'><b>Verified Data</b></font>";
					$data['stat'] = $stat;
					$data['msg'] = $msg;
				
					echo json_encode($data);
				}
			}
			else
			{
				$stat = 1;		
				$msg = "<font color='green'><b>Verified Data</b></font>";
				$data['stat'] = $stat;
				$data['msg'] = $msg;
			
				echo json_encode($data);
			}						
		}		
	}	
	
	function submitRO()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$org_Type_id = $this->session->userdata('org_Type_id');
		$org_license = $this->session->userdata('org_license');
		$login_id = $this->session->userdata('login_id');
	
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			$msg = null;
			
			$sql_getAINLic = "SELECT AIN_No,License_No
			FROM organization_profiles
			WHERE organization_profiles.License_No='$org_license' AND Org_Type_id='$org_Type_id'";
			$rslt_getAINLic = $this->bm->dataSelectDB1($sql_getAINLic);
			
			$ainNo = "";
			$licNo = "";
			
			for($i=0;$i<count($rslt_getAINLic);$i++)
			{
				$ainNo = $rslt_getAINLic[$i]['AIN_No'];
				$licNo = $rslt_getAINLic[$i]['License_No'];
			}
			
			// intakhab - 2022-05-18
			if($login_id == "devcf")
			{
				$ainNo = "111111";
			}
			if($login_id == "testcf")
			{
				$ainNo = "222222";
			}
			if($login_id == "zakir")
			{
				$ainNo = "333333";
			}
			// intakhab - 2022-05-18
			
			if($ainNo == "" or $ainNo == null)
			{
				$msg = "<font color='red'>AIN No Missing</font>";
				
				$data['msg']=$msg;
				$data['title']="RELEASE ORDER FORM";								
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('roForm',$data);
				$this->load->view('jsAssets');
				return;
			}
			else
			{				
				$imp_rot = $this->input->post('imp_rot');
				$bl_no = $this->input->post('bl_no');
				$agent_id = $this->input->post('agent_id');
				$roType = $this->input->post('roType');
				
				$sql_supDtlId = "SELECT id FROM igm_supplimentary_detail WHERE Import_Rotation_No='$imp_rot' AND BL_No='$bl_no'";
				
				$rslt_supDtlId = $this->bm->dataSelectDB1($sql_supDtlId);
				
				$supDtlId = "";
				for($i=0;$i<count($rslt_supDtlId);$i++)
				{
					$supDtlId = $rslt_supDtlId[$i]['id'];
				}
				
				$dtlId = "";
				if($supDtlId == "")
				{
					$sql_dtlId = "SELECT id FROM igm_details WHERE Import_Rotation_No='$imp_rot' AND BL_No='$bl_no'";
					$rslt_dtlId = $this->bm->dataSelectDB1($sql_dtlId);
					
					for($i=0;$i<count($rslt_dtlId);$i++)
					{
						$dtlId = $rslt_dtlId[$i]['id'];
					}
				}
				
				$sql_nextSl = "SELECT IFNULL((MAX(ro_sl)+1),1) AS rtnValue
				FROM release_order_record
				WHERE cnf_ain='$ainNo' AND ro_year=SUBSTRING(YEAR(NOW()), 3)";

				$nextSl = $this->bm->dataReturnDB1($sql_nextSl);
				$roYr = substr(date("Y"),2);
				
				$sql_chkROSubmit = "SELECT id FROM release_order_record WHERE imp_rot='$imp_rot' AND bl_no='$bl_no'";
				$rslt_chkROSubmit = $this->bm->dataSelectDB1($sql_chkROSubmit);	

				if(count($rslt_chkROSubmit) == 0)	
				{
					$sql_insertRO = "INSERT INTO release_order_record(imp_rot,bl_no,igm_dtl_id,igm_sup_dtl_id,agent_id,cnf_ain,cnf_lic_no,ro_sl,ro_year,ro_type,entry_by,entry_at,entry_ip)
					VALUES('$imp_rot','$bl_no','$dtlId','$supDtlId','$agent_id','$ainNo','$licNo','$nextSl','$roYr','$roType','$login_id',NOW(),'$ipaddr')";
					
					 $rslt_insertRo = $this->bm->dataInsertDB1($sql_insertRO);
					 if ($rslt_insertRo)
					 {	 
						$msg = "<font color='blue'>Release Order Succesfully Submitted.</font>";  		
					}else {
						$msg = "<font color='red'>Warning!Release Order Not Submitted Yet.Please Submit It</font>";
					}

					$data['msg']=$msg;
				
				}
				
				// redirect('Report/roForm/'.$msg, 'refresh');
				$this->roForm($msg);

				//$this->releaseOrderView($bl_no,$imp_rot);
			}

		}
	}
	
	function releaseOrderViewForm()
	{
		$data['msg']="";
		$data['title']="RELEASE ORDER VIEW FORM";								
		
		$this->load->view('cssAssets');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('roFormView',$data);
		$this->load->view('jsAssets');
	}
		
	function releaseOrderView($bl_no = null, $imp_rot = null)
	{
		if(is_null($bl_no) && is_null($imp_rot))
		{
			$imp_rot = $this->input->post('imp_rot');
			$bl_no = $this->input->post('bl_no');
		}
		else
		{
			$imp_rot = str_replace("_","/",$imp_rot);
		}

		// check if exits
		$sql_chkRO = "SELECT COUNT(*) AS rtnValue FROM release_order_record WHERE imp_rot='$imp_rot' AND bl_no='$bl_no'";
		$chkRO = $this->bm->dataReturnDB1($sql_chkRO);
		
		if($chkRO == 0)
		{
			$data['msg']="<font color='red'>Release order not submitted yet by C&F.</font>";
			$data['title']="RELEASE ORDER VIEW FORM";								
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('roFormView',$data);
			$this->load->view('jsAssets');
			return;
		} 
		
		$sql_submitBy = "SELECT entry_by AS rtnValue FROM release_order_record WHERE imp_rot='$imp_rot' AND bl_no='$bl_no'";
		$submitBy = $this->bm->dataReturnDB1($sql_submitBy);
		$data['submitBy']=$submitBy;
		
		// cont status
		$sql_contStatus = "SELECT cont_status
		FROM igm_supplimentary_detail
		INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
		WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'
		LIMIT 1
		UNION ALL
		SELECT cont_status
		FROM igm_details
		INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
		WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no'
		LIMIT 1";
		$rslt_contStatus = $this->bm->dataSelectDB1($sql_contStatus);	

		$contStatus = "";
		
		for($i=0;$i<count($rslt_contStatus);$i++)
		{
			$contStatus = $rslt_contStatus[$i]['cont_status'];
		}
		
		if($contStatus == "")
		{			
			$data['msg']="<font color='red'>Container status not found.</font>";
			$data['title']="RELEASE ORDER VIEW FORM";								
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('roFormView',$data);
			$this->load->view('jsAssets');
			return;
		}
		$data['contStatus']=$contStatus;
		// cont status - end
		
		//exit note no
		$sql_exitNoteNo = "SELECT place_dec AS exitNoteNo
		FROM sad_info
		INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
		WHERE REPLACE(manif_num,' ','') LIKE CONCAT('%',REPLACE('$imp_rot','/',''),'%') AND sum_declare='$bl_no'";
		$rslt_exitNoteNo = $this->bm->dataSelectDB1($sql_exitNoteNo);
		
		$exitNoteNo = "";
		for($i=0;$i<count($rslt_exitNoteNo);$i++)
		{
			$exitNoteNo = $rslt_exitNoteNo[$i]['exitNoteNo'];
		}
		
		// C&F Information
		$sql_entryBy = "SELECT entry_by AS rtnValue
		FROM release_order_record
		WHERE imp_rot='$imp_rot' AND bl_no='$bl_no'";
		$entryBy = $this->bm->dataReturnDB1($sql_entryBy);
		
		// $sql_cnfInfo = "SELECT Organization_Name,License_No
		// FROM organization_profiles
		// INNER JOIN users ON users.org_id = organization_profiles.id
		// WHERE login_id='$entryBy'";

		$sql_cnfInfo = "SELECT organization_profiles.Organization_Name, organization_profiles.License_No
		FROM igm_supplimentary_detail 
		INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id 
		LEFT JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id 
		LEFT JOIN edo_application_by_cf ON igm_supplimentary_detail.Import_Rotation_No=edo_application_by_cf.rotation AND igm_supplimentary_detail.BL_No=edo_application_by_cf.bl 
		LEFT JOIN users ON users.login_id=edo_application_by_cf.sumitted_by 
		LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id 
		LEFT JOIN igm_details ON igm_supplimentary_detail.igm_detail_id=igm_details.id 
		LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.bl_no=edo_application_by_cf.bl AND shed_mlo_do_info.imp_rot=edo_application_by_cf.rotation 
		LEFT JOIN shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
		LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id 
		LEFT JOIN certify_info_fcl ON igm_details.id=certify_info_fcl.igm_detail_id OR igm_supplimentary_detail.id=certify_info_fcl.igm_sup_detail_id WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no' GROUP BY igm_sup_detail_container.id 

		UNION ALL 

		SELECT organization_profiles.Organization_Name, organization_profiles.License_No
		FROM igm_details 
		INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id 
		LEFT JOIN igm_masters ON igm_masters.id=igm_details.IGM_id 
		LEFT JOIN edo_application_by_cf ON igm_details.Import_Rotation_No=edo_application_by_cf.rotation AND igm_details.BL_No=edo_application_by_cf.bl LEFT JOIN users ON users.login_id=edo_application_by_cf.sumitted_by 
		LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id 
		LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id 
		LEFT JOIN certify_info_fcl ON certify_info_fcl.igm_detail_id=igm_details.id 
		LEFT JOIN verify_info_fcl ON verify_info_fcl.igm_detail_id=igm_details.id 
		WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no' GROUP BY igm_detail_container.id";

		$rslt_cnfInfo = $this->bm->dataSelectDB1($sql_cnfInfo);
		
		$cnfName = "";
		$cnfLic = "";
		for($i=0;$i<count($rslt_cnfInfo);$i++)
		{
			$cnfName = $rslt_cnfInfo[$i]['Organization_Name'];
			$cnfLic = $rslt_cnfInfo[$i]['License_No'];
		}

		$data['cnfName'] = $cnfName;
		$data['cnfLic'] = $cnfLic;

		
		// pro
		$sql_pro = "SELECT CONCAT(cnf_lic_no,ro_year,ro_sl) AS pro,agent_id
					FROM(
					SELECT REPLACE(cnf_lic_no,'/','') AS cnf_lic_no,ro_year,
					(CASE
						WHEN LENGTH(ro_sl)=1 THEN CONCAT('0000',ro_sl)
						WHEN LENGTH(ro_sl)=2 THEN CONCAT('000',ro_sl)
						WHEN LENGTH(ro_sl)=3 THEN CONCAT('00',ro_sl)
						WHEN LENGTH(ro_sl)=4 THEN CONCAT('0',ro_sl)
						WHEN LENGTH(ro_sl)=5 THEN ro_sl
					END) AS ro_sl,agent_id
					FROM release_order_record
					WHERE imp_rot='$imp_rot' AND bl_no='$bl_no') AS tbl";
		$rslt_pro = $this->bm->dataSelectDB1($sql_pro);
		
		$pro = "";
		$agent_id = "";
		
		for($i=0;$i<count($rslt_pro);$i++)
		{
			$pro = $rslt_pro[$i]['pro'];
			$agent_id = $rslt_pro[$i]['agent_id'];
		}

		$agent_name_query = "SELECT agent_name,nid_number FROM vcms_vehicle_agent WHERE id = '$agent_id'";
		$agent_name_rslt = $this->bm->dataSelectDB1($agent_name_query);
		
		$data['bl_no']=$bl_no;
		$data['exitNoteNo']=$exitNoteNo;
		// $data['verifyNo']="";
		$data['billNo']="";	
		$data['pro']=$pro;
		$data['agent_id']=$agent_id;
		$data['agent_name_rslt']=$agent_name_rslt;

		
		$sql_headerData = "SELECT igm_supplimentary_detail.id,Vessel_Name,igm_supplimentary_detail.Import_Rotation_No,igm_supplimentary_detail.BL_No,Notify_name,Bill_of_Entry_No,Bill_of_Entry_Date,
		(SELECT verify_no 
		FROM oracle_nts_data
		WHERE imp_rot_no=igm_supplimentary_detail.Import_Rotation_No AND bl_no=igm_supplimentary_detail.BL_No) AS verify_no,
		(SELECT cp_no
		FROM oracle_nts_data
		WHERE imp_rot_no=igm_supplimentary_detail.Import_Rotation_No AND bl_no=igm_supplimentary_detail.BL_No) AS cp_no,
		(SELECT DATE(cp_date)
		FROM oracle_nts_data
		WHERE imp_rot_no=igm_supplimentary_detail.Import_Rotation_No AND bl_no=igm_supplimentary_detail.BL_No) AS cp_date
		FROM igm_supplimentary_detail
		INNER JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
		WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'";
		$rslt_headerData = $this->bm->dataSelectDB1($sql_headerData);
		
		if(count($rslt_headerData)==0)
		{
			$sql_headerData = "SELECT igm_details.id,Vessel_Name,igm_details.Import_Rotation_No,igm_details.BL_No,Notify_name,Bill_of_Entry_No,Bill_of_Entry_Date,
			(SELECT verify_no 
			FROM oracle_nts_data
			WHERE imp_rot_no=igm_details.Import_Rotation_No AND bl_no=igm_details.BL_No ORDER BY verify_no DESC LIMIT 1) AS verify_no,
			(SELECT cp_no 
			FROM oracle_nts_data
			WHERE imp_rot_no=igm_details.Import_Rotation_No AND bl_no=igm_details.BL_No ORDER BY cp_no DESC LIMIT 1) AS cp_no,
			(SELECT DATE(cp_date) 
			FROM oracle_nts_data
			WHERE imp_rot_no=igm_details.Import_Rotation_No AND bl_no=igm_details.BL_No ORDER BY cp_date DESC LIMIT 1) AS cp_date
			FROM igm_details
			INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
			WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no'";
			$rslt_headerData = $this->bm->dataSelectDB1($sql_headerData);
		}
		//echo $sql_headerData;
		// return;
		$data['rslt_headerData']=$rslt_headerData;
		
		$sql_roData = "SELECT Pack_Marks_Number,Pack_Number,Description_of_Goods,Pack_Description,igm_supplimentary_detail.Volume_in_cubic_meters,
		Notify_name,Notify_code,Notify_address,CONCAT(Notify_name,'<br>',Notify_code) AS signAndLic,
		Voy_No,Vessel_Name,igm_supplimentary_detail.Import_Rotation_No,igm_supplimentary_detail.Line_No,Bill_of_Entry_No AS be_no,Bill_of_Entry_Date AS be_date,
		shed_loc,shed_yard,igm_sup_detail_container.cont_number,cont_size,cont_height,cont_status,cont_iso_type,
		-- shed_mlo_do_info.delv_quantity,
		CONCAT(Pack_Number,' ',Pack_Description) AS delv_quantity,
		-- SUM(cont_weight) AS weight,
		'' AS gate_out_time,off_dock_id
		FROM igm_supplimentary_detail
		INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
		INNER JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id		
		LEFT JOIN shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
		LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_supplimentary_detail.id		
		WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'";
		// echo $sql_roData;
		// return;
		$rslt_roData = $this->bm->dataSelectDB1($sql_roData);
		
		// if(count($rslt_roData) == 0)		// wrong result
		// if($rslt_roData[0]['Import_Rotation_No'] == null)
		
		// weight - start
		$weight = "";
		if(count($rslt_roData)==0)
		{
			$sql_roData = "SELECT Pack_Marks_Number,Pack_Number,Description_of_Goods,Pack_Description,igm_details.Volume_in_cubic_meters,Notify_name,Notify_code,Notify_address,CONCAT(Notify_name,'<br>',Notify_code) AS signAndLic,Voy_No,Vessel_Name,igm_details.Import_Rotation_No,igm_details.Line_No,Bill_of_Entry_No AS be_no,Bill_of_Entry_Date AS be_date,'' AS shed_loc,'' AS shed_yard,igm_detail_container.cont_number,cont_size,cont_height,cont_status,cont_iso_type,
			-- shed_mlo_do_info.delv_quantity,
			CONCAT(Pack_Number,' ',Pack_Description) AS delv_quantity,
			-- SUM(cont_weight) AS weight,
			'' AS gate_out_time,off_dock_id
			FROM igm_details
			INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
			INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
			LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id
			WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no'";
			$rslt_roData = $this->bm->dataSelectDB1($sql_roData);
			
			$sql_weight = "SELECT SUM(igm_details.weight) AS rtnValue
			FROM igm_details
			INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
			INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
			LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id
			WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no'";
			$weight = $this->bm->dataReturnDB1($sql_weight);
		}
		else
		{
			$sql_weight = "SELECT SUM(igm_supplimentary_detail.weight) AS rtnValue
			FROM igm_supplimentary_detail
			INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
			INNER JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id		
			LEFT JOIN shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
			LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_supplimentary_detail.id		
			WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'";
			$weight = $this->bm->dataReturnDB1($sql_weight);
		}
		// echo $sql_roData;
		
		$data['weight']=$weight;
		$data['rslt_roData']=$rslt_roData;
		// weight - end
		
		// bill
		$strBillRcvInfo="select description,gl_code 
		from shed_bill_details 
		inner join shed_bill_master on shed_bill_master.bill_no=shed_bill_details.bill_no
		where shed_bill_master.verify_no='".$rslt_headerData[0]['verify_no']."'";							
		$rtnBillRcvInfo = $this->bm->dataSelectDb1($strBillRcvInfo);
		// return;	

		$data['rtnBillRcvInfo']=$rtnBillRcvInfo;
		
		$rtnBillQuery="select concat(right(YEAR(bill_date),2),'/',
		concat(if(length(bill_generation_no)=1,'00000',if(length(bill_generation_no)=2,'0000',if(length(bill_generation_no)=3,'000',
		if(length(bill_generation_no)=4,'00',if(length(bill_generation_no)=5,'0',''))))),bill_generation_no)) as bill_no,user,entry_dt,bill_date
		from shed_bill_master 
		where verify_no='".$rslt_headerData[0]['verify_no']."'";
		$rtnBillNo = $this->bm->dataSelectDb1($rtnBillQuery);
		
		$billNo = "";
		$billPreparedBy = "";
		$billPreparedTime = "";
		$billDate = "";
		for($i=0;$i<count($rtnBillNo);$i++)
		{
			$billNo = $rtnBillNo[$i]['bill_no'];
			$billDate = $rtnBillNo[$i]['bill_date'];
			$billPreparedBy = $rtnBillNo[$i]['user'];
			$billPreparedTime = $rtnBillNo[$i]['entry_dt'];
		}
		$data['billNo']=$billNo;
		$data['bill_date']=$billDate;
		$data['billPreparedBy']=$billPreparedBy;
		$data['billPreparedTime']=$billPreparedTime;
		
		// cp no - start
		$sql_billSl = "SELECT bill_no 
		FROM shed_bill_master
		WHERE import_rotation='$imp_rot' AND bl_no='$bl_no'";
		// echo $sql_billSl;return;
		$billSlList = $this->bm->dataSelectDB1($sql_billSl);
		$billSl = "";
		for($b=0;$b<count($billSlList);$b++)
		{
			$billSl = $billSlList[$b]["bill_no"];
		}
		
		$sql_cpNo = "SELECT CONCAT(tmp,'-',cp_no) as cpNo,recv_time AS cpDate
		FROM(
		SELECT CONCAT(cp_bank_code,cp_unit,'/',RIGHT(cp_year,2)) AS tmp,
		CASE
		WHEN LENGTH(cp_no)=1 THEN CONCAT('000',cp_no)
		WHEN LENGTH(cp_no)=2 THEN CONCAT('00',cp_no)
		WHEN LENGTH(cp_no)=3 THEN CONCAT('0',cp_no)
		WHEN LENGTH(cp_no)=4 THEN cp_no
		ELSE ''
		END AS cp_no,recv_time
		FROM bank_bill_recv WHERE bill_no='$billSl') AS tbl";
		$rslt_cpNo = $this->bm->dataSelectDB1($sql_cpNo);
		
		$cpNo = "";
		$cpDate = "";
		for($i=0;$i<count($rslt_cpNo);$i++)
		{
			$cpNo = $rslt_cpNo[$i]['cpNo'];
			$cpDate = $rslt_cpNo[$i]['cpDate'];
		}
		
		$data['cpNo']=$cpNo;
		$data['cpDate']=$cpDate;
		// cp no - end
					
		$str="select concat(right(YEAR(bill_date),2),'/',concat(if(length(bill_generation_no)=1,'00000',if(length(bill_generation_no)=2,'0000',if(length(bill_generation_no)=3,'000',if(length(bill_generation_no)=4,'00',if(length(bill_generation_no)=5,'0',''))))),bill_generation_no)) as bill_no,verify_no,unit_no,cpa_vat_reg_no,ex_rate,bill_date,arraival_date,import_rotation,vessel_name,cl_date,bl_no,wr_date,wr_upto_date,importer_vat_reg_no,importer_name,cnf_lic_no,cnf_agent,be_no,be_date,ado_no,ado_date,ado_valid_upto,manifest_qty,cont_size,cont_height,bill_rcv_stat,if(bill_rcv_stat=1,'Paid','Not Paid') as paid_status 
		from shed_bill_master where verify_no='".$rslt_headerData[0]['verify_no']."'"; 
			
		$rtnBillList = $this->bm->dataSelectDb1($str);
		$data['rtnBillList']=$rtnBillList;
						
		// certify by - start
		$certifyBy = "";
		$sql_certifyBy = "SELECT certify_info_fcl.update_by
		FROM certify_info_fcl
		INNER JOIN igm_details ON igm_details.id=certify_info_fcl.igm_detail_id
		WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no'";
		$rslt_certifyBy = $this->bm->dataSelectDB1($sql_certifyBy);
		
		for($i=0;$i<count($rslt_certifyBy);$i++)
		{
			$certifyBy = $rslt_certifyBy[$i]['update_by'];							
		}
		
		if($certifyBy=="")
		{
			$sql_certifyBy = "SELECT verify_other_data.update_by
			FROM verify_other_data
			INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=verify_other_data.igm_sup_detail_id
			WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'";
			$rslt_certifyBy = $this->bm->dataSelectDB1($sql_certifyBy);
			
			for($i=0;$i<count($rslt_certifyBy);$i++)
			{
				$certifyBy = $rslt_certifyBy[$i]['update_by'];							
			}
		}
		$data['certifyBy']=$certifyBy;
		// certify by - end 
		
		// verify by - start
		$verifyBy = "";
		$verifyTime = "";
		$sql_verifyBy = "SELECT verify_info_fcl.verify_by,DATE(verify_info_fcl.verify_time) AS verify_time
		FROM verify_info_fcl
		INNER JOIN igm_details ON igm_details.id=verify_info_fcl.igm_detail_id
		WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no'
		LIMIT 1";
		$rslt_verifyBy = $this->bm->dataSelectDB1($sql_verifyBy);
		
		for($i=0;$i<count($rslt_verifyBy);$i++)
		{
			$verifyBy = $rslt_verifyBy[$i]['verify_by'];							
			$verifyTime = $rslt_verifyBy[$i]['verify_time'];							
		}
		
		if($verifyBy == "")
		{
			$sql_verifyBy = "SELECT shed_tally_info.verify_by,DATE(shed_tally_info.verify_time) AS verify_time
			FROM shed_tally_info
			INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=shed_tally_info.igm_sup_detail_id
			WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'";
			$rslt_verifyBy = $this->bm->dataSelectDB1($sql_verifyBy);	

			for($i=0;$i<count($rslt_verifyBy);$i++)
			{
				$verifyBy = $rslt_verifyBy[$i]['verify_by'];							
				$verifyTime = $rslt_verifyBy[$i]['verify_time'];							
			}				
		}
		

		$data['imp_rot']=$imp_rot;
		$data['bl_no']=$bl_no;
		$data['verifyBy']=$verifyBy;
		$data['verifyTime']=$verifyTime;
		// verify by - end 
			
		$this->load->view('roFormViewPDF',$data);
		
		/*	// backup for pdf	- sample from vsl bill
		$this->data['bl_no']=$bl_no;
		$this->data['exitNoteNo']=$exitNoteNo;
		$this->data['verifyNo']="";
		$this->data['billNo']="";	
		$this->data['pro']=$pro;
		
		$this->load->library('m_pdf');
		$html=$this->load->view('roFormViewPDF.php',$this->data, true);			 
		
		$pdfFilePath ="releaseOrder-".$pro."-download.pdf";
		$pdf = $this->m_pdf->load();
		
		$pdf->AddPage('L', // L - landscape, P - portrait
					'', '', '', '',
					5, // margin_left
					5, // margin right
					5, // margin top
					5, // margin bottom
					5, // margin header
					5); // margin footer
					
		$stylesheet = file_get_contents('assets/stylesheets/test.css');				
		$pdf->WriteHTML($stylesheet,1);
		$pdf->WriteHTML($html,2);				 
		$pdf->Output($pdfFilePath, "I");				
		*/
	}
	// release order - new code - end

	// Release Order View - TOS 

	function releaseOrderViewTos($bl_no = null, $imp_rot = null)
	{
		if(is_null($bl_no) && is_null($imp_rot))
		{
			$imp_rot = $this->input->post('imp_rot');
			$bl_no = $this->input->post('bl_no');
		}
		else
		{
			$imp_rot = str_replace("_","/",$imp_rot);
		}

		// check if exits
		$sql_chkRO = "SELECT COUNT(*) AS rtnValue FROM release_order_record WHERE imp_rot='$imp_rot' AND bl_no='$bl_no'";
		$chkRO = $this->bm->dataReturnDB1($sql_chkRO);
		
		if($chkRO == 0)
		{
			$data['msg']="<font color='red'>Release order not submitted yet by C&F.</font>";
			$data['title']="RELEASE ORDER VIEW FORM";								
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('roFormView',$data);
			$this->load->view('jsAssets');
			return;
		} 
		
		$sql_submitBy = "SELECT entry_by AS rtnValue FROM release_order_record WHERE imp_rot='$imp_rot' AND bl_no='$bl_no'";
		$submitBy = $this->bm->dataReturnDB1($sql_submitBy);
		$data['submitBy']=$submitBy;
		
		// cont status
		$sql_contStatus = "SELECT cont_status
		FROM igm_supplimentary_detail
		INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
		WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'
		LIMIT 1
		UNION ALL
		SELECT cont_status
		FROM igm_details
		INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
		WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no'
		LIMIT 1";

		$rslt_contStatus = $this->bm->dataSelectDB1($sql_contStatus);	

		$contStatus = "";
		
		for($i=0;$i<count($rslt_contStatus);$i++)
		{
			$contStatus = $rslt_contStatus[$i]['cont_status'];
		}
		
		if($contStatus == "")
		{			
			$data['msg']="<font color='red'>Container status not found.</font>";
			$data['title']="RELEASE ORDER VIEW FORM";								
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('roFormView',$data);
			$this->load->view('jsAssets');
			return;
		}
		$data['contStatus']=$contStatus;
		// cont status - end
		
		//exit note no
		$sql_exitNoteNo = "SELECT place_dec AS exitNoteNo
		FROM sad_info
		INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
		WHERE REPLACE(manif_num,' ','') LIKE CONCAT('%',REPLACE('$imp_rot','/',''),'%') AND sum_declare='$bl_no'";
		$rslt_exitNoteNo = $this->bm->dataSelectDB1($sql_exitNoteNo);
		
		$exitNoteNo = "";
		for($i=0;$i<count($rslt_exitNoteNo);$i++)
		{
			$exitNoteNo = $rslt_exitNoteNo[$i]['exitNoteNo'];
		}
		
		// C&F Information
		$sql_entryBy = "SELECT entry_by AS rtnValue
		FROM release_order_record
		WHERE imp_rot='$imp_rot' AND bl_no='$bl_no'";
		$entryBy = $this->bm->dataReturnDB1($sql_entryBy);
		
		// $sql_cnfInfo = "SELECT Organization_Name,License_No
		// FROM organization_profiles
		// INNER JOIN users ON users.org_id = organization_profiles.id
		// WHERE login_id='$entryBy'";

		$sql_cnfInfo = "SELECT organization_profiles.Organization_Name, organization_profiles.License_No
		FROM igm_supplimentary_detail 
		INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id 
		LEFT JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id 
		LEFT JOIN edo_application_by_cf ON igm_supplimentary_detail.Import_Rotation_No=edo_application_by_cf.rotation AND igm_supplimentary_detail.BL_No=edo_application_by_cf.bl 
		LEFT JOIN users ON users.login_id=edo_application_by_cf.sumitted_by 
		LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id 
		LEFT JOIN igm_details ON igm_supplimentary_detail.igm_detail_id=igm_details.id 
		LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.bl_no=edo_application_by_cf.bl AND shed_mlo_do_info.imp_rot=edo_application_by_cf.rotation 
		LEFT JOIN shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
		LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id 
		LEFT JOIN certify_info_fcl ON igm_details.id=certify_info_fcl.igm_detail_id OR igm_supplimentary_detail.id=certify_info_fcl.igm_sup_detail_id WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no' GROUP BY igm_sup_detail_container.id 

		UNION ALL 

		SELECT organization_profiles.Organization_Name, organization_profiles.License_No
		FROM igm_details 
		INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id 
		LEFT JOIN igm_masters ON igm_masters.id=igm_details.IGM_id 
		LEFT JOIN edo_application_by_cf ON igm_details.Import_Rotation_No=edo_application_by_cf.rotation AND igm_details.BL_No=edo_application_by_cf.bl LEFT JOIN users ON users.login_id=edo_application_by_cf.sumitted_by 
		LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id 
		LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id 
		LEFT JOIN certify_info_fcl ON certify_info_fcl.igm_detail_id=igm_details.id 
		LEFT JOIN verify_info_fcl ON verify_info_fcl.igm_detail_id=igm_details.id 
		WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no' GROUP BY igm_detail_container.id";

		$rslt_cnfInfo = $this->bm->dataSelectDB1($sql_cnfInfo);
		
		$cnfName = "";
		$cnfLic = "";
		for($i=0;$i<count($rslt_cnfInfo);$i++)
		{
			$cnfName = $rslt_cnfInfo[$i]['Organization_Name'];
			$cnfLic = $rslt_cnfInfo[$i]['License_No'];
		}

		$data['cnfName'] = $cnfName;
		$data['cnfLic'] = $cnfLic;

		
		// pro
		$sql_pro = "SELECT CONCAT(cnf_lic_no,ro_year,ro_sl) AS pro,agent_id
					FROM(
					SELECT REPLACE(cnf_lic_no,'/','') AS cnf_lic_no,ro_year,
					(CASE
						WHEN LENGTH(ro_sl)=1 THEN CONCAT('0000',ro_sl)
						WHEN LENGTH(ro_sl)=2 THEN CONCAT('000',ro_sl)
						WHEN LENGTH(ro_sl)=3 THEN CONCAT('00',ro_sl)
						WHEN LENGTH(ro_sl)=4 THEN CONCAT('0',ro_sl)
						WHEN LENGTH(ro_sl)=5 THEN ro_sl
					END) AS ro_sl,agent_id
					FROM release_order_record
					WHERE imp_rot='$imp_rot' AND bl_no='$bl_no') AS tbl";
		$rslt_pro = $this->bm->dataSelectDB1($sql_pro);
		
		$pro = "";
		$agent_id = "";
		
		for($i=0;$i<count($rslt_pro);$i++)
		{
			$pro = $rslt_pro[$i]['pro'];
			$agent_id = $rslt_pro[$i]['agent_id'];
		}

		$agent_name_query = "SELECT agent_name,nid_number FROM vcms_vehicle_agent WHERE id = '$agent_id'";
		$agent_name_rslt = $this->bm->dataSelectDB1($agent_name_query);
		
		$data['bl_no']=$bl_no;
		$data['exitNoteNo']=$exitNoteNo;
		// $data['verifyNo']="";
		$data['billNo']="";	
		$data['pro']=$pro;
		$data['agent_id']=$agent_id;
		$data['agent_name_rslt']=$agent_name_rslt;

		$sql_headerData = "SELECT igm_supplimentary_detail.id,Vessel_Name,igm_supplimentary_detail.Import_Rotation_No,igm_supplimentary_detail.BL_No,Notify_name,Bill_of_Entry_No,Bill_of_Entry_Date, 
		(SELECT verify_number FROM verify_info_fcl WHERE verify_info_fcl.rotation='$imp_rot' AND verify_info_fcl.bl_no='$bl_no') AS verify_no 
		FROM igm_supplimentary_detail 
		INNER JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id 
		WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'";

		// echo $sql_headerData; return;
		$rslt_headerData = $this->bm->dataSelectDB1($sql_headerData);
		
		if(count($rslt_headerData)==0)
		{
			$sql_headerData = "SELECT igm_details.id,Vessel_Name,igm_details.Import_Rotation_No,igm_details.BL_No,Notify_name,Bill_of_Entry_No,Bill_of_Entry_Date, 
			(SELECT verify_number FROM verify_info_fcl WHERE verify_info_fcl.rotation='$imp_rot' AND verify_info_fcl.bl_no='$bl_no') AS verify_no 
			FROM igm_details 
			INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id 
			WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no'";
			$rslt_headerData = $this->bm->dataSelectDB1($sql_headerData);
		}
		// echo $sql_headerData;
		// return;
		$data['rslt_headerData']=$rslt_headerData;
		
		$sql_roData = "SELECT Pack_Marks_Number,Pack_Number,Description_of_Goods,Pack_Description,igm_supplimentary_detail.Volume_in_cubic_meters,
		Notify_name,Notify_code,Notify_address,CONCAT(Notify_name,'<br>',Notify_code) AS signAndLic,
		Voy_No,Vessel_Name,igm_supplimentary_detail.Import_Rotation_No,igm_supplimentary_detail.Line_No,Bill_of_Entry_No AS be_no,Bill_of_Entry_Date AS be_date,
		shed_loc,shed_yard,igm_sup_detail_container.cont_number,cont_size,cont_height,cont_status,cont_iso_type,
		-- shed_mlo_do_info.delv_quantity,
		CONCAT(Pack_Number,' ',Pack_Description) AS delv_quantity,
		-- SUM(cont_weight) AS weight,
		'' AS gate_out_time,off_dock_id
		FROM igm_supplimentary_detail
		INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
		INNER JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id		
		LEFT JOIN shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
		LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_supplimentary_detail.id		
		WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'";
		// echo $sql_roData;
		// return;
		$rslt_roData = $this->bm->dataSelectDB1($sql_roData);
		
		// if(count($rslt_roData) == 0)		// wrong result
		// if($rslt_roData[0]['Import_Rotation_No'] == null)
			
		// weight - start
		$weight = "";
		if(count($rslt_roData)==0)
		{
			$sql_roData = "SELECT Pack_Marks_Number,Pack_Number,Description_of_Goods,Pack_Description,igm_details.Volume_in_cubic_meters,Notify_name,Notify_code,Notify_address,CONCAT(Notify_name,'<br>',Notify_code) AS signAndLic,Voy_No,Vessel_Name,igm_details.Import_Rotation_No,igm_details.Line_No,Bill_of_Entry_No AS be_no,Bill_of_Entry_Date AS be_date,'' AS shed_loc,'' AS shed_yard,igm_detail_container.cont_number,cont_size,cont_height,cont_status,cont_iso_type,
			-- shed_mlo_do_info.delv_quantity,
			CONCAT(Pack_Number,' ',Pack_Description) AS delv_quantity,
			-- SUM(cont_weight) AS weight,
			'' AS gate_out_time,off_dock_id
			FROM igm_details
			INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
			INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
			LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id
			WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no'";
			$rslt_roData = $this->bm->dataSelectDB1($sql_roData);
			
			$sql_weight = "SELECT SUM(igm_details.weight) AS rtnValue
			FROM igm_details
			INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
			INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
			LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id
			WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no'";
			$weight = $this->bm->dataReturnDB1($sql_weight);
		}
		else
		{
			$sql_weight = "SELECT SUM(igm_supplimentary_detail.weight) AS rtnValue
			FROM igm_supplimentary_detail
			INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
			INNER JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id		
			LEFT JOIN shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
			LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_supplimentary_detail.id		
			WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'";
			$weight = $this->bm->dataReturnDB1($sql_weight);
		}
		// echo $sql_roData;
		
		$data['weight']=$weight;
		$data['rslt_roData']=$rslt_roData;
		// weight - end
		
		// bill
		$strBillRcvInfo="select description,gl_code 
		from shed_bill_details 
		inner join shed_bill_master on shed_bill_master.bill_no=shed_bill_details.bill_no
		where shed_bill_master.verify_no='".$rslt_headerData[0]['verify_no']."'";							
		$rtnBillRcvInfo = $this->bm->dataSelectDb1($strBillRcvInfo);
		// return;	

		$data['rtnBillRcvInfo']=$rtnBillRcvInfo;
		
		$rtnBillQuery="select concat(right(YEAR(bill_date),2),'/',
		concat(if(length(bill_generation_no)=1,'00000',if(length(bill_generation_no)=2,'0000',if(length(bill_generation_no)=3,'000',
		if(length(bill_generation_no)=4,'00',if(length(bill_generation_no)=5,'0',''))))),bill_generation_no)) as bill_no,user,entry_dt,bill_date
		from shed_bill_master 
		where verify_no='".$rslt_headerData[0]['verify_no']."'";
		$rtnBillNo = $this->bm->dataSelectDb1($rtnBillQuery);
		
		$billNo = "";
		$billPreparedBy = "";
		$billPreparedTime = "";
		$billDate = "";
		for($i=0;$i<count($rtnBillNo);$i++)
		{
			$billNo = $rtnBillNo[$i]['bill_no'];
			$billDate = $rtnBillNo[$i]['bill_date'];
			$billPreparedBy = $rtnBillNo[$i]['user'];
			$billPreparedTime = $rtnBillNo[$i]['entry_dt'];
		}
		$data['billNo']=$billNo;
		$data['bill_date']=$billDate;
		$data['billPreparedBy']=$billPreparedBy;
		$data['billPreparedTime']=$billPreparedTime;
		
		// cp no - start
		$sql_billSl = "SELECT bill_no
		FROM shed_bill_master
		WHERE import_rotation='$imp_rot' AND bl_no='$bl_no'";
		// echo $sql_billSl;return;
		$billSlList = $this->bm->dataSelectDB1($sql_billSl);
		$billSl = "";
		for($b=0;$b<count($billSlList);$b++)
		{
			$billSl = $billSlList[$b]["bill_no"];
		}
		
		$sql_cpNo = "SELECT CONCAT(tmp,'-',cp_no) as cpNo,recv_time AS cpDate
		FROM(
		SELECT CONCAT(cp_bank_code,cp_unit,'/',RIGHT(cp_year,2)) AS tmp,
		CASE
		WHEN LENGTH(cp_no)=1 THEN CONCAT('000',cp_no)
		WHEN LENGTH(cp_no)=2 THEN CONCAT('00',cp_no)
		WHEN LENGTH(cp_no)=3 THEN CONCAT('0',cp_no)
		WHEN LENGTH(cp_no)=4 THEN cp_no
		ELSE ''
		END AS cp_no,recv_time
		FROM bank_bill_recv WHERE bill_no='$billSl') AS tbl";
		// echo $sql_cpNo; return;

		$rslt_cpNo = $this->bm->dataSelectDB1($sql_cpNo);
		
		$cpNo = "";
		$cpDate = "";
		for($i=0;$i<count($rslt_cpNo);$i++)
		{
			$cpNo = $rslt_cpNo[$i]['cpNo'];
			$cpDate = $rslt_cpNo[$i]['cpDate'];
		}
		
		$data['cpNo']=$cpNo;
		$data['cpDate']=$cpDate;
		// cp no - end
					
		$str="select concat(right(YEAR(bill_date),2),'/',concat(if(length(bill_generation_no)=1,'00000',if(length(bill_generation_no)=2,'0000',if(length(bill_generation_no)=3,'000',if(length(bill_generation_no)=4,'00',if(length(bill_generation_no)=5,'0',''))))),bill_generation_no)) as bill_no,verify_no,unit_no,cpa_vat_reg_no,ex_rate,bill_date,arraival_date,import_rotation,vessel_name,cl_date,bl_no,wr_date,wr_upto_date,importer_vat_reg_no,importer_name,cnf_lic_no,cnf_agent,be_no,be_date,ado_no,ado_date,ado_valid_upto,manifest_qty,cont_size,cont_height,bill_rcv_stat,if(bill_rcv_stat=1,'Paid','Not Paid') as paid_status 
		from shed_bill_master where verify_no='".$rslt_headerData[0]['verify_no']."'"; 
			
		$rtnBillList = $this->bm->dataSelectDb1($str);
		$data['rtnBillList']=$rtnBillList;
						
		// certify by - start
		$certifyBy = "";
		$sql_certifyBy = "SELECT certify_info_fcl.update_by
		FROM certify_info_fcl
		INNER JOIN igm_details ON igm_details.id=certify_info_fcl.igm_detail_id
		WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no'";
		$rslt_certifyBy = $this->bm->dataSelectDB1($sql_certifyBy);
		
		for($i=0;$i<count($rslt_certifyBy);$i++)
		{
			$certifyBy = $rslt_certifyBy[$i]['update_by'];							
		}
		
		if($certifyBy=="")
		{
			$sql_certifyBy = "SELECT verify_other_data.update_by
			FROM verify_other_data
			INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=verify_other_data.igm_sup_detail_id
			WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'";
			$rslt_certifyBy = $this->bm->dataSelectDB1($sql_certifyBy);
			
			for($i=0;$i<count($rslt_certifyBy);$i++)
			{
				$certifyBy = $rslt_certifyBy[$i]['update_by'];							
			}
		}
		$data['certifyBy']=$certifyBy;
		// certify by - end 
		
		// verify by - start
		$verifyBy = "";
		$verifyTime = "";
		$sql_verifyBy = "SELECT verify_info_fcl.verify_by,DATE(verify_info_fcl.verify_time) AS verify_time
		FROM verify_info_fcl
		INNER JOIN igm_details ON igm_details.id=verify_info_fcl.igm_detail_id
		WHERE igm_details.Import_Rotation_No='$imp_rot' AND igm_details.BL_No='$bl_no'
		LIMIT 1";
		$rslt_verifyBy = $this->bm->dataSelectDB1($sql_verifyBy);
		
		for($i=0;$i<count($rslt_verifyBy);$i++)
		{
			$verifyBy = $rslt_verifyBy[$i]['verify_by'];							
			$verifyTime = $rslt_verifyBy[$i]['verify_time'];							
		}
		
		if($verifyBy == "")
		{
			$sql_verifyBy = "SELECT shed_tally_info.verify_by,DATE(shed_tally_info.verify_time) AS verify_time
			FROM shed_tally_info
			INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=shed_tally_info.igm_sup_detail_id
			WHERE igm_supplimentary_detail.Import_Rotation_No='$imp_rot' AND igm_supplimentary_detail.BL_No='$bl_no'";
			$rslt_verifyBy = $this->bm->dataSelectDB1($sql_verifyBy);	

			for($i=0;$i<count($rslt_verifyBy);$i++)
			{
				$verifyBy = $rslt_verifyBy[$i]['verify_by'];							
				$verifyTime = $rslt_verifyBy[$i]['verify_time'];							
			}				
		}
		

		$data['imp_rot']=$imp_rot;
		$data['bl_no']=$bl_no;
		$data['verifyBy']=$verifyBy;
		$data['verifyTime']=$verifyTime;
		// verify by - end 
			
		$this->load->view('roFormViewPDFTos',$data);
		
		/*	// backup for pdf	- sample from vsl bill
		$this->data['bl_no']=$bl_no;
		$this->data['exitNoteNo']=$exitNoteNo;
		$this->data['verifyNo']="";
		$this->data['billNo']="";	
		$this->data['pro']=$pro;
		
		$this->load->library('m_pdf');
		$html=$this->load->view('roFormViewPDF.php',$this->data, true);			 
		
		$pdfFilePath ="releaseOrder-".$pro."-download.pdf";
		$pdf = $this->m_pdf->load();
		
		$pdf->AddPage('L', // L - landscape, P - portrait
					'', '', '', '',
					5, // margin_left
					5, // margin right
					5, // margin top
					5, // margin bottom
					5, // margin header
					5); // margin footer
					
		$stylesheet = file_get_contents('assets/stylesheets/test.css');				
		$pdf->WriteHTML($stylesheet,1);
		$pdf->WriteHTML($html,2);				 
		$pdf->Output($pdfFilePath, "I");				
		*/
	}

	// Release Order View - TOS
	
	// Terminal Wise Special Assignment Form  -- start

	function terminalWiseSpecialAssignmentForm()
	{
		$user = $this->session->userdata('login_id');
		$user=str_replace(" ","",$user);
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="Termianl wise special assignment";
			$data['msg']="";

			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('terminalWiseSpecialAssignmentForm',$data);
			$this->load->view('jsAssets');
		}
	}
	function terminalWiseSpecialAssignment()
	{
		$user = $this->session->userdata('login_id');
		$user=str_replace(" ","",$user);
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$terminal = $this->input->post('terminal');
			$options = $this->input->post('fileOptions');
			//return;

			$date=trim($this->input->post('date'));			

			$sql_special_assignment="SELECT * FROM (SELECT DISTINCT a.gkey,a.id AS cont_no,k.name  AS cnf,
			CONCAT(k.address_line1,k.address_line2) AS cnf_addr,to_char(b.flex_date01,'yyyy-mm-dd') AS assignDt, j.bl_nbr, k.gkey AS bizu_gkey, config_metafield_lov.mfdch_value,
			mfdch_desc, b.last_pos_slot,
			to_char(srv_event.created,'yyyy-mm-dd') AS created,srv_event.created AS created1,
			(SELECT substr(nominal_length, -2) FROM ref_equip_type
			INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey = ref_equip_type.gkey
			INNER JOIN inv_unit ON inv_unit.eq_gkey = ref_equipment.gkey
			INNER JOIN inv_unit_fcy_visit  ON inv_unit_fcy_visit.unit_gkey = inv_unit.gkey
			WHERE inv_unit_fcy_visit.unit_gkey = a.gkey fetch first 1 rows only)  AS siz,
			cast((SELECT (substr(ref_equip_type.nominal_height,-2)/10) FROM ref_equip_type
			INNER JOIN ref_equipment ON ref_equipment.eqtyp_gkey = ref_equip_type.gkey
			INNER JOIN inv_unit ON inv_unit.eq_gkey = ref_equipment.gkey
			INNER JOIN inv_unit_fcy_visit  ON inv_unit_fcy_visit.unit_gkey = inv_unit.gkey
			WHERE inv_unit_fcy_visit.unit_gkey = a.gkey fetch first 1 rows only) as decimal(10,1)) AS height,
			(SELECT vsl_vessels.name FROM vsl_vessels
			INNER JOIN vsl_vessel_visit_details ON vsl_vessel_visit_details.vessel_gkey=vsl_vessels.gkey
			WHERE vsl_vessel_visit_details.ib_vyg=b.flex_string10 fetch first 1 rows only) AS v_name
			FROM srv_event
			INNER JOIN inv_unit a ON a.gkey = srv_event.applied_to_gkey
			INNER JOIN inv_unit_fcy_visit b ON b.unit_gkey = a.gkey
			INNER JOIN inv_goods j ON j.gkey = a.goods
			LEFT JOIN ref_bizunit_scoped k ON k.gkey = j.consignee_bzu
			INNER JOIN config_metafield_lov ON a.flex_string01 = config_metafield_lov.mfdch_value
			INNER JOIN  srv_event_field_changes ON srv_event_field_changes.event_gkey = srv_event.gkey
			WHERE (srv_event.created BETWEEN  TO_DATE(CONCAT('$date',' 00:00:00'),'YYYY-MM-DD HH24-MI-SS') AND TO_DATE(CONCAT('$date',' 23:59:59'),'YYYY-MM-DD HH24-MI-SS'))
			AND event_type_gkey = 4 AND (metafield_id = 'unitFlexString01' OR metafield_id = 'ufvFlexDate01') 
			AND to_date(srv_event.created,'yyyy-mm-dd')=to_date(b.flex_date01,'yyyy-mm-dd')) tmp";

			

			$rslt_special_assignment=$this->bm->dataSelect($sql_special_assignment);
			
		
			if($options=='pdf')
			{
				$this->data['rslt_special_assignment']=$rslt_special_assignment;
				$this->data['dt']=$date;
				$this->data['terminal']=$terminal;

				$this->load->library('m_pdf');
				$pdf->use_kwt = true;
			

				$html=$this->load->view('terminalWiseSpecialAssignmentView',$this->data, true); 
				$pdfFilePath ="On_Dated_".date("d-m-Y")."_Urgent_Delivery_Assignment.pdf";

				//actually, you can pass mPDF parameter on this load() function
				$pdf = $this->m_pdf->load();
				$pdf->SetWatermarkText('CPA CTMS');
				$pdf->showWatermarkText = true;	
								
				$stylesheet = file_get_contents('resources/styles/test.css'); // external css
				date_default_timezone_set('Asia/Dhaka');
				//$pdf->setFooter('Developed By : DataSoft|Page {PAGENO}|Date:  {DATE M d, Y h:i:sa}');
				$pdf->WriteHTML($html,2);
				$pdf->Output($pdfFilePath, "I"); // For Show Pdf
			}
			else
			{
				$data['title']="Urgent_Delivery_Assignment";
				$data['options']=$options;
				$data['rslt_special_assignment']=$rslt_special_assignment;
				$data['dt']=$date;
				$data['terminal']=$terminal;
				$this->load->view('terminalWiseSpecialAssignmentViewhTMLeXL',$data);
			}	
		}
	}

	// Terminal Wise Special Assignment Form  -- end

	// Gate Wise Truck entry by scanning -- start

	function gateWiseTruckEntryByScanningForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
			
		}
		else
		{
			$data['title'] = "Gate Wise Truck Entry (Scanning)";
			$data['msg'] = "";
					
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('gateWiseTruckEntryByScanningForm',$data);
			$this->load->view('jsAssetsList');
		}
	}

	function gateWiseTruckEntryByScanning()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
			
		}
		else
		{
			$action = $this->input->post('fileOptions');
			$fromDate = $this->input->post('fromDate');
			$toDate = $this->input->post('toDate');
			$gateQuery = "SELECT 'Gate 01' AS gate
				UNION
				SELECT 'Gate 02' AS gate
				UNION
				SELECT 'Gate 03' AS gate
				UNION
				SELECT 'Gate 05' AS gate";
			$gates = $this->bm->dataSelectDB1($gateQuery);

			if($action == 'html')
			{
				$data['gates'] = $gates;
				$data['fromDate'] = $fromDate;
				$data['toDate'] = $toDate;
				$data['action'] = $action;

				$this->load->view('gateWiseTruckEntryByScanning',$data);
			}
			else
			{
				$this->data['gates'] = $gates;
				$this->data['fromDate'] = $fromDate;
				$this->data['toDate'] = $toDate;
				$this->data['action'] = $action;

				// $this->load->view('gateWiseTruckEntryByScanning',$data);

				$this->load->library('m_pdf');	
				$html=$this->load->view('gateWiseTruckEntryByScanning',$this->data, true); 
				$pdfFilePath ="gateWiseTruckEntryByScanning-".time()."-download.pdf";
				$pdf = $this->m_pdf->load();
				$pdf->useSubstitutions = true; 
				$html = mb_convert_encoding($html, 'UTF-8', 'UTF-8');
				$pdf->WriteHTML($html,2);
				$pdf->Output($pdfFilePath, "I");
			}
		}
	}

	// Gate Wise Truck entry by scanning -- end
	
	//Holiday Management Starts...
	function holidayDeclarationForm(){
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$queryHolidayNameList = "SELECT * FROM holi_list";
			$holidayNameList = $this->bm->dataSelectDB1($queryHolidayNameList);
			$data['holidayNameList']=$holidayNameList;
			
			$queryHolidayList = "SELECT holi_declaration.id,holi_list.holiday_name,holi_declaration.start_date,holi_declaration.end_date
								FROM holi_declaration
								INNER JOIN holi_list ON holi_declaration.holi_list_id=holi_list.id";
			$holidayList = $this->bm->dataSelectDB1($queryHolidayList);
			$data['holidayList']=$holidayList;
			
			$msg = "";
			$data['msg']=$msg;
			$data['formType']="save";
			$data['title']="HOLIDAY DECLARATION FORM";
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('holidayDeclarationForm',$data);
			$this->load->view('jsAssetsList');
		}	
	}
	
	function HolidayEntry()
	{
		$login_id = $this->session->userdata('login_id');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$holi_list_id=$this->input->post('holi_list_id');
			$start_date=$this->input->post('start_date');
			$end_date=$this->input->post('end_date');
			$holi_description=$this->input->post('holi_description');
			$formType=$this->input->post('formType');
			$cnt=0;
			
			
			if($formType=="save"){
				$sql_cnt_duplicate="SELECT COUNT(*) AS rtnValue FROM holi_declaration 
								WHERE holi_list_id='$holi_list_id' AND start_date='$start_date' AND end_date='$end_date'";
				$cnt=$this->bm->dataReturnDb1($sql_cnt_duplicate);
				if($cnt>0)
					{
						$msg="<font color='red'><b>Sorry! Holiday already declared.</b></font>";
					}
				else
					{
						$sql_holidayEntry="INSERT INTO holi_declaration(holi_list_id,start_date,end_date,holi_description)
										VALUES('$holi_list_id','$start_date','$end_date','$holi_description')";
									
						if($this->bm->dataInsertDB1($sql_holidayEntry))
						{
							$msg="<font color='blue'><b>Holiday information saved Successfully</b></font>";
							$sql_get_last_id="SELECT id AS rtnValue FROM holi_declaration ORDER BY id DESC LIMIT 1";
							$holi_declare_id=$this->bm->dataReturnDb1($sql_get_last_id);
							
							//...
							$begin = new DateTime( $start_date );
							$end   = new DateTime( $end_date );

							for($i = $begin; $i <= $end; $i->modify('+1 day'))
							{
								$holi_date = $i->format("Y-m-d");
								
								$sql_holi_date_entry="INSERT INTO holi_date(holi_declare_id,holi_date) VALUES('$holi_declare_id','$holi_date')";
								$res_holi_date_entry = $this->bm->dataInsertDB1($sql_holi_date_entry); 
							}
							//...
						}
						else
						{
							$msg="<font color='red'><b>Sorry! Could not save data.</b></font>";
						}
					}
			} else {
				$holiday_declaration_id=$this->input->post('holiday_declaration_id');
				$sql_update_holiday="UPDATE holi_declaration SET holi_list_id='$holi_list_id',start_date='$start_date',
					end_date='$end_date',holi_description='$holi_description' WHERE id='$holiday_declaration_id'";
							
				if($this->bm->dataUpdateDB1($sql_update_holiday))
				{
					$msg="<font color='blue'><b>Successfully Updated!</b></font>";
					
					$delQuery = "DELETE from holi_date WHERE holi_declare_id='$holiday_declaration_id'";
					$delStat = $this->bm->dataDeleteDB1($delQuery);
					
					//...
					$begin = new DateTime( $start_date );
					$end   = new DateTime( $end_date );

					for($i = $begin; $i <= $end; $i->modify('+1 day'))
					{
						$holi_date = $i->format("Y-m-d");
						
						$sql_holi_date_entry="INSERT INTO holi_date(holi_declare_id,holi_date) VALUES('$holiday_declaration_id','$holi_date')";
						$res_holi_date_entry = $this->bm->dataInsertDB1($sql_holi_date_entry); 
					}
					//...
				}
				else
				{
					$msg="<font color='red'><b>Update failed!</b></font>";
				}
			}
			
			
			
			
			
			$queryHolidayNameList = "SELECT * FROM holi_list";
			$holidayNameList = $this->bm->dataSelectDB1($queryHolidayNameList);			
			$data['holidayNameList']=$holidayNameList;
			
			$queryHolidayList = "SELECT holi_declaration.id,holi_list.holiday_name,holi_declaration.start_date,holi_declaration.end_date
								FROM holi_declaration
								INNER JOIN holi_list ON holi_declaration.holi_list_id=holi_list.id";
			$holidayList = $this->bm->dataSelectDB1($queryHolidayList);
			$data['holidayList']=$holidayList;
			
			$data['formType']="save";
			$data['msg']=$msg;
			$data['title']="HOLIDAY DECLARATION FORM";
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('holidayDeclarationForm',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	function holidayList(){
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{			
			$queryHolidayList = "SELECT holi_declaration.id,holi_list.holiday_name,holi_declaration.start_date,holi_declaration.end_date
								FROM holi_declaration
								INNER JOIN holi_list ON holi_declaration.holi_list_id=holi_list.id";
			$holidayList = $this->bm->dataSelectDB1($queryHolidayList);
			$data['holidayList']=$holidayList;
			
			$msg = "";
			$data['msg']=$msg;
			$data['title']="HOLIDAY LIST";
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('holidayList',$data);
			$this->load->view('jsAssetsList');
		}	
	}
	
	function HolidayUpdate()
	{
		$login_id = $this->session->userdata('login_id');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$holi_declare_id=$this->input->post('holi_declare_id');
														
			$strHolidayById="SELECT holi_declaration.id,holi_declaration.holi_list_id,holi_declaration.start_date,holi_declaration.end_date,
				holi_declaration.holi_description,holi_list.holiday_name
				FROM holi_declaration
				INNER JOIN holi_list ON holi_declaration.holi_list_id=holi_list.id
				WHERE holi_declaration.id='$holi_declare_id'";
			$holidayById = $this->bm->dataSelectDB1($strHolidayById);					
			$data['holidayById']=$holidayById;	

			$holiday_declaration_id = "";
			$holiday_list_id = "";
			$fromDate = "";
			$startDate = "";
			$holidayRemarks = "";
			
			for($i=0; $i<count($holidayById); $i++){	   
					$holiday_declaration_id=$holidayById[$i]['id'];
					$holiday_list_id=$holidayById[$i]['holi_list_id'];
					$fromDate=$holidayById[$i]['start_date'];
					$startDate=$holidayById[$i]['end_date'];
					$holidayRemarks=$holidayById[$i]['holi_description'];
			}
			
			$data['holiday_declaration_id']=$holiday_declaration_id;
			$data['holiday_list_id']=$holiday_list_id;
			$data['fromDate']=$fromDate;
			$data['startDate']=$startDate;
			$data['holidayRemarks']=$holidayRemarks;
			
			$data['msg']="";
			$data['formType']="edit";
			$data['title']="HOLIDAY DECLARATION EDIT FORM";
			
			$queryHolidayNameList = "SELECT * FROM holi_list";
			$holidayNameList = $this->bm->dataSelectDB1($queryHolidayNameList);			
			$data['holidayNameList']=$holidayNameList;
			
			$queryHolidayList = "SELECT holi_declaration.id,holi_list.holiday_name,holi_declaration.start_date,holi_declaration.end_date
								FROM holi_declaration
								INNER JOIN holi_list ON holi_declaration.holi_list_id=holi_list.id";
			$holidayList = $this->bm->dataSelectDB1($queryHolidayList);
			$data['holidayList']=$holidayList;
						
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('holidayDeclarationForm',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	function HolidayDelete()
	{
		$login_id = $this->session->userdata('login_id');
		$ipaddr = $_SERVER['REMOTE_ADDR'];
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$holi_declare_id=$this->input->post('deleteID');
			
			$str_dlt_holi_date="DELETE FROM holi_date WHERE holi_declare_id='$holi_declare_id'";
			$res_dlt_holi_date = $this->bm->dataDeleteDB1($str_dlt_holi_date);
			if($res_dlt_holi_date > 0 ){
				$str="DELETE FROM holi_declaration WHERE id='$holi_declare_id'";
				$deleteHoliday = $this->bm->dataDeleteDB1($str);
				$msg="<font color='blue'><b>Data Deleted!</b></font>";
			} else {
				$msg="<font color='red'><b>Failed!</b></font>";
			}	
			
			$queryHolidayList = "SELECT holi_declaration.id,holi_list.holiday_name,holi_declaration.start_date,holi_declaration.end_date
								FROM holi_declaration
								INNER JOIN holi_list ON holi_declaration.holi_list_id=holi_list.id";
			$holidayList = $this->bm->dataSelectDB1($queryHolidayList);
			$data['holidayList']=$holidayList;
			
			$data['msg']=$msg;
			$data['title']="HOLIDAY LIST";
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('holidayList',$data);
			$this->load->view('jsAssetsList');
		}
	}
	//Holiday Management Ends....
	
	
	
	
	//Specifie Item Goods Report For NSI ---- Sumon---
	function specificItemsGoodsReportForm()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$data['title']="Specific Items Goods Report.";
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('specificItemsGoodsReportForm',$data);
			$this->load->view('jsAssets');
		}
	}
	
	
	
	function specificItemsGoodsReportView()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$fileOptions = $this->input->post('fileOptions');
			$frmDt = $this->input->post('frmDt');
			$toDt = $this->input->post('toDt');
			
			$goodsStr="SELECT *, SUM(tonage) AS tonnage FROM( SELECT * FROM (SELECT igm_details.Import_Rotation_No, igm_masters.Vessel_Name,
					commudity_detail.commudity_desc, Organization_Name AS org_name,
					igm_detail_container.cont_gross_weight/1000 AS tonage, 
					igm_details.Notify_name,igm_details.Notify_address,igm_details.Description_of_Goods
					FROM igm_detail_container 
					INNER JOIN igm_details ON igm_details.id=igm_detail_container.igm_detail_id
					INNER JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
					LEFT JOIN organization_profiles ON organization_profiles.id = igm_masters.Submitee_Org_Id
					INNER JOIN commudity_detail  ON commudity_detail.commudity_code = igm_detail_container.commudity_code
					WHERE DATE(igm_details.file_clearence_date) BETWEEN '$frmDt' AND '$toDt'

					UNION 

					SELECT igm_supplimentary_detail.Import_Rotation_No,igm_masters.Vessel_Name,
					commudity_detail.commudity_desc,
					igm_sup_detail_container.cont_gross_weight/1000 AS tonage, Organization_Name AS org_name,
					igm_supplimentary_detail.Notify_name,igm_supplimentary_detail.Notify_address,igm_supplimentary_detail.Description_of_Goods
					FROM igm_sup_detail_container 
					INNER JOIN igm_supplimentary_detail ON igm_supplimentary_detail.id=igm_sup_detail_container.igm_sup_detail_id
					INNER JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id
					LEFT JOIN organization_profiles ON organization_profiles.id = igm_masters.Submitee_Org_Id
					INNER JOIN commudity_detail  ON commudity_detail.commudity_code = igm_sup_detail_container.commudity_code
					WHERE DATE(igm_supplimentary_detail.file_clearence_date) BETWEEN '$frmDt' AND '$toDt') AS tbl 

					WHERE   UPPER(Description_of_Goods) LIKE UPPER('Rice%')
					OR  UPPER(Description_of_Goods) LIKE UPPER('%Lentil%')
					OR  UPPER(Description_of_Goods) LIKE UPPER('%Chickpeas%')
					OR  UPPER(Description_of_Goods) LIKE UPPER('%peas%')
					OR  UPPER(Description_of_Goods) LIKE UPPER('%Milk powder%')
					OR  UPPER(Description_of_Goods) LIKE UPPER('%Cardamom%')
					OR  UPPER(Description_of_Goods) LIKE UPPER('%Garlic%')
					OR  UPPER(Description_of_Goods) LIKE UPPER('%Ginger%')
					OR  UPPER(Description_of_Goods) LIKE UPPER('%Fertilizer%')
					OR  UPPER(Description_of_Goods) LIKE UPPER('Urea%')
					OR  UPPER(Description_of_Goods) LIKE UPPER('TSP%')
					OR  UPPER(Description_of_Goods) LIKE UPPER('%Milkpowder%')
					AND UPPER(Description_of_Goods) NOT LIKE UPPER('%MACHINE%')
					AND UPPER(Description_of_Goods) NOT LIKE UPPER('%mill%')
					) AS tbl2 WHERE UPPER(commudity_desc) NOT LIKE UPPER('Machineries%')
					GROUP BY Import_Rotation_No ORDER BY commudity_desc ASC";
				//return;"
			$goodsRslt = $this->bm->dataSelectDB1($goodsStr);
			$data['goodsRslt']=$goodsRslt;
			$data['frmDt']=$frmDt;
			$data['toDt']=$toDt;
			$data['fileOptions']=$fileOptions;		
			$this->load->view('specificItemsGoodsReportView',$data);
		}
	}
	
	// qgcContForwardForm - start
	
	function qgcContForwardForm()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{			
			
			
			$strQuery="SELECT id,rotation,entry_by AS forward_by,entry_at AS forward_at,traffic_forward_st,
			traffic_forward_by,trffic_forward_at
			FROM ctmsmis.qgc_container_handling	";
            $strResult = $this->bm->dataSelectDb2($strQuery);
			
			$j=0;
			$result;

			for($i=0;$i<count($strResult);$i++){
				$rotn="";
				$rotn=$strResult[$i]['rotation'];
			
				//fetch the vessel name
				$strQuery2="(SELECT vsl_vessels.name
				FROM vsl_vessel_visit_details
				INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
				WHERE vsl_vessel_visit_details.ib_vyg='$rotn') ";
				
				$strResult2 = $this->bm->dataSelect($strQuery2);
				
				if(count($strResult2 )>0){

					$result[$j]['rotation']=$strResult[$i]['rotation'];
					$result[$j]['forward_by']=$strResult[$i]['forward_by'];
					$result[$j]['forward_at']=$strResult[$i]['forward_at'];
					$result[$j]['vsl_name']=$strResult2[0]['NAME'];
					$j++;	
				}
				

			}
			
			
						
			$data['msg']="";
			
            $data['rslt_qgcFwdList']=$result;				
			$data['title']="QGC CONTAINER FORWARD FORM";								
			
			/*$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('qgcContForwardForm',$data);
			$this->load->view('jsAssets');*/
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('qgcContForwardForm',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	function qgcContForward()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$rotation = $this->input->post('impRot');
			//$btnStatus = $this->input->post('btnStatus');
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			$login_id = $this->session->userdata('login_id');
			
			$data['rotation'] = $rotation;
			$data['login_id']=$login_id;
			$data['countBillRow'] = 0;
			
			//if($btnStatus == "show")
			if($this->input->post('submit') == "show") 	
			{
				//$this->load->view('cssAssets');
				//$this->load->view('qgcContForwardView',$data);
				//$this->load->view('myclosebar');
				//$this->load->view('jsAssets');
				
				$this->load->library('m_pdf');
				$html=$this->load->view('qgcContForwardView',$data, true); 
				$pdfFilePath ="qgcContForwardView-".time()."-download.pdf";
				$pdf = $this->m_pdf->load();
				$pdf->useSubstitutions = true; 
				$html = mb_convert_encoding($html, 'UTF-8', 'UTF-8');
				$stylesheet = file_get_contents('assets/stylesheets/test.css');
				 $pdf->AddPage('L', // L - landscape, P - portrait
							 '', '', '', '',
							 5, // margin_left
							 5, // margin right
							 10, // margin top
							 10, // margin bottom
							 10, // margin header
							 10); // margin footer
				$pdf->WriteHTML($stylesheet,1);
				$pdf->WriteHTML($html,2);
				$pdf->Output($pdfFilePath, "I");

 
			}
			//else if($btnStatus == "confirm")
			else if($this->input->post('submit') == "confirm")
			{
				$sql_chkExist = "SELECT COUNT(*) AS rtnValue
							FROM ctmsmis.qgc_container_handling
							WHERE ctmsmis.qgc_container_handling.rotation='$rotation'";
				$chkExist = $this->bm->dataReturn($sql_chkExist);
				
				if($chkExist == 0)
				{													
				
					
					$sql_vvdGkey = "SELECT vvd_gkey
					FROM vsl_vessel_visit_details
					WHERE vsl_vessel_visit_details.ib_vyg='$rotation'";
					$rslt_vvdGkey = $this->bm->dataSelect($sql_vvdGkey);
					
					$vvdGkey = "";
					for($i=0;$i<count($rslt_vvdGkey);$i++)
					{
						$vvdGkey = $rslt_vvdGkey[$i]['VVD_GKEY'];
					}
					
					$sql_insertQGCContInfo = "INSERT INTO ctmsmis.qgc_container_handling(rotation,vvd_gkey,entry_by,entry_at,entry_ip)
											VALUES('$rotation','$vvdGkey','$login_id',NOW(),'$ipaddr')";
					$rslt_insertQGCContInfo = $this->bm->dataInsert($sql_insertQGCContInfo);
					
					$msg = "";
					if($rslt_insertQGCContInfo == 1)
					{
						$msg = "<font color='green'>$rotation Forwarded Succesfully</font>";
					}
					else
					{
						$msg = "<font color='red'>Failed to forward</font>";
					}
				}
				else
				{
					$msg = "<font color='red'>$rotation was forwarded previously</font>";
				}
				
			
				
				 //oracle quary start
				$strQuery="SELECT id,rotation,entry_by AS forward_by,entry_at AS forward_at,traffic_forward_st,
				traffic_forward_by,trffic_forward_at
				FROM ctmsmis.qgc_container_handling	";
				$strResult = $this->bm->dataSelectDb2($strQuery);

				$j=0;
			    $result;

			for($i=0;$i<count($strResult);$i++){
				$rotn="";
				$rotn=$strResult[$i]['rotation'];
				
				//fetch the vessel name
				$strQuery2="(SELECT vsl_vessels.name
				FROM vsl_vessel_visit_details
				INNER JOIN vsl_vessels ON vsl_vessels.gkey=vsl_vessel_visit_details.vessel_gkey
				WHERE vsl_vessel_visit_details.ib_vyg='$rotn') ";
				
				$strResult2 = $this->bm->dataSelect($strQuery2);
				if(count($strResult2 )>0){
					$result[$j]['rotation']=$strResult[$i]['rotation'];
					$result[$j]['forward_by']=$strResult[$i]['forward_by'];
					$result[$j]['forward_at']=$strResult[$i]['forward_at'];
					$result[$j]['vsl_name']=$strResult2[0]['NAME'];
					$j++;	
				}
				

			}
			
			//oracle quary End
			
			    $data['rslt_qgcFwdList']=$result;	

				$data['msg']=$msg;
				$data['title']="QGC CONTAINER FORWARD FORM";								
				
				/*$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('qgcContForwardForm',$data);
				$this->load->view('jsAssets');*/
				
				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('qgcContForwardForm',$data);
				$this->load->view('jsAssetsList');
			}
		}
	}

	
	function qgcContForwardedListForCPA()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{			
			/*$sql_qgcFwdList = "SELECT id,rotation,entry_by AS forward_by,entry_at AS forward_at,traffic_forward_st,
			                   traffic_forward_by,trffic_forward_at
						       FROM ctmsmis.qgc_container_handling";*/
			$sql_qgcFwdList = "SELECT id,rotation,entry_by AS forward_by,entry_at AS forward_at,traffic_forward_st,
			traffic_forward_by,trffic_forward_at,
			(SELECT sparcsn4.vsl_vessels.name
			FROM sparcsn4.vsl_vessel_visit_details
			INNER JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
			WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg=rotation) AS vsl_name
			FROM ctmsmis.qgc_container_handling";

           $rslt_qgcFwdList = $this->bm->dataSelect($sql_qgcFwdList);			
						
			$data['msg']="";
			$data['rslt_qgcFwdList']=$rslt_qgcFwdList;								
			$data['title']="QGC CONTAINER FORWARD List";								
			
			/*$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('qgcContForwardedListViewForCPA',$data);
			$this->load->view('jsAssets');*/
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('qgcContForwardedListViewForCPA',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	function searchQgcContForwardedListForCPA()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$searchType = $this->input->post('searchType');
			$searchValue=$this->input->post('searchValue');
            $sql_qgcFwdList = "SELECT id,rotation,entry_by AS forward_by,entry_at AS forward_at,traffic_forward_st,
			traffic_forward_by,trffic_forward_at,
			(SELECT sparcsn4.vsl_vessels.name
			FROM sparcsn4.vsl_vessel_visit_details
			INNER JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
			WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg=rotation) AS vsl_name
			FROM ctmsmis.qgc_container_handling where ctmsmis.qgc_container_handling.rotation='$searchValue'";

           $rslt_qgcFwdList = $this->bm->dataSelect($sql_qgcFwdList);			
						
			$data['msg']="";
			$data['rslt_qgcFwdList']=$rslt_qgcFwdList;								
			$data['title']="QGC CONTAINER FORWARD List";								
			
		//	$this->load->view('cssAssets');
		//	$this->load->view('headerTop');
		//	$this->load->view('sidebar');
		    $this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('qgcContForwardedListViewForCPA',$data);
			$this->load->view('jsAssetsList');
		}
	}
	

	function qqcContForwardReportForCPA()
	{
		
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
	
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$rotation = $this->input->post('impRot');
	
			$ipaddr = $_SERVER['REMOTE_ADDR'];
			$login_id = $this->session->userdata('login_id');
			

			$data['login_id']=$login_id;
			$data['rotation'] = $rotation;
			$data['countBillRow'] = 0;

			$this->load->library('m_pdf');
			$html=$this->load->view('qgcContForwardView',$data, true); 
			$pdfFilePath ="qgcContForwardView-".time()."-download.pdf";
			$pdf = $this->m_pdf->load();
			$pdf->useSubstitutions = true; 
			$html = mb_convert_encoding($html, 'UTF-8', 'UTF-8');
			$stylesheet = file_get_contents('assets/stylesheets/test.css');
			$pdf->WriteHTML($stylesheet,1);
			$pdf->WriteHTML($html,2);
			$pdf->Output($pdfFilePath, "I");
			/*$this->load->library('m_pdf');
				$html=$this->load->view('qgcContForwardView',$data, true); 
				$pdfFilePath ="qgcContForwardView-".time()."-download.pdf";
				$pdf = $this->m_pdf->load();
				$pdf->useSubstitutions = true; 
				$html = mb_convert_encoding($html, 'UTF-8', 'UTF-8');
				$stylesheet = file_get_contents('assets/stylesheets/test.css');
				 $pdf->AddPage('L', // L - landscape, P - portrait
							 '', '', '', '',
							 5, // margin_left
							 5, // margin right
							 10, // margin top
							 10, // margin bottom
							 10, // margin header
							 10); // margin footer
				$pdf->WriteHTML($stylesheet,1);
				$pdf->WriteHTML($html,2);
				$pdf->Output($pdfFilePath, "I");*/
		
			
		}


			
		
	}

	function qgcContForwardForAccount()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
	
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$forwardId = $this->input->post('forwardId');
			$rotation = $this->input->post('rotation');
			$vsl_name = $this->input->post('vsl_name');
		    $login_id = $this->session->userdata('login_id');
			$ipAddress = $_SERVER['REMOTE_ADDR'];
			$msg="";

			$updateQuery = "UPDATE ctmsmis.qgc_container_handling SET traffic_forward_st=1,traffic_forward_by='$login_id',trffic_forward_at=NOW()
                            WHERE id='$forwardId' ";
								
			$flag2 = $this->bm->dataUpdate($updateQuery);

				if($flag2 == 1){
					
					$msg = "<font color='green' size='3'> $rotation ($vsl_name) has forwarded successfully </font>";
				}
				else{
					$msg = "<font color='red' size='3'>Failed</font>";

				}			
				/*$sql_qgcFwdList = "SELECT id,rotation,entry_by AS forward_by,entry_at AS forward_at,traffic_forward_st,
				traffic_forward_by,trffic_forward_at
				FROM ctmsmis.qgc_container_handling";*/
				$sql_qgcFwdList = "SELECT id,rotation,entry_by AS forward_by,entry_at AS forward_at,traffic_forward_st,
				traffic_forward_by,trffic_forward_at,
				(SELECT sparcsn4.vsl_vessels.name
				FROM sparcsn4.vsl_vessel_visit_details
				INNER JOIN sparcsn4.vsl_vessels ON sparcsn4.vsl_vessels.gkey=sparcsn4.vsl_vessel_visit_details.vessel_gkey
				WHERE sparcsn4.vsl_vessel_visit_details.ib_vyg=rotation) AS vsl_name
				FROM ctmsmis.qgc_container_handling";
			$rslt_qgcFwdList = $this->bm->dataSelect($sql_qgcFwdList);			
						
			$data['msg']=$msg;
			$data['rslt_qgcFwdList']=$rslt_qgcFwdList;								
			$data['title']="QGC CONTAINER FORWARD List";								
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('qgcContForwardedListViewForCPA',$data);
			$this->load->view('jsAssets');
		}
	}
		// qgcContForwardForm - end
		
	function myTest(){
								
		$data['fromdate']="2023-04-24";
		$data['yard_no']="GCB";
		$data['type']="assign1";
		$data['fileOptions']="html";
			
		$this->load->view('myTest',$data);
	}
	
	 function getAgentOrg()
	{
		
		$qry=$_GET['q'];
		
			$sql_igmOrgId="select  distinct Organization_Name,organization_profiles.id from organization_profiles inner join 
		igm_details 
		on igm_details.Submitee_Org_Id=organization_profiles.id
		where igm_details.Import_Rotation_No='$qry'";
		$igmOrgId = $this->bm->dataSelectDb1($sql_igmOrgId);
	
			
		
		$org_name = "";
		$org_id = "";
		
		for($i=0;$i<count($igmOrgId);$i++){
			$org_id = $igmOrgId[$i]['id'];
			$org_name = $igmOrgId[$i]['Organization_Name'];
			
		}
		$data['org_rslt']=$igmOrgId;
		echo json_encode($data);

		//$this->load->view('getAgent');

	}
	
	
	 function getMloCodeOrg()
	{
		$str_mlo = "";
		$qry=$_GET['q'];
		
		if($qry=="all"){
			$str_mlo="SELECT DISTINCT igm_details.mlocode FROM igm_details";
		} else {
			$str_mlo="SELECT DISTINCT igm_details.mlocode FROM igm_details 
			WHERE igm_details.Submitee_Org_Id='$qry'";
		}
		
		
		$resultmlocode = $this->bm->dataSelectDb1($str_mlo);	
		$data['mlo_rslt']=$resultmlocode;

		
		echo json_encode($data);

		//$this->load->view('getAgent');

	}
		
		
	function EDIConverterForPangaon($msg)
	{
	    
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			
			
			$exp_no1=$this->input->post('exp_no');
			$exp_no=str_replace("/","",$exp_no1);
			$this->load->model('ci_auth', 'bm', TRUE);
			list($berth,$vsl) = $this->bm->myEdiVslSearch($exp_no1); 
			$data['berth']=$berth;
			$data['vsl']=$vsl;
			$data['exp_no']=$exp_no;
			$data['exp_no1']=$exp_no1;
			$data['msg']=$msg;
			
			/*$data['title']="Pangaon EDI CONVERT FROM EXCEL";		
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('pangaonEdiConverterFormView',$data);
			$this->load->view('jsAssets');*/
			$this->pangaonEdiConverterForm($msg);
			
		}
	}
		
			function Checkxcel2($mydata,$login_id,$exp_no){
				

		//$rotation=$mydata->value(2,2);
		$agent=$mydata->value(3,2);
		$voy=$mydata->value(4,2);
		$callSign=$mydata->value(5,2);
		$vsl_name=$mydata->value(6,2);
		$date=$mydata->value(7,2);
		$LOP=$mydata->value(8,2);
		$nextPort=$mydata->value(9,2);
		
		
	   if($agent==""){
			$agntMsg="<p style='color:red;'>Agent Can not be blank on cell B3...</p>";
			//$data['msg']="Agent Can not be blank on cell B3...";
			$data['msg']=$agntMsg;
			$this->EDIConverterForPangaon($data['msg']);
			return ;
		}else if($voy==""){
			//$data['msg']="Voys Can not be blank on cell B4...";
			$voyMsg="<p style='color:red;'>Voys Can not be blank on cell B4...</p>";
			$data['msg']=$voyMsg;
			$this->EDIConverterForPangaon($data['msg']);
			return ;
		}else if($callSign==""){
			$callSignMsg="<p style='color:red;'>Call Sign can not be blank on cell B5....</p>";
			$data['msg']=$callSignMsg;
			$this->EDIConverterForPangaon($data['msg']);
			return ;
		}else if($vsl_name==""){
			$vsl_nameMsg="<p style='color:red;'>Vessel Name can not be blank on cell B6...</p>";
			$data['msg']=$vsl_nameMsg;
			$this->EDIConverterForPangaon($data['msg']);
			return ;
		}else if($date==""){
			$dateMsg="<p style='color:red;'>Date can not be blank on cell B7...</p>";
			$data['msg']=$dateMsg;
			$this->EDIConverterForPangaon($data['msg']);
			return ;
		}else if($LOP==""){
			$lopMsg="<p style='color:red;'>Load Port can not be blank on cell B8...</p>";
			$data['msg']=$lopMsg;
			$this->EDIConverterForPangaon($data['msg']);
			return ;
		}else if($nextPort==""){
			$nextPortMsg="<p style='color:red;'>Next Port can not be blank on cell B9...</p>";
			$data['msg']=$nextPortMsg;
			$this->EDIConverterForPangaon($data['msg']);
			return ;
		}else{
		return 2;
		}
		
	}
		
		
		function pangaonEdiConverterForm($message=null){
			$login_id = $this->session->userdata('login_id');
			$session_id = $this->session->userdata('value');
			$LoginStat = $this->session->userdata('LoginStat');
			
			
			if($LoginStat!="yes")
			{
				$this->logout();
			}else{
				
				$data['title']="Pangaon EDI CONVERT FROM EXCEL";	
				
				$data['message']=$message;		
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('pangaonEdiConverterFormView',$data);
				$this->load->view('jsAssets');
			}
	   
   }
   
   public function pangaonEdiConverter(){
		
		
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();			
		}else{
			
			$login_id = $this->session->userdata('login_id');	
			$data['title']="EDI CONVERT FROM EXCEL";
			 $exp_no=$this->input->post('exp_no');
			
			error_reporting(E_ALL ^ E_NOTICE);			
		    $exp_no1=str_replace("/","_",$exp_no);
		    $filenm=$login_id."_".$exp_no1.".xls";
			$filetype=$_POST["filetype"];
			
			if ($_FILES["file"]["error"] > 0)
			{
			echo "Error: " . $_FILES["file"]["error"] . "<br />";
			return;
			}
			else
			move_uploaded_file($_FILES["fileToUpload"]["tmp_name"],$_SERVER['DOCUMENT_ROOT']."/resources/uploadfile/edi/".$_FILES["fileToUpload"]["name"]);
		  
			rename($_SERVER['DOCUMENT_ROOT']."/resources/uploadfile/edi/".$_FILES["fileToUpload"]["name"],$_SERVER['DOCUMENT_ROOT']."/resources/uploadfile/edi/".$filenm);
			
			
			require_once('excel_reader2.php');
			$data = new Spreadsheet_Excel_Reader($_SERVER['DOCUMENT_ROOT']."/resources/uploadfile/edi/".$filenm);
			
			$rtn=$this->Checkxcel2($data,$login_id,$exp_no);
		
			if($rtn==2){
				$rtn=$this->excelWritetoEDIForPangaon($data,$login_id,$exp_no);
			}
			/*else
			{	
			$data['title']="Pangaon EDI CONVERT FROM EXCEL";		
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('pangaonEdiConverterFormView',$data);
			$this->load->view('jsAssets');
			
			}*/
		}
		
	}

	
	function excelWritetoEDIForPangaon($mydata,$login_id,$exp_no)
	{
		
		$agent=$mydata->value(3,2);
		$voy=$mydata->value(4,2);
		$callSign=$mydata->value(5,2);
		$vsl_name=$mydata->value(6,2);
		//$date=$mydata->value(7,2);
		//$date2=substr($date,2);
		$date=trim($mydata->value(7,2));
		$date2=str_replace("/","",$date);
		$LOP=$mydata->value(8,2);
		$nextPort=$mydata->value(9,2);
		$presentTime=date("is");
		$j=0;
		
		$exp_no1=str_replace("/","",$exp_no);
		$rot=str_replace("/","",$exp_no);
		$file=$login_id."_".$exp_no1;
		$myFile=$file.'.edi';
		
		if(file_exists($_SERVER['DOCUMENT_ROOT']."/resources/uploadfile/xml/".$myFile)){
			unlink($_SERVER['DOCUMENT_ROOT']."/resources/uploadfile/xml/".$myFile);
		}
		
		$fh= fopen($_SERVER['DOCUMENT_ROOT']."/resources/uploadfile/xml/".$myFile , 'a');
		$stringData ="UNB+UNOA:2+".$agent."+".$agent."+".$date2.":".$presentTime."+0+++++".$agent."'\n";
		fwrite($fh, $stringData);
		$j++;
		$stringData ="UNH+1+BAPLIE:D:95B:UN:SMDG20'\n";
		fwrite($fh, $stringData);
		$j++;
		$stringData ="BGM++0+9'\n";
		fwrite($fh, $stringData);
		$j++;
		$stringData ="DTM+137:" .$date2.$presentTime.":201'\n";
		fwrite($fh, $stringData);
		$j++;
		$stringData ="TDT+20+".$voy. "+++".$agent.":172:20+++".$callSign.":103:ZZZ:".$vsl_name. "'\n";
		fwrite($fh, $stringData);
		$j++;
		$stringData ="LOC+5+" .$LOP. ":139:6'\n";
		fwrite($fh, $stringData);
		$j++;
		$stringData ="LOC+61+" .$nextPort. ":139:6'\n";
		fwrite($fh, $stringData);
		$j++;
		$stringData ="DTM+178:" .$date2.$presentTime.":201'\n";
		fwrite($fh, $stringData);
		$j++;
		//insert into edi_master table in model
		//$this->load->model('ci_auth', 'bm', TRUE);
		//$ediMasterinsert = $this->bm->myEdiMasterInsert($agent,$voy, $callSign,$vsl_name,$date,$LOP,$nextPort,$login_id,$rot); 
		
		$totalrow=0;
		$excelrow=$mydata->rowcount(0);
		$i=12;

		while($i<=$excelrow)
		{
			if( $mydata->value($i,1)!="" )
			$totalrow=$totalrow+1;
			$i=$i+1;
		}
		
		$row=12;
		
		while($row<($totalrow+12))
		{
			$container_no=$mydata->value($row,1);
			$iso=$mydata->value($row,2);
			$liner=$mydata->value($row,3);
			$status=$mydata->value($row,4);
			$weight=$mydata->value($row,5);
			$booking=$mydata->value($row,6);
			$seal=$mydata->value($row,7);
			$imdg=$mydata->value($row,8);
			$unno=$mydata->value($row,9);
			$temp=$mydata->value($row,10);
			$loadport=$mydata->value($row,11);
			$dischargeport=$mydata->value($row,12);
			$st=$mydata->value($row,13);
			
			$container_no=trim($container_no);
			$iso=trim($iso);
			$liner=trim($liner);
			$status=trim($status);
			$weight=trim($weight);
			$booking=trim($booking);
			$seal=trim($seal);
			$imdg=trim($imdg);
			$unno=trim($unno);
			$temp=trim($temp);
			$loadport=trim($loadport);
			$dischargeport=trim($dischargeport);
			$st=trim($st);
		
			$convertWeight=$weight*1000;
		
			if(substr($status,0,1)=="F"){
				$cnt_status="5";
			}else{
				$cnt_status="4";
			}
			
			$stringData="LOC+147+" .$st. "::5'\n"; 
			fwrite($fh, $stringData);
			$j++;
			$stringData="MEA+WT++KGM:".$convertWeight. "'\n";
			fwrite($fh, $stringData);
			$j++;
			if($temp!=""){
				$stringData="TMP+2+".$temp.":CEL'\n";
				fwrite($fh, $stringData);
				$j++;					
			}
			$stringData="LOC+9+".$loadport. "'\n";
			fwrite($fh, $stringData);
			$j++;
			$stringData="LOC+11+" .$dischargeport. "'\n";
			fwrite($fh, $stringData);
			$j++;
			$stringData="LOC+83+".$dischargeport. "'\n";
			fwrite($fh, $stringData);
			$j++;
			$stringData="RFF+BM:1'\n"; 
			fwrite($fh, $stringData);
			$j++;
			$stringData="EQD+CN+".$container_no. "+".$iso. "+++".$cnt_status. "'\n";
			fwrite($fh, $stringData);
			$j++;				
			$stringData="NAD+CA+" .$liner. ":172:ZZZ'\n";
			fwrite($fh, $stringData);
			$j++;
			if(!($imdg=="" and $unno=="")){
			$stringData="DGS+IMD+".$imdg. "+".$unno. "+2'\n";
			fwrite($fh, $stringData);
			$j++;
			
			//echo $container_no;
			//$this->load->model('ci_auth', 'bm2', TRUE);
			//$ediMasterinsert = $this->bm->myEdiDetailInsert($container_no,$iso, $liner,$status,$weight,$booking,$seal,$imdg,$unno,$temp,$loadport,$dischargeport,$st,$login_id,$vsl_name,$rot); 
			
			}	
			//$ediMasterinsert = $this->bm->myEdiDetailInsert($container_no,$iso, $liner,$status,$weight,$booking,$seal,$imdg,$unno,$temp,$loadport,$dischargeport,$st,$login_id,$vsl_name,$rot); 
			$row=$row+1;
		}
		$stringData="UNT+".$j."+1'\n";
		fwrite($fh, $stringData);
		$stringData="UNZ+1+0'";
		fwrite($fh, $stringData);
		fclose($fh);
		$ip = $this->input->ip_address();
		$converted_EDI='http://'.$_SERVER['SERVER_ADDR']."/resources/uploadfile/xml/".$myFile;
		$data['exp_no']=$exp_no;
		$message = "File uploaded succesfully\n <a href='".$converted_EDI."' download target='_blank'>Click here</a> to download.";
		$this->pangaonEdiConverterForm($message);
		
	}

	function dailyEquipmentBookingOpPositionCCTorNCT(){
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}else{
			
			$data['msg']="";
			if($this->input->post('delete'))
			{
				$eid=$this->input->post('eid');
				$deleteSql="DELETE FROM ctmsmis.mis_equipment_op_booking_pos WHERE ctmsmis.mis_equipment_op_booking_pos.id='$eid'";
				$deleteStat=$this->bm->dataDeleteDb2($deleteSql);
				$data['msg']="<font color='red'><b>Data Deleted.</b></font>";
			}	
			
			/*$rslt_sql="SELECT id, workshop_zone, equipment, equip_num,non_operational,equip_supply, updated_by, update_time FROM ctmsmis.equip_assign_detail";*/
			$rslt_sql="SELECT * FROM ctmsmis.equip_assign_detail";
			$result=$this->bm->dataSelectDb2($rslt_sql);	
			// echo "<pre>";	
			// print_r($result);			
			// echo "</pre>";	
			// return;			
			$data['result']=$result;
			
			$query = "SELECT id, eguip_no, op_name, yard, shift,date,terminal FROM ctmsmis.mis_equipment_op_booking_pos WHERE DATE = DATE(NOW()) AND (terminal IN ('CCT','NCT') OR terminal IS NULL) ORDER BY DATE DESC";
			$bookingEquiList = $this->bm->dataSelectDb2($query);
				
			$data['bookingEquiList']=$bookingEquiList;
			$data['title']="Equipment Booking Operatior Position(CCT or NCT)";
			$data['editFlag']=0;
			$msg="";
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('dailyEquipmentBookingOpPosition_CCTorNCT_Form',$data);
			$this->load->view('jsAssetsList');
		}
	}

	
	function dailyEquipmentBookingOpPosition_CCTorNCT_Action()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{			
			$login_id = $this->session->userdata('login_id');	
			$date=$this->input->post('eqpdate');
			$terminal=$this->input->post('terminal');

			$shift_no=$this->input->post('shift');
			$equip_no=$this->input->post('eguip_no');
			$op_name=$this->input->post('op_name');
			$yard_name=$this->input->post('yard_name');
						
			if($this->input->post('update'))
			{		
				$equipID=$this->input->post('equipID');
				$updateSql="UPDATE ctmsmis.mis_equipment_op_booking_pos set eguip_no ='$equip_no', op_name='$op_name', shift='$shift_no', date='$date',
				created_by='$login_id', yard='$yard_name',terminal='$terminal', created_at=now() where ctmsmis.mis_equipment_op_booking_pos.id='$equipID'";
				// return;
				$updateStat=$this->bm->dataUpdateDb2($updateSql);
				
				if($updateStat==1)
					$data['msg']="<font color='green'><b>Data succesfully updated</b></font>";
				else
					$data['msg']="<font color='red'><b>Updation failed</b></font>";				
			}
					
			else
			{				
				$insertQuery="insert into ctmsmis.mis_equipment_op_booking_pos (eguip_no, op_name, shift, date, yard, created_by, created_at,terminal) 
							values ('$equip_no','$op_name','$shift_no','$date','$yard_name','$login_id',now(),'$terminal')";
							// echo $insertQuery;return;
				$entryStat=$this->bm->dataInsertDb2($insertQuery);
				if($entryStat==1)
				{
					$data['msg']="<font color='green'><b>Data Successfully Inserted.</b></font>";
				}
				else
				{
					$data['msg']="<font color='red'><b>Data Not Inserted.</b></font>";
				}
			}
			$query = "SELECT id, eguip_no, op_name, yard, shift,date,terminal FROM ctmsmis.mis_equipment_op_booking_pos WHERE DATE = DATE(NOW()) AND (terminal IN ('CCT','NCT') OR terminal IS NULL) ORDER BY DATE DESC";
			// $query = "SELECT id, eguip_no, op_name, yard, shift,date FROM ctmsmis.mis_equipment_op_booking_pos ORDER BY DATE DESC";
			$bookingEquiList = $this->bm->dataSelectDb2($query);
				
			$data['bookingEquiList']=$bookingEquiList;
			$data['title']="Equipment Booking Operatior Position(CCT or NCT)";
			$data['editFlag']=0;
			$msg="";
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('dailyEquipmentBookingOpPosition_CCTorNCT_Form',$data);
			$this->load->view('jsAssetsList');
		}	
	}

	function dailyEquipmentBookingOpPosition_CCTorNCTEdit()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{           
			$eqiID= $this->input->post('eqiID');
				
			$select_sql="SELECT id, eguip_no, op_name, yard, shift, date,terminal FROM ctmsmis.mis_equipment_op_booking_pos 
			where mis_equipment_op_booking_pos.id='$eqiID' ";
			
			$select_result=$this->bm->dataSelectDb2($select_sql);			
			$data['select_result']=$select_result;
			
			$query = "SELECT id, eguip_no, op_name, yard, shift,date,terminal FROM ctmsmis.mis_equipment_op_booking_pos WHERE DATE = DATE(NOW()) AND (terminal IN ('CCT','NCT') OR terminal IS NULL) ORDER BY DATE DESC";
			// $query = "SELECT id, eguip_no, op_name, yard, shift,date FROM ctmsmis.mis_equipment_op_booking_pos ORDER BY DATE DESC";
			$bookingEquiList=$this->bm->dataSelectDb2($query);			
			$data['bookingEquiList']=$bookingEquiList;

			$data['editFlag']=1;
			$msg="";
			$data['title']="Equipment Booking Operatior Position(CCT or NCT)";
			$data['msg']=$msg;

			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('dailyEquipmentBookingOpPosition_CCTorNCT_Form',$data);
			$this->load->view('jsAssetsList');
		}
	}


	function dailyEquipmentBookingOpPosition_CCTorNCT_Delete()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{	
			
			$data['msg']="";
			if($this->input->post('delete'))
			{
				$eid=$this->input->post('eid');
				$deleteSql="DELETE FROM ctmsmis.mis_equipment_op_booking_pos WHERE ctmsmis.mis_equipment_op_booking_pos.id='$eid'";
				$deleteStat=$this->bm->dataDeleteDb2($deleteSql);
				$data['msg']="<font color='red'><b>Data Deleted.</b></font>";
			}	
			
			$rslt_sql="SELECT id, `workshop_zone`, `equipment`, `equip_num`,non_operational,equip_supply, `updated_by`, `update_time` FROM ctmsmis.equip_assign_detail";
			$result=$this->bm->dataSelectDb2($rslt_sql);			
			$data['result']=$result;
				
			//$query = "SELECT id, eguip_no, op_name, yard, shift,date FROM ctmsmis.mis_equipment_op_booking_pos WHERE DATE = DATE(NOW()) ORDER BY DATE DESC";
			// $query = "SELECT id, eguip_no, op_name, yard, shift,date FROM ctmsmis.mis_equipment_op_booking_pos ORDER BY DATE DESC";
			$query = "SELECT id, eguip_no, op_name, yard, shift,date FROM ctmsmis.mis_equipment_op_booking_pos WHERE DATE = DATE(NOW()) AND (terminal IN ('CCT','NCT') OR terminal IS NULL) ORDER BY DATE DESC";
			$bookingEquiList = $this->bm->dataSelectDb2($query);
				
			$data['bookingEquiList']=$bookingEquiList;
			$data['title']="Equipment Booking Operatior Position(CCT or NCT)";
			$data['editFlag']=0;
			$msg="";
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('dailyEquipmentBookingOpPosition_CCTorNCT_Form',$data);
			$this->load->view('jsAssetsList');
			
		}	
	}

	function dailyEquipmentBookingOpPositionSearchCCTandNCT()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{	
			$data['msg']="";
			$opDate = $this->input->post('opDate');
			$opShift = $this->input->post('opShift');
			if($opShift=='All')		
				$shift=" ";			
			else
				$shift=" and shift = '$opShift'";

			$query = "SELECT id, eguip_no, op_name, yard, shift,date,terminal FROM ctmsmis.mis_equipment_op_booking_pos WHERE DATE = '$opDate'  
			$shift  AND (terminal IN ('CCT','NCT') OR terminal IS NULL) ORDER BY DATE DESC";
			$bookingEquiList = $this->bm->dataSelectDb2($query);
				// return;
			$data['bookingEquiList']=$bookingEquiList;
			$data['title']="Equipment Booking Operatior Position(CCT or NCT)";
			
			$data['editFlag']=0;
			$msg="";
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('dailyEquipmentBookingOpPosition_CCTorNCT_Form',$data);
			$this->load->view('jsAssetsList');
		}	
	}




	function roDelete()
	{
		$login_id = $this->session->userdata('login_id');
		$u_name = $this->session->userdata('User_Name');
		$LoginStat = $this->session->userdata('LoginStat');
		$org_Type_id = $this->session->userdata('org_Type_id');
		$org_id = $this->session->userdata('org_id');

		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$data['msg']="";
			if($this->input->post('delete'))
			{
				$eid=$this->input->post('eid');
				$deleteSql="DELETE FROM release_order_record WHERE release_order_record.id='$eid'";
				$deleteStat=$this->bm->dataDeleteDb1($deleteSql);
				$data['msg']="<font color='red'><b>Data Deleted.</b></font>";
			}

			redirect('Report/roList/', 'refresh');
		}
	}

	function roEdit()
	{

		$login_id = $this->session->userdata('login_id');
		$u_name = $this->session->userdata('User_Name');
		$Address_1 = $this->session->userdata('Address_1');
		$Address_2 = $this->session->userdata('Address_2');
		$Cell_No_1 = $this->session->userdata('Cell_No_1');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$org_Type_id = $this->session->userdata('org_Type_id');
		$org_id = $this->session->userdata('org_id');

		
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$sqlBl = "SELECT agent_id,imp_rot,bl_no,agent_name FROM release_order_record
			INNER JOIN vcms_vehicle_agent ON vcms_vehicle_agent.id=release_order_record.agent_id
			INNER JOIN vcms_vehicle_agency ON vcms_vehicle_agency.id=vcms_vehicle_agent.agency_id
			WHERE release_order_record.entry_by='$login_id'";
			$rslt_sqlRelease = $this->bm->dataSelectDb1($sqlBl);

			
			$data['login_id']=$login_id;
			$data['Address_1']=$Address_1;
			$data['u_name']=$u_name;
			$data['rslt_sqlRelease']=$rslt_sqlRelease;
			$data['Address_2']=$Address_2;
			$data['Cell_No_1']=$Cell_No_1;
			$data['org_Type_id']=$org_Type_id;
			$data['flag'] = 1;
			$data['msg']="";
			$data['title']="RELEASE ORDER LIST";								
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('roForm',$data);
			$this->load->view('jsAssetsList');
		}
	}

	function roList()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$org_Type_id = $this->session->userdata('org_Type_id');

	
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			if($org_Type_id == 62)		// devonestop
			{
				$sqlBl = "SELECT release_order_record.id,agent_id,imp_rot,bl_no,agent_name,entry_by,entry_at,unit_no,ro_type,appraise_st,appraise_at,IFNULL(assigned_unit.updated_at,assigned_unit.created_at) AS unit_assign_at,
				IFNULL((SELECT cont_status
				FROM  igm_supplimentary_detail
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				WHERE igm_supplimentary_detail.Import_Rotation_No = release_order_record.imp_rot AND igm_supplimentary_detail.BL_No = release_order_record.bl_no LIMIT 1 ),
				(SELECT cont_status
				FROM  igm_details
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE igm_details.Import_Rotation_No = release_order_record.imp_rot AND igm_details.BL_No = release_order_record.bl_no LIMIT 1)) AS contStatus
				FROM release_order_record
				INNER JOIN vcms_vehicle_agent ON vcms_vehicle_agent.id=release_order_record.agent_id
				INNER JOIN vcms_vehicle_agency ON vcms_vehicle_agency.id=vcms_vehicle_agent.agency_id
				LEFT JOIN assigned_unit ON assigned_unit.rotation = release_order_record.imp_rot
				Order BY release_order_record.id DESC LIMIT 100";
			}
			else						// c&f
			{
				$sqlBl = "SELECT release_order_record.id,agent_id,imp_rot,bl_no,agent_name,entry_by,entry_at,unit_no,ro_type,appraise_st,appraise_at,IFNULL(assigned_unit.updated_at,assigned_unit.created_at) AS unit_assign_at,
				IFNULL((SELECT cont_status
				FROM  igm_supplimentary_detail
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				WHERE igm_supplimentary_detail.Import_Rotation_No = release_order_record.imp_rot AND igm_supplimentary_detail.BL_No = release_order_record.bl_no LIMIT 1 ),
				(SELECT cont_status
				FROM  igm_details
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE igm_details.Import_Rotation_No = release_order_record.imp_rot AND igm_details.BL_No = release_order_record.bl_no LIMIT 1)) AS contStatus
				FROM release_order_record
				INNER JOIN vcms_vehicle_agent ON vcms_vehicle_agent.id=release_order_record.agent_id
				INNER JOIN vcms_vehicle_agency ON vcms_vehicle_agency.id=vcms_vehicle_agent.agency_id
				LEFT JOIN assigned_unit ON assigned_unit.rotation = release_order_record.imp_rot
				WHERE release_order_record.entry_by='$login_id'
				Order BY release_order_record.id DESC LIMIT 100";
			}
			
			$rslt_sqlRelease = $this->bm->dataSelectDb1($sqlBl);
			
			$data['rslt_sqlRelease']=$rslt_sqlRelease;
			$data['org_Type_id']=$org_Type_id;
			$data['msg']="";
			$data['title']="RELEASE ORDER LIST";								
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('roList',$data);
			$this->load->view('jsAssetsList');
		}
	}

	function roListNts()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$org_Type_id = $this->session->userdata('org_Type_id');

	
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			if($org_Type_id == 62)		// devonestop
			{
				$sqlBl = "SELECT release_order_record.id,agent_id,imp_rot,bl_no,agent_name,entry_by,entry_at,unit_no,ro_type,appraise_st,appraise_at,IFNULL(assigned_unit.updated_at,assigned_unit.created_at) AS unit_assign_at,
				IFNULL((SELECT cont_status
				FROM  igm_supplimentary_detail
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				WHERE igm_supplimentary_detail.Import_Rotation_No = release_order_record.imp_rot AND igm_supplimentary_detail.BL_No = release_order_record.bl_no LIMIT 1 ),
				(SELECT cont_status
				FROM  igm_details
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE igm_details.Import_Rotation_No = release_order_record.imp_rot AND igm_details.BL_No = release_order_record.bl_no LIMIT 1)) AS contStatus
				FROM release_order_record
				INNER JOIN vcms_vehicle_agent ON vcms_vehicle_agent.id=release_order_record.agent_id
				INNER JOIN vcms_vehicle_agency ON vcms_vehicle_agency.id=vcms_vehicle_agent.agency_id
				LEFT JOIN assigned_unit ON assigned_unit.rotation = release_order_record.imp_rot
				Order BY release_order_record.id DESC LIMIT 100";
			}
			else						// c&f
			{
				$sqlBl = "SELECT release_order_record.id,agent_id,imp_rot,bl_no,agent_name,entry_by,entry_at,unit_no,ro_type,appraise_st,appraise_at,IFNULL(assigned_unit.updated_at,assigned_unit.created_at) AS unit_assign_at,
				IFNULL((SELECT cont_status
				FROM  igm_supplimentary_detail
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				WHERE igm_supplimentary_detail.Import_Rotation_No = release_order_record.imp_rot AND igm_supplimentary_detail.BL_No = release_order_record.bl_no LIMIT 1 ),
				(SELECT cont_status
				FROM  igm_details
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE igm_details.Import_Rotation_No = release_order_record.imp_rot AND igm_details.BL_No = release_order_record.bl_no LIMIT 1)) AS contStatus
				FROM release_order_record
				INNER JOIN vcms_vehicle_agent ON vcms_vehicle_agent.id=release_order_record.agent_id
				INNER JOIN vcms_vehicle_agency ON vcms_vehicle_agency.id=vcms_vehicle_agent.agency_id
				LEFT JOIN assigned_unit ON assigned_unit.rotation = release_order_record.imp_rot
				WHERE release_order_record.entry_by='$login_id'
				Order BY release_order_record.id DESC LIMIT 100";
			}
			
			$rslt_sqlRelease = $this->bm->dataSelectDb1($sqlBl);
			
			$data['rslt_sqlRelease']=$rslt_sqlRelease;
			$data['org_Type_id']=$org_Type_id;
			$data['msg']="";
			$data['title']="RELEASE ORDER LIST";								
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('roListNts',$data);
			$this->load->view('jsAssetsList');
		}
	}

	function lclAssignmentCertifySectionTos()
	{
	
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$org_Type_id = $this->session->userdata('org_Type_id');
		
		if($LoginStat!="yes")
		{
			$this->logout();
			
		}
		else
		{
			$data['msg']="";
			$data['unstuff_flag']="";
			$data['verify_number']="-1";
			$data['verify_num']="-1";
			$data['flag'] = 0;
			$data['org_Type_id']=$org_Type_id;
			$data['title']="ASSINGMENT CERTIFY SECTION...";
			
			$this->load->view('cssAssets');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('lclAssignmentCertifySectionHTMLTos',$data);
			$this->load->view('jsAssets');
		}
	
	}

	function lclAssignmentCertifyListTos($imp_rot=null,$bl_no=null)
	{		
			
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$org_Type_id = $this->session->userdata('org_Type_id');
		$org_id = $this->session->userdata('org_id');
		$data['org_Type_id']=$org_Type_id;
		$data['flag'] = 1;
		
		if($LoginStat!="yes")
		{
			$this->logout();
			
		}
		else
		{
			
			$msg="";
			$title="";
			
			$pdfView=$this->input->post('pdfView');
			
			if($imp_rot=="" and $bl_no=="")
			{
				$ddl_imp_rot_no=trim($this->input->post('ddl_imp_rot_no'));
				$ddl_bl_no=trim($this->input->post('ddl_bl_no'));			
				$bill_en_no=trim($this->input->post('bill_en_no'));			
			}
			else
			{
				$ddl_imp_rot_no=$imp_rot;
				$ddl_bl_no=$bl_no;		
			}
			/* echo $ddl_imp_rot_no;
			echo "<br>";
			echo $ddl_bl_no; */
			//return;
			// chk exists ---
			$chkExist = 0;
			
			$igm_id = "";
			$sqlIgmId="SELECT igm_details.id AS igmID FROM igm_details 
				WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no'
				UNION
				SELECT igm_supplimentary_detail.id AS igmID FROM igm_supplimentary_detail 
				WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no'
				AND igm_supplimentary_detail.BL_No='$ddl_bl_no'";
			$rslt_sqlIgmId = $this->bm->dataSelectDb1($sqlIgmId);
			for($x=0;$x<count($rslt_sqlIgmId);$x++)
				{
					$igm_id=$rslt_sqlIgmId[$x]['igmID'];	
				}
			$data['igm_id'] = $igm_id;
			
			
			$sql_chkExist="SELECT COUNT(*) AS rtnValue
			FROM igm_details
			WHERE Import_Rotation_No='$ddl_imp_rot_no' AND BL_No='$ddl_bl_no'";
			// return;
			$rslt_chkExist = $this->bm->dataSelectDb1($sql_chkExist);
			$chkExist = $rslt_chkExist[0]['rtnValue'];
			
			if($chkExist==0)
			{
				$sql_chkExist="SELECT COUNT(*) AS rtnValue FROM(SELECT cont_status
				FROM  igm_supplimentary_detail
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' AND igm_supplimentary_detail.BL_No='$ddl_bl_no'

				UNION

				SELECT cont_status
				FROM  igm_details
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no') AS tbl";
				$rslt_chkExist = $this->bm->dataSelectDb1($sql_chkExist);
				$chkExist = $rslt_chkExist[0]['rtnValue'];
			}
			// echo $sql_chkExist; return;
			if($chkExist>0)
			{
				$contStatus = "";

				$sql_contStatus="SELECT cont_status,Submitee_Org_Id
				FROM  igm_supplimentary_detail
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' AND igm_supplimentary_detail.BL_No='$ddl_bl_no'

				UNION

				SELECT cont_status,Submitee_Org_Id
				FROM  igm_details
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no'";
									
				$rsltContStatus=$this->bm->dataSelectDb1($sql_contStatus);					
				
				$contStatus = $rsltContStatus[0]['cont_status'];
				$Submitee_Org_Id = $rsltContStatus[0]['Submitee_Org_Id'];

				/* if($org_Type_id == 4 && $org_id != $Submitee_Org_Id){
					$data['canFFview'] = 'no';wr_upto_date
				} */
				
				$sqlContainer = "";
				
				$manif_num = str_replace("/"," ",$ddl_imp_rot_no);
	
				
				$sqlContainer = "SELECT igm_supplimentary_detail.id,IFNULL(SUM(rcv_pack)+SUM(loc_first),0) AS rcv_pack,
				igm_sup_detail_container.cont_number,igm_supplimentary_detail.Import_Rotation_No,Vessel_Name,
				igm_supplimentary_detail.Pack_Marks_Number,shed_loc,shed_yard, igm_supplimentary_detail.Description_of_Goods,
				igm_supplimentary_detail.ConsigneeDesc, igm_supplimentary_detail.NotifyDesc,cont_size,
				cont_weight, igm_supplimentary_detail.weight,  CEILING (igm_supplimentary_detail.weight/1000) AS updat_tonage, cont_seal_number,igm_sup_detail_container.cont_status,cont_height,cont_iso_type,
				IFNULL(shed_tally_info.verify_number,0) AS verify_number, 
				IF(shed_mlo_do_info.valid_upto_dt IS NULL OR shed_mlo_do_info.valid_upto_dt='0000-00-00',shed_tally_info.wr_upto_date,
				shed_mlo_do_info.valid_upto_dt)
				AS wr_upto_date,
				shed_tally_info.wr_date AS ustuffing_dt, shed_tally_info.verify_by,shed_tally_info.verify_time, IFNULL(shed_tally_info.id,0) AS verify_id,off_dock_id, 
				IF(shed_mlo_do_info.be_no IS NULL OR shed_mlo_do_info.be_no=' ',
				IF(certify_info_fcl.be_no IS NULL OR certify_info_fcl.be_no=' ',verify_other_data.be_no,certify_info_fcl.be_no),
				shed_mlo_do_info.be_no) AS be_no, 
				IF(shed_mlo_do_info.be_date IS NULL OR shed_mlo_do_info.be_date='0000-00-00' OR shed_mlo_do_info.be_date=' ',
				IF(certify_info_fcl.be_date IS NULL OR certify_info_fcl.be_date='0000-00-00' OR certify_info_fcl.be_date=' ',
				verify_other_data.be_date,certify_info_fcl.be_date),
				shed_mlo_do_info.be_date) AS be_date, 
				(SELECT Organization_Name FROM organization_profiles WHERE organization_profiles.id=igm_sup_detail_container.off_dock_id) AS offdock_name, organization_profiles.Organization_Name AS cnf_name, organization_profiles.License_No AS cnf_lic_no, shed_mlo_do_info.id AS agent_do, DATE(shed_mlo_do_info.upload_time) AS do_date,
				IFNULL(IFNULL(verify_other_data.update_ton,certify_info_fcl.update_ton), CEILING (igm_supplimentary_detail.weight/1000)) AS update_ton 
				FROM igm_supplimentary_detail 
				INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
				LEFT JOIN igm_masters ON igm_masters.id=igm_supplimentary_detail.igm_master_id 
				LEFT JOIN edo_application_by_cf ON igm_supplimentary_detail.Import_Rotation_No=edo_application_by_cf.rotation AND igm_supplimentary_detail.BL_No=edo_application_by_cf.bl 
				LEFT JOIN users ON users.login_id=edo_application_by_cf.sumitted_by 
				LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id 
				LEFT JOIN igm_details ON igm_supplimentary_detail.igm_detail_id=igm_details.id 
				LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.bl_no=edo_application_by_cf.bl AND shed_mlo_do_info.imp_rot=edo_application_by_cf.rotation
				LEFT JOIN shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id 
				LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
				LEFT JOIN certify_info_fcl ON igm_details.id=certify_info_fcl.igm_detail_id OR igm_supplimentary_detail.id=certify_info_fcl.igm_sup_detail_id 
				WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' AND igm_supplimentary_detail.BL_No='$ddl_bl_no' GROUP BY igm_sup_detail_container.id

				UNION ALL

				SELECT igm_details.id,'' AS rcv_pack,igm_detail_container.cont_number,igm_details.Import_Rotation_No,Vessel_Name,Pack_Marks_Number,'' AS shed_loc,'' AS shed_yard,Description_of_Goods, ConsigneeDesc,NotifyDesc,cont_size,cont_weight, igm_details.weight,  CEILING (igm_details.weight/1000) AS updat_tonage,  cont_seal_number, igm_detail_container.cont_status, cont_height,cont_iso_type,
				verify_number, 
				IF(shed_mlo_do_info.valid_upto_dt IS NULL OR shed_mlo_do_info.valid_upto_dt='0000-00-00',certify_info_fcl.wr_upto_date,
				shed_mlo_do_info.valid_upto_dt)
				AS wr_upto_date,
				certify_info_fcl.wr_upto_date AS ustuffing_dt,
				verify_by,verify_time,IFNULL(certify_info_fcl.id,0) AS verify_id,
				off_dock_id,
				IFNULL(shed_mlo_do_info.be_no,(SELECT reg_no
				FROM sad_info
				INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
				WHERE manif_num LIKE '%$manif_num%' AND sum_declare = '$ddl_bl_no' LIMIT 1)) AS be_no,
				IFNULL(shed_mlo_do_info.be_date,(SELECT reg_date
				FROM sad_info
				INNER JOIN sad_item ON sad_item.sad_id=sad_info.id
				WHERE manif_num LIKE '%$manif_num%' AND sum_declare = '$ddl_bl_no' LIMIT 1)) AS be_date,

				(SELECT Organization_Name FROM organization_profiles WHERE organization_profiles.id=igm_detail_container.off_dock_id) AS offdock_name,
				organization_profiles.Organization_Name AS cnf_name, organization_profiles.License_No AS cnf_lic_no,

				shed_mlo_do_info.id AS do_no, DATE(shed_mlo_do_info.upload_time) AS do_date,
				IFNULL(certify_info_fcl.update_ton, CEILING (igm_details.weight/1000)) AS update_ton

				FROM  igm_details
				INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
				LEFT JOIN igm_masters ON igm_masters.id=igm_details.IGM_id
				LEFT JOIN edo_application_by_cf ON igm_details.Import_Rotation_No=edo_application_by_cf.rotation AND igm_details.BL_No=edo_application_by_cf.bl
				LEFT JOIN users ON users.login_id=edo_application_by_cf.sumitted_by
				LEFT JOIN organization_profiles ON organization_profiles.id=users.org_id
				LEFT JOIN shed_mlo_do_info ON shed_mlo_do_info.igm_detail_id=igm_details.id
				LEFT JOIN certify_info_fcl ON certify_info_fcl.igm_detail_id=igm_details.id
				LEFT JOIN verify_info_fcl ON verify_info_fcl.igm_detail_id=igm_details.id
				WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no'
				GROUP BY igm_detail_container.id";
				// return;
				
				$rtnContainerList = $this->bm->dataSelectDb1($sqlContainer);

				//--//2020-03-10 
				$containerNo="";
				
				for($i=0;$i<count($rtnContainerList);$i++)
				{
					$containerNo_tmp=$rtnContainerList[$i]['cont_number'];				
					$containerNo=$containerNo."'".$containerNo_tmp."',";
				}
				
				$containerNo=rtrim($containerNo,",");
				//--//2020-03-10 
				
				
				$verify_id=$rtnContainerList[0]['verify_id'];
				$verify_num=$rtnContainerList[0]['verify_number'];
				
				$cnf_lic_no=$rtnContainerList[0]['cnf_lic_no'];
				/* $lic_p1 = substr($rtnContainerList[0]['cnf_lic_no'],5);			// 4356
				$lic_p2 = substr($rtnContainerList[0]['cnf_lic_no'],3,2);
				$cnf_lic_no = $lic_p1."/".$lic_p2; */

				$cnf_name = "";

				if($cnf_lic_no!=null)
				{
					$cnf_licQuery="SELECT name as rtnValue from ref_bizunit_scoped where id='$cnf_lic_no'";
					$rtnCnfName = $this->bm->dataSelect($cnf_licQuery);
					$cnf_name=$rtnCnfName;
				}		
				// $strID = "select count(*) as rtnValue from sparcsn4.inv_unit
				// inner join sparcsn4.srv_event on sparcsn4.srv_event.applied_to_gkey=sparcsn4.inv_unit.gkey
				// where id='$containerNo' and  category='IMPRT' and event_type_gkey=30";
				
				//2020-03-10 
				// $strID = "SELECT COUNT(*) AS rtnValue FROM sparcsn4.inv_unit
				// INNER JOIN sparcsn4.srv_event ON sparcsn4.srv_event.applied_to_gkey=sparcsn4.inv_unit.gkey
				// WHERE id IN($containerNo) AND category='IMPRT' AND event_type_gkey=30";
				// $rtnValue = $this->bm->dataReturn($strID);

				$strID="";
				$rtnValue="";
				$chkcertified = "";

				if($contStatus=="FCL")
				{
					
					$strID = "SELECT COUNT(*) AS rtnValue 
					FROM inv_unit
					INNER JOIN srv_event ON srv_event.applied_to_gkey=inv_unit.gkey 
					WHERE id IN($containerNo) AND category='IMPRT' AND event_type_gkey=30";
					
					//$rtnValue = $this->bm->dataReturn($strID);
					$rtnValue = 1;

					//Check if already certified    -- 2021-03-09
					$chkcertify = "SELECT COUNT(certify_info_fcl.id) AS rtnValue
					FROM certify_info_fcl 
					INNER JOIN igm_details ON certify_info_fcl.igm_detail_id=igm_details.id
					WHERE igm_details.Import_Rotation_No='$ddl_imp_rot_no' AND igm_details.BL_No='$ddl_bl_no'";
					$chkcertified = $this->bm->dataReturnDb1($chkcertify);

					if($chkcertified == 0){
							$chkcertify = "SELECT COUNT(certify_info_fcl.id) AS rtnValue
						FROM certify_info_fcl 
						INNER JOIN igm_supplimentary_detail ON certify_info_fcl.igm_sup_detail_id=igm_supplimentary_detail.id
						WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' AND igm_supplimentary_detail.BL_No='$ddl_bl_no'";
						$chkcertified = $this->bm->dataReturnDb1($chkcertify);
					}
					
				}
				else
				{
					// $strID = "SELECT COUNT(*) AS rtnValue
					// FROM shed_tally_info WHERE import_rotation='$ddl_imp_rot_no' AND cont_number IN($containerNo)";
						$strID = "SELECT COUNT(*) AS rtnValue
					FROM shed_tally_info WHERE import_rotation='$ddl_imp_rot_no' AND cont_number IN($containerNo) 
					AND (igm_sup_detail_id='$igm_id' OR igm_detail_id='$igm_id')";
					$rtnValue = $this->bm->dataReturnDb1($strID);

					//Check if already certified    -- 2021-03-09
			
					$chkcertify = "SELECT COUNT(verify_other_data.id) AS rtnValue
					FROM verify_other_data 
					INNER JOIN shed_tally_info ON verify_other_data.shed_tally_id=shed_tally_info.id
					INNER JOIN igm_supplimentary_detail ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
					WHERE igm_supplimentary_detail.Import_Rotation_No='$ddl_imp_rot_no' AND igm_supplimentary_detail.BL_No='$ddl_bl_no'";
					$chkcertified = $this->bm->dataReturnDb1($chkcertify);
				}				
			
				$data['certify'] = $chkcertified;
				
				if($rtnValue==0)
				{
						$msg="<font color='red'><b>CARGO IS NOT UNSTUFFED.</b></font>";		// uncomment later
					//$msg="rtn";		
				}
				else
				{
					
					if($contStatus=="FCL")
					{
						if($verify_id==0)
						{
							$msg="<font color='red'><b>NOT CERTIFIED YET</b></font>";
						}
					}
					else
					{
						$verifyid = "";
						$sqlVerifyFOrLCL="SELECT shed_tally_info.igm_sup_detail_id AS igmID,IFNULL(verify_other_data.id,0) AS vid 
						FROM igm_supplimentary_detail 
						INNER JOIN shed_tally_info ON shed_tally_info.igm_sup_detail_id=igm_supplimentary_detail.id
						LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
						WHERE Import_Rotation_No='$ddl_imp_rot_no' AND BL_No='$ddl_bl_no'
						UNION
						SELECT shed_tally_info.igm_detail_id AS igmID,IFNULL(verify_other_data.id,0) AS vid FROM igm_details 
						INNER JOIN shed_tally_info ON shed_tally_info.igm_detail_id=igm_details.id
						LEFT JOIN verify_other_data ON shed_tally_info.id=verify_other_data.shed_tally_id
						WHERE Import_Rotation_No='$ddl_imp_rot_no' AND BL_No='$ddl_bl_no' ORDER BY vid ";
						$resVerifyId = $this->bm->dataSelectDb1($sqlVerifyFOrLCL);
						for($y=0;$y<count($resVerifyId);$y++)
							{
								$verifyid=$resVerifyId[$y]['vid'];		
							}
						if($verifyid==0)
						{
							$msg="<font color='red'><b>NOT CERTIFIED YET</b></font>";
						}
						else
						{
							$msg="<font color='blue'><b>ALREADY CERTIFIED.</b></font>";
						}
						
					}
				}

				if($pdfView=="pdfView")
				{			
					$position_data=$this->input->post('position_data');
					$yard_data=$this->input->post('yard_data');
					
					// $this->load->library('m_pdf');
					// $mpdf->use_kwt = true;
					
					// $this->data['rtnContainerList']=$rtnContainerList;
					// $this->data['cnf_lic_no'] = $cnf_lic_no;
					// $this->data['unstuff_flag']=$rtnValue;
					// $this->data['verify_id']=$verify_id;			// certify_id in case of FCL, shed_tally_id in case of LCL
					// $this->data['verify_num']=$verify_num;
					// $this->data['cnf_name']=$cnf_name;
					// $this->data['ddl_imp_rot_no']=$ddl_imp_rot_no;
					// $this->data['ddl_bl_no']=$ddl_bl_no;
					// $this->data['verify_number']="";					
					// $this->data['contStatus']=$contStatus;
					// $this->data['position_data']=$position_data;
					// $this->data['yard_data']=$yard_data;

					$data['rtnContainerList']=$rtnContainerList;
					$data['cnf_lic_no'] = $cnf_lic_no;
					$data['unstuff_flag']=$rtnValue;
					$data['verify_id']=$verify_id;			// certify_id in case of FCL, shed_tally_id in case of LCL
					$data['verify_num']=$verify_num;
					$data['cnf_name']=$cnf_name;
					$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
					$data['ddl_bl_no']=$ddl_bl_no;
					$data['verify_number']="";					
					$data['contStatus']=$contStatus;
					$data['position_data']=$position_data;
					$data['yard_data']=$yard_data;
					
					// $html=$this->load->view('certificationListPdfOutput',$this->data, true);

					$this->load->view('certificationListPdfOutput',$data);
					
					//$pdfFilePath ="certificationPdfOutput-".time()."-download.pdf";
					
					//$pdf = $this->m_pdf->load();
					////$pdf->SetWatermarkText('CPA CTMS');
					//$pdf->showWatermarkText = true;	
					
					// $pdf->useSubstitutions = true;
					
					//$pdf->WriteHTML($html,2);
					
					//$pdf->Output($pdfFilePath, "I"); // For Show Pdf
					
				}
				else
				{
					$ustuffing_dt="";				
					$wr_upto_date="";				
					for($a=0;$a<count($rtnContainerList);$a++)
					{
						$ustuffing_dt=$rtnContainerList[$a]['ustuffing_dt'];
						$wr_upto_date=$rtnContainerList[$a]['wr_upto_date'];
					}
					
					$data['rtnContainerList']=$rtnContainerList;
					$data['cnf_lic_no'] = $cnf_lic_no;
					$data['unstuff_flag']=$rtnValue;
					$data['verify_id']=$verify_id;			// certify_id in case of FCL, shed_tally_id in case of LCL
					$data['verify_num']=$verify_num;
					$data['cnf_name']=$cnf_name;
					$data['ddl_imp_rot_no']=$ddl_imp_rot_no;
					$data['ddl_bl_no']=$ddl_bl_no;
					$data['ustuffing_dt']=$ustuffing_dt;
					$data['wr_upto_date']=$wr_upto_date;
					$data['verify_number']="";
					
					$data['contStatus']=$contStatus;
					
					$data['msg']=$msg;
					$data['title']="ASSINGMENT CERTIFY SECTION...";					
					
					$this->load->view('cssAssets');
					$this->load->view('headerTop');
					$this->load->view('sidebar');
					$this->load->view('lclAssignmentCertifySectionHTMLTos',$data);
					$this->load->view('jsAssets');
				}
			}
			else		// if not exist
			{					
				$data['unstuff_flag']=0;
				if($bill_en_no!="")
					$data['msg']="<font color='red'><b>THE INFORMATION OF B/E IS NOT FOUND.</b></font>";
				else
					$data['msg']="<font color='red'><b>ROTATION AND BL ARE NOT MATCHED</b></font>";
					
				$data['title']="ASSINGMENT CERTIFY SECTION...";	
				$data['flag'] = 0;				
				
				$this->load->view('cssAssets');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('lclAssignmentCertifySectionHTMLTos',$data);
				$this->load->view('jsAssets');
			}				
		}
	}
	
	function rotationListForExportLoadingSNX()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$Control_Panel = $this->session->userdata('Control_Panel');
		$org_id = $this->session->userdata('org_id');
		
		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$msg = "";
						
			$login_id = $this->session->userdata('login_id');
			$ipAddress = $_SERVER['REMOTE_ADDR'];
			
			$todaysDate = date("Y-m-d");
						
			$strRotList = "SELECT vvd_gkey,rotation,COUNT(gkey) AS total_cont FROM ctmsmis.mis_exp_unit
						WHERE rotation IS NOT NULL AND snx_type=0 AND 
						last_update BETWEEN CONCAT('$todaysDate',' 00:00:00') AND CONCAT('$todaysDate',' 23:59:59')
						GROUP BY vvd_gkey";
			$rotList=$this->bm->dataSelectDb2($strRotList);
			
			for($i=0;$i<count($rotList);$i++)
			{
				$rot = $rotList[$i]['rotation'];
				
				$queryVslName = "select vsl_vessels.name as rtnValue from vsl_vessel_visit_details
					inner join vsl_vessels on vsl_vessel_visit_details.vessel_gkey = vsl_vessels.gkey
					where vsl_vessel_visit_details.ib_vyg='$rot'
					ORDER BY vsl_vessel_visit_details.vvd_gkey DESC FETCH FIRST 1 ROWS ONLY";
				$vslName = $this->bm->dataReturn($queryVslName);
				$rotList[$i]['vessel_name'] = $vslName;
			}
			
			$data['title']="Rotation List for Export Loading SNX";
			$data['msg'] = $msg;
			$data['rotList'] = $rotList;			
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('rotationListForExportLoadingSNX',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	function updateSnxTypeByRotaion()
	{
		$rot=$this->input->post('update_rot');
		
		$strUpdateDelFlg = "UPDATE ctmsmis.mis_exp_unit SET snx_type='3' where rotation='$rot'";
		$this->bm->dataUpdateDb2($strUpdateDelFlg);
		
		$msg = "<font color='blue'><b>Updated Succesfully.</b></font>";
		
		//Sending back to list
		$login_id = $this->session->userdata('login_id');
		$ipAddress = $_SERVER['REMOTE_ADDR'];
		
		$todaysDate = date("Y-m-d");
					
		$strRotList = "SELECT vvd_gkey,rotation,COUNT(gkey) AS total_cont FROM ctmsmis.mis_exp_unit
					WHERE rotation IS NOT NULL AND snx_type=0 AND 
					last_update BETWEEN CONCAT('$todaysDate',' 00:00:00') AND CONCAT('$todaysDate',' 23:59:59')
					GROUP BY vvd_gkey";
		$rotList=$this->bm->dataSelectDb2($strRotList);
		
		for($i=0;$i<count($rotList);$i++)
		{
			$rot = $rotList[$i]['rotation'];
			
			$queryVslName = "select vsl_vessels.name as rtnValue from vsl_vessel_visit_details
				inner join vsl_vessels on vsl_vessel_visit_details.vessel_gkey = vsl_vessels.gkey
				where vsl_vessel_visit_details.ib_vyg='$rot'
				ORDER BY vsl_vessel_visit_details.vvd_gkey DESC FETCH FIRST 1 ROWS ONLY";
			$vslName = $this->bm->dataReturn($queryVslName);
			$rotList[$i]['vessel_name'] = $vslName;
		}
		
		$data['title']="Rotation List for Export Loading SNX";
		$data['msg'] = $msg;
		$data['rotList'] = $rotList;			
		
		$this->load->view('cssAssetsList');
		$this->load->view('headerTop');
		$this->load->view('sidebar');
		$this->load->view('rotationListForExportLoadingSNX',$data);
		$this->load->view('jsAssetsList');
		
	}
	
	function getVisitIdByRotation()
	{
		$rot = $_GET["rot"];
		$rot = str_replace("_","/",$rot);
		$query = "select ARGO_CARRIER_VISIT.id as visit_id
			from ARGO_CARRIER_VISIT
			inner join VSL_VESSEL_VISIT_DETAILS on VSL_VESSEL_VISIT_DETAILS.VVD_GKEY = ARGO_CARRIER_VISIT.CVCVD_GKEY
			where VSL_VESSEL_VISIT_DETAILS.IB_VYG='$rot'";
		$rtnVisitId=$this->bm->dataSelect($query);
		echo json_encode($rtnVisitId);
	}
	
	function exportLoadingSNXForm()
	{
		$session_id = $this->session->userdata('value');
        $LoginStat = $this->session->userdata('LoginStat');
		$org_id=$this->session->userdata('org_Type_id');
		if($LoginStat!="yes")
        {
            $this->logout();
        }
        else
        {
			$data['title']="Export Loading SNX Form";
			$data['msg'] = "";
			$data['frmType'] = "form";
			
            $this->load->view('cssAssetsList');
            $this->load->view('headerTop');
            $this->load->view('sidebar');
            $this->load->view('exportLoadingSNXForm',$data);
			$this->load->view('jsAssetsList');
		}
	}
	
	function exportLoadingSNX()
	{
		$session_id = $this->session->userdata('value');
        $LoginStat = $this->session->userdata('LoginStat');
		$org_id=$this->session->userdata('org_Type_id');
		if($LoginStat!="yes")
        {
            $this->logout();
        }
        else
        {
			$prepare_btn=$this->input->post('prepare_btn');
			$final_btn=$this->input->post('final_btn');
			
			$rot_no	= "";
			$visit_id	= "";
			
			if($this->input->post('rot_no'))
			{
				$rot_no=$this->input->post('rot_no');
				$visit_id=$this->input->post('visit_id_prepare');
			} 
			else if($this->input->post('rot_no_for_final'))
			{
				$rot_no=$this->input->post('rot_no_for_final');
				$visit_id=$this->input->post('visit_id_final');
			}
			else if($this->input->post('rot_no_imp_discharge'))
			{
				$rot_no=$this->input->post('rot_no_imp_discharge');
			} 
			
			
			
			$rot_date=$this->input->post('rot_date');
			$rot_time=$this->input->post('rot_time');
			$date_time=$rot_date."T".$rot_time;
									
			$queryMisExpUnit="SELECT gkey,vvd_gkey,mis_exp_unit.rotation,cont_id,cont_status,last_update,pod,truck_no,
							goods_and_ctr_wt_kg,stowage_pos,current_position,seal_no
							FROM ctmsmis.mis_exp_unit WHERE snx_type=0 AND rotation='$rot_no'";
			$result=$this->bm->dataSelectDb2($queryMisExpUnit);
						
			for($i=0;$i<count($result);$i++){
				$mis_exp_unit_gkey = $result[$i]['gkey'];
				$mis_exp_unit_vvd_gkey = $result[$i]['vvd_gkey'];
				$mis_exp_unit_pod = $result[$i]['pod'];
				
				$queryInvUnit = "select inv_unit.gkey,inv_unit.id as cont_id,inv_unit.category,inv_unit_fcy_visit.transit_state,
				r.id as mlo,
				NVL((select ref_country.cntry_name from ref_routing_point  
				inner join ref_unloc_code on ref_unloc_code.gkey=ref_routing_point.unloc_gkey 
				inner join ref_country on ref_country.cntry_code=ref_unloc_code.cntry_code 
				where ref_routing_point.id='$mis_exp_unit_pod'
				),'') as cntry_name,
				(select id from argo_carrier_visit where argo_carrier_visit.cvcvd_gkey='$mis_exp_unit_vvd_gkey') as arcar_id,
				(select ib_vyg from vsl_vessel_visit_details where vvd_gkey='$mis_exp_unit_vvd_gkey') as rot,
				NVL((select inv_wi.pos_slot from inv_wi 
				inner join inv_unit_yrd_visit on inv_unit_yrd_visit.gkey=inv_wi.uyv_gkey 
				inner join inv_unit_fcy_visit on inv_unit_fcy_visit.gkey=inv_unit_yrd_visit.ufv_gkey 
				where inv_unit_fcy_visit.unit_gkey='$mis_exp_unit_gkey' FETCH FIRST 1 ROWS ONLY
				),'') as pos_slot,

				(select arcar.carrier_mode from inv_unit inv 
				inner join inv_unit_fcy_visit fcy on fcy.unit_gkey=inv.gkey
				inner join argo_carrier_visit arcar on arcar.gkey=fcy.actual_ib_cv
				where inv.id=inv_unit.id and inv.category=inv_unit.category order by inv.gkey desc FETCH FIRST 1 ROWS ONLY) as carrier_mode,

				(select arcar.id from inv_unit inv 
				inner join inv_unit_fcy_visit fcy on fcy.unit_gkey=inv.gkey 
				inner join argo_carrier_visit arcar on arcar.gkey=fcy.actual_ib_cv 
				where inv.id=inv_unit.id and inv.category=inv_unit.category order by inv.gkey desc FETCH FIRST 1 ROWS ONLY) as truck,
				NVL(inv_unit_fcy_visit.last_pos_slot,'') as fcy_last_pos_slot,
				NVL(inv_goods.destination,'') as dest

				from inv_unit
				INNER JOIN inv_unit_fcy_visit ON inv_unit_fcy_visit.unit_gkey=inv_unit.gkey 
				INNER JOIN ref_bizunit_scoped r ON r.gkey=inv_unit.line_op  
				LEFT JOIN ref_agent_representation X ON r.gkey=x.bzu_gkey  
				LEFT JOIN ref_bizunit_scoped Y ON x.agent_gkey=y.gkey  
				INNER JOIN inv_goods ON inv_goods.gkey=inv_unit.goods
				WHERE  inv_unit_fcy_visit.transit_state NOT IN('S60_LOADED','S70_DEPARTED','S99_RETIRED') 
				AND inv_unit.gkey='$mis_exp_unit_gkey'";
				$resInvUnit = $this->bm->dataSelect($queryInvUnit);
				
				$inv_unit_gkey = "";
				$category = "";
				$transit_state = "";
				$mlo = "";
				$cntry_name = "";
				$arcar_id = "";
				$rot = "";
				$pos_slot = "";
				$carrier_mode = "";
				$truck = "";
				$fcy_last_pos_slot = "";
				$dest = "";
					
				for($j=0;$j<count($resInvUnit);$j++)
				{
					$inv_unit_gkey = $resInvUnit[$j]['GKEY'];
					$category = $resInvUnit[$j]['CATEGORY'];
					$transit_state = $resInvUnit[$j]['TRANSIT_STATE'];
					$mlo = $resInvUnit[$j]['MLO'];
					$cntry_name = $resInvUnit[$j]['CNTRY_NAME'];
					$arcar_id = $resInvUnit[$j]['ARCAR_ID'];
					$rot = $resInvUnit[$j]['ROT'];
					$pos_slot = $resInvUnit[$j]['POS_SLOT'];
					$carrier_mode = $resInvUnit[$j]['CARRIER_MODE'];
					$truck = $resInvUnit[$j]['TRUCK'];
					$fcy_last_pos_slot = $resInvUnit[$j]['FCY_LAST_POS_SLOT'];
					$dest = $resInvUnit[$j]['DEST'];
					
					
					$container_number = $resInvUnit[$j]['CONT_ID'];
					$strUpdateForeignHostKey = "UPDATE inv_unit SET foreignhost_key=null where id='$container_number'";					
					$this->bm->dataUpdate($strUpdateForeignHostKey);
				}
				
				$result[$i]['category']=$category;
				$result[$i]['transit_state']=$transit_state;
				$result[$i]['mlo']=$mlo;
				$result[$i]['cntry_name']=$cntry_name;
				$result[$i]['arcar_id']=$arcar_id;
				$result[$i]['rot']=$rot;
				$result[$i]['pos_slot']=$pos_slot;
				$result[$i]['carrier_mode']=$carrier_mode;
				$result[$i]['truck']=$truck;
				$result[$i]['fcy_last_pos_slot']=$fcy_last_pos_slot;
				$result[$i]['dest']=$dest;
			}
			
			$query="SELECT gkey,cont_id,current_position,cont_status,cont_mlo,last_update,seal_no,rotation,vvd_gkey
				FROM ctmsmis.mis_exp_unit
				WHERE  snx_type=2 AND rotation='$rot_no'";
			$result_imp=$this->bm->dataSelectDb2($query);
				for($k=0;$k<count($result_imp);$k++)
				{
					$mis_gkey = $result_imp[$k]['gkey'];
					$mis_vvd_gkey = $result_imp[$k]['vvd_gkey'];
					
					$queryN4 = "SELECT inv_unit.gkey,inv_goods.destination as dest,inv_unit_fcy_visit.last_pos_slot,
						(select id  from argo_carrier_visit where cvcvd_gkey='$mis_vvd_gkey') as arcar_id
						from inv_unit
						inner join inv_unit_fcy_visit on inv_unit_fcy_visit.unit_gkey=inv_unit.gkey
						inner join inv_goods on inv_goods.gkey=inv_unit.goods
						where inv_unit_fcy_visit.transit_state='S20_INBOUND' and inv_unit.category='IMPRT' and 
						inv_goods.destination not in('5235','PNGA') and inv_unit.gkey='$mis_gkey";
					$resultN4 = $this->bm->dataSelect($queryN4);					
					for($l=0;$l<count($resultN4);$l++)
					{
						$dest = $resultN4[$l]['DEST'];
						$last_pos_slot = $resultN4[$l]['LAST_POS_SLOT'];
						$arcar_id = $resultN4[$l]['ARCAR_ID'];
					}
					
					$result_imp[$k]['dest']=$dest;
					$result_imp[$k]['last_pos_slot']=$last_pos_slot;
					$result_imp[$k]['arcar_id']=$arcar_id;
				}
				
				
			$data['result'] = $result;
			$data['result_imp'] = $result_imp;
			$data['rot_no'] = $rot_no;
			$data['visit_id'] = $visit_id;
			$data['rot_date'] = $rot_date;
			$data['rot_time'] = $rot_time;
			$data['date_time'] = $date_time;
			
					
			if($this->input->post('prepare_btn')){	
				$this->load->view('Write_Inbound_Export_Info_Prepare',$data);				
			} else if($this->input->post('final_btn')){	
				$this->load->view('Write_Inbound_Export_Info_Final',$data);		
				
			} else {
				$this->load->view('Write_Import_Discharge_Info',$data);
			}		
		}
	}
	
	function cnfEquipmentDemandViewForm()
	{	
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$org_id=$this->session->userdata('org_Type_id');
		$login_id = $this->session->userdata('login_id');

		if($LoginStat!="yes")
        {
            $this->logout();
        }
        else
        {
			$data['flag'] = 0;	
			
            $this->load->view('cssAssetsList');
            $this->load->view('headerTop');
            $this->load->view('sidebar');
            $this->load->view('cnfEquipmentDemandViewForm',$data);
			$this->load->view('jsAssetsList');
			
		}
	}

	

	function cnfEquipmentDemandSubmit()
	{
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$org_id=$this->session->userdata('org_Type_id');

		if($LoginStat!="yes")
		{
			$this->logout();
		}
		else
		{
			$login_id = $this->session->userdata('login_id');
			$rotation = $this->input->post('rotation');
			$bl_no = $this->input->post('bl_no');
			$vessel_name = $this->input->post('vessel_name');
			$Line_no = $this->input->post('Line_no');
			$be_no = $this->input->post('be_no');
			$pkg_descripton = explode(" ",$this->input->post('pkg_descripton'));
			$pkg_descripton = $pkg_descripton[1]." ".$pkg_descripton[0];
			$total_pkg_weight = $this->input->post('total_pkg_weight');
			$unit_pkg = $this->input->post('unit_pkg');
			$c_no = $this->input->post('c_no');
			$cont_40 = $this->input->post('cont_40');
			$cont_20 = $this->input->post('cont_20');
			$shed = $this->input->post('shed');
			$demand_date = $this->input->post('demand_date');
			$demand_type = $this->input->post('demand_type');
			$ipaddr = $_SERVER['REMOTE_ADDR'];

			$hyster_3t = $this->input->post('hyster_3t');
			$hyster_5t = $this->input->post('hyster_5t');
			$hyster_10t = $this->input->post('hyster_10t');
		
			$mbl_10t = $this->input->post('mbl_10t');
			$mbl_20t = $this->input->post('mbl_20t');
			$mbl_30t = $this->input->post('mbl_30t');
			$mbl_50t = $this->input->post('mbl_50t');
			
			// One insert per day in equipment Master

			// Check If Exist

			$check_query = "SELECT COUNT(*) AS rtnValue FROM equip_demand_master WHERE demand_dt = '$demand_date'";
			$check_rslt = $this->bm->dataReturnDB1($check_query);
			
			if($check_rslt == 0)
			{
				$insertMaster = "INSERT INTO equip_demand_master(demand_dt) VALUES('$demand_date')";
				if(!$this->bm->dataInsertDB1($insertMaster))
				{
					$this->session->set_flashdata("error", "<div class='alert alert-danger'>
					<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>×</button>
					<font size='4'>Equipment Master id not found! Please try again.</font></div>");

					redirect('Report/cnfEquipmentDemandViewForm/', 'refresh');
				}
			}
			
			$master_id = null;

			$master_query = "SELECT id AS rtnValue FROM equip_demand_master WHERE demand_dt = '$demand_date'";
			$master_id = $this->bm->dataReturnDB1($master_query);

			if(is_numeric($master_id))
			{
				$insertQuery="insert into equip_demand_cf (equip_demand_mas_id,rotation,bl_no,demand_type,cont_20,cont_40,be_no,pkg_wt,pkg_qty_desc,shed_yard,demand_dt,cf_user,c_no,entry_time,entry_ip) 
				values ('$master_id','$rotation','$bl_no','$demand_type','$cont_20','$cont_40','$be_no','$total_pkg_weight','$pkg_descripton','$shed','$demand_date','$login_id','$c_no',NOW(),'$ipaddr')";

				if($this->bm->dataInsertDb1($insertQuery))
				{
					$query_igm_master = "SELECT id FROM equip_demand_cf  order by id asc";
					$resultForIgm = $this->bm->dataSelectDb1($query_igm_master); 
					$id=0;
					for($k=0;$k<count($resultForIgm);$k++)
					{
					$id = $resultForIgm[$k]['id'];
					}
		

					$insertQuery="insert into equip_qty_demand_cf(demand_id,hyster_3t,hyster_5t,hyster_10t,mbl_10t,mbl_20t,mbl_30t,mbl_50t) 
					values ('$id','$hyster_3t','$hyster_5t','$hyster_10t','$mbl_10t','$mbl_20t','$mbl_30t','$mbl_50t')";
					if($this->bm->dataInsertDb1($insertQuery))
					{
						$this->session->set_flashdata("success", "<div class='alert alert-success'>
						<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>×</button>
						<font size='4'>Successfully submitted...</font></div>");
					}
				
				}
				else
				{
					
					$this->session->set_flashdata("error", "<div class='alert alert-danger'>
					<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>×</button>
					<font size='4'>Something wrong with Demand! Please try again.</font></div>");
				}
			}
			else
			{
				$this->session->set_flashdata("error", "<div class='alert alert-danger'>
					<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>×</button>
					<font size='4'>Something wrong! Please try again.</font></div>");
			}
			
			redirect('Report/cnfEquipmentDemandViewForm/', 'refresh');
		
		}
	}

	function cnfEquipmentDemandDelete()
	{
		$login_id = $this->session->userdata('login_id');
		$u_name = $this->session->userdata('User_Name');
		$LoginStat = $this->session->userdata('LoginStat');
		$org_Type_id = $this->session->userdata('org_Type_id');
		$org_id = $this->session->userdata('org_id');

		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$data['msg']="";
			if($this->input->post('delete'))
			{
				$eid=$this->input->post('eid');
				$deleteSql="DELETE FROM equip_demand_cf WHERE equip_demand_cf.id='$eid'";
				// $deleteStat=$this->bm->dataDeleteDb1($deleteSql);
				$data['msg']="<font color='red'><b>Data Deleted.</b></font>";
			}

			redirect('Report/cnfEquipmentDemandViewForm/', 'refresh');
		}
	}

	function cnfEquipmentDemandEdit()
	{

		$login_id = $this->session->userdata('login_id');
		$u_name = $this->session->userdata('User_Name');


		
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
		

			$query_igm_master = "SELECT id,rotation,line_no,bl_no,cont_40,cont_20,be_no,hyster,mbl_craine,pkg_qty,pkg_wt,shed_yard,demand_dt,c_no,cf_user,entry_time,entry_ip
			FROM equip_demand_cf where cf_user='$login_id' order by id desc";
			$resultForIgm = $this->bm->dataSelectDb1($query_igm_master);							
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('cnfEquipmentDemandViewForm',$data);
			$this->load->view('jsAssetsList');
		}
	}

	function equipListForm()
	{
		$login_id = $this->session->userdata('login_id');
		$u_name = $this->session->userdata('User_Name');
		$LoginStat = $this->session->userdata('LoginStat');

		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$data['title']="Equipment List From";
			$data['msg']="";
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('equipListForm',$data);
			$this->load->view('jsAssetsList');
		}
	}

	function equipList()
	{
		$login_id = $this->session->userdata('login_id');
		$u_name = $this->session->userdata('User_Name');
		$LoginStat = $this->session->userdata('LoginStat');

		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$fromDate = $this->input->post('fromDate');
			$toDate = $this->input->post('toDate');

			if(is_null($fromDate) && is_null($toDate)){
				$fromDate = date("Y-m-d");
				$toDate = date("Y-m-d");
			}

			$data['fromDate'] = $fromDate;
			$data['toDate'] = $toDate;

			$sql = "SELECT equip_demand_cf.id,users.u_name,cont_20,cont_40,pkg_qty_desc,pkg_wt,hyster_3t,hyster_5t,hyster_10t,mbl_10t,mbl_20t,mbl_30t,mbl_50t,shed_yard,demand_dt
			FROM equip_demand_cf
			INNER JOIN users ON users.login_id = equip_demand_cf.cf_user
			LEFT JOIN equip_qty_demand_cf ON equip_demand_cf.id = equip_qty_demand_cf.demand_id 
			WHERE demand_dt BETWEEN '$fromDate' AND '$toDate'";

			$rslt = $this->bm->dataSelectDb1($sql);

			$data['rslt']= $rslt;
			$data['title']="Equipment List";
			$this->load->view('cssAssets');
			$this->load->view('equipList',$data);
			$this->load->view('jsAssets');
		}
	}

	function equipDemandList()
	{
		$login_id = $this->session->userdata('login_id');
		$u_name = $this->session->userdata('User_Name');
		$LoginStat = $this->session->userdata('LoginStat');
		$section = $this->session->userdata('section');

		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$data['fromDate'] = $fromDate = $this->input->post('fromDate');
			$data['toDate'] = $toDate = $this->input->post('toDate');

			if($section == 20 || $section == 21)
			{	// Equip Section will see the details but can't forward efore onestop forward

				$equip_onestop = "SELECT equip_demand_cf.id,equip_demand_cf.demand_dt,equip_demand_mas_id,onestop_forward_st,onestop_forward_at, onestop_forward_by,equip_sec_forward_st,equip_sec_forward_at,equip_sec_forward_by,to_forward_st,to_forward_at,to_forward_by
				FROM equip_demand_cf
				INNER JOIN users ON users.login_id = equip_demand_cf.cf_user
				INNER JOIN equip_demand_master ON equip_demand_master.id = equip_demand_cf.equip_demand_mas_id
				LEFT JOIN equip_qty_demand_cf ON equip_demand_cf.id = equip_qty_demand_cf.demand_id 
				WHERE aprv_st = 1 AND DATE(equip_demand_master.demand_dt) = DATE(NOW())
				GROUP BY equip_demand_master.demand_dt";

				$rslt_onestop = $this->bm->dataSelectDb1($equip_onestop);

				$data['rslt_onestop']= $rslt_onestop;
				$data['title']="Equipment Demand List";
				$data['section'] = $section;

				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('equipDemandListOneStop',$data);
				$this->load->view('jsAssetsList');
			}
			else
			{
				$sql_pending = "SELECT equip_demand_cf.id,users.u_name,rotation,bl_no
				FROM equip_demand_cf
				INNER JOIN users ON users.login_id = equip_demand_cf.cf_user
				LEFT JOIN equip_qty_demand_cf ON equip_demand_cf.id = equip_qty_demand_cf.demand_id 
				WHERE  aprv_st = 0";

				$rslt_pending = $this->bm->dataSelectDb1($sql_pending);

				$sql_approved = "SELECT equip_demand_cf.id,equip_demand_mas_id,users.u_name,rotation,bl_no,aprv_by,aprv_at
				FROM equip_demand_cf
				INNER JOIN users ON users.login_id = equip_demand_cf.cf_user
				INNER JOIN equip_demand_master ON equip_demand_master.id = equip_demand_cf.equip_demand_mas_id
				LEFT JOIN equip_qty_demand_cf ON equip_demand_cf.id = equip_qty_demand_cf.demand_id 
				WHERE aprv_st = 1 AND equip_demand_master.onestop_forward_st = 0";

				$rslt_appoved = $this->bm->dataSelectDb1($sql_approved);

				$data['rslt_pending']= $rslt_pending;

				$data['rslt_appoved']= $rslt_appoved;
				$data['title']="Equipment Demand List";
				$data['section'] = $section;

				$this->load->view('cssAssetsList');
				$this->load->view('headerTop');
				$this->load->view('sidebar');
				$this->load->view('equipDemandListPending',$data);
				$this->load->view('jsAssetsList');
			}

		}
	}

	function equipDemandApprove()
	{
		$login_id = $this->session->userdata('login_id');
		$u_name = $this->session->userdata('User_Name');
		$LoginStat = $this->session->userdata('LoginStat');

		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$id = $this->input->post('id');

			$query = "UPDATE equip_demand_cf SET aprv_st = 1, aprv_by = '$login_id', aprv_at = NOW() WHERE id = '$id'";

			if($this->bm->dataUpdateDb1($query))
			{	
				$this->session->set_flashdata("success", "<div class='alert alert-success'>
				<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>×</button>
				<font size='4'>Sucessfully Approved.</font></div>");	
			}
			else
			{
				$this->session->set_flashdata("error", "<div class='alert alert-danger'>
				<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>×</button>
				<font size='4'>Something wrong! Please try again.</font></div>");
			}

			redirect('Report/equipDemandList/', 'refresh');
		}
	}

	function equipDemandForward()
	{
		$login_id = $this->session->userdata('login_id');
		$u_name = $this->session->userdata('User_Name');
		$LoginStat = $this->session->userdata('LoginStat');
		$section = $this->session->userdata('section');

		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{

			if($section == 20)
			{	// Equipment Forward
				$query = "UPDATE equip_demand_master SET equip_sec_forward_st = 1, equip_sec_forward_at = NOW(), equip_sec_forward_by = '$login_id' WHERE demand_dt = date(NOW())";
			}
			else if($section == 21)
			{
				// TO stop Forward
				$query = "UPDATE equip_demand_master SET to_forward_st = 1, to_forward_at = NOW(), to_forward_by = '$login_id' WHERE demand_dt = date(NOW())";
			}
			else
			{	// One stop Forward
				$query = "UPDATE equip_demand_master SET onestop_forward_st = 1, onestop_forward_at = NOW(), onestop_forward_by = '$login_id' WHERE demand_dt = date(NOW())";
			}

			if($this->bm->dataUpdateDb1($query))
			{	
				$this->session->set_flashdata("success", "<div class='alert alert-success'>
				<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>×</button>
				<font size='4'>Sucessfully Forwarded.</font></div>");	
			}
			else
			{
				$this->session->set_flashdata("error", "<div class='alert alert-danger'>
				<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>×</button>
				<font size='4'>Something wrong! Please try again.</font></div>");
			}

			redirect('Report/equipDemandList/', 'refresh');
		}
	}

	function equipDemandSummary()
	{
		$login_id = $this->session->userdata('login_id');
		$u_name = $this->session->userdata('User_Name');
		$LoginStat = $this->session->userdata('LoginStat');

		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$equipQuery = "SELECT shed_yard,SUM(cont_40) AS cont_40, SUM(cont_20) AS cont_20, SUM(mbl_10t) AS mbl_10t, SUM(mbl_20t) AS mbl_20t, SUM(mbl_30t) AS mbl_30t, SUM(mbl_50t) AS mbl_50t, SUM(hyster_10t) AS hyster_10t, SUM(hyster_5t) AS hyster_5t, SUM(hyster_3t) AS hyster_3t
			FROM equip_demand_cf 
			LEFT JOIN equip_qty_demand_cf ON equip_qty_demand_cf.demand_id = equip_demand_cf.id
			WHERE DATE(demand_dt) = DATE(NOW())
			GROUP BY shed_yard ORDER BY shed_yard";
			$equipRslt = $this->bm->dataSelectDB1($equipQuery);

			$data['title']="Equipment Demand Summary";
			$data['equipRslt'] = $equipRslt;

			$this->load->view('cssAssets');
			$this->load->view('equipDemandSummary',$data);
			$this->load->view('jsAssets');
		}
	}

	function roListCounter()
	{
		$login_id = $this->session->userdata('login_id');
		$session_id = $this->session->userdata('value');
		$LoginStat = $this->session->userdata('LoginStat');
		$org_Type_id = $this->session->userdata('org_Type_id');

	
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			
			$sqlBl = "SELECT release_order_record.id,agent_id,imp_rot,bl_no,agent_name,entry_by,entry_at,unit_no,ro_type,appraise_st,appraise_at,IFNULL(assigned_unit.updated_at,assigned_unit.created_at) AS unit_assign_at,
			IFNULL((SELECT cont_status
			FROM  igm_supplimentary_detail
			INNER JOIN igm_sup_detail_container ON igm_sup_detail_container.igm_sup_detail_id=igm_supplimentary_detail.id
			WHERE igm_supplimentary_detail.Import_Rotation_No = release_order_record.imp_rot AND igm_supplimentary_detail.BL_No = release_order_record.bl_no LIMIT 1 ),
			(SELECT cont_status
			FROM  igm_details
			INNER JOIN igm_detail_container ON igm_detail_container.igm_detail_id=igm_details.id
			WHERE igm_details.Import_Rotation_No = release_order_record.imp_rot AND igm_details.BL_No = release_order_record.bl_no LIMIT 1)) AS contStatus
			FROM release_order_record
			INNER JOIN vcms_vehicle_agent ON vcms_vehicle_agent.id=release_order_record.agent_id
			INNER JOIN vcms_vehicle_agency ON vcms_vehicle_agency.id=vcms_vehicle_agent.agency_id
			LEFT JOIN assigned_unit ON assigned_unit.rotation = release_order_record.imp_rot
			Order BY release_order_record.id DESC LIMIT 100";
			
			
			$rslt_sqlRelease = $this->bm->dataSelectDb1($sqlBl);
			
			$data['rslt_sqlRelease']=$rslt_sqlRelease;
			$data['org_Type_id']=$org_Type_id;
			$data['msg']="";
			$data['title']="RELEASE ORDER LIST (COUNTER)";								
			
			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('roListCounter',$data);
			$this->load->view('jsAssetsList');
		}
	}

	function appraisementList()
	{
		$login_id = $this->session->userdata('login_id');
		$u_name = $this->session->userdata('User_Name');
		$LoginStat = $this->session->userdata('LoginStat');
		$section = $this->session->userdata('section');
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$data['title']="Appraisement List";

			$apppraise_query = "SELECT gkey,rotation,BL_NO,cnf_name,appraise_date,user_id FROM appraisement_info_fcl ORDER BY gkey DESC";
			$appraise = $this->bm->dataSelectDB1($apppraise_query);

			$data['appraise'] = $appraise;

			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('appraisementList',$data);
			$this->load->view('jsAssetsList');
		}
	}

	function certifyList()
	{
		$login_id = $this->session->userdata('login_id');
		$u_name = $this->session->userdata('User_Name');
		$LoginStat = $this->session->userdata('LoginStat');
		$section = $this->session->userdata('section');
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$data['title']="Certify List";

			$certify_query = "SELECT id,rotation_no,bl_no,cnf_name,update_by,last_update FROM certify_info_fcl WHERE rotation_no IS NOT NULL AND bl_no IS NOT NULL ORDER BY id DESC";
			$certify = $this->bm->dataSelectDB1($certify_query);

			$data['certify'] = $certify;

			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('certifyList',$data);
			$this->load->view('jsAssetsList');
		}
	}

	function verifyList()
	{
		$login_id = $this->session->userdata('login_id');
		$u_name = $this->session->userdata('User_Name');
		$LoginStat = $this->session->userdata('LoginStat');
		$section = $this->session->userdata('section');
		if($LoginStat!="yes")
		{
			$this->logout();			
		}
		else
		{
			$data['title']="Verify List";

			$verify_query = "SELECT verify_info_fcl.id,rotation,bl_no, Organization_Name, verify_time, verify_by
			FROM verify_info_fcl
			INNER JOIN organization_profiles ON organization_profiles.License_No = verify_info_fcl.cnf_lic_no
			WHERE bl_no IS NOT NULL AND rotation IS NOT NULL
			ORDER BY verify_info_fcl.id DESC";
			$verify = $this->bm->dataSelectDB1($verify_query);

			$data['verify'] = $verify;

			$this->load->view('cssAssetsList');
			$this->load->view('headerTop');
			$this->load->view('sidebar');
			$this->load->view('verifyList',$data);
			$this->load->view('jsAssetsList');
		}
	}


}
?>
